<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="anc_anc01ats"
	ddfname="ANC ANC01ATS"
	ddfversion="1"
	canremove="yes">
		 
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="anc_anc01ats">

		<setProductData ruleid="vendordata" field="vendor">ANC</setProductData>
		<setProductData ruleid="modeldata" field="model">ANC01ATS</setProductData>
		<setProductData ruleid="typedata" field="type">ATS</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		

		<numSensor ruleid="U12_NORMAL_SENSOR">
            <type>voltage</type>
            <sensorId>u12_normal</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u12normal</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U12_Normal</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="U23_NORMAL_SENSOR">
            <type>voltage</type>
            <sensorId>u23_normal</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u23normal</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U23_Normal</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="U31_NORMAL_SENSOR">
            <type>voltage</type>
            <sensorId>u31_normal</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u31normal</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U31_Normal</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="U12_BACKUP_SENSOR">
            <type>voltage</type>
            <sensorId>u12_backup</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u12backup</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U12_Backup</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="U23_BACKUP_SENSOR">
            <type>voltage</type>
            <sensorId>u23_backup</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u23backup</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U23_Backup</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="U31_BACKUP_SENSOR">
            <type>voltage</type>
            <sensorId>u31_backup</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u31backup</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U31_Backup</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="IA_SENSOR">
            <type>amperage</type>
            <sensorId>ia</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>ia</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Ia</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="IB_SENSOR">
            <type>amperage</type>
            <sensorId>ib</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>ib</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Ib</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="IC_SENSOR">
            <type>amperage</type>
            <sensorId>ic</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>ic</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Ic</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="POWER_SENSOR">
            <type>num/powerKW</type>
            <sensorId>power</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>power</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Power</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="KWH_SENSOR">
            <type>num/kwatthr</type>
            <sensorId>kwh</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>kwh</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>KWH</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="NUMBER_OF_TRANSFERS_SENSOR">
            <type>num</type>
            <sensorId>number_of_transfers</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>numberoftransfers</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Number of Transfers</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<enumMap ruleid="online_offline_em">
			<label>On Line</label>
			<label>Off Line</label>
			<label>Unkown</label>
		</enumMap>


        <stateSensor ruleid="COMMUNICATION_STATUS_REGISTER">
            <type>state</type>
            <sensorId>communication_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Communication Status</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="OVERVOLTAGE_NORMAL_STATUS_REGISTER">
            <type>state</type>
            <sensorId>overvoltage_normal_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Overvoltage Normal</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="UNDERVOLTAGE_NORMAL_STATUS_REGISTER">
            <type>state</type>
            <sensorId>undervoltage_normal_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Undervoltage Normal</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="OVERCURRENT_STATUS_REGISTER">
            <type>state</type>
            <sensorId>overcurrent_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Over Current</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="MISSING_PHASE_NORMAL_STATUS_REGISTER">
            <type>state</type>
            <sensorId>missing_phase_normal_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Missing Phase Normal</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="OVERVOLTAGE_BACKUP_STATUS_REGISTER">
            <type>state</type>
            <sensorId>overvoltage_backup_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Overvoltage Backup</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="UNDERVOLTAGE_BACKUP_STATUS_REGISTER">
            <type>state</type>
            <sensorId>undervoltage_backup_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Undervoltage Backup</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="MISSING_PHASE_BACKUP_STATUS_REGISTER">
            <type>state</type>
            <sensorId>missing_phase_backup_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Missing Phase Backup</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="CLOSING_NORMAL_STATUS_REGISTER">
            <type>state</type>
            <sensorId>closing_normal_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Closing Normal</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="CLOSING_BACKUP_STATUS_REGISTER">
            <type>state</type>
            <sensorId>closing_backup_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Closing Backup</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="SELF_CLOSE_SELF_RETURN_STATUS_REGISTER">
            <type>state</type>
            <sensorId>self_close_self_return_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Self-close Self-return</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="SELF_CLOSE_WITHOUT_RETURN_STATUS_REGISTER">
            <type>state</type>
            <sensorId>self_close_without_return_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Self-close without Return</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="DOUBLE_BACKUP_STATUS_REGISTER">
            <type>state</type>
            <sensorId>double_backup_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Double Backup</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="UTILITY_UTILITY_STATUS_REGISTER">
            <type>state</type>
            <sensorId>utility_utility_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Utility-Utility</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="UTILITY_GENERATOR_STATUS_REGISTER">
            <type>state</type>
            <sensorId>utility_generator_status</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Utility-Generator</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>



    </device>
    <protocol>
        <modbus>
            <value_ref_id valid="u12normal">
                <function>3</function>
                <start_addr>0</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u23normal">
                <function>3</function>
                <start_addr>2</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u31normal">
                <function>3</function>
                <start_addr>4</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u12backup">
                <function>3</function>
                <start_addr>6</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u23backup">
                <function>3</function>
                <start_addr>8</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u31backup">
                <function>3</function>
                <start_addr>10</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="ia">
                <function>3</function>
                <start_addr>12</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="ib">
                <function>3</function>
                <start_addr>14</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="ic">
                <function>3</function>
                <start_addr>16</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="power">
                <function>3</function>
                <start_addr>18</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="kwh">
                <function>3</function>
                <start_addr>20</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="numberoftransfers">
                <function>3</function>
                <start_addr>22</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="statusregister">
                <function>3</function>
                <start_addr>1000</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>


		</modbus>
	</protocol>
</APC_DDF>