<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="apc_ddf_1_6.xsl"?>
<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="liebert_nx"
	ddfname="Liebert NX"
	ddfversion="1"
	canremove="yes">
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="liebert_nx">
		<setProductData ruleid="vendordata" field="vendor">Liebert</setProductData>
		<setProductData ruleid="modeldata" field="model">NX</setProductData>
		<setProductData ruleid="typedata" field="type">UPS</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<numSensor ruleid="system-input-rms-voltage-a-b">
			<type>voltage</type>
			<sensorId>SYSTEM_INPUT_RMS_VOLTAGE_A-B</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_INPUT_RMS_VOLTAGE_A-B</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Input RMS Voltage A-B</label>
			<sensorSet>System Input</sensorSet>
		</numSensor>
		<numSensor ruleid="system-input-rms-voltage-b-c">
			<type>voltage</type>
			<sensorId>SYSTEM_INPUT_RMS_VOLTAGE_B-C</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_INPUT_RMS_VOLTAGE_B-C</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Input RMS Voltage B-C</label>
			<sensorSet>System Input</sensorSet>
		</numSensor>
		<numSensor ruleid="system-input-rms-voltage-c-a">
			<type>voltage</type>
			<sensorId>SYSTEM_INPUT_RMS_VOLTAGE_C-A</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_INPUT_RMS_VOLTAGE_C-A</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Input RMS Voltage C-A</label>
			<sensorSet>System Input</sensorSet>
		</numSensor>
		<numSensor ruleid="system-input-rms-current-phase-a">
			<type>amperage</type>
			<sensorId>SYSTEM_INPUT_RMS_CURRENT_PHASE_A</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_INPUT_RMS_CURRENT_PHASE_A</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Input RMS Current Phase A</label>
			<sensorSet>System Input</sensorSet>
		</numSensor>
		<numSensor ruleid="system-input-rms-current-phase-b">
			<type>amperage</type>
			<sensorId>SYSTEM_INPUT_RMS_CURRENT_PHASE_B</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_INPUT_RMS_CURRENT_PHASE_B</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Input RMS Current Phase B</label>
			<sensorSet>System Input</sensorSet>
		</numSensor>
		<numSensor ruleid="system-input-rms-current-phase-c">
			<type>amperage</type>
			<sensorId>SYSTEM_INPUT_RMS_CURRENT_PHASE_C</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_INPUT_RMS_CURRENT_PHASE_C</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Input RMS Current Phase C</label>
			<sensorSet>System Input</sensorSet>
		</numSensor>
		<numSensor ruleid="system-input-frequency">
			<type>frequency</type>
			<sensorId>SYSTEM_INPUT_FREQUENCY</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_INPUT_FREQUENCY</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Input Frequency</label>
			<sensorSet>System Input</sensorSet>
		</numSensor>
		<stateSensor ruleid="rectifier-status">
			<type>state</type>
			<sensorId>RECTIFIER_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<getOid>RECTIFIER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Rectifier Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Rectifier</sensorSet>
		</stateSensor>
		<numSensor ruleid="rectifier-phase-a-temperature-sensor-1">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_1</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_1</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase A Temperature Sensor 1</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="rectifier-phase-a-temperature-sensor-2">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_2</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_2</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase A Temperature Sensor 2</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="rectifier-phase-a-temperature-sensor-3">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_3</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_3</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase A Temperature Sensor 3</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="rectifier-phase-a-temperature-sensor-4">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_4</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_4</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase A Temperature Sensor 4</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="rectifier-phase-b-temperature-sensor-1">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_1</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_1</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase B Temperature Sensor 1</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="rectifier-phase-b-temperature-sensor-2">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_2</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_2</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase B Temperature Sensor 2</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="rectifier-phase-b-temperature-sensor-3">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_3</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_3</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase B Temperature Sensor 3</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="rectifier-phase-b-temperature-sensor-4">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_4</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_4</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase B Temperature Sensor 4</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="rectifier-phase-c-temperature-sensor-1">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_1</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_1</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase C Temperature Sensor 1</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="rectifier-phase-c-temperature-sensor-2">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_2</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_2</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase C Temperature Sensor 2</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="rectifier-phase-c-temperature-sensor-3">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_3</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_3</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase C Temperature Sensor 3</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="rectifier-phase-c-temperature-sensor-4">
			<type>temp</type>
			<sensorId>RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_4</sensorId>
			<value>
				<getOid>RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_4</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Rectifier Phase C Temperature Sensor 4</label>
			<sensorSet>Rectifier</sensorSet>
		</numSensor>
		<numSensor ruleid="bypass-input-voltage-rms-a-b">
			<type>voltage</type>
			<sensorId>BYPASS_INPUT_VOLTAGE_RMS_A-B</sensorId>
			<value>
				<mult><op><getOid>BYPASS_INPUT_VOLTAGE_RMS_A-B</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>Bypass Input Voltage RMS A-B</label>
			<sensorSet>Bypass Input</sensorSet>
		</numSensor>
		<numSensor ruleid="bypass-input-voltage-rms-b-c">
			<type>voltage</type>
			<sensorId>BYPASS_INPUT_VOLTAGE_RMS_B-C</sensorId>
			<value>
				<mult><op><getOid>BYPASS_INPUT_VOLTAGE_RMS_B-C</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>Bypass Input Voltage RMS B-C</label>
			<sensorSet>Bypass Input</sensorSet>
		</numSensor>
		<numSensor ruleid="bypass-input-voltage-rms-c-a">
			<type>voltage</type>
			<sensorId>BYPASS_INPUT_VOLTAGE_RMS_C-A</sensorId>
			<value>
				<mult><op><getOid>BYPASS_INPUT_VOLTAGE_RMS_C-A</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>Bypass Input Voltage RMS C-A</label>
			<sensorSet>Bypass Input</sensorSet>
		</numSensor>
		<numSensor ruleid="bypass-input-frequency">
			<type>frequency</type>
			<sensorId>BYPASS_INPUT_FREQUENCY</sensorId>
			<value>
				<mult><op><getOid>BYPASS_INPUT_FREQUENCY</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>Bypass Input Frequency</label>
			<sensorSet>Bypass Input</sensorSet>
		</numSensor>
		<stateSensor ruleid="static-bypass-switch">
			<type>state</type>
			<sensorId>STATIC_BYPASS_SWITCH</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<getOid>STATIC_BYPASS_SWITCH</getOid>
				</mapValue>
			</value>
			<label>Static Bypass Switch</label>
			<enum>onOff-em</enum>
			<sensorSet>Bypass Input</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bypass-qualification-status">
			<type>state</type>
			<sensorId>BYPASS_QUALIFICATION_STATUS</sensorId>
			<value>
				<mapValue mapid="qualification-status-vm">
				<getOid>BYPASS_QUALIFICATION_STATUS</getOid>
				</mapValue>
			</value>
			<label>Bypass Qualification Status</label>
			<enum>qualification-status-em</enum>
			<sensorSet>Bypass Input</sensorSet>
		</stateSensor>
		<numSensor ruleid="dc-bus-voltage">
			<type>voltage</type>
			<sensorId>DC_BUS_VOLTAGE</sensorId>
			<value>
				<getOid>DC_BUS_VOLTAGE</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>DC Bus Voltage</label>
			<sensorSet>DC System</sensorSet>
		</numSensor>
		<numSensor ruleid="battery-volts-for-cabinet">
			<type>voltage</type>
			<sensorId>BATTERY_VOLTS_FOR_CABINET</sensorId>
			<value>
				<getOid>BATTERY_VOLTS_FOR_CABINET</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Battery Volts for Cabinet</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		<numSensor ruleid="dc-bus-current">
			<type>amperage</type>
			<sensorId>DC_BUS_CURRENT</sensorId>
			<value>
				<getOid>DC_BUS_CURRENT</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>DC Bus Current</label>
			<sensorSet>DC System</sensorSet>
		</numSensor>
		<numSensor ruleid="battery-time-remaining">
			<type>timeinmin</type>
			<sensorId>BATTERY_TIME_REMAINING</sensorId>
			<value>
				<getOid>BATTERY_TIME_REMAINING</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Battery Time Remaining</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		<numSensor ruleid="battery-percent-charge">
			<type>pctofcapacity</type>
			<sensorId>BATTERY_PERCENT_CHARGE</sensorId>
			<value>
				<getOid>BATTERY_PERCENT_CHARGE</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Battery Percent Charge</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		<numSensor ruleid="battery-temperature-for-cabinet">
			<type>temp</type>
			<sensorId>BATTERY_TEMPERATURE_FOR_CABINET</sensorId>
			<value>
				<getOid>BATTERY_TEMPERATURE_FOR_CABINET</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Battery Temperature for Cabinet</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		<stateSensor ruleid="dc-bus-qualification-status">
			<type>state</type>
			<sensorId>DC_BUS_QUALIFICATION_STATUS</sensorId>
			<value>
				<mapValue mapid="qualification-status-vm">
				<getOid>DC_BUS_QUALIFICATION_STATUS</getOid>
				</mapValue>
			</value>
			<label>DC Bus Qualification Status</label>
			<enum>qualification-status-em</enum>
			<sensorSet>DC System</sensorSet>
		</stateSensor>

		<valueMap ruleid="ups-battery-1-status-vm">
			<valueIn>2</valueIn><valueOut>1</valueOut>
			<valueIn>3</valueIn><valueOut>2</valueOut>
			<valueIn>4</valueIn><valueOut>3</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="ups-battery-1-status-em">
			<label>Unknown</label>
			<label>Normal</label>
			<label>Low</label>
			<label>Depleted</label>
		</enumMap>
		<stateSensor ruleid="ups-battery-1-status">
			<type>state</type>
			<sensorId>UPS_BATTERY_1_STATUS</sensorId>
			<value>
				<mapValue mapid="ups-battery-1-status-vm">
				<getOid>UPS_BATTERY_1_STATUS</getOid>
				</mapValue>
			</value>
			<label>UPS Battery 1 Status</label>
			<enum>ups-battery-1-status-em</enum>
			<sensorSet>Battery</sensorSet>
		</stateSensor>

		<numSensor ruleid="system-output-voltage-rms-a-b">
			<type>voltage</type>
			<sensorId>SYSTEM_OUTPUT_VOLTAGE_RMS_A-B</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_VOLTAGE_RMS_A-B</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Output Voltage RMS A-B</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-voltage-rms-b-c">
			<type>voltage</type>
			<sensorId>SYSTEM_OUTPUT_VOLTAGE_RMS_B-C</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_VOLTAGE_RMS_B-C</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Output Voltage RMS B-C</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-voltage-rms-c-a">
			<type>voltage</type>
			<sensorId>SYSTEM_OUTPUT_VOLTAGE_RMS_C-A</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_VOLTAGE_RMS_C-A</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Output Voltage RMS C-A</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-rms-current-phase-a">
			<type>amperage</type>
			<sensorId>SYSTEM_OUTPUT_RMS_CURRENT_PHASE_A</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_RMS_CURRENT_PHASE_A</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Output RMS Current Phase A</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-rms-current-phase-b">
			<type>amperage</type>
			<sensorId>SYSTEM_OUTPUT_RMS_CURRENT_PHASE_B</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_RMS_CURRENT_PHASE_B</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Output RMS Current Phase B</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-rms-current-phase-c">
			<type>amperage</type>
			<sensorId>SYSTEM_OUTPUT_RMS_CURRENT_PHASE_C</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_RMS_CURRENT_PHASE_C</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Output RMS Current Phase C</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-frequency">
			<type>frequency</type>
			<sensorId>SYSTEM_OUTPUT_FREQUENCY</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_FREQUENCY</getOid></op><op>0.1</op></mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>System Output Frequency</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-apparent-power">
			<type>powerVA</type>
			<sensorId>SYSTEM_OUTPUT_APPARENT_POWER</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_APPARENT_POWER</getOid></op><op>1000</op></mult>
			</value>
			<valueInc>1</valueInc>
			<label>System Output Apparent Power</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-power">
			<type>powerW</type>
			<sensorId>SYSTEM_OUTPUT_POWER</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_POWER</getOid></op><op>1000</op></mult>
			</value>
			<valueInc>1</valueInc>
			<label>System Output Power</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-apparent-power-phase-a">
			<type>powerVA</type>
			<sensorId>SYSTEM_OUTPUT_APPARENT_POWER_PHASE_A</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_APPARENT_POWER_PHASE_A</getOid></op><op>1000</op></mult>
			</value>
			<valueInc>1</valueInc>
			<label>System Output Apparent Power Phase A</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-apparent-power-phase-b">
			<type>powerVA</type>
			<sensorId>SYSTEM_OUTPUT_APPARENT_POWER_PHASE_B</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_APPARENT_POWER_PHASE_B</getOid></op><op>1000</op></mult>
			</value>
			<valueInc>1</valueInc>
			<label>System Output Apparent Power Phase B</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-apparent-power-phase-c">
			<type>powerVA</type>
			<sensorId>SYSTEM_OUTPUT_APPARENT_POWER_PHASE_C</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_APPARENT_POWER_PHASE_C</getOid></op><op>1000</op></mult>
			</value>
			<valueInc>1</valueInc>
			<label>System Output Apparent Power Phase C</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-power-phase-a">
			<type>powerW</type>
			<sensorId>SYSTEM_OUTPUT_POWER_PHASE_A</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_POWER_PHASE_A</getOid></op><op>1000</op></mult>
			</value>
			<valueInc>1</valueInc>
			<label>System Output Power Phase A</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-power-phase-b">
			<type>powerW</type>
			<sensorId>SYSTEM_OUTPUT_POWER_PHASE_B</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_POWER_PHASE_B</getOid></op><op>1000</op></mult>
			</value>
			<valueInc>1</valueInc>
			<label>System Output Power Phase B</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-output-power-phase-c">
			<type>powerW</type>
			<sensorId>SYSTEM_OUTPUT_POWER_PHASE_C</sensorId>
			<value>
				<mult><op><getOid>SYSTEM_OUTPUT_POWER_PHASE_C</getOid></op><op>1000</op></mult>
			</value>
			<valueInc>1</valueInc>
			<label>System Output Power Phase C</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="output-percent-load">
			<type>pctofcapacity</type>
			<sensorId>OUTPUT_PERCENT_LOAD</sensorId>
			<value>
				<getOid>OUTPUT_PERCENT_LOAD</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Output Percent Load</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="temperature">
			<type>temp</type>
			<sensorId>TEMPERATURE</sensorId>
			<value>
				<getOid>TEMPERATURE</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Temperature</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>

		<valueMap ruleid="ups-output-source-vm">
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>4</valueIn><valueOut>4</valueOut>
			<valueIn>5</valueIn><valueOut>5</valueOut>
			<valueIn>6</valueIn><valueOut>6</valueOut>
			<valueIn>7</valueIn><valueOut>7</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="ups-output-source-em">
			<label>Unknown</label>
			<label>Other</label>
			<label>Off</label>
			<label>Normal</label>
			<label>Bypass</label>
			<label>Battery</label>
			<label>Booster</label>
			<label>Reducer</label>
		</enumMap>
		<stateSensor ruleid="ups-output-source">
			<type>state</type>
			<sensorId>UPS_OUTPUT_SOURCE</sensorId>
			<value>
				<mapValue mapid="ups-output-source-vm">
				<getOid>UPS_OUTPUT_SOURCE</getOid>
				</mapValue>
			</value>
			<label>UPS Output Source</label>
			<enum>ups-output-source-em</enum>
			<sensorSet>System Output</sensorSet>
		</stateSensor>

		<valueMap ruleid="load-power-source-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>*</valueIn><valueOut>3</valueOut>
		</valueMap>
		<enumMap ruleid="load-power-source-em">
			<label>Load Off</label>
			<label>UPS</label>
			<label>Maintenance Bypass</label>
			<label>Unknown</label>
		</enumMap>
		<stateSensor ruleid="load-power-source">
			<type>state</type>
			<sensorId>LOAD_POWER_SOURCE</sensorId>
			<value>
				<mapValue mapid="load-power-source-vm">
				<getOid>LOAD_POWER_SOURCE</getOid>
				</mapValue>
			</value>
			<label>Load Power Source</label>
			<enum>load-power-source-em</enum>
			<sensorSet>System Output</sensorSet>
		</stateSensor>

		<numSensor ruleid="inverter-overload-time-remaining">
			<type>timeinsec</type>
			<sensorId>INVERTER_OVERLOAD_TIME_REMAINING</sensorId>
			<value>
				<getOid>INVERTER_OVERLOAD_TIME_REMAINING</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Overload Time Remaining</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<stateSensor ruleid="inverter-state">
			<type>state</type>
			<sensorId>INVERTER_STATE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<getOid>INVERTER_STATE</getOid>
				</mapValue>
			</value>
			<label>Inverter State</label>
			<enum>onOff-em</enum>
			<sensorSet>Inverter</sensorSet>
		</stateSensor>

		<valueMap ruleid="inverter-synchronization-source-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>*</valueIn><valueOut>4</valueOut>
		</valueMap>
		<enumMap ruleid="inverter-synchronization-source-em">
			<label>External</label>
			<label>Self Clock</label>
			<label>Output</label>
			<label>Bypass</label>
			<label>Unknown</label>
		</enumMap>
		<stateSensor ruleid="inverter-synchronization-source">
			<type>state</type>
			<sensorId>INVERTER_SYNCHRONIZATION_SOURCE</sensorId>
			<value>
				<mapValue mapid="inverter-synchronization-source-vm">
				<getOid>INVERTER_SYNCHRONIZATION_SOURCE</getOid>
				</mapValue>
			</value>
			<label>Inverter Synchronization Source</label>
			<enum>inverter-synchronization-source-em</enum>
			<sensorSet>Inverter</sensorSet>
		</stateSensor>

		<numSensor ruleid="inverter-phase-a-temperature-sensor-1">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_A_TEMPERATURE_SENSOR_1</sensorId>
			<value>
				<getOid>INVERTER_PHASE_A_TEMPERATURE_SENSOR_1</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase A Temperature Sensor 1</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="inverter-phase-a-temperature-sensor-2">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_A_TEMPERATURE_SENSOR_2</sensorId>
			<value>
				<getOid>INVERTER_PHASE_A_TEMPERATURE_SENSOR_2</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase A Temperature Sensor 2</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="inverter-phase-a-temperature-sensor-3">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_A_TEMPERATURE_SENSOR_3</sensorId>
			<value>
				<getOid>INVERTER_PHASE_A_TEMPERATURE_SENSOR_3</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase A Temperature Sensor 3</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="inverter-phase-a-temperature-sensor-4">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_A_TEMPERATURE_SENSOR_4</sensorId>
			<value>
				<getOid>INVERTER_PHASE_A_TEMPERATURE_SENSOR_4</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase A Temperature Sensor 4</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="inverter-phase-b-temperature-sensor-1">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_B_TEMPERATURE_SENSOR_1</sensorId>
			<value>
				<getOid>INVERTER_PHASE_B_TEMPERATURE_SENSOR_1</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase B Temperature Sensor 1</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="inverter-phase-b-temperature-sensor-2">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_B_TEMPERATURE_SENSOR_2</sensorId>
			<value>
				<getOid>INVERTER_PHASE_B_TEMPERATURE_SENSOR_2</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase B Temperature Sensor 2</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="inverter-phase-b-temperature-sensor-3">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_B_TEMPERATURE_SENSOR_3</sensorId>
			<value>
				<getOid>INVERTER_PHASE_B_TEMPERATURE_SENSOR_3</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase B Temperature Sensor 3</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="inverter-phase-b-temperature-sensor-4">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_B_TEMPERATURE_SENSOR_4</sensorId>
			<value>
				<getOid>INVERTER_PHASE_B_TEMPERATURE_SENSOR_4</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase B Temperature Sensor 4</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="inverter-phase-c-temperature-sensor-1">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_C_TEMPERATURE_SENSOR_1</sensorId>
			<value>
				<getOid>INVERTER_PHASE_C_TEMPERATURE_SENSOR_1</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase C Temperature Sensor 1</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="inverter-phase-c-temperature-sensor-2">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_C_TEMPERATURE_SENSOR_2</sensorId>
			<value>
				<getOid>INVERTER_PHASE_C_TEMPERATURE_SENSOR_2</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase C Temperature Sensor 2</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="inverter-phase-c-temperature-sensor-3">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_C_TEMPERATURE_SENSOR_3</sensorId>
			<value>
				<getOid>INVERTER_PHASE_C_TEMPERATURE_SENSOR_3</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase C Temperature Sensor 3</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="inverter-phase-c-temperature-sensor-4">
			<type>temp</type>
			<sensorId>INVERTER_PHASE_C_TEMPERATURE_SENSOR_4</sensorId>
			<value>
				<getOid>INVERTER_PHASE_C_TEMPERATURE_SENSOR_4</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Inverter Phase C Temperature Sensor 4</label>
			<sensorSet>Inverter</sensorSet>
		</numSensor>
		<numSensor ruleid="battery-recharge-voltage">
			<type>voltage</type>
			<sensorId>BATTERY_RECHARGE_VOLTAGE</sensorId>
			<value>
				<mult><op><getOid>BATTERY_RECHARGE_VOLTAGE</getOid></op><op>0.01</op></mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Battery Recharge Voltage</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		<numSensor ruleid="max-charge-current">
			<type>amperage</type>
			<sensorId>MAX_CHARGE_CURRENT</sensorId>
			<value>
				<getOid>MAX_CHARGE_CURRENT</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Max Charge Current</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		<stateSensor ruleid="booster-state">
			<type>state</type>
			<sensorId>BOOSTER_STATE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<getOid>BOOSTER_STATE</getOid>
				</mapValue>
			</value>
			<label>Booster State</label>
			<enum>onOff-em</enum>
			<sensorSet>Booster/Charger</sensorSet>
		</stateSensor>
		<stateSensor ruleid="charger-state">
			<type>state</type>
			<sensorId>CHARGER_STATE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<getOid>CHARGER_STATE</getOid>
				</mapValue>
			</value>
			<label>Charger State</label>
			<enum>onOff-em</enum>
			<sensorSet>Booster/Charger</sensorSet>
		</stateSensor>
		<numSensor ruleid="booster-charger-temperature-sensor-1">
			<type>temp</type>
			<sensorId>BOOSTER-CHARGER_TEMPERATURE_SENSOR_1</sensorId>
			<value>
				<getOid>BOOSTER-CHARGER_TEMPERATURE_SENSOR_1</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Booster-Charger Temperature Sensor 1</label>
			<sensorSet>Booster/Charger</sensorSet>
		</numSensor>
		<numSensor ruleid="booster-charger-temperature-sensor-2">
			<type>temp</type>
			<sensorId>BOOSTER-CHARGER_TEMPERATURE_SENSOR_2</sensorId>
			<value>
				<getOid>BOOSTER-CHARGER_TEMPERATURE_SENSOR_2</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Booster-Charger Temperature Sensor 2</label>
			<sensorSet>Booster/Charger</sensorSet>
		</numSensor>
		<numSensor ruleid="booster-charger-temperature-sensor-3">
			<type>temp</type>
			<sensorId>BOOSTER-CHARGER_TEMPERATURE_SENSOR_3</sensorId>
			<value>
				<getOid>BOOSTER-CHARGER_TEMPERATURE_SENSOR_3</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Booster-Charger Temperature Sensor 3</label>
			<sensorSet>Booster/Charger</sensorSet>
		</numSensor>
		<numSensor ruleid="booster-charger-temperature-sensor-4">
			<type>temp</type>
			<sensorId>BOOSTER-CHARGER_TEMPERATURE_SENSOR_4</sensorId>
			<value>
				<getOid>BOOSTER-CHARGER_TEMPERATURE_SENSOR_4</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Booster-Charger Temperature Sensor 4</label>
			<sensorSet>Booster/Charger</sensorSet>
		</numSensor>

		<valueMap ruleid="system-status-vm">
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>8</valueIn><valueOut>3</valueOut>
			<valueIn>16</valueIn><valueOut>4</valueOut>
			<valueIn>32</valueIn><valueOut>5</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="system-status-em">
			<label>Unknown</label>
			<label>Normal Operation</label>
			<label>Startup</label>
			<label>Normal with Warning</label>
			<label>Normal with Alarm</label>
			<label>Abnormal Operation</label>
		</enumMap>
		<stateSensor ruleid="system-status">
			<type>state</type>
			<sensorId>SYSTEM_STATUS</sensorId>
			<value>
				<mapValue mapid="system-status-vm">
				<getOid>SYSTEM_STATUS</getOid>
				</mapValue>
			</value>
			<label>System Status</label>
			<enum>system-status-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<valueMap ruleid="ups-operating-mode-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>4</valueIn><valueOut>4</valueOut>
			<valueIn>5</valueIn><valueOut>5</valueOut>
			<valueIn>*</valueIn><valueOut>6</valueOut>
		</valueMap>
		<enumMap ruleid="ups-operating-mode-em">
			<label>Idle</label>
			<label>Double Conversion Mode (VFI)</label>
			<label>Interactive Mode (VI)</label>
			<label>Standby Mode (VFD)</label>
			<label>CR Mode (CR)</label>
			<label>ECO Mode (DIM)</label>
			<label>Unknown</label>
		</enumMap>
		<stateSensor ruleid="ups-operating-mode">
			<type>state</type>
			<sensorId>UPS_OPERATING_MODE</sensorId>
			<value>
				<mapValue mapid="ups-operating-mode-vm">
				<getOid>UPS_OPERATING_MODE</getOid>
				</mapValue>
			</value>
			<label>UPS Operating Mode</label>
			<enum>ups-operating-mode-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="eco-mode-operation-state">
			<type>state</type>
			<sensorId>ECO_MODE_OPERATION_STATE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<getOid>ECO_MODE_OPERATION_STATE</getOid>
				</mapValue>
			</value>
			<label>ECO Mode Operation State</label>
			<enum>enabled-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<numSensor ruleid="output-apparent-power-rating">
			<type>num/powerKVA</type>
			<sensorId>OUTPUT_APPARENT_POWER_RATING</sensorId>
			<value>
				<getOid>OUTPUT_APPARENT_POWER_RATING</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Output Apparent Power Rating</label>
			<sensorSet>System Output</sensorSet>
		</numSensor>
		<numSensor ruleid="system-input-nominal-voltage">
			<type>voltage</type>
			<sensorId>SYSTEM_INPUT_NOMINAL_VOLTAGE</sensorId>
			<value>
				<getOid>SYSTEM_INPUT_NOMINAL_VOLTAGE</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>System Input Nominal Voltage</label>
			<sensorSet>System Input</sensorSet>
		</numSensor>
		<numSensor ruleid="system-input-nominal-frequency">
			<type>frequency</type>
			<sensorId>SYSTEM_INPUT_NOMINAL_FREQUENCY</sensorId>
			<value>
				<getOid>SYSTEM_INPUT_NOMINAL_FREQUENCY</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>System Input Nominal Frequency</label>
			<sensorSet>System Input</sensorSet>
		</numSensor>
		<alarmFlags ruleid="rectifier-failure">
			<value><getOid>RECTIFIER_FAILURE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Rectifier Failure</activeText>
					<inactiveText>Rectifier Failure Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Rectifier Failure condition exists.</activeText>
					<inactiveText>Rectifier Failure condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="system-input-phase-rotation-error">
			<value><getOid>SYSTEM_INPUT_PHASE_ROTATION_ERROR</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>System Input Phase Rotation Error</activeText>
					<inactiveText>System Input Phase Rotation Error Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The power conductors on the input line are not wired to the UPS in the sequence preferred for the rectifier (A-B-C).</activeText>
					<inactiveText>System Input Phase Rotation Error condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="system-input-current-limit">
			<value><getOid>SYSTEM_INPUT_CURRENT_LIMIT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>System Input Current Limit</activeText>
					<inactiveText>System Input Current Limit Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The RMS input current has reached the input current limit threshold.</activeText>
					<inactiveText>System Input Current Limit condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="system-input-power-problem">
			<value><getOid>SYSTEM_INPUT_POWER_PROBLEM</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>System Input Power Problem</activeText>
					<inactiveText>System Input Power Problem Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The input is not qualified to provide power to the system.</activeText>
					<inactiveText>System Input Power Problem condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="bypass-static-switch-unavailable">
			<value><getOid>BYPASS_STATIC_SWITCH_UNAVAILABLE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Bypass Static Switch Unavailable</activeText>
					<inactiveText>Bypass Static Switch Unavailable Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The static bypass is unavailable to support the critical load.</activeText>
					<inactiveText>Bypass Static Switch Unavailable condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="bypass-input-voltage-fault">
			<value><getOid>BYPASS_INPUT_VOLTAGE_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Bypass Input Voltage Fault</activeText>
					<inactiveText>Bypass Input Voltage Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The system has detected the bypass voltage is unqualified.</activeText>
					<inactiveText>Bypass Input Voltage Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="bypass-not-available">
			<value><getOid>BYPASS_NOT_AVAILABLE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Bypass Not Available</activeText>
					<inactiveText>Bypass Not Available Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A problem associated with the bypass has been detected.</activeText>
					<inactiveText>Bypass Not Available condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="bypass-overload">
			<value><getOid>BYPASS_OVERLOAD</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Bypass Overload</activeText>
					<inactiveText>Bypass Overload Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Bypass overloaded, reduce load immediately.</activeText>
					<inactiveText>Bypass Overload condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-test-failed">
			<value><getOid>BATTERY_TEST_FAILED</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Test Failed</activeText>
					<inactiveText>Battery Test Failed Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Recent battery test has failed.</activeText>
					<inactiveText>Battery Test Failed condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-test-passed">
			<value><getOid>BATTERY_TEST_PASSED</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Test Passed</activeText>
					<inactiveText>Battery Test Passed Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Recent battery test has passed.</activeText>
					<inactiveText>Battery Test Passed condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-terminals-reversed">
			<value><getOid>BATTERY_TERMINALS_REVERSED</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Terminals Reversed</activeText>
					<inactiveText>Battery Terminals Reversed Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The measured battery voltage is a negative value due to reverse battery terminal connections.</activeText>
					<inactiveText>Battery Terminals Reversed condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-over-voltage">
			<value><getOid>BATTERY_OVER_VOLTAGE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Over Voltage</activeText>
					<inactiveText>Battery Over Voltage Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The system has detected that the battery voltage has exceeded a predetermined limit.</activeText>
					<inactiveText>Battery Over Voltage condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-temperature-out-of-range">
			<value><getOid>BATTERY_TEMPERATURE_OUT_OF_RANGE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Temperature Out of Range</activeText>
					<inactiveText>Battery Temperature Out of Range Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Battery temperature is outside of acceptable range.</activeText>
					<inactiveText>Battery Temperature Out of Range condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-low">
			<value><getOid>BATTERY_LOW</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Low</activeText>
					<inactiveText>Battery Low Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The calculated battery time remaining has reached the low battery threshold.</activeText>
					<inactiveText>Battery Low condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-over-temperature">
			<value><getOid>BATTERY_OVER_TEMPERATURE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Over Temperature</activeText>
					<inactiveText>Battery Over Temperature Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A battery temperature sensor is reporting a value above a threshold.</activeText>
					<inactiveText>Battery Over Temperature condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-discharging">
			<value><getOid>BATTERY_DISCHARGING</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Discharging</activeText>
					<inactiveText>Battery Discharging Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The battery is discharging.</activeText>
					<inactiveText>Battery Discharging condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-auto-test-in-progress">
			<value><getOid>BATTERY_AUTO_TEST_IN_PROGRESS</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Auto Test In Progress</activeText>
					<inactiveText>Battery Auto Test In Progress Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Automatic battery test is in progress.</activeText>
					<inactiveText>Battery Auto Test In Progress condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-manual-test-in-progress">
			<value><getOid>BATTERY_MANUAL_TEST_IN_PROGRESS</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Manual Test In Progress</activeText>
					<inactiveText>Battery Manual Test In Progress Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Manual battery test is in progress.</activeText>
					<inactiveText>Battery Manual Test In Progress condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-ground-fault">
			<value><getOid>BATTERY_GROUND_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Ground Fault</activeText>
					<inactiveText>Battery Ground Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Battery system ground fault amperage exceeds the threshold.</activeText>
					<inactiveText>Battery Ground Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="dc-bus-abnormal">
			<value><getOid>DC_BUS_ABNORMAL</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>DC Bus Abnormal</activeText>
					<inactiveText>DC Bus Abnormal Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The system has detected an abnormal DC Bus Voltage.</activeText>
					<inactiveText>DC Bus Abnormal condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="system-output-off">
			<value><getOid>SYSTEM_OUTPUT_OFF</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>System Output Off</activeText>
					<inactiveText>System Output Off Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The system output is off.</activeText>
					<inactiveText>System Output Off condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="output-load-on-maintenance-bypass">
			<value><getOid>OUTPUT_LOAD_ON_MAINTENANCE_BYPASS</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Output Load on Maintenance Bypass</activeText>
					<inactiveText>Output Load on Maintenance Bypass Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The output power is supplied by the maintenance bypass.</activeText>
					<inactiveText>Output Load on Maintenance Bypass condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups-output-on-bypass">
			<value><getOid>UPS_OUTPUT_ON_BYPASS</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS Output on Bypass</activeText>
					<inactiveText>UPS Output on Bypass Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The output power is supplied by the bypass.</activeText>
					<inactiveText>UPS Output on Bypass condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="inverter-failure">
			<value><getOid>INVERTER_FAILURE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Inverter Failure</activeText>
					<inactiveText>Inverter Failure Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Inverter Failure condition exists.</activeText>
					<inactiveText>Inverter Failure condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="inverter-overload">
			<value><getOid>INVERTER_OVERLOAD</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Inverter Overload</activeText>
					<inactiveText>Inverter Overload Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Inverter Overload condition exists.</activeText>
					<inactiveText>Inverter Overload condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="system-output-fault">
			<value><getOid>SYSTEM_OUTPUT_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>System Output Fault</activeText>
					<inactiveText>System Output Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A fault has been detected in the system output.</activeText>
					<inactiveText>System Output Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="output-of/uf">
			<value><getOid>OUTPUT_OF/UF</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Output Overfrequency/Underfrequency</activeText>
					<inactiveText>Output Overfrequency/Underfrequency Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The output frequency has exceeded a specified range for a specified period of time.</activeText>
					<inactiveText>Output Overfrequency/Underfrequency condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="system-shutdown-output-short">
			<value><getOid>SYSTEM_SHUTDOWN_OUTPUT_SHORT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>System Shutdown - Output Short</activeText>
					<inactiveText>System Shutdown - Output Short Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>System has shut down due to a short on the output.</activeText>
					<inactiveText>System Shutdown - Output Short condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="inverter-desaturation">
			<value><getOid>INVERTER_DESATURATION</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Inverter Desaturation</activeText>
					<inactiveText>Inverter Desaturation Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Inverter Desaturation condition exists.</activeText>
					<inactiveText>Inverter Desaturation condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="booster-failure">
			<value><getOid>BOOSTER_FAILURE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Booster Failure</activeText>
					<inactiveText>Booster Failure Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Booster Failure condition exists.</activeText>
					<inactiveText>Booster Failure condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="charger-failure">
			<value><getOid>CHARGER_FAILURE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Charger Failure</activeText>
					<inactiveText>Charger Failure Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Charger Failure condition exists.</activeText>
					<inactiveText>Charger Failure condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="system-shutdown---epo">
			<value><getOid>SYSTEM_SHUTDOWN_-_EPO</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>System Shutdown - EPO</activeText>
					<inactiveText>System Shutdown - EPO Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>System has shut down due to Emergency Power Off (EPO).</activeText>
					<inactiveText>System Shutdown - EPO condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="generic-dc-fault">
			<value><getOid>GENERIC_DC_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Generic DIC Fault</activeText>
					<inactiveText>Generic DIC Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The control board reports a fault - Service required.</activeText>
					<inactiveText>Generic DIC Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="inlet-air-over-temperature">
			<value><getOid>INLET_AIR_OVER_TEMPERATURE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Inlet Air Over Temperature</activeText>
					<inactiveText>Inlet Air Over Temperature Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The inlet air exceeds the maximum temperature threshold.</activeText>
					<inactiveText>Inlet Air Over Temperature condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="generic-test-event">
			<value><getOid>GENERIC_TEST_EVENT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Generic Test Event</activeText>
					<inactiveText>Generic Test Event Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>This is a generic test event designed to evaluate system handling of events.</activeText>
					<inactiveText>Generic Test Event condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="fan-hours-exceeded">
			<value><getOid>FAN_HOURS_EXCEEDED</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Fan Hours Exceeded</activeText>
					<inactiveText>Fan Hours Exceeded Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Operating hours for the unit blower fan have exceeded the threshold.</activeText>
					<inactiveText>Fan Hours Exceeded condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="unit-shutdown">
			<value><getOid>UNIT_SHUTDOWN</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Unit Shutdown</activeText>
					<inactiveText>Unit Shutdown Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An event has occurred requiring the unit to be shut down and disabled to prevent damage to the system.</activeText>
					<inactiveText>Unit Shutdown condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="main-controller-fault">
			<value><getOid>MAIN_CONTROLLER_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Main Controller Fault</activeText>
					<inactiveText>Main Controller Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Main Controller Fault condition exists.</activeText>
					<inactiveText>Main Controller Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="equipment-over-temprature">
			<value><getOid>EQUIPMENT_OVER_TEMPRATURE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Equipment Over Temprature</activeText>
					<inactiveText>Equipment Over Temprature Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Equipment Over Temprature condition exists.</activeText>
					<inactiveText>Equipment Over Temprature condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="maximum-load-alarm">
			<value><getOid>MAXIMUM_LOAD_ALARM</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Maximum Load Alarm</activeText>
					<inactiveText>Maximum Load Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Maximum load alarm indicating load setting has been exceeded.</activeText>
					<inactiveText>Maximum Load Alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ground-fault">
			<value><getOid>GROUND_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Ground Fault</activeText>
					<inactiveText>Ground Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AC phase to ground fault or three phase fault to ground exists on the output of the UPS.</activeText>
					<inactiveText>Ground Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="backfeed-breaker-open">
			<value><getOid>BACKFEED_BREAKER_OPEN</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Backfeed Breaker Open</activeText>
					<inactiveText>Backfeed Breaker Open Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The backfeed breaker is in the open position.</activeText>
					<inactiveText>Backfeed Breaker Open condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="input-breaker-open">
			<value><getOid>INPUT_BREAKER_OPEN</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Input Breaker Open</activeText>
					<inactiveText>Input Breaker Open Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The main input breaker is open.</activeText>
					<inactiveText>Input Breaker Open condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="output-breaker-open">
			<value><getOid>OUTPUT_BREAKER_OPEN</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Output Breaker Open</activeText>
					<inactiveText>Output Breaker Open Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The output breaker is open.</activeText>
					<inactiveText>Output Breaker Open condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="maintenance-bypass-breaker-closed">
			<value><getOid>MAINTENANCE_BYPASS_BREAKER_CLOSED</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Maintenance Bypass Breaker Closed</activeText>
					<inactiveText>Maintenance Bypass Breaker Closed Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The maintenance bypass breaker is closed.</activeText>
					<inactiveText>Maintenance Bypass Breaker Closed condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-breaker-open">
			<value><getOid>BATTERY_BREAKER_OPEN</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Breaker Open</activeText>
					<inactiveText>Battery Breaker Open Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The battery circuit is open.</activeText>
					<inactiveText>Battery Breaker Open condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>

		<valueMap ruleid="binaryDefaultZero-vm">
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="onOff-em">
			<label>Off</label>
			<label>On</label>
		</enumMap>
		<enumMap ruleid="enabled-em">
			<label>Disabled</label>
			<label>Enabled</label>
		</enumMap>

		<valueMap ruleid="qualification-status-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>*</valueIn><valueOut>4</valueOut>
		</valueMap>
		<enumMap ruleid="qualification-status-em">
			<label>Fail</label>
			<label>Marginal Low</label>
			<label>Normal</label>
			<label>Marginal High</label>
			<label>Unknown</label>
		</enumMap>

	</device>
	<protocol>
		<modbus>
			<value_ref_id valid="SYSTEM_INPUT_RMS_VOLTAGE_A-B">
				<function>4</function>
				<start_addr>384</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_INPUT_RMS_VOLTAGE_B-C">
				<function>4</function>
				<start_addr>385</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_INPUT_RMS_VOLTAGE_C-A">
				<function>4</function>
				<start_addr>386</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_INPUT_RMS_CURRENT_PHASE_A">
				<function>4</function>
				<start_addr>387</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_INPUT_RMS_CURRENT_PHASE_B">
				<function>4</function>
				<start_addr>388</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_INPUT_RMS_CURRENT_PHASE_C">
				<function>4</function>
				<start_addr>389</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_INPUT_FREQUENCY">
				<function>4</function>
				<start_addr>390</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_STATUS">
				<function>4</function>
				<start_addr>391</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_1">
				<function>4</function>
				<start_addr>402</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_2">
				<function>4</function>
				<start_addr>418</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_3">
				<function>4</function>
				<start_addr>434</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_A_TEMPERATURE_SENSOR_4">
				<function>4</function>
				<start_addr>450</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_1">
				<function>4</function>
				<start_addr>404</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_2">
				<function>4</function>
				<start_addr>420</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_3">
				<function>4</function>
				<start_addr>436</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_B_TEMPERATURE_SENSOR_4">
				<function>4</function>
				<start_addr>452</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_1">
				<function>4</function>
				<start_addr>406</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_2">
				<function>4</function>
				<start_addr>422</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_3">
				<function>4</function>
				<start_addr>438</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_PHASE_C_TEMPERATURE_SENSOR_4">
				<function>4</function>
				<start_addr>454</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_INPUT_VOLTAGE_RMS_A-B">
				<function>4</function>
				<start_addr>466</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_INPUT_VOLTAGE_RMS_B-C">
				<function>4</function>
				<start_addr>467</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_INPUT_VOLTAGE_RMS_C-A">
				<function>4</function>
				<start_addr>468</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_INPUT_FREQUENCY">
				<function>4</function>
				<start_addr>469</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATIC_BYPASS_SWITCH">
				<function>4</function>
				<start_addr>470</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_QUALIFICATION_STATUS">
				<function>4</function>
				<start_addr>471</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DC_BUS_VOLTAGE">
				<function>4</function>
				<start_addr>482</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_VOLTS_FOR_CABINET">
				<function>4</function>
				<start_addr>483</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DC_BUS_CURRENT">
				<function>4</function>
				<start_addr>484</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_TIME_REMAINING">
				<function>4</function>
				<start_addr>485</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_PERCENT_CHARGE">
				<function>4</function>
				<start_addr>486</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_TEMPERATURE_FOR_CABINET">
				<function>4</function>
				<start_addr>487</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DC_BUS_QUALIFICATION_STATUS">
				<function>4</function>
				<start_addr>489</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="UPS_BATTERY_1_STATUS">
				<function>4</function>
				<start_addr>490</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_VOLTAGE_RMS_A-B">
				<function>4</function>
				<start_addr>501</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_VOLTAGE_RMS_B-C">
				<function>4</function>
				<start_addr>502</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_VOLTAGE_RMS_C-A">
				<function>4</function>
				<start_addr>503</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_RMS_CURRENT_PHASE_A">
				<function>4</function>
				<start_addr>504</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_RMS_CURRENT_PHASE_B">
				<function>4</function>
				<start_addr>505</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_RMS_CURRENT_PHASE_C">
				<function>4</function>
				<start_addr>506</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_FREQUENCY">
				<function>4</function>
				<start_addr>507</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_APPARENT_POWER">
				<function>4</function>
				<start_addr>508</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_POWER">
				<function>4</function>
				<start_addr>509</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_APPARENT_POWER_PHASE_A">
				<function>4</function>
				<start_addr>510</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_APPARENT_POWER_PHASE_B">
				<function>4</function>
				<start_addr>511</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_APPARENT_POWER_PHASE_C">
				<function>4</function>
				<start_addr>512</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_POWER_PHASE_A">
				<function>4</function>
				<start_addr>513</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_POWER_PHASE_B">
				<function>4</function>
				<start_addr>514</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_POWER_PHASE_C">
				<function>4</function>
				<start_addr>515</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_PERCENT_LOAD">
				<function>4</function>
				<start_addr>519</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="TEMPERATURE">
				<function>4</function>
				<start_addr>520</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="UPS_OUTPUT_SOURCE">
				<function>4</function>
				<start_addr>522</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="LOAD_POWER_SOURCE">
				<function>4</function>
				<start_addr>523</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_OVERLOAD_TIME_REMAINING">
				<function>4</function>
				<start_addr>534</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_STATE">
				<function>4</function>
				<start_addr>535</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_SYNCHRONIZATION_SOURCE">
				<function>4</function>
				<start_addr>536</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_A_TEMPERATURE_SENSOR_1">
				<function>4</function>
				<start_addr>547</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_A_TEMPERATURE_SENSOR_2">
				<function>4</function>
				<start_addr>563</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_A_TEMPERATURE_SENSOR_3">
				<function>4</function>
				<start_addr>579</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_A_TEMPERATURE_SENSOR_4">
				<function>4</function>
				<start_addr>595</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_B_TEMPERATURE_SENSOR_1">
				<function>4</function>
				<start_addr>549</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_B_TEMPERATURE_SENSOR_2">
				<function>4</function>
				<start_addr>565</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_B_TEMPERATURE_SENSOR_3">
				<function>4</function>
				<start_addr>581</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_B_TEMPERATURE_SENSOR_4">
				<function>4</function>
				<start_addr>597</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_C_TEMPERATURE_SENSOR_1">
				<function>4</function>
				<start_addr>551</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_C_TEMPERATURE_SENSOR_2">
				<function>4</function>
				<start_addr>567</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_C_TEMPERATURE_SENSOR_3">
				<function>4</function>
				<start_addr>583</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_PHASE_C_TEMPERATURE_SENSOR_4">
				<function>4</function>
				<start_addr>599</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_RECHARGE_VOLTAGE">
				<function>4</function>
				<start_addr>611</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MAX_CHARGE_CURRENT">
				<function>4</function>
				<start_addr>612</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BOOSTER_STATE">
				<function>4</function>
				<start_addr>613</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CHARGER_STATE">
				<function>4</function>
				<start_addr>614</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BOOSTER-CHARGER_TEMPERATURE_SENSOR_1">
				<function>4</function>
				<start_addr>625</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BOOSTER-CHARGER_TEMPERATURE_SENSOR_2">
				<function>4</function>
				<start_addr>637</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BOOSTER-CHARGER_TEMPERATURE_SENSOR_3">
				<function>4</function>
				<start_addr>649</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BOOSTER-CHARGER_TEMPERATURE_SENSOR_4">
				<function>4</function>
				<start_addr>661</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_STATUS">
				<function>4</function>
				<start_addr>673</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="UPS_OPERATING_MODE">
				<function>4</function>
				<start_addr>674</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ECO_MODE_OPERATION_STATE">
				<function>4</function>
				<start_addr>675</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_APPARENT_POWER_RATING">
				<function>4</function>
				<start_addr>686</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_INPUT_NOMINAL_VOLTAGE">
				<function>4</function>
				<start_addr>687</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_INPUT_NOMINAL_FREQUENCY">
				<function>4</function>
				<start_addr>688</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_FAILURE">
				<function>2</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_INPUT_PHASE_ROTATION_ERROR">
				<function>2</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_INPUT_CURRENT_LIMIT">
				<function>2</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_INPUT_POWER_PROBLEM">
				<function>2</function>
				<start_addr>3</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_STATIC_SWITCH_UNAVAILABLE">
				<function>2</function>
				<start_addr>14</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_INPUT_VOLTAGE_FAULT">
				<function>2</function>
				<start_addr>15</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_NOT_AVAILABLE">
				<function>2</function>
				<start_addr>16</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_OVERLOAD">
				<function>2</function>
				<start_addr>17</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_TEST_FAILED">
				<function>2</function>
				<start_addr>28</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_TEST_PASSED">
				<function>2</function>
				<start_addr>29</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_TERMINALS_REVERSED">
				<function>2</function>
				<start_addr>30</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_OVER_VOLTAGE">
				<function>2</function>
				<start_addr>31</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_TEMPERATURE_OUT_OF_RANGE">
				<function>2</function>
				<start_addr>32</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_LOW">
				<function>2</function>
				<start_addr>33</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_OVER_TEMPERATURE">
				<function>2</function>
				<start_addr>34</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_DISCHARGING">
				<function>2</function>
				<start_addr>35</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_AUTO_TEST_IN_PROGRESS">
				<function>2</function>
				<start_addr>36</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_MANUAL_TEST_IN_PROGRESS">
				<function>2</function>
				<start_addr>37</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_GROUND_FAULT">
				<function>2</function>
				<start_addr>38</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="DC_BUS_ABNORMAL">
				<function>2</function>
				<start_addr>39</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_OUTPUT_OFF">
				<function>2</function>
				<start_addr>50</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_LOAD_ON_MAINTENANCE_BYPASS">
				<function>2</function>
				<start_addr>51</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="UPS_OUTPUT_ON_BYPASS">
				<function>2</function>
				<start_addr>52</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_FAILURE">
				<function>2</function>
				<start_addr>64</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_OVERLOAD">
				<function>2</function>
				<start_addr>65</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="SYETM_OUTPUT_FAULT">
				<function>2</function>
				<start_addr>66</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_OF/UF">
				<function>2</function>
				<start_addr>67</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_SHUTDOWN_OUTPUT_SHORT">
				<function>2</function>
				<start_addr>68</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_DESATURATION">
				<function>2</function>
				<start_addr>69</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BOOSTER_FAILURE">
				<function>2</function>
				<start_addr>80</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="CHARGER_FAILURE">
				<function>2</function>
				<start_addr>81</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_SHUTDOWN_-_EPO">
				<function>2</function>
				<start_addr>92</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="GENERIC_DC_FAULT">
				<function>2</function>
				<start_addr>93</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="INLET_AIR_OVER_TEMPERATURE">
				<function>2</function>
				<start_addr>94</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="GENERIC_TEST_EVENT">
				<function>2</function>
				<start_addr>95</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="FAN_HOURS_EXCEEDED">
				<function>2</function>
				<start_addr>96</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="UNIT_SHUTDOWN">
				<function>2</function>
				<start_addr>97</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="MAIN_CONTROLLER_FAULT">
				<function>2</function>
				<start_addr>98</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="EQUIPMENT_OVER_TEMPRATURE">
				<function>2</function>
				<start_addr>99</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="MAXIMUM_LOAD_ALARM">
				<function>2</function>
				<start_addr>100</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="GROUND_FAULT">
				<function>2</function>
				<start_addr>101</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BACKFEED_BREAKER_OPEN">
				<function>2</function>
				<start_addr>112</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_BREAKER_OPEN">
				<function>2</function>
				<start_addr>113</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_BREAKER_OPEN">
				<function>2</function>
				<start_addr>114</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="MAINTENANCE_BYPASS_BREAKER_CLOSED">
				<function>2</function>
				<start_addr>115</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_BREAKER_OPEN">
				<function>2</function>
				<start_addr>116</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>
