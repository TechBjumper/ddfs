<?xml version="1.0"?>
<!-- Test Modbus related information -->
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
         ddfid="mge_galaxy_eps_ups" ddfname="MGE Galaxy EPS6/7/8k" ddfversion="4" canremove="no">
    <schemaVersion>1.6</schemaVersion>
    <device deviceid="mge_galaxy_eps_ups">
        <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />

        <setProductData ruleid="vendordata" field="vendor">MGE</setProductData>
        <setProductData ruleid="modeldata" field="model">MGE EPS6/7/8k</setProductData>
        <setProductData ruleid="typedata" field="type">UPS</setProductData>
        <setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

        <numSensor ruleid="mains_1_current_1">
            <type>amperage</type>
            <sensorId>MAINS_1_INPUT_AMPS_1</sensorId>
            <value>
                <getOid>mains1current1</getOid>
            </value>
            <label>Mains 1 Current Phase 1</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_1_current_2">
            <type>amperage</type>
            <sensorId>MAINS_1_INPUT_AMPS_2</sensorId>
            <value>
                <getOid>mains1current2</getOid>
            </value>
            <label>Mains 1 Current Phase 2</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_1_current_3">
            <type>amperage</type>
            <sensorId>MAINS_1_INPUT_AMPS_3</sensorId>
            <value>
                <getOid>mains1current3</getOid>
            </value>
            <label>Mains 1 Current Phase 3</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="inverter_current_1">
            <type>amperage</type>
            <sensorId>INVERTER_INPUT_AMPS_1</sensorId>
            <value>
                <getOid>invertercurrent1</getOid>
            </value>
            <label>Inverter Current Phase 1</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="inverter_current_2">
            <type>amperage</type>
            <sensorId>INVERTER_INPUT_AMPS_2</sensorId>
            <value>
                <getOid>invertercurrent2</getOid>
            </value>
            <label>Inverter Current Phase 2</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="inverter_current_3">
            <type>amperage</type>
            <sensorId>INVERTER_INPUT_AMPS_3</sensorId>
            <value>
                <getOid>invertercurrent3</getOid>
            </value>
            <label>Inverter Current Phase 3</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_2_current_1">
            <type>amperage</type>
            <sensorId>MAINS_2_INPUT_AMPS_1</sensorId>
            <value>
                <getOid>mains2current1</getOid>
            </value>
            <label>Mains 2 Current Phase 1</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_2_current_2">
            <type>amperage</type>
            <sensorId>MAINS_2_INPUT_AMPS_2</sensorId>
            <value>
                <getOid>mains2current2</getOid>
            </value>
            <label>Mains 2 Current Phase 2</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_2_current_3">
            <type>amperage</type>
            <sensorId>MAINS_2_INPUT_AMPS_3</sensorId>
            <value>
                <getOid>mains2current3</getOid>
            </value>
            <label>Mains 2 Current Phase 3</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="load_current_1">
            <type>amperage</type>
            <sensorId>LOAD_OUTPUT_AMPS_1</sensorId>
            <value>
                <getOid>loadcurrent1</getOid>
            </value>
            <label>Load Current Phase 1</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="load_current_2">
            <type>amperage</type>
            <sensorId>LOAD_OUTPUT_AMPS_2</sensorId>
            <value>
                <getOid>loadcurrent2</getOid>
            </value>
            <label>Load Current Phase 2</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="load_current_3">
            <type>amperage</type>
            <sensorId>LOAD_OUTPUT_AMPS_3</sensorId>
            <value>
                <getOid>loadcurrent3</getOid>
            </value>
            <label>Load Current Phase 3</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="battery_current">
            <type>amperage</type>
            <sensorId>BATT_AMPERAGE</sensorId>
            <value>
                <getOid>batterycurrent</getOid>
            </value>
            <label>Battery Current</label>
            <sensorSet>Current Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="pct_load">
            <type>pctofcapacity</type>
            <sensorId>OUTPUT_LOAD_PCT</sensorId>
            <value>
                <getOid>pctload</getOid>
            </value>
            <label>Load</label>
            <sensorSet>Load Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="peak_load_1">
            <type>pctofcapacity</type>
            <sensorId>OUTPUT_LOAD_1</sensorId>
            <value>
                <getOid>peakload1</getOid>
            </value>
            <label>Peak Load Phase 1</label>
            <sensorSet>Load Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="peak_load_2">
            <type>pctofcapacity</type>
            <sensorId>OUTPUT_LOAD_2</sensorId>
            <value>
                <getOid>peakload2</getOid>
            </value>
            <label>Peak Load Phase 2</label>
            <sensorSet>Load Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="peak_load_3">
            <type>pctofcapacity</type>
            <sensorId>OUTPUT_LOAD_3</sensorId>
            <value>
                <getOid>peakload3</getOid>
            </value>
            <label>Peak Load Phase 3</label>
            <sensorSet>Load Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_1_voltage_ab">
            <type>voltage</type>
            <sensorId>MAINS_1_MAIN_INPUT_VOLTAGE_L2L_1</sensorId>
            <value>
                <getOid>mains1voltageab</getOid>
            </value>
            <label>Mains 1 Voltage, A-B</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_1_voltage_bc">
            <type>voltage</type>
            <sensorId>MAINS_1_MAIN_INPUT_VOLTAGE_L2L_2</sensorId>
            <value>
                <getOid>mains1voltagebc</getOid>
            </value>
            <label>Mains 1 Voltage, B-C</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_1_voltage_ca">
            <type>voltage</type>
            <sensorId>MAINS_1_MAIN_INPUT_VOLTAGE_L2L_3</sensorId>
            <value>
                <getOid>mains1voltageca</getOid>
            </value>
            <label>Mains 1 Voltage, C-A</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="inverter_voltage_an">
            <type>voltage</type>
            <sensorId>INVERTER_VOLTAGE_LN_1</sensorId>
            <value>
                <getOid>invertervoltagean</getOid>
            </value>
            <label>Inverter Voltage, A-N</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="inverter_voltage_bn">
            <type>voltage</type>
            <sensorId>INVERTER_VOLTAGE_LN_2</sensorId>
            <value>
                <getOid>invertervoltagebn</getOid>
            </value>
            <label>Inverter Voltage, B-N</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="inverter_voltage_cn">
            <type>voltage</type>
            <sensorId>INVERTER_VOLTAGE_LN_3</sensorId>
            <value>
                <getOid>invertervoltagecn</getOid>
            </value>
            <label>Inverter Voltage, C-N</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="inverter_voltage_ab">
            <type>voltage</type>
            <sensorId>INVERTER_MAIN_INPUT_VOLTAGE_L2L_1</sensorId>
            <value>
                <getOid>invertervoltageab</getOid>
            </value>
            <label>Inverter Voltage, A-B</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="inverter_voltage_bc">
            <type>voltage</type>
            <sensorId>INVERTER_MAIN_INPUT_VOLTAGE_L2L_2</sensorId>
            <value>
                <getOid>invertervoltagebc</getOid>
            </value>
            <label>Inverter Voltage, B-C</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="inverter_voltage_ca">
            <type>voltage</type>
            <sensorId>INVERTER_MAIN_INPUT_VOLTAGE_L2L_3</sensorId>
            <value>
                <getOid>invertervoltageca</getOid>
            </value>
            <label>Inverter Voltage, C-A</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_2_voltage_an">
            <type>voltage</type>
            <sensorId>MAINS_2_VOLTAGE_LN_1</sensorId>
            <value>
                <getOid>mains2voltagean</getOid>
            </value>
            <label>Mains 2 Voltage, A-N</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_2_voltage_bn">
            <type>voltage</type>
            <sensorId>MAINS_2_VOLTAGE_LN_2</sensorId>
            <value>
                <getOid>mains2voltagebn</getOid>
            </value>
            <label>Mains 2 Voltage, B-N</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_2_voltage_cn">
            <type>voltage</type>
            <sensorId>MAINS_2_VOLTAGE_LN_3</sensorId>
            <value>
                <getOid>mains2voltagecn</getOid>
            </value>
            <label>Mains 2 Voltage, C-N</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_2_voltage_ab">
            <type>voltage</type>
            <sensorId>MAINS_2_MAIN_INPUT_VOLTAGE_L2L_1</sensorId>
            <value>
                <getOid>mains2voltageab</getOid>
            </value>
            <label>Mains 2 Voltage, A-B</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_2_voltage_bc">
            <type>voltage</type>
            <sensorId>MAINS_2_MAIN_INPUT_VOLTAGE_L2L_2</sensorId>
            <value>
                <getOid>mains2voltagebc</getOid>
            </value>
            <label>Mains 2 Voltage, B-C</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_2_voltage_ca">
            <type>voltage</type>
            <sensorId>MAINS_2_MAIN_INPUT_VOLTAGE_L2L_3</sensorId>
            <value>
                <getOid>mains2voltageca</getOid>
            </value>
            <label>Mains 2 Voltage, C-A</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="load_voltage_an">
            <type>voltage</type>
            <sensorId>LOAD_OUTPUT_VOLTAGE_L2N_1</sensorId>
            <value>
                <getOid>loadvoltagean</getOid>
            </value>
            <label>Load Voltage, A-N</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="load_voltage_bn">
            <type>voltage</type>
            <sensorId>LOAD_OUTPUT_VOLTAGE_L2N_2</sensorId>
            <value>
                <getOid>loadvoltagebn</getOid>
            </value>
            <label>Load Voltage, B-N</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="load_voltage_cn">
            <type>voltage</type>
            <sensorId>LOAD_OUTPUT_VOLTAGE_L2N_3</sensorId>
            <value>
                <getOid>loadvoltagecn</getOid>
            </value>
            <label>Load Voltage, C-N</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="load_voltage_ab">
            <type>voltage</type>
            <sensorId>LOAD_OUTPUT_VOLTAGE_L2L_1</sensorId>
            <value>
                <getOid>loadvoltageab</getOid>
            </value>
            <label>Load Voltage, A-B</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="load_voltage_bc">
            <type>voltage</type>
            <sensorId>LOAD_OUTPUT_VOLTAGE_L2L_2</sensorId>
            <value>
                <getOid>loadvoltagebc</getOid>
            </value>
            <label>Load Voltage, B-C</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="load_voltage_ca">
            <type>voltage</type>
            <sensorId>LOAD_OUTPUT_VOLTAGE_L2L_3</sensorId>
            <value>
                <getOid>loadvoltageca</getOid>
            </value>
            <label>Load Voltage, C-A</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="battery_voltage">
            <type>voltage</type>
            <sensorId>BATT_VOLTAGE</sensorId>
            <value>
                <getOid>batteryvoltage</getOid>
            </value>
            <label>Battery Voltage</label>
            <sensorSet>Voltage Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="real_power_a">
            <type>powerW</type>
            <sensorId>OUTPUT_POWER_1</sensorId>
            <value>
                <mult>
                    <op><getOid>realpowera</getOid></op>
                    <op>1000</op>
                </mult>
            </value>
            <label>Real Power, A</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="real_power_b">
            <type>powerW</type>
            <sensorId>OUTPUT_POWER_2</sensorId>
            <value>
                <mult>
                    <op><getOid>realpowerb</getOid></op>
                    <op>1000</op>
                </mult>
            </value>
            <label>Real Power, B</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="real_power_c">
            <type>powerW</type>
            <sensorId>OUTPUT_POWER_3</sensorId>
            <value>
                <mult>
                    <op><getOid>realpowerc</getOid></op>
                    <op>1000</op>
                </mult>
            </value>
            <label>Real Power, C</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="apparent_power_a">
            <type>powerVA</type>
            <sensorId>OUTPUT_APPARENT_POWER_1</sensorId>
            <value>
                <mult>
                    <op><getOid>apparentpowera</getOid></op>
                    <op>1000</op>
                </mult>
            </value>
            <label>Apparent Power, A</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="apparent_power_b">
            <type>powerVA</type>
            <sensorId>OUTPUT_APPARENT_POWER_2</sensorId>
            <value>
                <mult>
                    <op><getOid>apparentpowerb</getOid></op>
                    <op>1000</op>
                </mult>
            </value>
            <label>Apparent Power, B</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="apparent_power_c">
            <type>powerVA</type>
            <sensorId>OUTPUT_APPARENT_POWER_3</sensorId>
            <value>
                <mult>
                    <op><getOid>apparentpowerc</getOid></op>
                    <op>1000</op>
                </mult>
            </value>
            <label>Apparent Power, C</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="real_power_tot">
            <type>powerW</type>
            <sensorId>OUTPUT_POWER_TOTAL</sensorId>
            <value>
                <mult>
                    <op><getOid>realpowertot</getOid></op>
                    <op>1000</op>
                </mult>
            </value>
            <label>Real Power Total</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>
        
        <numSensor ruleid="apparent_power_tot">
            <type>powerVA</type>
            <sensorId>OUTPUT_APPARENT_POWER_TOTAL</sensorId>
            <value>
                <mult>
                    <op><getOid>apparentpowertot</getOid></op>
                    <op>1000</op>
                </mult>
            </value>
            <label>Apparent Power Total</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="inverter_pct_load">
            <type>pctofcapacity</type>
            <sensorId>INVERTER_LOAD_PCT</sensorId>
            <value>
                <getOid>inverterpctload</getOid>
            </value>
            <label>Inverter Load</label>
            <sensorSet>Load Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="power_factor_tot">
            <type>num/powerfactor</type>
            <sensorId>TOTAL_POWER_FACTOR_1</sensorId>
            <value>
                <getOid>powerfactortot</getOid>
            </value>
            <label>Power Factor</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_1_frequency">
            <type>frequency</type>
            <sensorId>MAINS_1_INPUT_FREQ</sensorId>
            <value>
                <mult>
                    <op><getOid>mains1frequency</getOid></op>
                    <op>0.1</op>
                </mult>
            </value>
            <valueInc>0.1</valueInc>
            <label>Mains 1 Frequency</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="inverter_frequency">
            <type>frequency</type>
            <sensorId>INVERTER_INPUT_FREQ</sensorId>
            <value>
                <mult>
                    <op><getOid>inverterfrequency</getOid></op>
                    <op>0.1</op>
                </mult>
            </value>
            <valueInc>0.1</valueInc>
            <label>Inverter Frequency</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="mains_2_frequency">
            <type>frequency</type>
            <sensorId>MAINS_2_INPUT_FREQ</sensorId>
            <value>
                <mult>
                    <op><getOid>mains2frequency</getOid></op>
                    <op>0.1</op>
                </mult>
            </value>
            <valueInc>0.1</valueInc>
            <label>Mains 2 Frequency</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="load_frequency">
            <type>frequency</type>
            <sensorId>OUTPUT_FREQ</sensorId>
            <value>
                <mult>
                    <op><getOid>loadfrequency</getOid></op>
                    <op>0.1</op>
                </mult>
            </value>
            <valueInc>0.1</valueInc>
            <label>Load Frequency</label>
            <sensorSet>Power Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="battery_room_temp">
            <type>temp</type>
            <sensorId>BATTERY_ROOM_TEMP</sensorId>
            <value>
                <getOid>batteryroomtemp</getOid>
            </value>
            <label>Battery Room Temperature</label>
            <sensorSet>Battery Sensors</sensorSet>
        </numSensor>

        <stateSensor ruleid="inverter_type">
            <type>state</type>
            <sensorId>INVERTER_TYPE</sensorId>
            <value>
                <mapValue mapid="inverter_type_map-vm">
                    <getOid>invertertype</getOid>
                </mapValue>
            </value>
            <label>Inverter Type</label>
            <enum>inverter_type_map-em</enum>
            <sensorSet>Battery Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="battery_installed">
            <type>state</type>
            <sensorId>BATTERY_INSTALLED</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <getOid>batteryinstalled</getOid>
                </mapValue>
            </value>
            <label>Battery Installed</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Battery Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="battery_temp_installed">
            <type>state</type>
            <sensorId>BATTERY_TEMP_INSTALLED</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <getOid>batterytempinstalled</getOid>
                </mapValue>
            </value>
            <label>Battery Temp Sensor Installed</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Battery Sensors</sensorSet>
        </stateSensor>

        <numSensor ruleid="rated_current">
            <type>amperage</type>
            <sensorId>RATED_CURRENT</sensorId>
            <value>
                <getOid>ratedcurrent</getOid>
            </value>
            <label>Current Rated Load</label>
            <sensorSet>Battery Sensors</sensorSet>
        </numSensor>

        <numSensor ruleid="rated_power">
            <type>powerW</type>
            <sensorId>RATED_POWER</sensorId>
            <value>
                <mult>
                    <op><getOid>ratedpower</getOid></op>
                    <op>1000</op>
                </mult>
            </value>
            <label>Power Rated Load</label>
            <sensorSet>Battery Sensors</sensorSet>
        </numSensor>

        <stateSensor ruleid="battery_circuit_breaker_status">
            <type>state</type>
            <sensorId>BATTERY_CIRCUIT_BREAKER</sensorId>
            <value>
                <mapValue mapid="openclose_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 0 -->
                        <bitwise_and>
                            <op><getOid>register65</getOid></op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Battery Circuit Breaker</label>
            <enum>openclose_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="battery_discharging_status">
            <type>state</type>
            <sensorId>BATTERY_DISCHARGING_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 1 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register65</getOid></op>
                                    <op>1</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Battery Discharging</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="minimum_battery_voltage_status">
            <type>state</type>
            <sensorId>MINIMUM_BATTERY_VOLTAGE_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 2 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register65</getOid></op>
                                    <op>2</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Minimum Battery Voltage Reached</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="lower_battery_shutdown_status">
            <type>state</type>
            <sensorId>LOWER_BATTERY_SHUTDOWN_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 3 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register65</getOid></op>
                                    <op>3</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Lower Battery Shutdown Reached</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="battery_temperature_status">
            <type>state</type>
            <sensorId>BATTERY_TEMPERATURE_STATUS</sensorId>
            <value>
                <mapValue mapid="normal_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 4 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register65</getOid></op>
                                    <op>4</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Battery Temperature Status</label>
            <enum>normal_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="mains1_voltage_status">
            <type>state</type>
            <sensorId>MAINS_1_VOLTAGE_STATUS</sensorId>
            <value>
                <mapValue mapid="normal_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 5 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register65</getOid></op>
                                    <op>5</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Mains 1 Voltage Status</label>
            <enum>normal_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="battery_room_ventilation_status">
            <type>state</type>
            <sensorId>BATTERY_ROOM_VENTILATION_STATUS</sensorId>
            <value>
                <mapValue mapid="fault_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 6 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register65</getOid></op>
                                    <op>6</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Battery Room Ventilation</label>
            <enum>fault_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="battery_charging_status">
            <type>state</type>
            <sensorId>BATTERY_CHARGING_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 7 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register65</getOid></op>
                                    <op>7</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Battery Charging</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="rectifier_charger_status">
            <type>state</type>
            <sensorId>RECTIFIER_CHARGER_STATUS</sensorId>
            <value>
                <mapValue mapid="offon_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 8 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register65</getOid></op>
                                    <op>8</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Rectifier Charger</label>
            <enum>offon_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="rectifier_charger_fault_status">
            <type>state</type>
            <sensorId>RECTIFIER_CHARGER_FAULT_STATUS</sensorId>
            <value>
                <mapValue mapid="fault_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 9 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register65</getOid></op>
                                    <op>9</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Rectifier Charger Fault</label>
            <enum>fault_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="mains_1_input_switch_status">
            <type>state</type>
            <sensorId>MAINS_1_INPUT_SWITCH_STATUS</sensorId>
            <value>
                <mapValue mapid="openclose_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 14 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register65</getOid></op>
                                    <op>14</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Mains 1 Input Switch</label>
            <enum>openclose_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="rectifier_emergency_off_switch_status">
            <type>state</type>
            <sensorId>RECTIFIER_EMERGENCY_OFF_SWITCH_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 1 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register66</getOid></op>
                                    <op>1</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Rectifier Emergency Off Switch</label>
            <enum>activated_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="rectifier_input_voltage_status">
            <type>state</type>
            <sensorId>RECTIFIER_INPUT_VOLTAGE_STATUS</sensorId>
            <value>
                <mapValue mapid="normal_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 2 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register66</getOid></op>
                                    <op>2</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Rectifier Input Voltage</label>
            <enum>normal_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="rectifier_input_frequency_status">
            <type>state</type>
            <sensorId>RECTIFIER_INPUT_FREQUENCY_STATUS</sensorId>
            <value>
                <mapValue mapid="normal_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 3 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register66</getOid></op>
                                    <op>3</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Rectifier Input Frequency</label>
            <enum>normal_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="rectifier_gradual_shutdown_status">
            <type>state</type>
            <sensorId>RECTIFIER_GRADUAL_SHUTDOWN_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 7 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register66</getOid></op>
                                    <op>7</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Rectifier Gradual Shutdown</label>
            <enum>activated_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="engine_generator_set_current_limiting_status">
            <type>state</type>
            <sensorId>ENGINE_GENERATOR_CURRENT_LIMITING_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 9 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register66</getOid></op>
                                    <op>9</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Engine Generator Set Current Limiting</label>
            <enum>activated_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="battery_current_limiting_status">
            <type>state</type>
            <sensorId>BATTERY_CURRENT_LIMITING_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 10 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register66</getOid></op>
                                    <op>10</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Battery Current Limiting</label>
            <enum>activated_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="battery_equalization_status">
            <type>state</type>
            <sensorId>BATTERY_EQUALIZATION_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 11 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register66</getOid></op>
                                    <op>11</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Battery Equalization</label>
            <enum>activated_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="operation_on_generator_set_status">
            <type>state</type>
            <sensorId>OPERATION_ON_GENERATOR_SET_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 14 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register66</getOid></op>
                                    <op>14</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Operation on Engine Generator Set</label>
            <enum>activated_map-em</enum>
            <sensorSet>Rectifier-Charger Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="inverter_stack_overload_status">
            <type>state</type>
            <sensorId>INVERTER_STACK_OVERLOAD_STATUS</sensorId>
            <value>
                <mapValue mapid="overload_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 0 -->
                        <bitwise_and>
                            <op><getOid>register69</getOid></op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Inverter Stack Overload</label>
            <enum>overload_map-em</enum>
            <sensorSet>Inverter Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="inverter_fault_status">
            <type>state</type>
            <sensorId>INVERTER_FAULT_STATUS</sensorId>
            <value>
                <mapValue mapid="fault_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 1 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register69</getOid></op>
                                    <op>1</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Major Inverter Fault</label>
            <enum>fault_map-em</enum>
            <sensorSet>Inverter Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="inverter_output_current_limiting_status">
            <type>state</type>
            <sensorId>INVERTER_OUTPUT_CURRENT_LIMITING_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 5 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register69</getOid></op>
                                    <op>5</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Inverter Output Current Limiting</label>
            <enum>activated_map-em</enum>
            <sensorSet>Inverter Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="inverter_thermal_overload_status">
            <type>state</type>
            <sensorId>INVERTER_THERMAL_OVERLOAD_STATUS</sensorId>
            <value>
                <mapValue mapid="overload_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 6 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register69</getOid></op>
                                    <op>6</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Inverter Thermal Overload</label>
            <enum>overload_map-em</enum>
            <sensorSet>Inverter Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="outside_contact_status">
            <type>state</type>
            <sensorId>OUTSIDE_CONTACT_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 12 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register69</getOid></op>
                                    <op>12</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Outside Contact</label>
            <enum>activated_map-em</enum>
            <sensorSet>Inverter Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="inverter_emergency_off_switch_status">
            <type>state</type>
            <sensorId>INVERTER_EMERGENCY_OFF_SWITCH_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 13 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register69</getOid></op>
                                    <op>13</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Inverter Emergency Off Switch</label>
            <enum>activated_map-em</enum>
            <sensorSet>Inverter Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="forced_inverter_shutdown_status">
            <type>state</type>
            <sensorId>FORCED_INVERTER_SHUTDOWN_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 4 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register71</getOid></op>
                                    <op>4</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Forced Inverter Shutdown</label>
            <enum>activated_map-em</enum>
            <sensorSet>Inverter Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="frequency_conversion_status">
            <type>state</type>
            <sensorId>FREQUENCY_CONVERSION_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 5 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register71</getOid></op>
                                    <op>5</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Frequency Conversion</label>
            <enum>activated_map-em</enum>
            <sensorSet>Inverter Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="conditional_inverter_shutdown_status">
            <type>state</type>
            <sensorId>CONDITIONAL_INVERTER_SHUTDOWN_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 7 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register71</getOid></op>
                                    <op>7</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Conditional Inverter Shutdown</label>
            <enum>activated_map-em</enum>
            <sensorSet>Inverter Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="inverter_overload_status">
            <type>state</type>
            <sensorId>INVERTER_OVERLOAD_STATUS</sensorId>
            <value>
                <mapValue mapid="overload_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 0 -->
                        <bitwise_and>
                            <op>register73</op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Inverter Overload</label>
            <enum>overload_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>
        
        <stateSensor ruleid="ventilation_batter_cabinets_status">
            <type>state</type>
            <sensorId>VENTILATION_BATTERY_CABINETS_STATUS</sensorId>
            <value>
                <mapValue mapid="fault_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 2 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register73</getOid></op>
                                    <op>2</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Ventilation of Battery Cabinets</label>
            <enum>fault_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>
        
        <stateSensor ruleid="inverter_connected_load_status">
            <type>state</type>
            <sensorId>INVERTER_CONNECTED_LOAD_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 4 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register73</getOid></op>
                                    <op>4</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Inverter Connected to Load</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>
        
        <stateSensor ruleid="inverter_off_disabled_status">
            <type>state</type>
            <sensorId>INVERTER_OFF_DISABLED_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 5 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register73</getOid></op>
                                    <op>5</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Inverter Off Disabled</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="synch_mains_2_status">
            <type>state</type>
            <sensorId>SYNCH_MAINS_2_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 6 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register73</getOid></op>
                                    <op>6</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Sync With Mains 2</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="transfer_fault_status">
            <type>state</type>
            <sensorId>TRANSFER_FAULT_STATUS</sensorId>
            <value>
                <mapValue mapid="fault_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 7 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register73</getOid></op>
                                    <op>7</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Transfer Fault</label>
            <enum>fault_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>
        
        <stateSensor ruleid="mains_2_voltage_outside_tolerance_status">
            <type>state</type>
            <sensorId>MAINS_2_VOLTAGE_OUTSIDE_TOLERANCE_STATUS</sensorId>
            <value>
                <mapValue mapid="normal_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 10 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register73</getOid></op>
                                    <op>10</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Mains 2 Voltage Outside Tolerance</label>
            <enum>normal_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>
        
        <stateSensor ruleid="emergency_off_switch_status">
            <type>state</type>
            <sensorId>EMERGENCY_OFF_SWITCH_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 13 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register73</getOid></op>
                                    <op>13</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Emergency Off Switch</label>
            <enum>activated_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="contactor_k2s_status">
            <type>state</type>
            <sensorId>CONTACTOR_K2S_STATUS</sensorId>
            <value>
                <mapValue mapid="openclose_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 4 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register74</getOid></op>
                                    <op>4</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Contactor K2S</label>
            <enum>openclose_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="mains_2_input_switch_status">
            <type>state</type>
            <sensorId>MAINS_2_INPUT_SWITCH_STATUS</sensorId>
            <value>
                <mapValue mapid="openclose_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 6 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register74</getOid></op>
                                    <op>6</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Mains 2 Input Switch</label>
            <enum>openclose_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="maintenance_bypass_switch_status">
            <type>state</type>
            <sensorId>MAINTENANCE_BYPASS_SWITCH_STATUS</sensorId>
            <value>
                <mapValue mapid="openclose_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 7 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register74</getOid></op>
                                    <op>7</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Maintenance Bypass Switch</label>
            <enum>openclose_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="inverter_output_switch_status">
            <type>state</type>
            <sensorId>INVERTER_OUTPUT_SWITCH_STATUS</sensorId>
            <value>
                <mapValue mapid="openclose_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 8 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register74</getOid></op>
                                    <op>8</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Inverter Output Switch</label>
            <enum>openclose_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="static_switch_status">
            <type>state</type>
            <sensorId>STATIC_SWITCH_STATUS</sensorId>
            <value>
                <mapValue mapid="openclose_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 9 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register74</getOid></op>
                                    <op>9</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Static Switch</label>
            <enum>openclose_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="mains_2_frequency_status">
            <type>state</type>
            <sensorId>MAINS_2_FREQUENCY_STATUS</sensorId>
            <value>
                <mapValue mapid="normal_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 12 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register74</getOid></op>
                                    <op>12</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Mains 2 Frequency Status</label>
            <enum>normal_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="mains_2_voltage_status">
            <type>state</type>
            <sensorId>MAINS_2_VOLTAGE_STATUS</sensorId>
            <value>
                <mapValue mapid="normal_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 13 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register74</getOid></op>
                                    <op>13</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Mains 2 Voltage Status</label>
            <enum>normal_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="free_running_frequency_status">
            <type>state</type>
            <sensorId>FREE_RUNNING_FREQUENCY_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 15 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register74</getOid></op>
                                    <op>15</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Free-Running Frequency</label>
            <enum>activated_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="static_bypass_overload_status">
            <type>state</type>
            <sensorId>STATIC_BYPASS_OVERLOAD_STATUS</sensorId>
            <value>
                <mapValue mapid="overload_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 0 -->
                        <bitwise_and>
                            <op><getOid>register75</getOid></op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Static Bypass Overload</label>
            <enum>overload_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="static_bypass_thermal_overload_status">
            <type>state</type>
            <sensorId>STATIC_BYPASS_THERMAL_OVERLOAD_STATUS</sensorId>
            <value>
                <mapValue mapid="overload_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 1 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register75</getOid></op>
                                    <op>1</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Static Bypass Thermal Overload</label>
            <enum>overload_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="aux_cubicle_fault_status">
            <type>state</type>
            <sensorId>AUX_CUBICLE_FAULT_STATUS</sensorId>
            <value>
                <mapValue mapid="fault_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 3 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register75</getOid></op>
                                    <op>3</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Aux Cubicle Fault</label>
            <enum>fault_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="transfer_mains_2_prohibited_status">
            <type>state</type>
            <sensorId>TRANSFER_MAINS_2_PROHIBITED_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 4 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register75</getOid></op>
                                    <op>4</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Transfer to Mains 2 with Interrupt Prohibited</label>
            <enum>activated_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="transfer_lockout_status">
            <type>state</type>
            <sensorId>TRANSFER_LOCKOUT_STATUS</sensorId>
            <value>
                <mapValue mapid="activated_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 5 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register75</getOid></op>
                                    <op>5</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Transfer Lockout</label>
            <enum>activated_map-em</enum>
            <sensorSet>Connectivity Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="acquisition_fault_status">
            <type>state</type>
            <sensorId>ACQUISITION_FAULT_STATUS</sensorId>
            <value>
                <mapValue mapid="fault_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 0 -->
                        <bitwise_and>
                            <op><getOid>register77</getOid></op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Acquisition Fault</label>
            <enum>fault_map-em</enum>
            <sensorSet>Operating Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="battery_backup_time_status">
            <type>state</type>
            <sensorId>BATTERY_BACKUP_TIME_STATUS</sensorId>
            <value>
                <mapValue mapid="fault_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 1 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register77</getOid></op>
                                    <op>1</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Battery Backup Time</label>
            <enum>fault_map-em</enum>
            <sensorSet>Operating Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="end_of_battery_life_status">
            <type>state</type>
            <sensorId>END_OF_BATTERY_LIFE_STATUS</sensorId>
            <value>
                <mapValue mapid="fault_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 2 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register77</getOid></op>
                                    <op>2</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>End of Battery Life</label>
            <enum>fault_map-em</enum>
            <sensorSet>Operating Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="system_normal_status">
            <type>state</type>
            <sensorId>SYSTEM_NORMAL_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 4 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register77</getOid></op>
                                    <op>4</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>System Normal, Load Protected</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Operating Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="system_downgraded_status">
            <type>state</type>
            <sensorId>SYSTEM_DOWNGRADED_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 5 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register77</getOid></op>
                                    <op>5</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>System Downgraded, Malfunction</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Operating Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="unsafe_operation_status">
            <type>state</type>
            <sensorId>UNSAFE_OPERATION_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 6 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register77</getOid></op>
                                    <op>6</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Unsafe Operation, Load Unprotected</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Operating Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="operation_battery_power_status">
            <type>state</type>
            <sensorId>OPERATION_BATTERY_POWER_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 7 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register77</getOid></op>
                                    <op>7</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Operation on Battery Power</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Operating Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="power_supplied_via_ss_status">
            <type>state</type>
            <sensorId>POWER_SUPPLIED_VIA_SS_STATUS</sensorId>
            <value>
                <mapValue mapid="openclose_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 9 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register77</getOid></op>
                                    <op>9</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Power Supplied Via SS or K2S</label>
            <enum>openclose_map-em</enum>
            <sensorSet>Operating Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="inverter_connected_status">
            <type>state</type>
            <sensorId>INVERTER_CONNECTED_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 10 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register77</getOid></op>
                                    <op>10</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Inverter Connected</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Operating Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="cubicle_ventilation_status">
            <type>state</type>
            <sensorId>CUBICLE_VENTILATION_STATUS</sensorId>
            <value>
                <mapValue mapid="fault_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 13 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register78</getOid></op>
                                    <op>13</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Cubicle Ventilation</label>
            <enum>fault_map-em</enum>
            <sensorSet>Operating Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="comm_interface_test_error_status">
            <type>state</type>
            <sensorId>COMM_INTERFACE_TEST_ERROR_STATUS</sensorId>
            <value>
                <mapValue mapid="fault_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 9 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register79</getOid></op>
                                    <op>9</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Communication Interface Test Error</label>
            <enum>fault_map-em</enum>
            <sensorSet>Communication Interface Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="unit_in_config_mode_status">
            <type>state</type>
            <sensorId>UNIT_IN_CONFIG_MODE_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 10 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register79</getOid></op>
                                    <op>10</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Unit in Configuration Mode</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Communication Interface Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="remote_setting_status">
            <type>state</type>
            <sensorId>REMOTE_SETTING_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 11 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register79</getOid></op>
                                    <op>11</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Remote Setting Mode</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Communication Interface Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="invalid_measurements_status">
            <type>state</type>
            <sensorId>INVALID_MEASUREMENTS_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 12 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register79</getOid></op>
                                    <op>12</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Invalid Measurements</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Communication Interface Status Sensors</sensorSet>
        </stateSensor>

        <stateSensor ruleid="change_in_status">
            <type>state</type>
            <sensorId>CHANGE_IN_STATUS</sensorId>
            <value>
                <mapValue mapid="yesno_map-vm">
                    <formatNumber>
                        <!-- Determined by bit 15 -->
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>register79</getOid></op>
                                    <op>15</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Change in Status</label>
            <enum>yesno_map-em</enum>
            <sensorSet>Communication Interface Status Sensors</sensorSet>
        </stateSensor>

        <!-- Inverter Type -->
        <valueMap ruleid="inverter_type_map-vm">
            <valueIn>0</valueIn> <valueOut>0</valueOut>
            <valueIn>1</valueIn> <valueOut>1</valueOut>
            <valueIn>2</valueIn> <valueOut>2</valueOut>
            <valueIn>3</valueIn> <valueOut>3</valueOut>
            <valueIn>*</valueIn> <valueOut>0</valueOut>
        </valueMap>
        <enumMap ruleid="inverter_type_map-em">
            <label>Unitary</label>
            <label>Parallel Without Static Switch</label>
            <label>Parallel With Static Switch</label>
            <label>Static Switch Cubicle</label>
        </enumMap>

        <!-- YesNo -->
        <valueMap ruleid="yesno_map-vm">
            <valueIn>0</valueIn> <valueOut>0</valueOut>
            <valueIn>1</valueIn> <valueOut>1</valueOut>
            <valueIn>*</valueIn> <valueOut>0</valueOut>
        </valueMap>
        <enumMap ruleid="yesno_map-em">
            <label>No</label>
            <label>Yes</label>
        </enumMap>

        <!-- OpenClose -->
        <valueMap ruleid="openclose_map-vm">
            <valueIn>0</valueIn> <valueOut>0</valueOut>
            <valueIn>1</valueIn> <valueOut>1</valueOut>
            <valueIn>*</valueIn> <valueOut>0</valueOut>
        </valueMap>
        <enumMap ruleid="openclose_map-em">
            <label>Open</label>
            <label>Close</label>
        </enumMap>

        <!-- OffOn -->
        <valueMap ruleid="offon_map-vm">
            <valueIn>0</valueIn> <valueOut>0</valueOut>
            <valueIn>1</valueIn> <valueOut>1</valueOut>
            <valueIn>*</valueIn> <valueOut>0</valueOut>
        </valueMap>
        <enumMap ruleid="offon_map-em">
            <label>Off</label>
            <label>On</label>
        </enumMap>

        <!-- Activated -->
        <valueMap ruleid="activated_map-vm">
            <valueIn>0</valueIn> <valueOut>0</valueOut>
            <valueIn>1</valueIn> <valueOut>1</valueOut>
            <valueIn>*</valueIn> <valueOut>0</valueOut>
        </valueMap>
        <enumMap ruleid="activated_map-em">
            <label>Not Activated</label>
            <label>Activated</label>
        </enumMap>

        <!-- Overload -->
        <valueMap ruleid="overload_map-vm">
            <valueIn>0</valueIn> <valueOut>0</valueOut>
            <valueIn>1</valueIn> <valueOut>1</valueOut>
            <valueIn>*</valueIn> <valueOut>0</valueOut>
        </valueMap>
        <enumMap ruleid="overload_map-em">
            <label>No Overload</label>
            <label>Overload</label>
        </enumMap>

        <!-- Normal -->
        <valueMap ruleid="normal_map-vm">
            <valueIn>0</valueIn> <valueOut>0</valueOut>
            <valueIn>1</valueIn> <valueOut>1</valueOut>
            <valueIn>*</valueIn> <valueOut>0</valueOut>
        </valueMap>
        <enumMap ruleid="normal_map-em">
            <label>Normal</label>
            <label>Outside Tolerance</label>
        </enumMap>

        <!-- Fault -->
        <valueMap ruleid="fault_map-vm">
            <valueIn>0</valueIn> <valueOut>0</valueOut>
            <valueIn>1</valueIn> <valueOut>1</valueOut>
            <valueIn>*</valueIn> <valueOut>0</valueOut>
        </valueMap>
        <enumMap ruleid="fault_map-em">
            <label>No Fault</label>
            <label>Fault</label>
        </enumMap>

    </device>

    <protocol>
        <modbus>
            <!-- Registers of interest -->
            <value_ref_id valid="mains1current1">
                <function>3</function>
                <start_addr>256</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains1current2">
                <function>3</function>
                <start_addr>257</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains1current3">
                <function>3</function>
                <start_addr>258</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="invertercurrent1">
                <function>3</function>
                <start_addr>262</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="invertercurrent2">
                <function>3</function>
                <start_addr>263</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="invertercurrent3">
                <function>3</function>
                <start_addr>264</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains2current1">
                <function>3</function>
                <start_addr>265</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains2current2">
                <function>3</function>
                <start_addr>266</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains2current3">
                <function>3</function>
                <start_addr>267</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="loadcurrent1">
                <function>3</function>
                <start_addr>268</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="loadcurrent2">
                <function>3</function>
                <start_addr>269</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="loadcurrent3">
                <function>3</function>
                <start_addr>270</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="batterycurrent">
                <function>3</function>
                <start_addr>277</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="pctload">
                <function>3</function>
                <start_addr>288</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="peakload1">
                <function>3</function>
                <start_addr>289</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="peakload2">
                <function>3</function>
                <start_addr>290</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="peakload3">
                <function>3</function>
                <start_addr>291</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains1voltageab">
                <function>3</function>
                <start_addr>320</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains1voltagebc">
                <function>3</function>
                <start_addr>321</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains1voltageca">
                <function>3</function>
                <start_addr>322</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="invertervoltagean">
                <function>3</function>
                <start_addr>323</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="invertervoltagebn">
                <function>3</function>
                <start_addr>324</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="invertervoltagecn">
                <function>3</function>
                <start_addr>325</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="invertervoltageab">
                <function>3</function>
                <start_addr>326</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="invertervoltagebc">
                <function>3</function>
                <start_addr>327</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="invertervoltageca">
                <function>3</function>
                <start_addr>328</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains2voltagean">
                <function>3</function>
                <start_addr>329</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains2voltagebn">
                <function>3</function>
                <start_addr>330</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains2voltagecn">
                <function>3</function>
                <start_addr>331</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains2voltageab">
                <function>3</function>
                <start_addr>332</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains2voltagebc">
                <function>3</function>
                <start_addr>333</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains2voltageca">
                <function>3</function>
                <start_addr>334</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="loadvoltagean">
                <function>3</function>
                <start_addr>335</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="loadvoltagebn">
                <function>3</function>
                <start_addr>336</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="loadvoltagecn">
                <function>3</function>
                <start_addr>337</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="loadvoltageab">
                <function>3</function>
                <start_addr>338</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="loadvoltagebc">
                <function>3</function>
                <start_addr>339</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="loadvoltageca">
                <function>3</function>
                <start_addr>340</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="batteryvoltage">
                <function>3</function>
                <start_addr>341</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="realpowera">
                <function>3</function>
                <start_addr>384</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="realpowerb">
                <function>3</function>
                <start_addr>385</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="realpowerc">
                <function>3</function>
                <start_addr>386</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="apparentpowera">
                <function>3</function>
                <start_addr>387</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="apparentpowerb">
                <function>3</function>
                <start_addr>388</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="apparentpowerc">
                <function>3</function>
                <start_addr>389</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="realpowertot">
                <function>3</function>
                <start_addr>390</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="apparentpowertot">
                <function>3</function>
                <start_addr>391</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="inverterpctload">
                <function>3</function>
                <start_addr>392</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="powerfactortot">
                <function>3</function>
                <start_addr>393</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains1frequency">
                <function>3</function>
                <start_addr>416</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="inverterfrequency">
                <function>3</function>
                <start_addr>417</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="mains2frequency">
                <function>3</function>
                <start_addr>418</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="loadfrequency">
                <function>3</function>
                <start_addr>419</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="batteryroomtemp">
                <function>3</function>
                <start_addr>451</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="invertertype">
                <function>3</function>
                <start_addr>512</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="batteryinstalled">
                <function>3</function>
                <start_addr>513</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="batterytempinstalled">
                <function>3</function>
                <start_addr>514</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="ratedcurrent">
                <function>3</function>
                <start_addr>520</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="ratedpower">
                <function>3</function>
                <start_addr>521</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="register65">
                <function>3</function>
                <start_addr>64</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="register66">
                <function>3</function>
                <start_addr>65</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="register69">
                <function>3</function>
                <start_addr>68</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="register71">
                <function>3</function>
                <start_addr>70</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="register73">
                <function>3</function>
                <start_addr>72</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="register74">
                <function>3</function>
                <start_addr>73</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="register75">
                <function>3</function>
                <start_addr>74</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="register77">
                <function>3</function>
                <start_addr>76</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="register78">
                <function>3</function>
                <start_addr>77</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="register79">
                <function>3</function>
                <start_addr>78</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>


            <!-- Bulk reads --> 
            <packet>
                <function>3</function>
                <start_addr>64</start_addr>
                <quantity>2</quantity>
            </packet>
            <packet>
                <function>3</function>
                <start_addr>72</start_addr>
                <quantity>3</quantity>
            </packet>
            <packet>
                <function>3</function>
                <start_addr>76</start_addr>
                <quantity>3</quantity>
            </packet>
            <packet>
                <function>3</function>
                <start_addr>256</start_addr>
                <quantity>3</quantity>
            </packet>
            <packet>
                <function>3</function>
                <start_addr>262</start_addr>
                <quantity>9</quantity>
            </packet>
            <packet>
                <function>3</function>
                <start_addr>288</start_addr>
                <quantity>4</quantity>
            </packet>
            <packet>
                <function>3</function>
                <start_addr>320</start_addr>
                <quantity>22</quantity>
            </packet>
            <packet>
                <function>3</function>
                <start_addr>384</start_addr>
                <quantity>10</quantity>
            </packet>
            <packet>
                <function>3</function>
                <start_addr>416</start_addr>
                <quantity>4</quantity>
            </packet>
            <packet>
                <function>3</function>
                <start_addr>448</start_addr>
                <quantity>4</quantity>
            </packet>
            <packet>
                <function>3</function>
                <start_addr>512</start_addr>
                <quantity>3</quantity>
            </packet>
            <packet>
                <function>3</function>
                <start_addr>520</start_addr>
                <quantity>2</quantity>
            </packet>
            
        </modbus>
    </protocol>
</APC_DDF>
