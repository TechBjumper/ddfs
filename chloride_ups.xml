<?xml version="1.0"?>
<!-- Test Modbus related information -->
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
		ddfid="chloride_ups" ddfname="Chloride UPS" ddfversion="2" canremove="yes">
	<schemaVersion>1.6</schemaVersion>

	<device deviceid="chloride_ups">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<setProductData ruleid="vendordata" field="vendor"><mapValue mapid="manufacturer-vm"><getOid>address2</getOid></mapValue></setProductData>
		<setProductData ruleid="modeldata" field="model"><mapValue mapid="model-vm"><getOid>address3</getOid></mapValue></setProductData>
		<setProductData ruleid="typedata" field="type">UPS</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
		
		<valueMap ruleid="manufacturer-vm">
			<valueIn>0</valueIn><valueOut>Chloride</valueOut>
			<valueIn>1</valueIn><valueOut>Masterguard</valueOut>
			<valueIn>2</valueIn><valueOut>Oneac</valueOut>
			<!--
			<valueIn>3</valueIn><valueOut>Reserved</valueOut>
			<valueIn>4</valueIn><valueOut>Reserved</valueOut>
			<valueIn>5</valueIn><valueOut>Other</valueOut>-->
			<valueIn>*</valueIn><valueOut></valueOut>
		</valueMap>

		<valueMap ruleid="model-vm">
			<valueIn>0</valueIn><valueOut>SI/SII</valueOut>
			<valueIn>1</valueIn><valueOut>70-net</valueOut>
			<valueIn>2</valueIn><valueOut>90-net</valueOut>
			<!--
			<valueIn>3</valueIn><valueOut>Reserved</valueOut>
			<valueIn>4</valueIn><valueOut>Reserved</valueOut>
			<valueIn>5</valueIn><valueOut>Reserved</valueOut>
			<valueIn>6</valueIn><valueOut>Reserved</valueOut>
			<valueIn>7</valueIn><valueOut>Reserved</valueOut>-->
			<valueIn>8</valueIn><valueOut>80-net</valueOut>
			<!--
			<valueIn>9</valueIn><valueOut>Reserved</valueOut>-->
			<valueIn>15</valueIn><valueOut>Active</valueOut>
			<valueIn>16</valueIn><valueOut>Linear+</valueOut>
			<valueIn>*</valueIn><valueOut></valueOut>
		</valueMap>

		<stateSensor ruleid="battery_status">
			<type>state</type>
			<sensorId>BATTERY_STATUS</sensorId>
			<value>
				<mapValue mapid="battery_status-vm">
					<getOid>address19</getOid>
				</mapValue>
			</value>
			<enum>battery_status-em</enum>
			<label>Battery Status</label>
			<sensorSet>Battery</sensorSet>
		</stateSensor>

		<valueMap ruleid="battery_status-vm">
			<valueIn>1</valueIn><valueOut>3</valueOut>
			<valueIn>2</valueIn><valueOut>0</valueOut>
			<valueIn>3</valueIn><valueOut>1</valueOut>
			<valueIn>4</valueIn><valueOut>2</valueOut>
			<valueIn>*</valueIn><valueOut>3</valueOut>
		</valueMap>

		<enumMap ruleid="battery_status-em">
			<label>Battery Normal</label>
			<label>Battery Low</label>
			<label>Battery Depleted</label>
			<label>Unknown</label>
		</enumMap>
		
		<numSensor ruleid="seconds_on_battery">
			<type>timeinsec</type>
			<sensorId>SECONDS_ON_BATTERY</sensorId>
			<value>
				<getOid>address20</getOid>
			</value>
			<label>Time On Battery</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		
		<numSensor ruleid="battery_time_remaining">
			<type>timeinsec</type>
			<sensorId>BATTERY_TIME_REMAINING</sensorId>
			<value>
				<getOid>address21</getOid>
			</value>
			<label>Battery Time Remaining</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		
		<numSensor ruleid="battery_charge_remaining">
			<type>num</type>
			<units>percent</units>
			<sensorId>BATTERY_CHARGE_REMAINING</sensorId>
			<value>
				<getOid>address22</getOid>
			</value>
			<label>Battery Charge Remaining</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		
		<numSensor ruleid="battery_voltage">
			<type>voltage</type>
			<sensorId>BATTERY_VOLTAGE</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address23</getOid></op>
				</mult>
			</value>
			<label>Battery Voltage</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		
		<numSensor ruleid="battery_current">
			<type>amperage</type>
			<sensorId>BATTERY_CURRENT</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address24</getOid></op>
				</mult>
			</value>
			<label>Battery Current</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		
		<numSensor ruleid="battery_temp">
			<type>temp</type>
			<sensorId>BATTERY_TEMP</sensorId>
			<value>
				<getOid>address25</getOid>
			</value>
			<label>Battery Temperature</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_freq">
			<type>frequency</type>
			<sensorId>INPUT_FREQ</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address32</getOid></op>
				</mult>
			</value>
			<label>Input Frequency</label>
			<sensorSet>Input</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_volt_1">
			<type>voltage</type>
			<sensorId>INPUT_VOLT_1</sensorId>
			<value>
				<getOid>address34</getOid>
			</value>
			<label>Input Voltage L1</label>
			<sensorSet>Input</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_volt_2">
			<type>voltage</type>
			<sensorId>INPUT_VOLT_2</sensorId>
			<value>
				<getOid>address35</getOid>
			</value>
			<label>Input Voltage L2</label>
			<sensorSet>Input</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_volt_3">
			<type>voltage</type>
			<sensorId>INPUT_VOLT_3</sensorId>
			<value>
				<getOid>address36</getOid>
			</value>
			<label>Input Voltage L3</label>
			<sensorSet>Input</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_current_1">
			<type>amperage</type>
			<sensorId>INPUT_CURRENT_1</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address37</getOid></op>
				</mult>
			</value>
			<label>Input Current L1</label>
			<sensorSet>Input</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_current_2">
			<type>amperage</type>
			<sensorId>INPUT_CURRENT_2</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address38</getOid></op>
				</mult>
			</value>
			<label>Input Current L2</label>
			<sensorSet>Input</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_current_3">
			<type>amperage</type>
			<sensorId>INPUT_CURRENT_3</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address39</getOid></op>
				</mult>
			</value>
			<label>Input Current L3</label>
			<sensorSet>Input</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_realpower_1">
			<type>num/powerKW</type>
			<sensorId>INPUT_REALPOWER_1</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address40</getOid></op>
				</mult>
			</value>
			<label>Input Real Power L1</label>
			<sensorSet>Input</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_realpower_2">
			<type>num/powerKW</type>
			<sensorId>INPUT_REALPOWER_2</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address41</getOid></op>
				</mult>
			</value>
			<label>Input Real Power L2</label>
			<sensorSet>Input</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_realpower_3">
			<type>num/powerKW</type>
			<sensorId>INPUT_REALPOWER_3</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address42</getOid></op>
				</mult>
			</value>
			<label>Input Real Power L3</label>
			<sensorSet>Input</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_dcvolts">
			<type>voltage</type>
			<sensorId>INPUT_DC_VOLTS</sensorId>
			<value>
				<getOid>address43</getOid>
			</value>
			<label>Input DC Voltage</label>
			<sensorSet>Input</sensorSet>
		</numSensor>
		
		<stateSensor ruleid="output_source">
			<type>state</type>
			<sensorId>OUTPUT_SOURCE</sensorId>
			<value>
				<mapValue mapid="output_source-vm">
					<getOid>address49</getOid>
				</mapValue>
			</value>
			<label>Output Source</label>
			<enum>output_source-em</enum>
			<sensorSet>Output</sensorSet>
		</stateSensor>

		<enumMap ruleid="output_source-em">
			<label>Other</label>
			<label>None</label>
			<label>Normal</label>
			<label>Bypass</label>
			<label>Battery</label>
			<label>Booster</label>
			<label>Reducer</label>
			<label>Unknown</label>
		</enumMap>
		
		<valueMap ruleid="output_source-vm">
			<valueIn>1</valueIn> <valueOut>0</valueOut>
			<valueIn>2</valueIn> <valueOut>1</valueOut>
			<valueIn>3</valueIn> <valueOut>2</valueOut>
			<valueIn>4</valueIn> <valueOut>3</valueOut>
			<valueIn>5</valueIn> <valueOut>4</valueOut>
			<valueIn>6</valueIn> <valueOut>5</valueOut>
			<valueIn>7</valueIn> <valueOut>6</valueOut>
			<valueIn>*</valueIn> <valueOut>7</valueOut>
		</valueMap>

		<numSensor ruleid="output_freq">
			<type>frequency</type>
			<sensorId>OUTPUT_FREQ</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address50</getOid></op>
				</mult>
			</value>
			<label>Output Frequency</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_volt_1">
			<type>voltage</type>
			<sensorId>OUTPUT_VOLT_1</sensorId>
			<value>
				<getOid>address52</getOid>
			</value>
			<label>Output Voltage L1</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_volt_2">
			<type>voltage</type>
			<sensorId>OUTPUT_VOLT_2</sensorId>
			<value>
				<getOid>address53</getOid>
			</value>
			<label>Output Voltage L2</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_volt_3">
			<type>voltage</type>
			<sensorId>OUTPUT_VOLT_3</sensorId>
			<value>
				<getOid>address54</getOid>
			</value>
			<label>Output Voltage L3</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_current_1">
			<type>amperage</type>
			<sensorId>OUTPUT_CURRENT_1</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address55</getOid></op>
				</mult>
			</value>
			<label>Output Current L1</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_current_2">
			<type>amperage</type>
			<sensorId>OUTPUT_CURRENT_2</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address56</getOid></op>
				</mult>
			</value>
			<label>Output Current L2</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_current_3">
			<type>amperage</type>
			<sensorId>OUTPUT_CURRENT_3</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address57</getOid></op>
				</mult>
			</value>
			<label>Output Current L3</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_realpower_1">
			<type>num/powerKW</type>
			<sensorId>OUTPUT_REALPOWER_1</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address58</getOid></op>
				</mult>
			</value>
			<label>Output Real Power L1</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_realpower_2">
			<type>num/powerKW</type>
			<sensorId>OUTPUT_REALPOWER_2</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address59</getOid></op>
				</mult>
			</value>
			<label>Output Real Power L2</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_realpower_3">
			<type>num/powerKW</type>
			<sensorId>OUTPUT_REALPOWER_3</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address60</getOid></op>
				</mult>
			</value>
			<label>Output Real Power L3</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_percload_1">
			<type>num</type>
			<units>percent</units>
			<sensorId>OUTPUT_PERCLOAD_1</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address61</getOid></op>
				</mult>
			</value>
			<label>Output Load L1</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_percload_2">
			<type>num</type>
			<units>percent</units>
			<sensorId>OUTPUT_PERCLOAD_2</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address62</getOid></op>
				</mult>
			</value>
			<label>Output Load L2</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="output_percload_3">
			<type>num</type>
			<units>percent</units>
			<sensorId>OUTPUT_PERCLOAD_3</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address63</getOid></op>
				</mult>
			</value>
			<label>Output Load L3</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="bypass_freq">
			<type>frequency</type>
			<sensorId>BYPASS_FREQ</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address70</getOid></op>
				</mult>
			</value>
			<label>Bypass Frequency</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		
		<numSensor ruleid="bypass_volt_1">
			<type>voltage</type>
			<sensorId>BYPASS_VOLT_1</sensorId>
			<value>
				<getOid>address72</getOid>
			</value>
			<label>Bypass Voltage L1</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>
		
		<numSensor ruleid="bypass_volt_2">
			<type>voltage</type>
			<sensorId>BYPASS_VOLT_2</sensorId>
			<value>
				<getOid>address73</getOid>
			</value>
			<label>Bypass Voltage L2</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>
		
		<numSensor ruleid="bypass_volt_3">
			<type>voltage</type>
			<sensorId>BYPASS_VOLT_3</sensorId>
			<value>
				<getOid>address74</getOid>
			</value>
			<label>Bypass Voltage L3</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>
		
		<numSensor ruleid="bypass_realpower_1">
			<type>num/powerKW</type>
			<sensorId>BYPASS_REALPOWER_1</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address78</getOid></op>
				</mult>
			</value>
			<label>Bypass Real Power L1</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>
		
		<numSensor ruleid="bypass_current_1">
			<type>amperage</type>
			<sensorId>BYPASS_CURRENT_1</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address75</getOid></op>
				</mult>
			</value>
			<label>Bypass Current L1</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>
		
		<numSensor ruleid="bypass_current_2">
			<type>amperage</type>
			<sensorId>BYPASS_CURRENT_2</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address76</getOid></op>
				</mult>
			</value>
			<label>Bypass Current L2</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>
		
		<numSensor ruleid="bypass_current_3">
			<type>amperage</type>
			<sensorId>BYPASS_CURRENT_3</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address76</getOid></op>
				</mult>
			</value>
			<label>Bypass Current L3</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>

		<numSensor ruleid="bypass_realpower_1">
			<type>num/powerKW</type>
			<sensorId>BYPASS_REALPOWER_1</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address77</getOid></op>
				</mult>
			</value>
			<label>Bypass Real Power L1</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>

		<numSensor ruleid="bypass_realpower_2">
			<type>num/powerKW</type>
			<sensorId>BYPASS_REALPOWER_2</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address78</getOid></op>
				</mult>
			</value>
			<label>Bypass Real Power L2</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>

		<numSensor ruleid="bypass_realpower_3">
			<type>num/powerKW</type>
			<sensorId>BYPASS_REALPOWER_3</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address79</getOid></op>
				</mult>
			</value>
			<label>Bypass Real Power L3</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>
		
		<stateSensor ruleid="alarms_present">
			<type>state</type>
			<sensorId>ALARMS_PRESENT</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address86</getOid></op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Alarms Present</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>
		
		<stateSensor ruleid="bad_battery">
			<type>state</type>
			<sensorId>BAD_BATTERY</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address86</getOid></op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Bad Battery</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>
		
		<stateSensor ruleid="on_battery">
			<type>state</type>
			<sensorId>ON_BATTERY</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address86</getOid></op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>On Battery</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>
		
		<stateSensor ruleid="low_battery">
			<type>state</type>
			<sensorId>LOW_BATTERY</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address86</getOid></op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Low Battery</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>
		
		<stateSensor ruleid="depleted_battery">
			<type>state</type>
			<sensorId>DEPLETED_BATTERY</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address86</getOid></op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Depleted Battery</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>
		
		<stateSensor ruleid="temp_bad">
			<type>state</type>
			<sensorId>TEMP_BAD</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address86</getOid></op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Temperature Bad</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>
		
		<stateSensor ruleid="input_bad">
			<type>state</type>
			<sensorId>INPUT_BAD</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address86</getOid></op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Input Bad</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>
		
		<stateSensor ruleid="output_bad">
			<type>state</type>
			<sensorId>OUTPUT_BAD</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address86</getOid></op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Output Bad</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<stateSensor ruleid="output_overload">
			<type>state</type>
			<sensorId>OUTPUT_OVERLOAD</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address87</getOid></op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Output Overload</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<stateSensor ruleid="on_bypass">
			<type>state</type>
			<sensorId>ON_BYPASS</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address87</getOid></op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>On Bypass</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<stateSensor ruleid="bypass_bad">
			<type>state</type>
			<sensorId>BYPASS_BAD</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address87</getOid></op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>On Bypass</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<stateSensor ruleid="charger_failed">
			<type>state</type>
			<sensorId>CHARGER_FAILED</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address87</getOid></op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Charger Failed</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<stateSensor ruleid="fan_failure">
			<type>state</type>
			<sensorId>FAN_FAILURE</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address88</getOid></op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Fan Failed</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<stateSensor ruleid="general_fault">
			<type>state</type>
			<sensorId>GENERAL_FAULT</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address88</getOid></op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>General Fault</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<stateSensor ruleid="diagnostic_test_failure">
			<type>state</type>
			<sensorId>DIAGNOSTIC_TEST_FAILURE</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address88</getOid></op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Diagnostic Test Failure</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<stateSensor ruleid="comm_lost">
			<type>state</type>
			<sensorId>COMM_LOST</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address88</getOid></op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Communication Lost</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<stateSensor ruleid="shutdown_pending">
			<type>state</type>
			<sensorId>SHUTDOWN_PENDING</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address88</getOid></op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Shutdown Pending</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<stateSensor ruleid="test_in_progress">
			<type>state</type>
			<sensorId>TEST_IN_PROGRESS</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address89</getOid></op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Test In Progress</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<stateSensor ruleid="general_warning">
			<type>state</type>
			<sensorId>GENERAL_WARNING</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>address89</getOid></op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>General Warning</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<enumMap ruleid="inactive_active-em">
			<label>Inactive</label>
			<label>Active</label>
		</enumMap>
		
		<valueMap ruleid="inactive_active-vm">
			<valueIn>0</valueIn> <valueOut>0</valueOut>
			<valueIn>*</valueIn> <valueOut>1</valueOut>
		</valueMap>
		
		<stateSensor ruleid="condition_bypass">
			<type>state</type>
			<sensorId>CONDITION_BYPASS</sensorId>
			<value>
				<mapValue mapid="bypass_status-vm">
					<getOid>address90</getOid>
				</mapValue>
			</value>
			<enum>bypass_status-em</enum>
			<label>Condition Bypass</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<enumMap ruleid="bypass_status-em">
			<label>Bypass Not Present</label>
			<label>Bypass On</label>
			<label>Bypass Off</label>
			<label>Bypass Fault</label>
			<label>Bypass Not Prepared</label>
			<label>Unknown</label>
		</enumMap>
		
		<valueMap ruleid="bypass_status-vm">
			<valueIn>0</valueIn> <valueOut>0</valueOut>
			<valueIn>1</valueIn> <valueOut>1</valueOut>
			<valueIn>2</valueIn> <valueOut>2</valueOut>
			<valueIn>3</valueIn> <valueOut>3</valueOut>
			<valueIn>4</valueIn> <valueOut>4</valueOut>
			<valueIn>*</valueIn> <valueOut>5</valueOut>
		</valueMap>
		
		<stateSensor ruleid="condition_inverter">
			<type>state</type>
			<sensorId>CONDITION_INVERTER</sensorId>
			<value>
				<mapValue mapid="inverter_status-vm">
					<getOid>address91</getOid>
				</mapValue>
			</value>
			<enum>inverter_status-em</enum>
			<label>Condition Inverter</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<enumMap ruleid="inverter_status-em">
			<label>Inverter Off</label>
			<label>Inverter Turning On</label>
			<label>Inverter On</label>
			<label>Inverter Fault</label>
			<label>Inverter Turning Off</label>
			<label>Unknown</label>
		</enumMap>
		
		<valueMap ruleid="inverter_status-vm">
			<valueIn>0</valueIn> <valueOut>0</valueOut>
			<valueIn>1</valueIn> <valueOut>1</valueOut>
			<valueIn>2</valueIn> <valueOut>2</valueOut>
			<valueIn>3</valueIn> <valueOut>3</valueOut>
			<valueIn>4</valueIn> <valueOut>4</valueOut>
			<valueIn>*</valueIn> <valueOut>5</valueOut>
		</valueMap>
		
		<stateSensor ruleid="condition_rectifier">
			<type>state</type>
			<sensorId>CONDITION_RECTIFIER</sensorId>
			<value>
				<mapValue mapid="rectifier_status-vm">
					<getOid>address92</getOid>
				</mapValue>
			</value>
			<enum>rectifier_status-em</enum>
			<label>Condition Rectifier</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>

		<enumMap ruleid="rectifier_status-em">
			<label>Rectifier Off</label>
			<label>Rectifier Turning On</label>
			<label>Rectifier On</label>
			<label>Rectifier Fault</label>
			<label>Unknown</label>
		</enumMap>
		
		<valueMap ruleid="rectifier_status-vm">
			<valueIn>0</valueIn> <valueOut>0</valueOut>
			<valueIn>1</valueIn> <valueOut>1</valueOut>
			<valueIn>2</valueIn> <valueOut>2</valueOut>
			<valueIn>3</valueIn> <valueOut>3</valueOut>
			<valueIn>*</valueIn> <valueOut>4</valueOut>
		</valueMap>
		
		<stateSensor ruleid="condition_battery_connected">
			<type>state</type>
			<sensorId>CONDITION_BATTERY_CONNECTED</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<getOid>address93</getOid>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Condition Battery Connected</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>
		
		<stateSensor ruleid="condition_non_synchronism">
			<type>state</type>
			<sensorId>CONDITION_NON_SYNCHRONISM</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<getOid>address94</getOid>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Condition Non-synchronism</label>
			<sensorSet>Alarms</sensorSet>
		</stateSensor>
	</device>

	<protocol>
		<modbus>
			<value_ref_id valid="address2"> <!-- manufacturer -->
				<function>3</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address3"> <!-- ups model -->
				<function>3</function>
				<start_addr>3</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address19"> <!-- battery status -->
				<function>3</function>
				<start_addr>19</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address20"> <!-- seconds on battery -->
				<function>3</function>
				<start_addr>20</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address21"> <!-- battery status -->
				<function>3</function>
				<start_addr>21</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address22"> <!-- battery estimated charge remaining -->
				<function>3</function>
				<start_addr>22</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address23"> <!-- battery voltage -->
				<function>3</function>
				<start_addr>23</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address24"> <!-- battery current -->
				<function>3</function>
				<start_addr>24</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address25"> <!-- battery temperature -->
				<function>3</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address32"> <!-- input frequency -->
				<function>3</function>
				<start_addr>32</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address34"> <!-- input voltage L1 -->
				<function>3</function>
				<start_addr>34</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address35"> <!-- input voltage L2 -->
				<function>3</function>
				<start_addr>35</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address36"> <!-- input voltage L3 -->
				<function>3</function>
				<start_addr>36</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address37"> <!-- input current L1 -->
				<function>3</function>
				<start_addr>37</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address38"> <!-- input current L2 -->
				<function>3</function>
				<start_addr>38</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address39"> <!-- input current L3 -->
				<function>3</function>
				<start_addr>39</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address40"> <!-- input real power L1 -->
				<function>3</function>
				<start_addr>40</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address41"> <!-- input real power L2 -->
				<function>3</function>
				<start_addr>41</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address42"> <!-- input real power L3 -->
				<function>3</function>
				<start_addr>42</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address43"> <!-- input dc voltage -->
				<function>3</function>
				<start_addr>43</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address49"> <!-- output source -->
				<function>3</function>
				<start_addr>49</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address50"> <!-- output frequency -->
				<function>3</function>
				<start_addr>50</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address52"> <!-- output voltage L1 -->
				<function>3</function>
				<start_addr>52</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address53"> <!-- output voltage L2 -->
				<function>3</function>
				<start_addr>53</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address54"> <!-- output voltage L3 -->
				<function>3</function>
				<start_addr>54</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address55"> <!-- output current L1 -->
				<function>3</function>
				<start_addr>55</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address56"> <!-- output current L2 -->
				<function>3</function>
				<start_addr>56</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address57"> <!-- output current L3 -->
				<function>3</function>
				<start_addr>57</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address58"> <!-- output real power L1 -->
				<function>3</function>
				<start_addr>58</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address59"> <!-- output real power L2 -->
				<function>3</function>
				<start_addr>59</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address60"> <!-- output real power L3 -->
				<function>3</function>
				<start_addr>60</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address61"> <!-- output percent load L1 -->
				<function>3</function>
				<start_addr>61</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address62"> <!-- output percent load L2 -->
				<function>3</function>
				<start_addr>62</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address63"> <!-- output percent load L3 -->
				<function>3</function>
				<start_addr>63</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address70"> <!-- bypass frequency -->
				<function>3</function>
				<start_addr>70</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address72"> <!-- bypass voltage L1 -->
				<function>3</function>
				<start_addr>72</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address73"> <!-- bypass voltage L2 -->
				<function>3</function>
				<start_addr>73</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address74"> <!-- bypass voltage L3 -->
				<function>3</function>
				<start_addr>74</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address75"> <!-- bypass current L1 -->
				<function>3</function>
				<start_addr>75</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address76"> <!-- bypass current L2 -->
				<function>3</function>
				<start_addr>76</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address77"> <!-- bypass current L3 -->
				<function>3</function>
				<start_addr>77</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address78"> <!-- bypass real power L1 -->
				<function>3</function>
				<start_addr>78</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address79"> <!-- bypass real power L2 -->
				<function>3</function>
				<start_addr>79</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address80"> <!-- bypass real power L3 -->
				<function>3</function>
				<start_addr>80</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address86"> <!-- alarms -->
				<function>3</function>
				<start_addr>86</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address87"> <!-- alarms -->
				<function>3</function>
				<start_addr>87</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address88"> <!-- alarms -->
				<function>3</function>
				<start_addr>88</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address89"> <!-- alarms -->
				<function>3</function>
				<start_addr>89</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address90"> <!-- condition bypass -->
				<function>3</function>
				<start_addr>90</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address91"> <!-- condition inverter -->
				<function>3</function>
				<start_addr>91</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address92"> <!-- condition rectifier -->
				<function>3</function>
				<start_addr>92</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address93"> <!-- condition battery connected -->
				<function>3</function>
				<start_addr>93</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address94"> <!-- condition non synchronism -->
				<function>3</function>
				<start_addr>94</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>

			<!-- Bulk read for performance. -->
			<packet>
				<function>3</function>
				<start_addr>2</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>19</start_addr>
				<quantity>7</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>32</start_addr>
				<quantity>10</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>34</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>42</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>49</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>52</start_addr>
				<quantity>12</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>70</start_addr>
				<quantity>1</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>72</start_addr>
				<quantity>9</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>80</start_addr>
				<quantity>15</quantity>
			</packet>
		</modbus>
	</protocol>
</APC_DDF>
