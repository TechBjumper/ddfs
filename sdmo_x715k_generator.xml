<?xml version="1.0"?>
<!-- SDMO X715K Generator -->
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
        ddfid ="sdmo_x715k_generator" ddfname="SDMO X715K Generator"
        ddfversion ="2" canremove="yes">
  <schemaVersion>1.6</schemaVersion>

  <device deviceid="SDMO_X715K_header">
    <oidMustExist oid="MODBUS_OID_MUST_EXIST" ruleid="OIDMustExist_modbusdevicetest"/>
    <setProductData ruleid="typedata" field="type">Generator</setProductData>
    <setProductData ruleid="vendordata" field="vendor">SDMO</setProductData>
    <setProductData ruleid="modeldata" field="model">X715K</setProductData>
    <setProductData ruleid="appversiondata" field="appversion"><getOid>software_version_number_soreel</getOid></setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

  </device>

  <device deviceid="SDMO_X715K_sensors">
    <oidMustExist oid="MODBUS_OID_MUST_EXIST" ruleid="OIDMustExist_modbusdevicetest"/>

    <numSensor ruleid="active_power_Sensor">
      <type>num/powerKW</type>
      <sensorId>ACTIVE_POWER</sensorId>
      <value>
        <getOid>active_power</getOid>
      </value>
      <label>Active Power</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="full_power_Sensor">
      <type>num/powerKVA</type>
      <sensorId>FULL_POWER</sensorId>
      <value>
        <getOid>full_power</getOid>
      </value>
      <label>Full Power</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="power_factor_Sensor">
      <type>pctofcapacity</type>
      <sensorId>POWER_FACTOR</sensorId>
      <value>
        <getOid>power_factor</getOid>
      </value>
      <label>Power Factor</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="total_act_energy_counter_Sensor">
      <type>num/kwatthr</type>
      <sensorId>TOTAL_ACT_ENERGY_COUNTER</sensorId>
      <value>
        <getOid>total_act_energy_counter</getOid>
      </value>
      <label>Total Act Energy Counter</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="partial_act_energy_counter_Sensor">
      <type>num/kwatthr</type>
      <sensorId>PARTIAL_ACT_ENERGY_COUNTER</sensorId>
      <value>
        <getOid>partial_act_energy_counter</getOid>
      </value>
      <label>Partial Act Energy Counter</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="lt_coolant_temp_Sensor">
      <type>temp</type>
      <sensorId>LT_COOLANT_TEMP</sensorId>
      <value>
        <getOid>lt_coolant_temp</getOid>
      </value>
      <label>LT Coolant Temp</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="total_time_counter_Sensor">
      <type>timeinsec</type>
      <sensorId>TOTAL_TIME_COUNTER</sensorId>
      <value>
        <getOid>total_time_counter</getOid>
      </value>
      <valueInc>1.0</valueInc>
      <label>Total Time Counter</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="alarm_time_counter_Sensor">
      <type>timeinsec</type>
      <sensorId>ALARM_TIME_COUNTER</sensorId>
      <value>
        <getOid>alarm_time_counter</getOid>
      </value>
      <valueInc>1.0</valueInc>
      <label>Alarm Time Counter</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_out_line_1-2_Sensor">
      <type>voltage</type>
      <sensorId>VOLTAGE_OUT_LINE_1-2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>voltage_out_line_1_2</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Out Line 1-2</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_out_line_2-3_Sensor">
      <type>voltage</type>
      <sensorId>VOLTAGE_OUT_LINE_2-3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>voltage_out_line_2_3</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Out Line 2-3</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_out_line_3-1_Sensor">
      <type>voltage</type>
      <sensorId>VOLTAGE_OUT_LINE_3-1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>voltage_out_line_3_1</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Out Line 3-1</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_out_phase_1_Sensor">
      <type>voltage</type>
      <sensorId>VOLTAGE_OUT_PHASE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>voltage_out_phase_1</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Out Phase 1</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_out_phase_2_Sensor">
      <type>voltage</type>
      <sensorId>VOLTAGE_OUT_PHASE_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>voltage_out_phase_2</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Out Phase 2</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_out_phase_3_Sensor">
      <type>voltage</type>
      <sensorId>VOLTAGE_OUT_PHASE_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>voltage_out_phase_3</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Out Phase 3</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="current_phase_1_Sensor">
      <type>amperage</type>
      <sensorId>CURRENT_PHASE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>current_phase_1</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <valueInc>0.1</valueInc>
      <label>Current Phase 1</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="current_phase_2_Sensor">
      <type>amperage</type>
      <sensorId>CURRENT_PHASE_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>current_phase_2</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <valueInc>0.1</valueInc>
      <label>Current Phase 2</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="current_phase_3_Sensor">
      <type>amperage</type>
      <sensorId>CURRENT_PHASE_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>current_phase_3</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <valueInc>0.1</valueInc>
      <label>Current Phase 3</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="neutral_current_Sensor">
      <type>amperage</type>
      <sensorId>NEUTRAL_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>neutral_current</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <valueInc>0.1</valueInc>
      <label>Neutral Current</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="engine_frequency_Sensor">
      <type>frequency</type>
      <sensorId>ENGINE_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>engine_frequency</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <valueInc>0.1</valueInc>
      <label>Engine Frequency</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="hours_counter_Sensor">
      <type>timeinsec</type>
      <sensorId>HOURS_COUNTER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>hours_counter</getOid>
          </op>
          <op>3600.0</op>
        </mult>
      </value>
      <valueInc>1.0</valueInc>
      <label>Hours Counter</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="oil_pressure_Sensor">
      <type>pressure</type>
      <sensorId>OIL_PRESSURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>oil_pressure</getOid>
          </op>
          <op>10.0</op>
        </mult>
      </value>
      <label>Oil Pressure</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="ht_coolant_temp_Sensor">
      <type>temp</type>
      <sensorId>HT_COOLANT_TEMP</sensorId>
      <value>
        <getOid>ht_coolant_temp</getOid>
      </value>
      <label>HT Coolant Temp</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="fuel_level_Sensor">
      <type>pctofcapacity</type>
      <sensorId>FUEL_LEVEL</sensorId>
      <value>
        <getOid>fuel_level</getOid>
      </value>
      <label>Fuel Level</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="oil_temp_Sensor">
      <type>temp</type>
      <sensorId>OIL_TEMP</sensorId>
      <value>
        <getOid>oil_temp</getOid>
      </value>
      <label>Oil Temp</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="engine_speed_Sensor">
      <type>fanspeed</type>
      <sensorId>ENGINE_SPEED</sensorId>
      <value>
        <getOid>engine_speed</getOid>
      </value>
      <valueInc>1.0</valueInc>
      <label>Engine Speed</label>
      <sensorSet></sensorSet>
    </numSensor>

    <numSensor ruleid="battery_voltage_Sensor">
      <type>voltage</type>
      <sensorId>BATTERY_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>battery_voltage</getOid>
          </op>
          <op>0.0010</op>
        </mult>
      </value>
      <valueInc>0.0010</valueInc>
      <label>Battery Voltage</label>
      <sensorSet></sensorSet>
    </numSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>OIL_PRESSURE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_69</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil Pressure Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>WATER_TEMPERATURE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Water Temperature Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>LOW_FUEL_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Fuel Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>LOW_WATER_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Water Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>LOW_OIL_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Oil Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>OIL_TEMPERATURE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil Temperature Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>LOW_WATER_TEMPERATURE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Water Temperature Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>EMERGENCY_STOP</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Emergency Stop Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>OVERLOAD_/_SHORT-CIRCUIT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Overload / Short-Circuit Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>WATER_HEATER_THERMOSTAT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Water Heater Thermostat Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>EXTERNAL_ORDER_START</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>External Order Start Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>BATTERY_CHARGER</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Battery Charger Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>LOW_FUEL_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Fuel Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_69_Sensor">
      <type>state</type>
      <sensorId>AIR_COOLER_DISCONNECT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_69</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Air Cooler Disconnect Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_68_Sensor">
      <type>state</type>
      <sensorId>RETENTION_BUND</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_68</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Retention Bund Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_68_Sensor">
      <type>state</type>
      <sensorId>FUEL_PUMP_DISCONNECT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_68</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fuel Pump Disconnect Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_68_Sensor">
      <type>state</type>
      <sensorId>LOW_BULK_TANK_FUEL_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_68</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Bulk Tank Fuel Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_68_Sensor">
      <type>state</type>
      <sensorId>LOW_WATER_LEVEL_AIR_COOLER</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_68</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Water Level Air Cooler Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_68_Sensor">
      <type>state</type>
      <sensorId>EARTH_LEAKAGE_RELAY_AVAILABLE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_68</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Earth Leakage Relay Available Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_68_Sensor">
      <type>state</type>
      <sensorId>MAINS_CONTACT_CLOSED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_68</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mains Contact Closed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_68_Sensor">
      <type>state</type>
      <sensorId>STAND-BY_CONTACT_CLOSED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_68</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Stand-By Contact Closed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_68_Sensor">
      <type>state</type>
      <sensorId>ALTERNATOR_EXCITATION</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_68</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Alternator Excitation Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_68_Sensor">
      <type>state</type>
      <sensorId>EXTERNAL_EMERGENCY_STOP</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_68</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>External Emergency Stop Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>FUEL_SOLENOID_CONTROL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_71</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fuel Solenoid Control Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>STARTER</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_71</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Starter Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>WATER_HEATER</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_71</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Water Heater Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>AIR_HEATER</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_71</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Air Heater Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>GENERAL_FAULT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_71</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>General Fault Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>AIR_DAMPER_CONTROL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_71</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Air Damper Control Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>SECOND_STARTER</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_71</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Second Starter Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>FUEL_PUMP</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_71</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fuel Pump Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>MAINS</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_71</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mains Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>STAND-BY</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_71</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Stand-By Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>ELECTROFLAPS_CONTROL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_71</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Electroflaps Control Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_71_Sensor">
      <type>state</type>
      <sensorId>PERMANENT_INSULATION_MONITOR</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_71</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Permanent Insulation Monitor Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_OVERCRANK_FAULT_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_93</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Overcrank Fault Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_OVERCRANK_FAULT_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_93</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Overcrank Fault Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_OVERSPEED_FAULT_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_93</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Overspeed Fault Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_OVERSPEED_FAULT_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_93</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Overspeed Fault Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_CHARGE_ALTERNATOR_FAULT_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_93</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Charge Alternator Fault Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_CHARGE_ALTERNATOR_FAULT_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_93</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Charge Alternator Fault Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_GENSET_OK_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_93</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Genset Ok Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_GENSET_OK_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_93</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Genset Ok Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_GENERAL_ALARM_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_93</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led General Alarm Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_GENERAL_ALARM_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_93</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led General Alarm Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_GENERAL_FAULT_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_93</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led General Fault Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_93_Sensor">
      <type>state</type>
      <sensorId>LED_GENERAL_FAULT_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_93</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led General Fault Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_AUTO_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_94</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Auto Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_AUTO_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Auto Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_MANU_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Manu Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_MANU_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Manu Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_STOP_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Stop Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_STOP_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Stop Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_TEST_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Test Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_TEST_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Test Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_STANDBY_CONTACT._CLOSE_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Standby Contact. Close Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_STANDBY_CONTACT._CLOSE_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Standby Contact. Close Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_STANDBY_CONTACT._OPEN_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Standby Contact. Open Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_STANDBY_CONTACT._OPEN_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Standby Contact. Open Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_OIL_PRESSURE_FAULT_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Oil Pressure Fault Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_OIL_PRESSURE_FAULT_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Oil Pressure Fault Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_WATER_TEMPERATURE_FIXED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Water Temperature Fixed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_94_Sensor">
      <type>state</type>
      <sensorId>LED_WATER_TEMPERATURE_BLINKING</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_94</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Led Water Temperature Blinking Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_95_Sensor">
      <type>state</type>
      <sensorId>AUTO</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_95</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Auto Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_95_Sensor">
      <type>state</type>
      <sensorId>STOP</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_95</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Stop Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_95_Sensor">
      <type>state</type>
      <sensorId>TEST</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_95</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Test Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_95_Sensor">
      <type>state</type>
      <sensorId>RESET</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_95</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Reset Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_95_Sensor">
      <type>state</type>
      <sensorId>MANUEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_95</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Manuel Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_95_Sensor">
      <type>state</type>
      <sensorId>LAMPES</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_95</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Lampes Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_95_Sensor">
      <type>state</type>
      <sensorId>CONTACT_CLOSED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_95</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Contact Closed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_95_Sensor">
      <type>state</type>
      <sensorId>CONTACT_OPENED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_95</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Contact Opened Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>EMERGENCY_STOP</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_195</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Emergency Stop Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>EXTERNAL_EMERGENCY_STOP</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>External Emergency Stop Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>OIL_PRESSURE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil Pressure Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>WATER_TEMPERATURE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Water Temperature Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>LOW_FUEL_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Fuel Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>LOW_WATER_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Water Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>OVERLOAD_/_SHORT-CIRCUIT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Overload / Short-Circuit Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>OVERSPEED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Overspeed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>MINI_U_BATTERY</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mini U Battery Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>MAXI_U_BATTERY</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Maxi U Battery Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>NO_BATTERY</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>No Battery Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>OVERCRANK</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Overcrank Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>MINI_U_GENERATOR</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mini U Generator Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>MAXI_U_GENERATOR</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Maxi U Generator Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>MINI_F_GENERATOR</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mini F Generator Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_195_Sensor">
      <type>state</type>
      <sensorId>MAXI_F_GENERATOR</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_195</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Maxi F Generator Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_196_Sensor">
      <type>state</type>
      <sensorId>CAN_MODULE_3</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_196</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>CAN Module 3 Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_196_Sensor">
      <type>state</type>
      <sensorId>CAN_MODULE_4</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_196</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>CAN Module 4 Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_196_Sensor">
      <type>state</type>
      <sensorId>CAN_MODULE_5</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_196</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>CAN Module 5 Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_196_Sensor">
      <type>state</type>
      <sensorId>CAN_MODULE_6</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_196</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>CAN Module 6 Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_196_Sensor">
      <type>state</type>
      <sensorId>OIL_TEMPERATURE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_196</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil Temperature Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_196_Sensor">
      <type>state</type>
      <sensorId>LOW_OIL_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_196</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Oil Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_196_Sensor">
      <type>state</type>
      <sensorId>LOW_WATER_TEMPERATURE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_196</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Water Temperature Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_196_Sensor">
      <type>state</type>
      <sensorId>EARTH_LEAKAGE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_196</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Earth Leakage Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>EARTH_LEAKAGE_NOT_AVAILABLE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_197</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Earth Leakage Not Available Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>BATTERY_CHARGER</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Battery Charger Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>AIR_COOLER_DISCONNECT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Air Cooler Disconnect Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>LOW_WATER_LEVEL_AIR_COOLER</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Water Level Air Cooler Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>FUEL_PUMP_DISCONNECT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fuel Pump Disconnect Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>LOW_BULK_TANK_FUEL_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Bulk Tank Fuel Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>MAINS_WATER_FLOW</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mains Water Flow Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>FIRE_DETECTION</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fire Detection Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>OIL_LEAKAGE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil Leakage Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>FUEL_LEAKAGE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fuel Leakage Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>AIR_COOLER_COMPARTIMENT_DOOR_OPEN</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Air Cooler Compartiment Door Open Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>MCPS_DOOR_OPEN</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>MCPS Door Open Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>CIRCUIT_BREAKER_OPEN</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Circuit Breaker Open Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_197_Sensor">
      <type>state</type>
      <sensorId>OVERLOAD</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_197</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Overload Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>MTU_OIL_PRESSURE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_198</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>MTU Oil Pressure Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>MTU_WATER_TEMPERATURE_HT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>MTU Water Temperature HT Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>MTU_OVERSPEED</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>MTU Overspeed Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>MTU_GENERAL_FAULT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>MTU General Fault Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>MTU_GENERAL_ALARM</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>MTU General Alarm Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>ECM_GENERAL_FAULT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ECM General Fault Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>ECM_GENERAL_ALARM</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ECM General Alarm Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>LOW_OIL_LEVEL_ALARM</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Oil Level Alarm Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>LOW_OIL_LEVEL_FAULT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Oil Level Fault Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>START_MIN_U_BATTERY</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Start Min U Battery Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>START_BATTERY_CHARGER_ALARM</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Start Battery Charger Alarm Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>MX_COIL_FAULT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>MX Coil Fault Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>AIR_DAMPER_FAULT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Air Damper Fault Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>AIR_PRESSURE_STARTER_ALARM</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Air Pressure Starter Alarm Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_198_Sensor">
      <type>state</type>
      <sensorId>MAGN/THER_RELAY_ALARM</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_198</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Magn/Ther Relay Alarm Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>OIL_PRESSURE_MODULE_4</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_199</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil Pressure Module 4 Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>WATER_TEMPERATURE_MODULE_4</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Water Temperature Module 4 Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>OIL_TEMPERATURE_MODULE_4</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil Temperature Module 4 Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>LOW_FUEL_LEVEL_MODULE_4</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Fuel Level Module 4 Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>HIGH_FUEL_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High Fuel Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>VERY_LOW_FUEL_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Very Low Fuel Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>VERY_HIGH_FUEL_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Very High Fuel Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>LOW_OIL_LEVEL</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Oil Level Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>CYLIN._HEAD_TEMPERATURE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Cylin. Head Temperature Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>IN_WATER_TEMPEARTURE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>In Water Tempearture Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>NO_WATER_FLOW</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>No Water Flow Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>BEARING_TEMP_ALARM</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Bearing Temp Alarm Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>BEARING_TEMP_FAULT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Bearing Temp Fault Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>STATOR_TEMP._ALARM</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Stator Temp. Alarm Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>STATOR_TEMP._FAULT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Stator Temp. Fault Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_199_Sensor">
      <type>state</type>
      <sensorId>FUEL_PUMP_2_DISCONNECT</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_199</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fuel Pump 2 Disconnect Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_200_Sensor">
      <type>state</type>
      <sensorId>STOP_MODE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>multiple_register_200</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Stop Mode Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_200_Sensor">
      <type>state</type>
      <sensorId>MANUAL_MODE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_200</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Manual Mode Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_200_Sensor">
      <type>state</type>
      <sensorId>AUTO_MODE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_200</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Auto Mode Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_200_Sensor">
      <type>state</type>
      <sensorId>TEST_WITHOUT_LOAD</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_200</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Test Without Load Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_200_Sensor">
      <type>state</type>
      <sensorId>MAINS_POSITION</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_200</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mains Position Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_200_Sensor">
      <type>state</type>
      <sensorId>STANDBY_POSITION</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_200</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Standby Position Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="multiple_register_200_Sensor">
      <type>state</type>
      <sensorId>OVERRIDE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>multiple_register_200</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Override Status</label>
      <enum>alarm-em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <valueMap ruleid="status-vm">
      <valueIn>0</valueIn><valueOut>0</valueOut>
      <valueIn>1</valueIn><valueOut>1</valueOut>
      <valueIn>*</valueIn><valueOut>2</valueOut>
    </valueMap>

    <enumMap ruleid="alarm-em">
      <label>Off</label>
      <label>On</label>
      <label>Unknown</label>
    </enumMap>

  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="active_power">
        <function>3</function>
        <start_addr>26</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="full_power">
        <function>3</function>
        <start_addr>27</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="power_factor">
        <function>3</function>
        <start_addr>28</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="total_act_energy_counter">
        <function>3</function>
        <start_addr>29</start_addr>
        <quantity>2</quantity>
        <type>int_32</type>
      </value_ref_id>

      <value_ref_id valid="partial_act_energy_counter">
        <function>3</function>
        <start_addr>31</start_addr>
        <quantity>2</quantity>
        <type>int_32</type>
      </value_ref_id>

      <value_ref_id valid="lt_coolant_temp">
        <function>3</function>
        <start_addr>34</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="total_time_counter">
        <function>3</function>
        <start_addr>37</start_addr>
        <quantity>2</quantity>
        <type>int_32</type>
      </value_ref_id>

      <value_ref_id valid="alarm_time_counter">
        <function>3</function>
        <start_addr>38</start_addr>
        <quantity>2</quantity>
        <type>int_32</type>
      </value_ref_id>

      <value_ref_id valid="voltage_out_line_1_2">
        <function>3</function>
        <start_addr>50</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="voltage_out_line_2_3">
        <function>3</function>
        <start_addr>51</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="voltage_out_line_3_1">
        <function>3</function>
        <start_addr>52</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="voltage_out_phase_1">
        <function>3</function>
        <start_addr>53</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="voltage_out_phase_2">
        <function>3</function>
        <start_addr>54</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="voltage_out_phase_3">
        <function>3</function>
        <start_addr>55</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="current_phase_1">
        <function>3</function>
        <start_addr>56</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="current_phase_2">
        <function>3</function>
        <start_addr>57</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="current_phase_3">
        <function>3</function>
        <start_addr>58</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="neutral_current">
        <function>3</function>
        <start_addr>59</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="engine_frequency">
        <function>3</function>
        <start_addr>60</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="hours_counter">
        <function>3</function>
        <start_addr>61</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="oil_pressure">
        <function>3</function>
        <start_addr>62</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="ht_coolant_temp">
        <function>3</function>
        <start_addr>63</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="fuel_level">
        <function>3</function>
        <start_addr>64</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="oil_temp">
        <function>3</function>
        <start_addr>65</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="engine_speed">
        <function>3</function>
        <start_addr>66</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="battery_voltage">
        <function>3</function>
        <start_addr>67</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_68">
        <function>3</function>
        <start_addr>68</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_69">
        <function>3</function>
        <start_addr>69</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_71">
        <function>3</function>
        <start_addr>71</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="software_version_number_soreel">
        <function>3</function>
        <start_addr>92</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_93">
        <function>3</function>
        <start_addr>93</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_94">
        <function>3</function>
        <start_addr>94</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_95">
        <function>3</function>
        <start_addr>95</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_195">
        <function>3</function>
        <start_addr>195</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_196">
        <function>3</function>
        <start_addr>196</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_197">
        <function>3</function>
        <start_addr>197</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_198">
        <function>3</function>
        <start_addr>198</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_199">
        <function>3</function>
        <start_addr>199</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="multiple_register_200">
        <function>3</function>
        <start_addr>200</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <packet>
          <function>3</function>
          <start_addr>26</start_addr>
          <quantity>7</quantity>
      </packet>
      <packet>
          <function>3</function>
          <start_addr>34</start_addr>
          <quantity>1</quantity>
      </packet>
      <packet>
          <function>3</function>
          <start_addr>37</start_addr>
          <quantity>2</quantity>
      </packet>
      <packet>
          <function>3</function>
          <start_addr>38</start_addr>
          <quantity>2</quantity>
      </packet>
      <packet>
          <function>3</function>
          <start_addr>50</start_addr>
          <quantity>20</quantity>
      </packet>
      <packet>
          <function>3</function>
          <start_addr>71</start_addr>
          <quantity>1</quantity>
      </packet>
      <packet>
          <function>3</function>
          <start_addr>92</start_addr>
          <quantity>4</quantity>
      </packet>
      <packet>
          <function>3</function>
          <start_addr>195</start_addr>
          <quantity>6</quantity>
      </packet>
    </modbus>
  </protocol>

</APC_DDF>

