<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="JCIGateway_UPSA" ddfname="JCIGateway UPSA" ddfversion="2" canremove="yes">
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="JCIGateway_UPSA">
		<setProductData ruleid="vendordata" field="vendor">JCI Gateway</setProductData>
		<setProductData ruleid="modeldata" field="model">UPS A</setProductData>
		<setProductData ruleid="typedata" field="type">UPS</setProductData>
		<numSensor ruleid="voltage_a-b_input_vab-in">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_A-B_INPUT_VAB-IN</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_1</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage a-b input vab-in</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_b-c_input_vbc-in">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_B-C_INPUT_VBC-IN</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_2</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage b-c input vbc-in</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_c-a_input_vca-iv">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_C-A_INPUT_VCA-IV</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_3</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage c-a input vca-iv</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_a-b_output_vab-out">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_A-B_OUTPUT_VAB-OUT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_4</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage a-b output vab-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_b-c_output_vbc-out">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_B-C_OUTPUT_VBC-OUT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_5</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage b-c output vbc-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_c-a_output_vca-out">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_C-A_OUTPUT_VCA-OUT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_6</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage c-a output vca-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_a-n_input_van-in">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_A-N_INPUT_VAN-IN</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_7</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage a-n input van-in</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_b-n_input_vbn-in">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_B-N_INPUT_VBN-IN</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_8</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage b-n input vbn-in</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_c-n_input_vcn-in">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_C-N_INPUT_VCN-IN</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_9</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage c-n input vcn-in</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_a-n_output_van-out">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_A-N_OUTPUT_VAN-OUT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_10</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage a-n output van-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_b-n_output_vbn-out">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_B-N_OUTPUT_VBN-OUT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_11</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage b-n output vbn-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_c-n_output_vcn-out">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_C-N_OUTPUT_VCN-OUT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_12</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage c-n output vcn-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_a-b_bypass_vab-byp">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_A-B_BYPASS_VAB-BYP</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_13</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage a-b bypass vab-byp</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_b-c_bypass_vbc-byp">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_B-C_BYPASS_VBC-BYP</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_14</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage b-c bypass vbc-byp</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_c-a_bypass_vca-byp">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_C-A_BYPASS_VCA-BYP</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_15</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage c-a bypass vca-byp</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_a-n_bypass_van-byp">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_A-N_BYPASS_VAN-BYP</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_16</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage a-n bypass van-byp</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_b-n_bypass_vbn-byp">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_B-N_BYPASS_VBN-BYP</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_17</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage b-n bypass vbn-byp</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_c-n_bypass_vcn-byp">
			<type>voltage</type>
			<units />
			<sensorId>_VOLTAGE_C-N_BYPASS_VCN-BYP</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_18</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Voltage c-n bypass vcn-byp</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="battery_voltage_batt-vlt">
			<type>voltage</type>
			<units />
			<sensorId>_BATTERY_VOLTAGE_BATT-VLT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_19</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Battery voltage batt-vlt</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="current_a_input_ia-in">
			<type>amperage</type>
			<units />
			<sensorId>_CURRENT_A_INPUT_IA-IN</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_20</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Current a input ia-in</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="current_b_input_ib-in">
			<type>amperage</type>
			<units />
			<sensorId>_CURRENT_B_INPUT_IB-IN</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_21</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Current b input ib-in</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="current_c_input_ic-in">
			<type>amperage</type>
			<units />
			<sensorId>_CURRENT_C_INPUT_IC-IN</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_22</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Current c input ic-in</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="current_a_output_ia-out">
			<type>amperage</type>
			<units />
			<sensorId>_CURRENT_A_OUTPUT_IA-OUT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_23</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Current a output ia-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="current_b_output_ib-out">
			<type>amperage</type>
			<units />
			<sensorId>_CURRENT_B_OUTPUT_IB-OUT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_24</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Current b output ib-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="current_c_output_ic-out">
			<type>amperage</type>
			<units />
			<sensorId>_CURRENT_C_OUTPUT_IC-OUT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_25</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Current c output ic-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="current_n_output_in-out">
			<type>amperage</type>
			<units />
			<sensorId>_CURRENT_N_OUTPUT_IN-OUT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_26</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Current n output in-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="dc_current_batteri_esdci-batt">
			<type>amperage</type>
			<units />
			<sensorId>_DC_CURRENT_BATTERI_ESDCI-BATT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_27</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Dc current batteri esdci-batt</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="current_a_bypass_ia-byp">
			<type>amperage</type>
			<units />
			<sensorId>_CURRENT_A_BYPASS_IA-BYP</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_28</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Current a bypass ia-byp</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="current_b_bypass_ib-byp">
			<type>amperage</type>
			<units />
			<sensorId>_CURRENT_B_BYPASS_IB-BYP</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_29</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Current b bypass ib-byp</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="current_c_bypass_ic-byp">
			<type>amperage</type>
			<units />
			<sensorId>_CURRENT_C_BYPASS_IC-BYP</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_30</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Current c bypass ic-byp</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="watts_in_watt-in">
			<type>powerW</type>
			<units />
			<sensorId>_WATTS_IN_WATT-IN</sensorId>
			<value>
				<op>
					<getOid>Function_3_Reg_46</getOid>
				</op>
			</value>
			<label>Watts in watt-in</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="watts_out_watt-out">
			<type>powerW</type>
			<units />
			<sensorId>_WATTS_OUT_WATT-OUT</sensorId>
			<value>
				<op>
					<getOid>Function_3_Reg_48</getOid>
				</op>
			</value>
			<label>Watts out watt-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="va_in_va-in">
			<type>powerVA</type>
			<units />
			<sensorId>_VA_IN_VA-IN</sensorId>
			<value>

				<getOid>Function_3_Reg_50</getOid>


			</value>
			<label>Va in va-in</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="va_out_va-out">
			<type>powerVA</type>
			<units />
			<sensorId>_VA_OUT_VA-OUT</sensorId>
			<value>

				<getOid>Function_3_Reg_52</getOid>

			</value>
			<label>Va out va-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="percent_full_load_p-fl">
			<type>pctofcapacity</type>
			<units />
			<sensorId>_PERCENT_FULL_LOAD_P-FL</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_35</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Percent full load p-fl</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="percent_full_load_a_p-fla">
			<type>pctofcapacity</type>
			<units />
			<sensorId>_PERCENT_FULL_LOAD_A_P-FLA</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_36</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Percent full load a p-fla</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="percent_full_load_b_p-flb">
			<type>pctofcapacity</type>
			<units />
			<sensorId>_PERCENT_FULL_LOAD_B_P-FLB</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_37</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Percent full load b p-flb</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="percent_full_load_c_p-flc">
			<type>pctofcapacity</type>
			<units />
			<sensorId>_PERCENT_FULL_LOAD_C_P-FLC</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_38</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Percent full load c p-flc</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="batt_capacity_remaining_batt-cr">
			<type>pctofcapacity</type>
			<units />
			<sensorId>_BATT_CAPACITY_REMAINING_BATT-CR</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_39</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Batt capacity remaining batt-cr</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="input_demand_kw_in-kw">
			<type>num/powerKW</type>
			<units />
			<sensorId>_INPUT_DEMAND_KW_IN-KW</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_40</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Input demand kw in-kw</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="output_demand_kw_out-kw">
			<type>num/powerKW</type>
			<units />
			<sensorId>_OUTPUT_DEMAND_KW_OUT-KW</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_41</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Output demand kw out-kw</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="output_frequency_frq-out">
			<type>frequency</type>
			<units />
			<sensorId>_OUTPUT_FREQUENCY_FRQ-OUT</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_42</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Output frequency frq-out</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="intput_frequency_frq-in">
			<type>frequency</type>
			<units />
			<sensorId>_INTPUT_FREQUENCY_FRQ-IN</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_43</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Intput frequency frq-in</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="bypass_frequency_frq-byp">
			<type>frequency</type>
			<units />
			<sensorId>_BYPASS_FREQUENCY_FRQ-BYP</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_44</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Bypass frequency frq-byp</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<numSensor ruleid="ambient_temperature_amb-temp">
			<type>num</type>
			<units>degreeC</units>
			<sensorId>_AMBIENT_TEMPERATURE_AMB-TEMP</sensorId>
			<value>
				<mult>
					<op>
						<getOid>Function_3_Reg_45</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Ambient temperature amb-temp</label>
			<sensorSet>WD_UPSA</sensorSet>
		</numSensor>
		<stateSensor ruleid="on_maintenance_bypass">
			<type>state</type>
			<sensorId>_ON_MAINTENANCE_BYPASS</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_18</getOid>
				</mapValue>
			</value>
			<label>On maintenance bypass</label>
			<enum>no_yes_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="system_on_bypass">
			<type>state</type>
			<sensorId>_SYSTEM_ON_BYPASS</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_17</getOid>
				</mapValue>
			</value>
			<label>System on bypass</label>
			<enum>no_yes_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="system_output_on">
			<type>state</type>
			<sensorId>_SYSTEM_OUTPUT_ON</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_19</getOid>
				</mapValue>
			</value>
			<label>System output on</label>
			<enum>no_yes_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="battery_energized">
			<type>state</type>
			<sensorId>_BATTERY_ENERGIZED</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_20</getOid>
				</mapValue>
			</value>
			<label>Battery energized</label>
			<enum>no_yes_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility_present">
			<type>state</type>
			<sensorId>_UTILITY_PRESENT</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_21</getOid>
				</mapValue>
			</value>
			<label>Utility present</label>
			<enum>no_yes_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="rectifier_output_on">
			<type>state</type>
			<sensorId>_RECTIFIER_OUTPUT_ON</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_22</getOid>
				</mapValue>
			</value>
			<label>Rectifier output on</label>
			<enum>no_yes_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="inverter_output_on">
			<type>state</type>
			<sensorId>_INVERTER_OUTPUT_ON</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_23</getOid>
				</mapValue>
			</value>
			<label>Inverter output on</label>
			<enum>no_yes_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="charger_on">
			<type>state</type>
			<sensorId>_CHARGER_ON</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_24</getOid>
				</mapValue>
			</value>
			<label>Charger on</label>
			<enum>no_yes_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="batteries_depleted">
			<type>state</type>
			<sensorId>_BATTERIES_DEPLETED</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_25</getOid>
				</mapValue>
			</value>
			<label>Batteries depleted</label>
			<enum>no_yes_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility_input_breaker">
			<type>state</type>
			<sensorId>_UTILITY_INPUT_BREAKER</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_26</getOid>
				</mapValue>
			</value>
			<label>Utility input breaker</label>
			<enum>open_closed_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bypass_input_breaker">
			<type>state</type>
			<sensorId>_BYPASS_INPUT_BREAKER</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_27</getOid>
				</mapValue>
			</value>
			<label>Bypass input breaker</label>
			<enum>open_closed_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="static_switch">
			<type>state</type>
			<sensorId>_STATIC_SWITCH</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_28</getOid>
				</mapValue>
			</value>
			<label>Static switch</label>
			<enum>open_closed_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="battery_breaker">
			<type>state</type>
			<sensorId>_BATTERY_BREAKER</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_29</getOid>
				</mapValue>
			</value>
			<label>Battery breaker</label>
			<enum>open_closed_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>
		<stateSensor ruleid="inverter_output_breaker">
			<type>state</type>
			<sensorId>_INVERTER_OUTPUT_BREAKER</sensorId>
			<value>
				<mapValue mapid="two_value_map">
					<getOid>Function_2_Reg_30</getOid>
				</mapValue>
			</value>
			<label>Inverter output breaker</label>
			<enum>open_closed_enum</enum>
			<sensorSet>WD_UPSA</sensorSet>
		</stateSensor>

		<valueMap ruleid="two_value_map">
			<valueIn>0</valueIn>
			<valueOut>0</valueOut>
			<valueIn>1</valueIn>
			<valueOut>1</valueOut>
			<valueIn>*</valueIn>
			<valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="no_yes_enum">
			<label>No</label>
			<label>Yes</label>
		</enumMap>
		<enumMap ruleid="open_closed_enum">
			<label>Open</label>
			<label>Closed</label>
		</enumMap>




		<alarmFlags ruleid="alarminverter-over-voltage-inv-ov">
			<value>
				<getOid>ALARMINVERTER_OVER_VOLTAGE_INV-OV</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmINVERTER OVER VOLTAGE INV-OV</activeText>
					<inactiveText>AlarmINVERTER OVER VOLTAGE INV-OV Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmINVERTER OVER VOLTAGE INV-OV condition exists.</activeText>
					<inactiveText>AlarmINVERTER OVER VOLTAGE INV-OV condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarminverter-under-voltage-inv-uv">
			<value>
				<getOid>ALARMINVERTER_UNDER_VOLTAGE_INV-UV</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmINVERTER UNDER VOLTAGE INV-UV</activeText>
					<inactiveText>AlarmINVERTER UNDER VOLTAGE INV-UV Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmINVERTER UNDER VOLTAGE INV-UV condition exists.</activeText>
					<inactiveText>AlarmINVERTER UNDER VOLTAGE INV-UV condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarminverter-under/over-freq-inv-uof">
			<value>
				<getOid>ALARMINVERTER_UNDER/OVER_FREQ_INV-UOF</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmINVERTER UNDER/OVER FREQ INV-UOF</activeText>
					<inactiveText>AlarmINVERTER UNDER/OVER FREQ INV-UOF Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmINVERTER UNDER/OVER FREQ INV-UOF condition exists.</activeText>
					<inactiveText>AlarmINVERTER UNDER/OVER FREQ INV-UOF condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarmbypass-over-voltage-byp-ov">
			<value>
				<getOid>ALARMBYPASS_OVER_VOLTAGE_BYP-OV</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmBYPASS OVER VOLTAGE BYP-OV</activeText>
					<inactiveText>AlarmBYPASS OVER VOLTAGE BYP-OV Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmBYPASS OVER VOLTAGE BYP-OV condition exists.</activeText>
					<inactiveText>AlarmBYPASS OVER VOLTAGE BYP-OV condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarmbypass-under-voltage-byp-uv">
			<value>
				<getOid>ALARMBYPASS_UNDER_VOLTAGE_BYP-UV</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmBYPASS UNDER VOLTAGE BYP-UV</activeText>
					<inactiveText>AlarmBYPASS UNDER VOLTAGE BYP-UV Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmBYPASS UNDER VOLTAGE BYP-UV condition exists.</activeText>
					<inactiveText>AlarmBYPASS UNDER VOLTAGE BYP-UV condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarmbypass-under/over-freq-byp-uof">
			<value>
				<getOid>ALARMBYPASS_UNDER/OVER_FREQ_BYP-UOF</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmBYPASS UNDER/OVER FREQ BYP-UOF</activeText>
					<inactiveText>AlarmBYPASS UNDER/OVER FREQ BYP-UOF Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmBYPASS UNDER/OVER FREQ BYP-UOF condition exists.</activeText>
					<inactiveText>AlarmBYPASS UNDER/OVER FREQ BYP-UOF condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarminput-over-voltage-in-ov">
			<value>
				<getOid>ALARMINPUT_OVER_VOLTAGE_IN-OV</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmINPUT OVER VOLTAGE IN-OV</activeText>
					<inactiveText>AlarmINPUT OVER VOLTAGE IN-OV Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmINPUT OVER VOLTAGE IN-OV condition exists.</activeText>
					<inactiveText>AlarmINPUT OVER VOLTAGE IN-OV condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarminput-under-voltage-in-uv">
			<value>
				<getOid>ALARMINPUT_UNDER_VOLTAGE_IN-UV</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmINPUT UNDER VOLTAGE IN-UV</activeText>
					<inactiveText>AlarmINPUT UNDER VOLTAGE IN-UV Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmINPUT UNDER VOLTAGE IN-UV condition exists.</activeText>
					<inactiveText>AlarmINPUT UNDER VOLTAGE IN-UV condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarminput-under/over-freq-in-uof">
			<value>
				<getOid>ALARMINPUT_UNDER/OVER_FREQ_IN-UOF</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmINPUT UNDER/OVER FREQ IN-UOF</activeText>
					<inactiveText>AlarmINPUT UNDER/OVER FREQ IN-UOF Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmINPUT UNDER/OVER FREQ IN-UOF condition exists.</activeText>
					<inactiveText>AlarmINPUT UNDER/OVER FREQ IN-UOF condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarmoutput-over-voltage-out-ov">
			<value>
				<getOid>ALARMOUTPUT_OVER_VOLTAGE_OUT-OV</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmOUTPUT OVER VOLTAGE OUT-OV</activeText>
					<inactiveText>AlarmOUTPUT OVER VOLTAGE OUT-OV Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmOUTPUT OVER VOLTAGE OUT-OV condition exists.</activeText>
					<inactiveText>AlarmOUTPUT OVER VOLTAGE OUT-OV condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarmoutput-under-voltage-out-uv">
			<value>
				<getOid>ALARMOUTPUT_UNDER_VOLTAGE_OUT-UV</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmOUTPUT UNDER VOLTAGE OUT-UV</activeText>
					<inactiveText>AlarmOUTPUT UNDER VOLTAGE OUT-UV Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmOUTPUT UNDER VOLTAGE OUT-UV condition exists.</activeText>
					<inactiveText>AlarmOUTPUT UNDER VOLTAGE OUT-UV condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarmoutput-under/over-freq-out-uof">
			<value>
				<getOid>ALARMOUTPUT_UNDER/OVER_FREQ_OUT-UOF</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmOUTPUT UNDER/OVER FREQ OUT-UOF</activeText>
					<inactiveText>AlarmOUTPUT UNDER/OVER FREQ OUT-UOF Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmOUTPUT UNDER/OVER FREQ OUT-UOF condition exists.</activeText>
					<inactiveText>AlarmOUTPUT UNDER/OVER FREQ OUT-UOF condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarmremote-emg-power-off-r-epo">
			<value>
				<getOid>ALARMREMOTE_EMG_POWER_OFF_R-EPO</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmREMOTE EMG POWER OFF R-EPO</activeText>
					<inactiveText>AlarmREMOTE EMG POWER OFF R-EPO Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmREMOTE EMG POWER OFF R-EPO condition exists.</activeText>
					<inactiveText>AlarmREMOTE EMG POWER OFF R-EPO condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarmmajor-alarm-maj-alm">
			<value>
				<getOid>ALARMMAJOR_ALARM_MAJ-ALM</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmMAJOR ALARM MAJ-ALM</activeText>
					<inactiveText>AlarmMAJOR ALARM MAJ-ALM Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmMAJOR ALARM MAJ-ALM condition exists.</activeText>
					<inactiveText>AlarmMAJOR ALARM MAJ-ALM condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarmservice-required-svc-req">
			<value>
				<getOid>ALARMSERVICE_REQUIRED_SVC-REQ</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmSERVICE REQUIRED SVC-REQ</activeText>
					<inactiveText>AlarmSERVICE REQUIRED SVC-REQ Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmSERVICE REQUIRED SVC-REQ condition exists.</activeText>
					<inactiveText>AlarmSERVICE REQUIRED SVC-REQ condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarmbattery-voltage-low-batt-low">
			<value>
				<getOid>ALARMBATTERY_VOLTAGE_LOW_BATT-LOW</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>AlarmBATTERY VOLTAGE LOW BATT-LOW</activeText>
					<inactiveText>AlarmBATTERY VOLTAGE LOW BATT-LOW Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AlarmBATTERY VOLTAGE LOW BATT-LOW condition exists.</activeText>
					<inactiveText>AlarmBATTERY VOLTAGE LOW BATT-LOW condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>



		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
	</device>
	<protocol>
		<modbus>

			<type_definition type_name="swapped_float">
				<type>float</type>
				<!-- must be one of our 'normal' modbus types -->
				<byte_order>1,0,3,2</byte_order>
				<!-- mapping of device's byte string into the order which we want -->
			</type_definition>
			<value_ref_id valid="Function_3_Reg_1">
				<function>3</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_2">
				<function>3</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_3">
				<function>3</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_4">
				<function>3</function>
				<start_addr>3</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_5">
				<function>3</function>
				<start_addr>4</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_6">
				<function>3</function>
				<start_addr>5</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_7">
				<function>3</function>
				<start_addr>6</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_8">
				<function>3</function>
				<start_addr>7</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_9">
				<function>3</function>
				<start_addr>8</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_10">
				<function>3</function>
				<start_addr>9</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_11">
				<function>3</function>
				<start_addr>10</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_12">
				<function>3</function>
				<start_addr>11</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_13">
				<function>3</function>
				<start_addr>12</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_14">
				<function>3</function>
				<start_addr>13</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_15">
				<function>3</function>
				<start_addr>14</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_16">
				<function>3</function>
				<start_addr>15</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_17">
				<function>3</function>
				<start_addr>16</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_18">
				<function>3</function>
				<start_addr>17</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_19">
				<function>3</function>
				<start_addr>18</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_20">
				<function>3</function>
				<start_addr>19</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_21">
				<function>3</function>
				<start_addr>20</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_22">
				<function>3</function>
				<start_addr>21</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_23">
				<function>3</function>
				<start_addr>22</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_24">
				<function>3</function>
				<start_addr>23</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_25">
				<function>3</function>
				<start_addr>24</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_26">
				<function>3</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_27">
				<function>3</function>
				<start_addr>26</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_28">
				<function>3</function>
				<start_addr>27</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_29">
				<function>3</function>
				<start_addr>28</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_30">
				<function>3</function>
				<start_addr>29</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_46">
				<function>3</function>
				<start_addr>45</start_addr>
				<quantity>2</quantity>
				<type>swapped_float</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_48">
				<function>3</function>
				<start_addr>47</start_addr>
				<quantity>1</quantity>
				<type>swapped_float</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_50">
				<function>3</function>
				<start_addr>49</start_addr>
				<quantity>2</quantity>
				<type>swapped_float</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_52">
				<function>3</function>
				<start_addr>51</start_addr>
				<quantity>2</quantity>
				<type>swapped_float</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_35">
				<function>3</function>
				<start_addr>34</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_36">
				<function>3</function>
				<start_addr>35</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_37">
				<function>3</function>
				<start_addr>36</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_38">
				<function>3</function>
				<start_addr>37</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_39">
				<function>3</function>
				<start_addr>38</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_40">
				<function>3</function>
				<start_addr>39</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_41">
				<function>3</function>
				<start_addr>40</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_42">
				<function>3</function>
				<start_addr>41</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_43">
				<function>3</function>
				<start_addr>42</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_44">
				<function>3</function>
				<start_addr>43</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_3_Reg_45">
				<function>3</function>
				<start_addr>44</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_18">
				<function>2</function>
				<start_addr>17</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_17">
				<function>2</function>
				<start_addr>16</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_19">
				<function>2</function>
				<start_addr>18</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_20">
				<function>2</function>
				<start_addr>19</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_21">
				<function>2</function>
				<start_addr>20</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_22">
				<function>2</function>
				<start_addr>21</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_23">
				<function>2</function>
				<start_addr>22</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_24">
				<function>2</function>
				<start_addr>23</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_25">
				<function>2</function>
				<start_addr>24</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_26">
				<function>2</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_27">
				<function>2</function>
				<start_addr>26</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_28">
				<function>2</function>
				<start_addr>27</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_29">
				<function>2</function>
				<start_addr>28</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_30">
				<function>2</function>
				<start_addr>29</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMINVERTER_OVER_VOLTAGE_INV-OV">
				<function>2</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMINVERTER_UNDER_VOLTAGE_INV-UV">
				<function>2</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMINVERTER_UNDER/OVER_FREQ_INV-UOF">
				<function>2</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMBYPASS_OVER_VOLTAGE_BYP-OV">
				<function>2</function>
				<start_addr>3</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMBYPASS_UNDER_VOLTAGE_BYP-UV">
				<function>2</function>
				<start_addr>4</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMBYPASS_UNDER/OVER_FREQ_BYP-UOF">
				<function>2</function>
				<start_addr>5</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMINPUT_OVER_VOLTAGE_IN-OV">
				<function>2</function>
				<start_addr>6</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMINPUT_UNDER_VOLTAGE_IN-UV">
				<function>2</function>
				<start_addr>7</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMINPUT_UNDER/OVER_FREQ_IN-UOF">
				<function>2</function>
				<start_addr>8</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMOUTPUT_OVER_VOLTAGE_OUT-OV">
				<function>2</function>
				<start_addr>9</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMOUTPUT_UNDER_VOLTAGE_OUT-UV">
				<function>2</function>
				<start_addr>10</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMOUTPUT_UNDER/OVER_FREQ_OUT-UOF">
				<function>2</function>
				<start_addr>11</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMREMOTE_EMG_POWER_OFF_R-EPO">
				<function>2</function>
				<start_addr>12</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMMAJOR_ALARM_MAJ-ALM">
				<function>2</function>
				<start_addr>13</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMSERVICE_REQUIRED_SVC-REQ">
				<function>2</function>
				<start_addr>14</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ALARMBATTERY_VOLTAGE_LOW_BATT-LOW">
				<function>2</function>
				<start_addr>15</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>
