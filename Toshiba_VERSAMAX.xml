<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="Toshiba_VERSAMAX" ddfname="Toshiba VERSAMAX" ddfversion="1" canremove="yes">
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="Toshiba_VERSAMAX">
		<setProductData ruleid="vendordata" field="vendor">Toshiba</setProductData>
		<setProductData ruleid="modeldata" field="model">VERSAMAX</setProductData>
		<setProductData ruleid="typedata" field="type">Generic Device</setProductData>
		<stateSensor ruleid="system_d_synch_relay">
			<type>state</type>
			<sensorId>_SYSTEM_D_SYNCH_RELAY</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_1_Reg_1</getOid>
				</mapValue>
			</value>
			<label>System d synch relay</label>
			<enum>true_false_em</enum>
			<sensorSet>Coils</sensorSet>
		</stateSensor>
		<stateSensor ruleid="system_c_synch_relay">
			<type>state</type>
			<sensorId>_SYSTEM_C_SYNCH_RELAY</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_1_Reg_2</getOid>
				</mapValue>
			</value>
			<label>System c synch relay</label>
			<enum>true_false_em</enum>
			<sensorSet>Coils</sensorSet>
		</stateSensor>
		<stateSensor ruleid="system_a_synch_relay">
			<type>state</type>
			<sensorId>_SYSTEM_A_SYNCH_RELAY</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_1_Reg_3</getOid>
				</mapValue>
			</value>
			<label>System a synch relay</label>
			<enum>true_false_em</enum>
			<sensorSet>Coils</sensorSet>
		</stateSensor>
		<stateSensor ruleid="52l1_aux_contact">
			<type>state</type>
			<sensorId>_52L1_AUX_CONTACT</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_2_Reg_1</getOid>
				</mapValue>
			</value>
			<label>52l1 aux contact</label>
			<enum>true_false_em</enum>
			<sensorSet>Discrete Inputs</sensorSet>
		</stateSensor>
		<stateSensor ruleid="52l2_aux_contact">
			<type>state</type>
			<sensorId>_52L2_AUX_CONTACT</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_2_Reg_2</getOid>
				</mapValue>
			</value>
			<label>52l2 aux contact</label>
			<enum>true_false_em</enum>
			<sensorSet>Discrete Inputs</sensorSet>
		</stateSensor>
		<stateSensor ruleid="52l3_aux_contact">
			<type>state</type>
			<sensorId>_52L3_AUX_CONTACT</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_2_Reg_3</getOid>
				</mapValue>
			</value>
			<label>52l3 aux contact</label>
			<enum>true_false_em</enum>
			<sensorSet>Discrete Inputs</sensorSet>
		</stateSensor>
		<stateSensor ruleid="52lb_aux_contact">
			<type>state</type>
			<sensorId>_52LB_AUX_CONTACT</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_2_Reg_4</getOid>
				</mapValue>
			</value>
			<label>52lb aux contact</label>
			<enum>true_false_em</enum>
			<sensorSet>Discrete Inputs</sensorSet>
		</stateSensor>
		<stateSensor ruleid="52mb_aux_contact">
			<type>state</type>
			<sensorId>_52MB_AUX_CONTACT</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_2_Reg_5</getOid>
				</mapValue>
			</value>
			<label>52mb aux contact</label>
			<enum>true_false_em</enum>
			<sensorSet>Discrete Inputs</sensorSet>
		</stateSensor>
		<stateSensor ruleid="52cs_aux_contact">
			<type>state</type>
			<sensorId>_52CS_AUX_CONTACT</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_2_Reg_6</getOid>
				</mapValue>
			</value>
			<label>52cs aux contact</label>
			<enum>true_false_em</enum>
			<sensorSet>Discrete Inputs</sensorSet>
		</stateSensor>
		<stateSensor ruleid="static_switches_from_system_d">
			<type>state</type>
			<sensorId>_STATIC_SWITCHES_FROM_SYSTEM_D</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_2_Reg_7</getOid>
				</mapValue>
			</value>
			<label>Static switches from system d</label>
			<enum>true_false_em</enum>
			<sensorSet>Discrete Inputs</sensorSet>
		</stateSensor>
		<stateSensor ruleid="static_switches_from_system_c">
			<type>state</type>
			<sensorId>_STATIC_SWITCHES_FROM_SYSTEM_C</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_2_Reg_8</getOid>
				</mapValue>
			</value>
			<label>Static switches from system c</label>
			<enum>true_false_em</enum>
			<sensorSet>Discrete Inputs</sensorSet>
		</stateSensor>
		<stateSensor ruleid="static_switches_from_system_a">
			<type>state</type>
			<sensorId>_STATIC_SWITCHES_FROM_SYSTEM_A</sensorId>
			<value>
				<mapValue mapid="true_false_vm">
					<getOid>Function_2_Reg_9</getOid>
				</mapValue>
			</value>
			<label>Static switches from system a</label>
			<enum>true_false_em</enum>
			<sensorSet>Discrete Inputs</sensorSet>
		</stateSensor>

		<valueMap ruleid="true_false_vm">
			<valueIn>0</valueIn>
			<valueOut>0</valueOut>
			<valueIn>1</valueIn>
			<valueOut>1</valueOut>
			<valueIn>*</valueIn>
			<valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="true_false_em">
			<label>FALSE</label>
			<label>TRUE</label>
		</enumMap>

		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
	</device>
	<protocol>
		<modbus>
			<value_ref_id valid="Function_1_Reg_1">
				<function>1</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_1_Reg_2">
				<function>1</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_1_Reg_3">
				<function>1</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_1">
				<function>2</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_2">
				<function>2</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_3">
				<function>2</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_4">
				<function>2</function>
				<start_addr>3</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_5">
				<function>2</function>
				<start_addr>4</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_6">
				<function>2</function>
				<start_addr>5</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_7">
				<function>2</function>
				<start_addr>6</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_8">
				<function>2</function>
				<start_addr>7</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_9">
				<function>2</function>
				<start_addr>8</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>
