<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="SchneiderElectric_SXWAUTSVR10001HeroCorp6" ddfname="SchneiderElectric SXWAUTSVR10001HeroCorp6" ddfversion="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="SchneiderElectric_SXWAUTSVR10001HeroCorp6">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">Schneider Electric</setProductData>
    <setProductData ruleid="modeldata" field="model">SXWAUTSVR10001HeroCorp 6</setProductData>
    <setProductData ruleid="typedata" field="type">Workstation/Server</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />
      - Slave
      <commSetting field="slaveaddress" />
    </setDefaultLabel>
    <numSensor ruleid="ups1_output_percent_load_l1">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_UPS1_OUTPUT_PERCENT_LOAD_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_298</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output percent load l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_percent_load_l2">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_UPS1_OUTPUT_PERCENT_LOAD_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_299</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output percent load l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_percent_load_l3">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_UPS1_OUTPUT_PERCENT_LOAD_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_300</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output percent load l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_battery_current">
      <type>amperage</type>
      <units />
      <sensorId>_UPS1_BATTERY_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_276</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_battery current</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_input_current_l1">
      <type>amperage</type>
      <units />
      <sensorId>_UPS1_INPUT_CURRENT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_286</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_input current l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_input_current_l2">
      <type>amperage</type>
      <units />
      <sensorId>_UPS1_INPUT_CURRENT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_287</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_input current l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_input_current_l3">
      <type>amperage</type>
      <units />
      <sensorId>_UPS1_INPUT_CURRENT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_288</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_input current l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_current_l1">
      <type>amperage</type>
      <units />
      <sensorId>_UPS1_OUTPUT_CURRENT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_295</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output current l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_current_l2">
      <type>amperage</type>
      <units />
      <sensorId>_UPS1_OUTPUT_CURRENT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_296</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output current l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_current_l3">
      <type>amperage</type>
      <units />
      <sensorId>_UPS1_OUTPUT_CURRENT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_297</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output current l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_input_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_UPS1_INPUT_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_279</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_input frequency</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_UPS1_OUTPUT_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_283</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output frequency</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_input_real_power_l1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS1_INPUT_REAL_POWER_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_289</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_input real power l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_input_real_power_l2">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS1_INPUT_REAL_POWER_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_290</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_input real power l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_input_real_power_l3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS1_INPUT_REAL_POWER_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_291</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_input real power l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_real_power_l1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS1_OUTPUT_REAL_POWER_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_301</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output real power l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_real_power_l2">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS1_OUTPUT_REAL_POWER_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_302</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output real power l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_real_power_l3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS1_OUTPUT_REAL_POWER_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_303</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output real power l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_estimated_charge_remaining">
      <type>timeinmin</type>
      <units />
      <sensorId>_UPS1_ESTIMATED_CHARGE_REMAINING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_278</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_estimated charge remaining</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_battery_volt">
      <type>voltage</type>
      <units />
      <sensorId>_UPS1_BATTERY_VOLT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_277</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_battery volt</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_input_volt_l1">
      <type>voltage</type>
      <units />
      <sensorId>_UPS1_INPUT_VOLT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_292</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_input volt l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_input_volt_l2">
      <type>voltage</type>
      <units />
      <sensorId>_UPS1_INPUT_VOLT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_293</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_input volt l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_input_volt_l3">
      <type>voltage</type>
      <units />
      <sensorId>_UPS1_INPUT_VOLT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_294</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_input volt l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_volt_l1">
      <type>voltage</type>
      <units />
      <sensorId>_UPS1_OUTPUT_VOLT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_304</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output volt l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_volt_l2">
      <type>voltage</type>
      <units />
      <sensorId>_UPS1_OUTPUT_VOLT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_305</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output volt l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups1_output_volt_l3">
      <type>voltage</type>
      <units />
      <sensorId>_UPS1_OUTPUT_VOLT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_306</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups1_output volt l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <stateSensor ruleid="ups1_status">
      <type>state</type>
      <sensorId>_UPS1_STATUS</sensorId>
      <value>
        <mapValue mapid="off_on_vm">
          <getOid>Function_3_Reg_407</getOid>
        </mapValue>
      </value>
      <label>Ups1 status</label>
      <enum>off_on_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups1_invertor_on">
      <type>state</type>
      <sensorId>_UPS1_INVERTOR_ON</sensorId>
      <value>
        <mapValue mapid="off_on_vm">
          <getOid>Function_3_Reg_280</getOid>
        </mapValue>
      </value>
      <label>Ups1_invertor on</label>
      <enum>off_on_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups1_load_on_battery">
      <type>state</type>
      <sensorId>_UPS1_LOAD_ON_BATTERY</sensorId>
      <value>
        <mapValue mapid="off_on_vm">
          <getOid>Function_3_Reg_281</getOid>
        </mapValue>
      </value>
      <label>Ups1_load on battery</label>
      <enum>off_on_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups1_low_battery">
      <type>state</type>
      <sensorId>_UPS1_LOW_BATTERY</sensorId>
      <value>
        <mapValue mapid="off_on_vm">
          <getOid>Function_3_Reg_282</getOid>
        </mapValue>
      </value>
      <label>Ups1_low battery</label>
      <enum>off_on_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups1_output_overload">
      <type>state</type>
      <sensorId>_UPS1_OUTPUT_OVERLOAD</sensorId>
      <value>
        <mapValue mapid="off_on_vm">
          <getOid>Function_3_Reg_284</getOid>
        </mapValue>
      </value>
      <label>Ups1_output overload</label>
      <enum>off_on_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
	
	<valueMap ruleid="off_on_vm">
			<valueIn>0</valueIn>
			<valueOut>0</valueOut>
			<valueIn>1</valueIn>
			<valueOut>1</valueOut>
			<valueIn>*</valueIn>
			<valueOut>0</valueOut>
		</valueMap>

		<enumMap ruleid="off_on_em">
			<label>Off</label>
			<label>On</label>
		</enumMap>
	
  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="Function_3_Reg_294">
        <function>3</function>
        <start_addr>293</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_304">
        <function>3</function>
        <start_addr>303</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_286">
        <function>3</function>
        <start_addr>285</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_283">
        <function>3</function>
        <start_addr>282</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_299">
        <function>3</function>
        <start_addr>298</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_297">
        <function>3</function>
        <start_addr>296</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_301">
        <function>3</function>
        <start_addr>300</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_288">
        <function>3</function>
        <start_addr>287</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_290">
        <function>3</function>
        <start_addr>289</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_291">
        <function>3</function>
        <start_addr>290</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_277">
        <function>3</function>
        <start_addr>276</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_292">
        <function>3</function>
        <start_addr>291</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_407">
        <function>3</function>
        <start_addr>406</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_295">
        <function>3</function>
        <start_addr>294</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_281">
        <function>3</function>
        <start_addr>280</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_284">
        <function>3</function>
        <start_addr>283</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_298">
        <function>3</function>
        <start_addr>297</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_279">
        <function>3</function>
        <start_addr>278</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_280">
        <function>3</function>
        <start_addr>279</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_287">
        <function>3</function>
        <start_addr>286</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_282">
        <function>3</function>
        <start_addr>281</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_303">
        <function>3</function>
        <start_addr>302</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_276">
        <function>3</function>
        <start_addr>275</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_296">
        <function>3</function>
        <start_addr>295</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_302">
        <function>3</function>
        <start_addr>301</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_306">
        <function>3</function>
        <start_addr>305</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_293">
        <function>3</function>
        <start_addr>292</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_305">
        <function>3</function>
        <start_addr>304</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_278">
        <function>3</function>
        <start_addr>277</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_289">
        <function>3</function>
        <start_addr>288</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_300">
        <function>3</function>
        <start_addr>299</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
