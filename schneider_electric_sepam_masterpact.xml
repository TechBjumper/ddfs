<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="schneider_electric_sepam_masterpact"
	ddfname="Schneider Electric Sepam and Masterpact"
	ddfversion="1"
	canremove="yes">
	
	<schemaVersion>1.6</schemaVersion>
	
	<device deviceid="schneider_electric_sepam_masterpact">
		<setProductData ruleid="vendordata" field="vendor">Schneider Electric</setProductData>
		<setProductData ruleid="modeldata" field="model">Sepam and Masterpact</setProductData>
		<setProductData ruleid="typedata" field="type">Branch Curcuit Monitor</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave 
			<commSetting field="slaveaddress"/>
		</setDefaultLabel>

		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		
		<!-- BB1 Sensors -->
		
		<numSensor ruleid="bb1_phase_current_l1">
            <type>amperage</type>
            <sensorId>BB1_PHASE_CURRENT_L1</sensorId>
            <value>
				<mult>
					<op><getOid>BB1_PHASE_CURRENT_L1</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
            <label>BB1 Phase Current L-1</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_phase_current_l2">
            <type>amperage</type>
            <sensorId>BB1_PHASE_CURRENT_L2</sensorId>
            <value>
				<mult>
					<op><getOid>BB1_PHASE_CURRENT_L2</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
            <label>BB1 Phase Current L-2</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_phase_current_l3">
            <type>amperage</type>
            <sensorId>BB1_PHASE_CURRENT_L3</sensorId>
            <value>
				<mult>
					<op><getOid>BB1_PHASE_CURRENT_L3</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
            <label>BB1 Phase Current L-3</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_phase_2_to_1_voltage">
            <type>voltage</type>
            <sensorId>BB1_PHASE_2_TO_1_VOLTAGE</sensorId>
            <value>
                <getOid>BB1_PHASE_2_TO_1_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB1 Phase 2-1 Voltage</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_phase_3_to_2_voltage">
            <type>voltage</type>
            <sensorId>BB1_PHASE_3_TO_2_VOLTAGE</sensorId>
            <value>
                <getOid>BB1_PHASE_3_TO_2_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB1 Phase 3-2 Voltage</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_phase_1_to_3_voltage">
            <type>voltage</type>
            <sensorId>BB1_PHASE_1_TO_3_VOLTAGE</sensorId>
            <value>
                <getOid>BB1_PHASE_1_TO_3_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB1 Phase 1-3 Voltage</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_phase_l1_to_neutral_voltage">
            <type>voltage</type>
            <sensorId>BB1_PHASE_L1_TO_NEUTRAL_VOLTAGE</sensorId>
            <value>
                <getOid>BB1_PHASE_L1_TO_NEUTRAL_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB1 Phase L-1 to Neutral Voltage</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_phase_l2_to_neutral_voltage">
            <type>voltage</type>
            <sensorId>BB1_PHASE_L2_TO_NEUTRAL_VOLTAGE</sensorId>
            <value>
                <getOid>BB1_PHASE_L2_TO_NEUTRAL_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB1 Phase L-2 to Neutral Voltage</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_phase_l3_to_neutral_voltage">
            <type>voltage</type>
            <sensorId>BB1_PHASE_L3_TO_NEUTRAL_VOLTAGE</sensorId>
            <value>
                <getOid>BB1_PHASE_L3_TO_NEUTRAL_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB1 Phase L-3 to Neutral Voltage</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_frequency">
            <type>frequency</type>
            <sensorId>BB1_FREQUENCY</sensorId>
            <value>
				<mult>
					<op><getOid>BB1_FREQUENCY</getOid></op>
					<op>0.01</op>
				</mult>
            </value>
            <label>BB1 Frequency</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_active_power">
            <type>powerW</type>
            <sensorId>BB1_ACTIVE_POWER</sensorId>
            <value>
				<getOid>BB1_ACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB1 Active Power</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_reactive_power">
            <type>powerVA/powerVAR</type>
            <sensorId>BB1_REACTIVE_POWER</sensorId>
            <value>
				<getOid>BB1_REACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB1 Reactive Power</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		<numSensor ruleid="bb1_apparent_power">
            <type>powerVA</type>
            <sensorId>BB1_APPARENT_POWER</sensorId>
            <value>
				<getOid>BB1_APPARENT_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB1 Apparent Power</label>
            <sensorSet>BB1</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="bb1_off_position">
			<type>state</type>
			<sensorId>BB1_OFF_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_25</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>BB1 Off Postition</label>
			<enum>no_yes-em</enum>
			<sensorSet>BB1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bb1_on_position">
			<type>state</type>
			<sensorId>BB1_ON_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_25</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>BB1 On Postition</label>
			<enum>no_yes-em</enum>
			<sensorSet>BB1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bb1_end_of_charging">
			<type>state</type>
			<sensorId>BB1_END_OF_CHARGING</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_25</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>BB1 End of Charging</label>
			<enum>no_yes-em</enum>
			<sensorSet>BB1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bb1_fault">
			<type>state</type>
			<sensorId>BB1_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_25</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>BB1 Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>BB1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bb1_no_connection">
			<type>state</type>
			<sensorId>BB1_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_25</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>BB1 No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>BB1</sensorSet>
		</stateSensor>
		
		<!-- TB1 Sensors -->
		
		<stateSensor ruleid="tb1_off_position">
			<type>state</type>
			<sensorId>TB1_OFF_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_53</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TB1 Off Postition</label>
			<enum>no_yes-em</enum>
			<sensorSet>TB1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tb1_on_position">
			<type>state</type>
			<sensorId>TB1_ON_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_53</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TB1 On Postition</label>
			<enum>no_yes-em</enum>
			<sensorSet>TB1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tb1_end_of_charging">
			<type>state</type>
			<sensorId>TB1_END_OF_CHARGING</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_53</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TB1 End of Charging</label>
			<enum>no_yes-em</enum>
			<sensorSet>TB1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tb1_fault">
			<type>state</type>
			<sensorId>TB1_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_53</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TB1 Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>TB1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tb1_no_connection">
			<type>state</type>
			<sensorId>TB1_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_53</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TB1 No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>TB1</sensorSet>
		</stateSensor>
		
		<!-- CB Sensors -->
		
		<stateSensor ruleid="cb_off_position">
			<type>state</type>
			<sensorId>CB_OFF_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_81</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>CB Off Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>CB</sensorSet>
		</stateSensor>
		<stateSensor ruleid="cb_on_position">
			<type>state</type>
			<sensorId>CB_ON_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_81</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>CB On Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>CB</sensorSet>
		</stateSensor>
		<stateSensor ruleid="cb_end_of_charging">
			<type>state</type>
			<sensorId>CB_END_OF_CHARGING</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_81</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>CB End of Charging</label>
			<enum>no_yes-em</enum>
			<sensorSet>CB</sensorSet>
		</stateSensor>
		<stateSensor ruleid="cb_fault">
			<type>state</type>
			<sensorId>CB_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_81</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>CB Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>CB</sensorSet>
		</stateSensor>
		<stateSensor ruleid="cb_no_connection">
			<type>state</type>
			<sensorId>CB_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_81</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>4</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>CB No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>CB</sensorSet>
		</stateSensor>
		
		<!-- TB2 Sensors -->
		
		<stateSensor ruleid="tb2_off_position">
			<type>state</type>
			<sensorId>TB2_OFF_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_109</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TB2 Off Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>TB2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tb2_on_position">
			<type>state</type>
			<sensorId>TB2_ON_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_109</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TB2 On Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>TB2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tb2_end_of_charging">
			<type>state</type>
			<sensorId>TB2_END_OF_CHARGING</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_109</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TB2 End of Charging</label>
			<enum>no_yes-em</enum>
			<sensorSet>TB2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tb2_fault">
			<type>state</type>
			<sensorId>TB2_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_109</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TB2 Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>TB2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tb2_no_connection">
			<type>state</type>
			<sensorId>TB2_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_109</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TB2 No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>TB2</sensorSet>
		</stateSensor>
		
		<!-- BB2 Sensors -->
		
		<numSensor ruleid="bb2_phase_current_l1">
            <type>amperage</type>
            <sensorId>BB2_PHASE_CURRENT_L1</sensorId>
            <value>
				<mult>
					<op><getOid>BB2_PHASE_CURRENT_L1</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
            <label>BB2 Phase Current L-1</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_phase_current_l2">
            <type>amperage</type>
            <sensorId>BB2_PHASE_CURRENT_L2</sensorId>
            <value>
				<mult>
					<op><getOid>BB2_PHASE_CURRENT_L2</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
            <label>BB2 Phase Current L-2</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_phase_current_l3">
            <type>amperage</type>
            <sensorId>BB2_PHASE_CURRENT_L3</sensorId>
            <value>
				<mult>
					<op><getOid>BB2_PHASE_CURRENT_L3</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
            <label>BB2 Phase Current L-3</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_phase_2_to_1_voltage">
            <type>voltage</type>
            <sensorId>BB2_PHASE_2_TO_1_VOLTAGE</sensorId>
            <value>
                <getOid>BB2_PHASE_2_TO_1_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB2 Phase 2-1 Voltage</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_phase_3_to_2_voltage">
            <type>voltage</type>
            <sensorId>BB2_PHASE_3_TO_2_VOLTAGE</sensorId>
            <value>
                <getOid>BB2_PHASE_3_TO_2_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB2 Phase 3-2 Voltage</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_phase_1_to_3_voltage">
            <type>voltage</type>
            <sensorId>BB2_PHASE_1_TO_3_VOLTAGE</sensorId>
            <value>
                <getOid>BB2_PHASE_1_TO_3_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB2 Phase 1-3 Voltage</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_phase_l1_to_neutral_voltage">
            <type>voltage</type>
            <sensorId>BB2_PHASE_L1_TO_NEUTRAL_VOLTAGE</sensorId>
            <value>
                <getOid>BB2_PHASE_L1_TO_NEUTRAL_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB2 Phase L-1 to Neutral Voltage</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_phase_l2_to_neutral_voltage">
            <type>voltage</type>
            <sensorId>BB2_PHASE_L2_TO_NEUTRAL_VOLTAGE</sensorId>
            <value>
                <getOid>BB2_PHASE_L2_TO_NEUTRAL_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB2 Phase L-2 to Neutral Voltage</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_phase_l3_to_neutral_voltage">
            <type>voltage</type>
            <sensorId>BB2_PHASE_L3_TO_NEUTRAL_VOLTAGE</sensorId>
            <value>
                <getOid>BB2_PHASE_L3_TO_NEUTRAL_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB2 Phase L-3 to Neutral Voltage</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_frequency">
            <type>frequency</type>
            <sensorId>BB2_FREQUENCY</sensorId>
            <value>
				<mult>
					<op><getOid>BB2_FREQUENCY</getOid></op>
					<op>0.01</op>
				</mult>
            </value>
            <label>BB2 Frequency</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_active_power">
            <type>powerW</type>
            <sensorId>BB2_ACTIVE_POWER</sensorId>
            <value>
				<getOid>BB2_ACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB2 Active Power</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_reactive_power">
            <type>powerVA/powerVAR</type>
            <sensorId>BB2_REACTIVE_POWER</sensorId>
            <value>
				<getOid>BB2_REACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB2 Reactive Power</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		<numSensor ruleid="bb2_apparent_power">
            <type>powerVA</type>
            <sensorId>BB2_APPARENT_POWER</sensorId>
            <value>
				<getOid>BB2_APPARENT_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>BB2 Apparent Power</label>
            <sensorSet>BB2</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="bb2_off_position">
			<type>state</type>
			<sensorId>BB2_OFF_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_137</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>BB2 Off Postition</label>
			<enum>no_yes-em</enum>
			<sensorSet>BB2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bb2_on_position">
			<type>state</type>
			<sensorId>BB2_ON_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_137</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>BB2 On Postition</label>
			<enum>no_yes-em</enum>
			<sensorSet>BB2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bb2_end_of_charging">
			<type>state</type>
			<sensorId>BB2_END_OF_CHARGING</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_137</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>BB2 End of Charging</label>
			<enum>no_yes-em</enum>
			<sensorSet>BB2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bb2_fault">
			<type>state</type>
			<sensorId>BB2_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_137</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>BB2 Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>BB2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bb2_no_connection">
			<type>state</type>
			<sensorId>BB2_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_137</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>BB2 No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>BB2</sensorSet>
		</stateSensor>
		
		<!-- 1QF1 Sensors -->
		
		<numSensor ruleid="1qf1_phase_current_l1">
            <type>amperage</type>
            <sensorId>1QF1_PHASE_CURRENT_L1</sensorId>
            <value>
				<getOid>1QF1_PHASE_CURRENT_L1</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF1 Phase Current L-1</label>
            <sensorSet>1QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf1_phase_current_l2">
            <type>amperage</type>
            <sensorId>1QF1_PHASE_CURRENT_L2</sensorId>
            <value>
				<getOid>1QF1_PHASE_CURRENT_L2</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF1 Phase Current L-2</label>
            <sensorSet>1QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf1_phase_current_l3">
            <type>amperage</type>
            <sensorId>1QF1_PHASE_CURRENT_L3</sensorId>
            <value>
				<getOid>1QF1_PHASE_CURRENT_L3</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF1 Phase Current L-3</label>
            <sensorSet>1QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf1_phase_1_to_2_voltage">
            <type>voltage</type>
            <sensorId>1QF1_PHASE_1_TO_2_VOLTAGE</sensorId>
            <value>
                <getOid>1QF1_PHASE_1_TO_2_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF1 Phase 1-2 Voltage</label>
            <sensorSet>1QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf1_phase_2_to_3_voltage">
            <type>voltage</type>
            <sensorId>1QF1_PHASE_2_TO_3_VOLTAGE</sensorId>
            <value>
                <getOid>1QF1_PHASE_2_TO_3_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF1 Phase 2-3 Voltage</label>
            <sensorSet>1QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf1_phase_3_to_1_voltage">
            <type>voltage</type>
            <sensorId>1QF1_PHASE_3_TO_1_VOLTAGE</sensorId>
            <value>
                <getOid>1QF1_PHASE_3_TO_1_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF1 Phase 3-1 Voltage</label>
            <sensorSet>1QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf1_active_power">
            <type>powerW</type>
            <sensorId>1QF1_ACTIVE_POWER</sensorId>
            <value>
				<getOid>1QF1_ACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF1 Active Power</label>
            <sensorSet>1QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf1_reactive_power">
            <type>powerVA/powerVAR</type>
            <sensorId>1QF1_REACTIVE_POWER</sensorId>
            <value>
				<getOid>1QF1_REACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF1 Reactive Power</label>
            <sensorSet>1QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf1_apparent_power">
            <type>powerVA</type>
            <sensorId>1QF1_APPARENT_POWER</sensorId>
            <value>
				<getOid>1QF1_APPARENT_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF1 Apparent Power</label>
            <sensorSet>1QF1</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="1qf1_breaker_off">
			<type>state</type>
			<sensorId>1QF1_BREAKER_OFF</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_203</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF1 Breaker Off</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf1_breaker_on">
			<type>state</type>
			<sensorId>1QF1_BREAKER_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_203</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF1 Breaker On</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf1_spring_loaded">
			<type>state</type>
			<sensorId>1QF1_SPRING_LOADED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_203</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF1 Spring Loaded</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf1_ready_to_on">
			<type>state</type>
			<sensorId>1QF1_READY_TO_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_203</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF1 Ready to On</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf1_breaker_has_tripped">
			<type>state</type>
			<sensorId>1QF1_BREAKER_HAS_TRIPPED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_203</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF1 Breaker Has Tripped</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf1_connected_position">
			<type>state</type>
			<sensorId>1QF1_CONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_203</getOid>
									</op>
									<op>5</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF1 Connected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf1_disconnected_position">
			<type>state</type>
			<sensorId>1QF1_DISCONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_203</getOid>
									</op>
									<op>6</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF1 Disconnected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf1_testing_position">
			<type>state</type>
			<sensorId>1QF1_TESTING_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_203</getOid>
									</op>
									<op>7</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF1 Testing Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf1_fault">
			<type>state</type>
			<sensorId>1QF1_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_203</getOid>
									</op>
									<op>8</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF1 Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf1_no_connection">
			<type>state</type>
			<sensorId>1QF1_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_203</getOid>
									</op>
									<op>9</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF1 No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF1</sensorSet>
		</stateSensor>
		
		<!-- 1QF2 Sensors -->
		
		<numSensor ruleid="1qf2_phase_current_l1">
            <type>amperage</type>
            <sensorId>1QF2_PHASE_CURRENT_L1</sensorId>
            <value>
				<getOid>1QF2_PHASE_CURRENT_L1</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF2 Phase Current L-1</label>
            <sensorSet>1QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf2_phase_current_l2">
            <type>amperage</type>
            <sensorId>1QF2_PHASE_CURRENT_L2</sensorId>
            <value>
				<getOid>1QF2_PHASE_CURRENT_L2</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF2 Phase Current L-2</label>
            <sensorSet>1QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf2_phase_current_l3">
            <type>amperage</type>
            <sensorId>1QF2_PHASE_CURRENT_L3</sensorId>
            <value>
				<getOid>1QF2_PHASE_CURRENT_L3</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF2 Phase Current L-3</label>
            <sensorSet>1QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf2_phase_1_to_2_voltage">
            <type>voltage</type>
            <sensorId>1QF2_PHASE_1_TO_2_VOLTAGE</sensorId>
            <value>
                <getOid>1QF2_PHASE_1_TO_2_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF2 Phase 1-2 Voltage</label>
            <sensorSet>1QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf2_phase_2_to_3_voltage">
            <type>voltage</type>
            <sensorId>1QF2_PHASE_2_TO_3_VOLTAGE</sensorId>
            <value>
                <getOid>1QF2_PHASE_2_TO_3_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF2 Phase 2-3 Voltage</label>
            <sensorSet>1QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf2_phase_3_to_1_voltage">
            <type>voltage</type>
            <sensorId>1QF2_PHASE_3_TO_1_VOLTAGE</sensorId>
            <value>
                <getOid>1QF2_PHASE_3_TO_1_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF2 Phase 3-1 Voltage</label>
            <sensorSet>1QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf2_active_power">
            <type>powerW</type>
            <sensorId>1QF2_ACTIVE_POWER</sensorId>
            <value>
				<getOid>1QF2_ACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF2 Active Power</label>
            <sensorSet>1QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf2_reactive_power">
            <type>powerVA/powerVAR</type>
            <sensorId>1QF2_REACTIVE_POWER</sensorId>
            <value>
				<getOid>1QF2_REACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF2 Reactive Power</label>
            <sensorSet>1QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf2_apparent_power">
            <type>powerVA</type>
            <sensorId>1QF2_APPARENT_POWER</sensorId>
            <value>
				<getOid>1QF2_APPARENT_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF2 Apparent Power</label>
            <sensorSet>1QF2</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="1qf2_breaker_off">
			<type>state</type>
			<sensorId>1QF2_BREAKER_OFF</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_303</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF2 Breaker Off</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf2_breaker_on">
			<type>state</type>
			<sensorId>1QF2_BREAKER_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_303</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF2 Breaker On</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf2_spring_loaded">
			<type>state</type>
			<sensorId>1QF2_SPRING_LOADED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_303</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF2 Spring Loaded</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf2_ready_to_on">
			<type>state</type>
			<sensorId>1QF2_READY_TO_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_303</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF2 Ready to On</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf2_breaker_has_tripped">
			<type>state</type>
			<sensorId>1QF2_BREAKER_HAS_TRIPPED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_303</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF2 Breaker Has Tripped</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf2_connected_position">
			<type>state</type>
			<sensorId>1QF2_CONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_303</getOid>
									</op>
									<op>5</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF2 Connected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf2_disconnected_position">
			<type>state</type>
			<sensorId>1QF2_DISCONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_303</getOid>
									</op>
									<op>6</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF2 Disconnected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf2_testing_position">
			<type>state</type>
			<sensorId>1QF2_TESTING_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_303</getOid>
									</op>
									<op>7</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF2 Testing Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf2_fault">
			<type>state</type>
			<sensorId>1QF2_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_303</getOid>
									</op>
									<op>8</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF2 Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf2_no_connection">
			<type>state</type>
			<sensorId>1QF2_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_303</getOid>
									</op>
									<op>9</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF2 No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF2</sensorSet>
		</stateSensor>
		
		<!-- 3QF Sensors -->
		
		<stateSensor ruleid="3qf_breaker_off">
			<type>state</type>
			<sensorId>3QF_BREAKER_OFF</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_403</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>3QF Breaker Off</label>
			<enum>no_yes-em</enum>
			<sensorSet>3QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="3qf_breaker_on">
			<type>state</type>
			<sensorId>3QF_BREAKER_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_403</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>3QF Breaker On</label>
			<enum>no_yes-em</enum>
			<sensorSet>3QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="3qf_spring_loaded">
			<type>state</type>
			<sensorId>3QF_SPRING_LOADED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_403</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>3QF Spring Loaded</label>
			<enum>no_yes-em</enum>
			<sensorSet>3QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="3qf_ready_to_on">
			<type>state</type>
			<sensorId>3QF_READY_TO_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_403</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>3QF Ready to On</label>
			<enum>no_yes-em</enum>
			<sensorSet>3QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="3qf_breaker_has_tripped">
			<type>state</type>
			<sensorId>3QF_BREAKER_HAS_TRIPPED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_403</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>3QF Breaker Has Tripped</label>
			<enum>no_yes-em</enum>
			<sensorSet>3QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="3qf_connected_position">
			<type>state</type>
			<sensorId>3QF_CONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_403</getOid>
									</op>
									<op>5</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>3QF Connected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>3QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="3qf_disconnected_position">
			<type>state</type>
			<sensorId>3QF_DISCONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_403</getOid>
									</op>
									<op>6</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>3QF Disconnected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>3QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="3qf_testing_position">
			<type>state</type>
			<sensorId>3QF_TESTING_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_403</getOid>
									</op>
									<op>7</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>3QF Testing Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>3QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="3qf_fault">
			<type>state</type>
			<sensorId>3QF_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_403</getOid>
									</op>
									<op>8</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>3QF Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>3QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="3qf_no_connection">
			<type>state</type>
			<sensorId>3QF_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_403</getOid>
									</op>
									<op>9</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>3QF No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>3QF</sensorSet>
		</stateSensor>
		
		<!-- 2QF Sensors -->
		
		<numSensor ruleid="2qf_phase_current_l1">
            <type>amperage</type>
            <sensorId>2QF_PHASE_CURRENT_L1</sensorId>
            <value>
				<getOid>2QF_PHASE_CURRENT_L1</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF Phase Current L-1</label>
            <sensorSet>2QF</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf_phase_current_l2">
            <type>amperage</type>
            <sensorId>2QF_PHASE_CURRENT_L2</sensorId>
            <value>
				<getOid>2QF_PHASE_CURRENT_L2</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF Phase Current L-2</label>
            <sensorSet>2QF</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf_phase_current_l3">
            <type>amperage</type>
            <sensorId>2QF_PHASE_CURRENT_L3</sensorId>
            <value>
				<getOid>2QF_PHASE_CURRENT_L3</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF Phase Current L-3</label>
            <sensorSet>2QF</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf_phase_1_to_2_voltage">
            <type>voltage</type>
            <sensorId>2QF_PHASE_1_TO_2_VOLTAGE</sensorId>
            <value>
                <getOid>2QF_PHASE_1_TO_2_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF Phase 1-2 Voltage</label>
            <sensorSet>2QF</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf_phase_2_to_3_voltage">
            <type>voltage</type>
            <sensorId>2QF_PHASE_2_TO_3_VOLTAGE</sensorId>
            <value>
                <getOid>2QF_PHASE_2_TO_3_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF Phase 2-3 Voltage</label>
            <sensorSet>2QF</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf_phase_3_to_1_voltage">
            <type>voltage</type>
            <sensorId>2QF_PHASE_3_TO_1_VOLTAGE</sensorId>
            <value>
                <getOid>2QF_PHASE_3_TO_1_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF Phase 3-1 Voltage</label>
            <sensorSet>2QF</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf_active_power">
            <type>powerW</type>
            <sensorId>2QF_ACTIVE_POWER</sensorId>
            <value>
				<getOid>2QF_ACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF Active Power</label>
            <sensorSet>2QF</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf_reactive_power">
            <type>powerVA/powerVAR</type>
            <sensorId>2QF_REACTIVE_POWER</sensorId>
            <value>
				<getOid>2QF_REACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF Reactive Power</label>
            <sensorSet>2QF</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf_apparent_power">
            <type>powerVA</type>
            <sensorId>2QF_APPARENT_POWER</sensorId>
            <value>
				<getOid>2QF_APPARENT_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF Apparent Power</label>
            <sensorSet>2QF</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="2qf_breaker_off">
			<type>state</type>
			<sensorId>2QF_BREAKER_OFF</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_503</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF Breaker Off</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf_breaker_on">
			<type>state</type>
			<sensorId>2QF_BREAKER_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_503</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF Breaker On</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf_spring_loaded">
			<type>state</type>
			<sensorId>2QF_SPRING_LOADED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_503</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF Spring Loaded</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf_ready_to_on">
			<type>state</type>
			<sensorId>2QF_READY_TO_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_503</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF Ready to On</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf_breaker_has_tripped">
			<type>state</type>
			<sensorId>2QF_BREAKER_HAS_TRIPPED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_503</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF Breaker Has Tripped</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf_connected_position">
			<type>state</type>
			<sensorId>2QF_CONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_503</getOid>
									</op>
									<op>5</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF Connected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf_disconnected_position">
			<type>state</type>
			<sensorId>2QF_DISCONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_503</getOid>
									</op>
									<op>6</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF Disconnected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf_testing_position">
			<type>state</type>
			<sensorId>2QF_TESTING_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_503</getOid>
									</op>
									<op>7</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF Testing Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf_fault">
			<type>state</type>
			<sensorId>2QF_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_503</getOid>
									</op>
									<op>8</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf_no_connection">
			<type>state</type>
			<sensorId>2QF_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_503</getOid>
									</op>
									<op>9</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF</sensorSet>
		</stateSensor>
		
		<!-- 2QF1 Sensors -->
		
		<numSensor ruleid="2qf1_phase_current_l1">
            <type>amperage</type>
            <sensorId>2QF1_PHASE_CURRENT_L1</sensorId>
            <value>
				<getOid>2QF1_PHASE_CURRENT_L1</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF1 Phase Current L-1</label>
            <sensorSet>2QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf1_phase_current_l2">
            <type>amperage</type>
            <sensorId>2QF1_PHASE_CURRENT_L2</sensorId>
            <value>
				<getOid>2QF1_PHASE_CURRENT_L2</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF1 Phase Current L-2</label>
            <sensorSet>2QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf1_phase_current_l3">
            <type>amperage</type>
            <sensorId>2QF1_PHASE_CURRENT_L3</sensorId>
            <value>
				<getOid>2QF1_PHASE_CURRENT_L3</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF1 Phase Current L-3</label>
            <sensorSet>2QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf1_phase_1_to_2_voltage">
            <type>voltage</type>
            <sensorId>2QF1_PHASE_1_TO_2_VOLTAGE</sensorId>
            <value>
                <getOid>2QF1_PHASE_1_TO_2_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF1 Phase 1-2 Voltage</label>
            <sensorSet>2QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf1_phase_2_to_3_voltage">
            <type>voltage</type>
            <sensorId>2QF1_PHASE_2_TO_3_VOLTAGE</sensorId>
            <value>
                <getOid>2QF1_PHASE_2_TO_3_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF1 Phase 2-3 Voltage</label>
            <sensorSet>2QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf1_phase_3_to_1_voltage">
            <type>voltage</type>
            <sensorId>2QF1_PHASE_3_TO_1_VOLTAGE</sensorId>
            <value>
                <getOid>2QF1_PHASE_3_TO_1_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF1 Phase 3-1 Voltage</label>
            <sensorSet>2QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf1_active_power">
            <type>powerW</type>
            <sensorId>2QF1_ACTIVE_POWER</sensorId>
            <value>
				<getOid>2QF1_ACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF1 Active Power</label>
            <sensorSet>2QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf1_reactive_power">
            <type>powerVA/powerVAR</type>
            <sensorId>2QF1_REACTIVE_POWER</sensorId>
            <value>
				<getOid>2QF1_REACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF1 Reactive Power</label>
            <sensorSet>2QF1</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf1_apparent_power">
            <type>powerVA</type>
            <sensorId>2QF1_APPARENT_POWER</sensorId>
            <value>
				<getOid>2QF1_APPARENT_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF1 Apparent Power</label>
            <sensorSet>2QF1</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="2qf1_breaker_off">
			<type>state</type>
			<sensorId>2QF1_BREAKER_OFF</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_603</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF1 Breaker Off</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf1_breaker_on">
			<type>state</type>
			<sensorId>2QF1_BREAKER_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_603</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF1 Breaker On</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf1_spring_loaded">
			<type>state</type>
			<sensorId>2QF1_SPRING_LOADED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_603</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF1 Spring Loaded</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf1_ready_to_on">
			<type>state</type>
			<sensorId>2QF1_READY_TO_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_603</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF1 Ready to On</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf1_breaker_has_tripped">
			<type>state</type>
			<sensorId>2QF1_BREAKER_HAS_TRIPPED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_603</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF1 Breaker Has Tripped</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf1_connected_position">
			<type>state</type>
			<sensorId>2QF1_CONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_603</getOid>
									</op>
									<op>5</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF1 Connected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf1_disconnected_position">
			<type>state</type>
			<sensorId>2QF1_DISCONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_603</getOid>
									</op>
									<op>6</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF1 Disconnected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf1_testing_position">
			<type>state</type>
			<sensorId>2QF1_TESTING_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_603</getOid>
									</op>
									<op>7</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF1 Testing Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf1_fault">
			<type>state</type>
			<sensorId>2QF1_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_603</getOid>
									</op>
									<op>8</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF1 Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf1_no_connection">
			<type>state</type>
			<sensorId>2QF1_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_603</getOid>
									</op>
									<op>9</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF1 No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF1</sensorSet>
		</stateSensor>
		
		<!-- 2QF2 Sensors -->
		
		<numSensor ruleid="2qf2_phase_current_l1">
            <type>amperage</type>
            <sensorId>2QF2_PHASE_CURRENT_L1</sensorId>
            <value>
				<getOid>2QF2_PHASE_CURRENT_L1</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF2 Phase Current L-1</label>
            <sensorSet>2QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf2_phase_current_l2">
            <type>amperage</type>
            <sensorId>2QF2_PHASE_CURRENT_L2</sensorId>
            <value>
				<getOid>2QF2_PHASE_CURRENT_L2</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF2 Phase Current L-2</label>
            <sensorSet>2QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf2_phase_current_l3">
            <type>amperage</type>
            <sensorId>2QF2_PHASE_CURRENT_L3</sensorId>
            <value>
				<getOid>2QF2_PHASE_CURRENT_L3</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF2 Phase Current L-3</label>
            <sensorSet>2QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf2_phase_1_to_2_voltage">
            <type>voltage</type>
            <sensorId>2QF2_PHASE_1_TO_2_VOLTAGE</sensorId>
            <value>
                <getOid>2QF2_PHASE_1_TO_2_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF2 Phase 1-2 Voltage</label>
            <sensorSet>2QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf2_phase_2_to_3_voltage">
            <type>voltage</type>
            <sensorId>2QF2_PHASE_2_TO_3_VOLTAGE</sensorId>
            <value>
                <getOid>2QF2_PHASE_2_TO_3_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF2 Phase 2-3 Voltage</label>
            <sensorSet>2QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf2_phase_3_to_1_voltage">
            <type>voltage</type>
            <sensorId>2QF2_PHASE_3_TO_1_VOLTAGE</sensorId>
            <value>
                <getOid>2QF2_PHASE_3_TO_1_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF2 Phase 3-1 Voltage</label>
            <sensorSet>2QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf2_active_power">
            <type>powerW</type>
            <sensorId>2QF2_ACTIVE_POWER</sensorId>
            <value>
				<getOid>2QF2_ACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF2 Active Power</label>
            <sensorSet>2QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf2_reactive_power">
            <type>powerVA/powerVAR</type>
            <sensorId>2QF2_REACTIVE_POWER</sensorId>
            <value>
				<getOid>2QF2_REACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF2 Reactive Power</label>
            <sensorSet>2QF2</sensorSet>
        </numSensor>
		<numSensor ruleid="2qf2_apparent_power">
            <type>powerVA</type>
            <sensorId>2QF2_APPARENT_POWER</sensorId>
            <value>
				<getOid>2QF2_APPARENT_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>2QF2 Apparent Power</label>
            <sensorSet>2QF2</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="2qf2_breaker_off">
			<type>state</type>
			<sensorId>2QF2_BREAKER_OFF</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_703</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF2 Breaker Off</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf2_breaker_on">
			<type>state</type>
			<sensorId>2QF2_BREAKER_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_703</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF2 Breaker On</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf2_spring_loaded">
			<type>state</type>
			<sensorId>2QF2_SPRING_LOADED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_703</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF2 Spring Loaded</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf2_ready_to_on">
			<type>state</type>
			<sensorId>2QF2_READY_TO_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_703</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF2 Ready to On</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf2_breaker_has_tripped">
			<type>state</type>
			<sensorId>2QF2_BREAKER_HAS_TRIPPED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_703</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF2 Breaker Has Tripped</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf2_connected_position">
			<type>state</type>
			<sensorId>2QF2_CONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_703</getOid>
									</op>
									<op>5</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF2 Connected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf2_disconnected_position">
			<type>state</type>
			<sensorId>2QF2_DISCONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_703</getOid>
									</op>
									<op>6</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF2 Disconnected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf2_testing_position">
			<type>state</type>
			<sensorId>2QF2_TESTING_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_703</getOid>
									</op>
									<op>7</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF2 Testing Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf2_fault">
			<type>state</type>
			<sensorId>2QF2_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_703</getOid>
									</op>
									<op>8</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF2 Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="2qf2_no_connection">
			<type>state</type>
			<sensorId>2QF2_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_703</getOid>
									</op>
									<op>9</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>2QF2 No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>2QF2</sensorSet>
		</stateSensor>
		
		<!-- 1QF Sensors -->

		<numSensor ruleid="1qf_phase_current_l1">
            <type>amperage</type>
            <sensorId>1QF_PHASE_CURRENT_L1</sensorId>
            <value>
				<getOid>1QF_PHASE_CURRENT_L1</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF Phase Current L-1</label>
            <sensorSet>1QF</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf_phase_current_l2">
            <type>amperage</type>
            <sensorId>1QF_PHASE_CURRENT_L2</sensorId>
            <value>
				<getOid>1QF_PHASE_CURRENT_L2</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF Phase Current L-2</label>
            <sensorSet>1QF</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf_phase_current_l3">
            <type>amperage</type>
            <sensorId>1QF_PHASE_CURRENT_L3</sensorId>
            <value>
				<getOid>1QF_PHASE_CURRENT_L3</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF Phase Current L-3</label>
            <sensorSet>1QF</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf_phase_1_to_2_voltage">
            <type>voltage</type>
            <sensorId>1QF_PHASE_1_TO_2_VOLTAGE</sensorId>
            <value>
                <getOid>1QF_PHASE_1_TO_2_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF Phase 1-2 Voltage</label>
            <sensorSet>1QF</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf_phase_2_to_3_voltage">
            <type>voltage</type>
            <sensorId>1QF_PHASE_2_TO_3_VOLTAGE</sensorId>
            <value>
                <getOid>1QF_PHASE_2_TO_3_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF Phase 2-3 Voltage</label>
            <sensorSet>1QF</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf_phase_3_to_1_voltage">
            <type>voltage</type>
            <sensorId>1QF_PHASE_3_TO_1_VOLTAGE</sensorId>
            <value>
                <getOid>1QF_PHASE_3_TO_1_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF Phase 3-1 Voltage</label>
            <sensorSet>1QF</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf_active_power">
            <type>powerW</type>
            <sensorId>1QF_ACTIVE_POWER</sensorId>
            <value>
				<getOid>1QF_ACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF Active Power</label>
            <sensorSet>1QF</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf_reactive_power">
            <type>powerVA/powerVAR</type>
            <sensorId>1QF_REACTIVE_POWER</sensorId>
            <value>
				<getOid>1QF_REACTIVE_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF Reactive Power</label>
            <sensorSet>1QF</sensorSet>
        </numSensor>
		<numSensor ruleid="1qf_apparent_power">
            <type>powerVA</type>
            <sensorId>1QF_APPARENT_POWER</sensorId>
            <value>
				<getOid>1QF_APPARENT_POWER</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>1QF Apparent Power</label>
            <sensorSet>1QF</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="1qf_breaker_off">
			<type>state</type>
			<sensorId>1QF_BREAKER_OFF</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_803</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF Breaker Off</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf_breaker_on">
			<type>state</type>
			<sensorId>1QF_BREAKER_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_803</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF Breaker On</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf_spring_loaded">
			<type>state</type>
			<sensorId>1QF_SPRING_LOADED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_803</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF Spring Loaded</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf_ready_to_on">
			<type>state</type>
			<sensorId>1QF_READY_TO_ON</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_803</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF Ready to On</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf_breaker_has_tripped">
			<type>state</type>
			<sensorId>1QF_BREAKER_HAS_TRIPPED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_803</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF Breaker Has Tripped</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf_connected_position">
			<type>state</type>
			<sensorId>1QF_CONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_803</getOid>
									</op>
									<op>5</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF Connected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf_disconnected_position">
			<type>state</type>
			<sensorId>1QF_DISCONNECTED_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_803</getOid>
									</op>
									<op>6</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF Disconnected Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf_testing_position">
			<type>state</type>
			<sensorId>1QF_TESTING_POSITION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_803</getOid>
									</op>
									<op>7</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF Testing Position</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf_fault">
			<type>state</type>
			<sensorId>1QF_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_803</getOid>
									</op>
									<op>8</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF</sensorSet>
		</stateSensor>
		<stateSensor ruleid="1qf_no_connection">
			<type>state</type>
			<sensorId>1QF_NO_CONNECTION</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_803</getOid>
									</op>
									<op>9</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>1QF No Connection</label>
			<enum>no_yes-em</enum>
			<sensorSet>1QF</sensorSet>
		</stateSensor>
		
		<!-- DGS1 Sensors -->
		
		<numSensor ruleid="dgs1_average_phase_to_phase_voltage">
            <type>voltage</type>
            <sensorId>DGS1_AVERAGE_PHASE_TO_PHASE_VOLTAGE</sensorId>
            <value>
				<getOid>DGS1_AVERAGE_PHASE_TO_PHASE_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>DGS1 Average Phase to Phase Voltage</label>
            <sensorSet>DGS1</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs1_average_current">
            <type>amperage</type>
            <sensorId>DGS1_AVERAGE_CURRENT</sensorId>
            <value>
				<getOid>DGS1_AVERAGE_CURRENT</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>DGS1 Average Current</label>
            <sensorSet>DGS1</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs1_average_frequency_of_current">
            <type>frequency</type>
            <sensorId>DGS1_AVERAGE_FREQUENCY_OF_CURRENT</sensorId>
            <value>
				<mult>
					<op><getOid>DGS1_AVERAGE_FREQUENCY_OF_CURRENT</getOid></op>
					<op>0.01</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS1 Average Frequency of Current</label>
            <sensorSet>DGS1</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs1_fuel_level">
            <type>pctofcapacity</type>
            <sensorId>DGS1_FUEL_LEVEL</sensorId>
            <value>
				<mult>
					<op><getOid>DGS1_FUEL_LEVEL</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS1 Fuel Level</label>
            <sensorSet>DGS1</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs1_oil_temperature">
            <type>temp</type>
            <sensorId>DGS1_OIL_TEMPERATURE</sensorId>
            <value>
				<mult>
					<op><getOid>DGS1_OIL_TEMPERATURE</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS1 Oil Temperature</label>
            <sensorSet>DGS1</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs1_oil_pressure">
            <type>pressure</type>
            <sensorId>DGS1_OIL_PRESSURE</sensorId>
            <value>
				<mult>
					<op><getOid>DGS1_OIL_PRESSURE</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS1 Oil Pressure</label>
            <sensorSet>DGS1</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs1_coolant_temperature">
            <type>temp</type>
            <sensorId>DGS1_COOLANT_TEMPERATURE</sensorId>
            <value>
				<mult>
					<op><getOid>DGS1_COOLANT_TEMPERATURE</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS1 Coolant Temperature</label>
            <sensorSet>DGS1</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs1_battery_voltage">
            <type>voltage</type>
            <sensorId>DGS1_BATTERY_VOLTAGE</sensorId>
            <value>
				<mult>
					<op><getOid>DGS1_BATTERY_VOLTAGE</getOid></op>
					<op>0.01</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS1 Battery Voltage</label>
            <sensorSet>DGS1</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs1_engine_rotational_speed">
            <type>fanspeed</type>
            <sensorId>DGS1_ENGINE_ROTATIONAL_SPEED</sensorId>
            <value>
				<getOid>DGS1_ENGINE_ROTATIONAL_SPEED</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>DGS1 Engine Rotational Speed</label>
            <sensorSet>DGS1</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="dgs1_engine_operating_state">
			<type>state</type>
			<sensorId>DGS1_ENGINE_OPERATING_STATE</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_850</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS1 Engine Operating State</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs1_pre_disconnected_crankshaft">
			<type>state</type>
			<sensorId>DGS1_PRE_DISCONNECTED_CRANKSHAFT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_850</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS1 Pre-Disconnected Crankshaft</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs1_start">
			<type>state</type>
			<sensorId>DGS1_START</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_850</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS1 Start</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs1_working_state">
			<type>state</type>
			<sensorId>DGS1_WORKING_STATE</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_850</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS1 Working State</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs1_pre_cooled">
			<type>state</type>
			<sensorId>DGS1_PRE_COOLED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_850</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS1 Pre-Cooled</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs1_cooling">
			<type>state</type>
			<sensorId>DGS1_COOLING</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_850</getOid>
									</op>
									<op>5</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS1 Cooling</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs1_stop">
			<type>state</type>
			<sensorId>DGS1_STOP</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_850</getOid>
									</op>
									<op>6</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS1 Stop</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs1_stopped_state">
			<type>state</type>
			<sensorId>DGS1_STOPPED_STATE</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_850</getOid>
									</op>
									<op>7</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS1 Stopped State</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs1_idling">
			<type>state</type>
			<sensorId>DGS1_IDLING</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_850</getOid>
									</op>
									<op>8</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS1 Idling</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS1</sensorSet>
		</stateSensor>
		
		<!-- DGS2 Sensors -->
		
		<numSensor ruleid="dgs2_average_phase_to_phase_voltage">
            <type>voltage</type>
            <sensorId>DGS2_AVERAGE_PHASE_TO_PHASE_VOLTAGE</sensorId>
            <value>
				<getOid>DGS2_AVERAGE_PHASE_TO_PHASE_VOLTAGE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>DGS2 Average Phase to Phase Voltage</label>
            <sensorSet>DGS2</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs2_average_current">
            <type>amperage</type>
            <sensorId>DGS2_AVERAGE_CURRENT</sensorId>
            <value>
				<getOid>DGS2_AVERAGE_CURRENT</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>DGS2 Average Current</label>
            <sensorSet>DGS2</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs2_average_frequency_of_current">
            <type>frequency</type>
            <sensorId>DGS2_AVERAGE_FREQUENCY_OF_CURRENT</sensorId>
            <value>
				<mult>
					<op><getOid>DGS2_AVERAGE_FREQUENCY_OF_CURRENT</getOid></op>
					<op>0.01</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS2 Average Frequency of Current</label>
            <sensorSet>DGS2</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs2_fuel_level">
            <type>pctofcapacity</type>
            <sensorId>DGS2_FUEL_LEVEL</sensorId>
            <value>
				<mult>
					<op><getOid>DGS2_FUEL_LEVEL</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS2 Fuel Level</label>
            <sensorSet>DGS2</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs2_oil_temperature">
            <type>temp</type>
            <sensorId>DGS2_OIL_TEMPERATURE</sensorId>
            <value>
				<mult>
					<op><getOid>DGS2_OIL_TEMPERATURE</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS2 Oil Temperature</label>
            <sensorSet>DGS2</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs2_oil_pressure">
            <type>pressure</type>
            <sensorId>DGS2_OIL_PRESSURE</sensorId>
            <value>
				<mult>
					<op><getOid>DGS2_OIL_PRESSURE</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS2 Oil Pressure</label>
            <sensorSet>DGS2</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs2_coolant_temperature">
            <type>temp</type>
            <sensorId>DGS2_COOLANT_TEMPERATURE</sensorId>
            <value>
				<mult>
					<op><getOid>DGS2_COOLANT_TEMPERATURE</getOid></op>
					<op>0.1</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS2 Coolant Temperature</label>
            <sensorSet>DGS2</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs2_battery_voltage">
            <type>voltage</type>
            <sensorId>DGS2_BATTERY_VOLTAGE</sensorId>
            <value>
				<mult>
					<op><getOid>DGS2_BATTERY_VOLTAGE</getOid></op>
					<op>0.01</op>
				</mult>
            </value>
			<valueInc>1</valueInc>
            <label>DGS2 Battery Voltage</label>
            <sensorSet>DGS2</sensorSet>
        </numSensor>
		<numSensor ruleid="dgs2_engine_rotational_speed">
            <type>fanspeed</type>
            <sensorId>DGS2_ENGINE_ROTATIONAL_SPEED</sensorId>
            <value>
				<getOid>DGS2_ENGINE_ROTATIONAL_SPEED</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>DGS2 Engine Rotational Speed</label>
            <sensorSet>DGS2</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="dgs2_engine_operating_state">
			<type>state</type>
			<sensorId>DGS2_ENGINE_OPERATING_STATE</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_870</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS2 Engine Operating State</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs2_pre_disconnected_crankshaft">
			<type>state</type>
			<sensorId>DGS2_PRE_DISCONNECTED_CRANKSHAFT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_870</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS2 Pre-Disconnected Crankshaft</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs2_start">
			<type>state</type>
			<sensorId>DGS2_START</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_870</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS2 Start</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs2_working_state">
			<type>state</type>
			<sensorId>DGS2_WORKING_STATE</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_870</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS2 Working State</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs2_pre_cooled">
			<type>state</type>
			<sensorId>DGS2_PRE_COOLED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_870</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS2 Pre-Cooled</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs2_cooling">
			<type>state</type>
			<sensorId>DGS2_COOLING</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_870</getOid>
									</op>
									<op>5</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS2 Cooling</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs2_stop">
			<type>state</type>
			<sensorId>DGS2_STOP</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_870</getOid>
									</op>
									<op>6</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS2 Stop</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs2_stopped_state">
			<type>state</type>
			<sensorId>DGS2_STOPPED_STATE</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_870</getOid>
									</op>
									<op>7</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS2 Stopped State</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dgs2_idling">
			<type>state</type>
			<sensorId>DGS2_IDLING</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_870</getOid>
									</op>
									<op>8</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>DGS2 Idling</label>
			<enum>no_yes-em</enum>
			<sensorSet>DGS2</sensorSet>
		</stateSensor>
		
		<!-- TR1 Sensors -->
		
		<stateSensor ruleid="tr1_warning_high_temperature_of_windings">
			<type>state</type>
			<sensorId>TR1_WARNING_HIGH_TEMPERATURE_OF_WINDINGS</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_970</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TR1 Warning - High Temperature of Windings</label>
			<enum>no_yes-em</enum>
			<sensorSet>TR1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tr1_emergency_high_temperature_of_windings">
			<type>state</type>
			<sensorId>TR1_EMERGENCY_HIGH_TEMPERATURE_OF_WINDINGS</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_970</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TR1 Emergency - High Temperature of Windings</label>
			<enum>no_yes-em</enum>
			<sensorSet>TR1</sensorSet>
		</stateSensor>
		
		<!-- TR2 Sensors -->
		
		<stateSensor ruleid="tr2_warning_high_temperature_of_windings">
			<type>state</type>
			<sensorId>TR2_WARNING_HIGH_TEMPERATURE_OF_WINDINGS</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_971</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TR2 Warning - High Temperature of Windings</label>
			<enum>no_yes-em</enum>
			<sensorSet>TR2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tr2_emergency_high_temperature_of_windings">
			<type>state</type>
			<sensorId>TR2_EMERGENCY_HIGH_TEMPERATURE_OF_WINDINGS</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_971</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>TR2 Emergency - High Temperature of Windings</label>
			<enum>no_yes-em</enum>
			<sensorSet>TR2</sensorSet>
		</stateSensor>
		
		<!-- Tirosot -->
		
		<stateSensor ruleid="tirosot_general_fault">
			<type>state</type>
			<sensorId>TIROSOT_GENERAL_FAULT</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_972</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Tirosot General Fault</label>
			<enum>no_yes-em</enum>
			<sensorSet>Tirosot</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tirosot_low_battery">
			<type>state</type>
			<sensorId>TIROSOT_LOW_BATTERY</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_972</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Tirosot Low Battery</label>
			<enum>no_yes-em</enum>
			<sensorSet>Tirosot</sensorSet>
		</stateSensor>
		<stateSensor ruleid="tirosot_network_failure">
			<type>state</type>
			<sensorId>TIROSOT_NETWORK_FAILURE</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_972</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Tirosot Network Failure</label>
			<enum>no_yes-em</enum>
			<sensorSet>Tirosot</sensorSet>
		</stateSensor>
		
		<!-- UPS Sensors -->
		
		<stateSensor ruleid="ups_control_cabinet_battery_low">
			<type>state</type>
			<sensorId>UPS_CONTROL_CABINET_BATTERY_LOW</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_973</getOid>
									</op>
									<op>0</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>UPS Control Cabinet Battery - Low</label>
			<enum>no_yes-em</enum>
			<sensorSet>UPS</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ups_control_cabinet_battery_powered">
			<type>state</type>
			<sensorId>UPS_CONTROL_CABINET_BATTERY_POWERED</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_973</getOid>
									</op>
									<op>1</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>UPS Control Cabinet Battery - Powered</label>
			<enum>no_yes-em</enum>
			<sensorSet>UPS</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ups_control_cabinet_battery_charging">
			<type>state</type>
			<sensorId>UPS_CONTROL_CABINET_BATTERY_CHARGING</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_973</getOid>
									</op>
									<op>2</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>UPS Control Cabinet Battery - Charging</label>
			<enum>no_yes-em</enum>
			<sensorSet>UPS</sensorSet>
		</stateSensor>
		<stateSensor ruleid="power_supply_24v_control_cabinet_failure">
			<type>state</type>
			<sensorId>POWER_SUPPLY_24V_CONTROL_CABINET_FAILURE</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_973</getOid>
									</op>
									<op>3</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Power Supply 24V Control Cabinet Failure</label>
			<enum>no_yes-em</enum>
			<sensorSet>UPS</sensorSet>
		</stateSensor>
		
		<!-- Circuit Breakers -->
		
		<stateSensor ruleid="sf2_circuit_breaker_off">
			<type>state</type>
			<sensorId>SF2_CIRCUIT_BREAKER_OFF</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_973</getOid>
									</op>
									<op>4</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>SF2 Circuit Breaker Off</label>
			<enum>no_yes-em</enum>
			<sensorSet>Circuit Breakers</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sf3_circuit_breaker_off">
			<type>state</type>
			<sensorId>SF3_CIRCUIT_BREAKER_OFF</sensorId>
			<value>
				<mapValue mapid="no_yes-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_973</getOid>
									</op>
									<op>5</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>SF3 Circuit Breaker Off</label>
			<enum>no_yes-em</enum>
			<sensorSet>Circuit Breakers</sensorSet>
		</stateSensor>
		
		<!-- Door Control -->
		
		<stateSensor ruleid="door_1_control">
			<type>state</type>
			<sensorId>DOOR_1_CONTROL</sensorId>
			<value>
				<mapValue mapid="close_open-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_973</getOid>
									</op>
									<op>6</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Door 1 Control</label>
			<enum>close_open-em</enum>
			<sensorSet>Door Control</sensorSet>
		</stateSensor>
		<stateSensor ruleid="door_2_control">
			<type>state</type>
			<sensorId>DOOR_2_CONTROL</sensorId>
			<value>
				<mapValue mapid="close_open-vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>REGISTER_973</getOid>
									</op>
									<op>7</op> 
								</right_shift>
							</op>
							<op>1</op> 
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Door 2 Control</label>
			<enum>close_open-em</enum>
			<sensorSet>Door Control</sensorSet>
		</stateSensor>
		
		<!-- Value Maps -->
		
		<valueMap ruleid="no_yes-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>	
			<valueIn>1</valueIn><valueOut>1</valueOut>	
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="no_yes-em">
			<label>No</label>
			<label>Yes</label>
		</enumMap>
		
		<valueMap ruleid="close_open-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>	
			<valueIn>1</valueIn><valueOut>1</valueOut>	
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="close_open-em">
			<label>Close</label>
			<label>Open</label>
		</enumMap>
		
	</device>
	<protocol>
		<modbus>
			<value_ref_id valid="BB1_PHASE_CURRENT_L1">
				<function>3</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_PHASE_CURRENT_L2">
				<function>3</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_PHASE_CURRENT_L3">
				<function>3</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_PHASE_2_TO_1_VOLTAGE">
				<function>3</function>
				<start_addr>7</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_PHASE_3_TO_2_VOLTAGE">
				<function>3</function>
				<start_addr>8</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_PHASE_1_TO_3_VOLTAGE">
				<function>3</function>
				<start_addr>9</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_PHASE_L1_TO_NEUTRAL_VOLTAGE">
				<function>3</function>
				<start_addr>10</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_PHASE_L2_TO_NEUTRAL_VOLTAGE">
				<function>3</function>
				<start_addr>11</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_PHASE_L3_TO_NEUTRAL_VOLTAGE">
				<function>3</function>
				<start_addr>12</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_FREQUENCY">
				<function>3</function>
				<start_addr>14</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_ACTIVE_POWER">
				<function>3</function>
				<start_addr>15</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_REACTIVE_POWER">
				<function>3</function>
				<start_addr>16</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB1_APPARENT_POWER">
				<function>3</function>
				<start_addr>17</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_25">
				<function>3</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_53">
				<function>3</function>
				<start_addr>53</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_81">
				<function>3</function>
				<start_addr>81</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_109">
				<function>3</function>
				<start_addr>109</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BB2_PHASE_CURRENT_L1">
				<function>3</function>
				<start_addr>112</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_PHASE_CURRENT_L2">
				<function>3</function>
				<start_addr>113</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_PHASE_CURRENT_L3">
				<function>3</function>
				<start_addr>114</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_PHASE_2_TO_1_VOLTAGE">
				<function>3</function>
				<start_addr>119</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_PHASE_3_TO_2_VOLTAGE">
				<function>3</function>
				<start_addr>120</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_PHASE_1_TO_3_VOLTAGE">
				<function>3</function>
				<start_addr>121</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_PHASE_L1_TO_NEUTRAL_VOLTAGE">
				<function>3</function>
				<start_addr>122</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_PHASE_L2_TO_NEUTRAL_VOLTAGE">
				<function>3</function>
				<start_addr>123</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_PHASE_L3_TO_NEUTRAL_VOLTAGE">
				<function>3</function>
				<start_addr>124</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_FREQUENCY">
				<function>3</function>
				<start_addr>126</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_ACTIVE_POWER">
				<function>3</function>
				<start_addr>127</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_REACTIVE_POWER">
				<function>3</function>
				<start_addr>128</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BB2_APPARENT_POWER">
				<function>3</function>
				<start_addr>129</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_137">
				<function>3</function>
				<start_addr>137</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="1QF1_PHASE_CURRENT_L1">
				<function>3</function>
				<start_addr>140</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF1_PHASE_CURRENT_L2">
				<function>3</function>
				<start_addr>141</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF1_PHASE_CURRENT_L3">
				<function>3</function>
				<start_addr>142</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF1_PHASE_1_TO_2_VOLTAGE">
				<function>3</function>
				<start_addr>145</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF1_PHASE_2_TO_3_VOLTAGE">
				<function>3</function>
				<start_addr>146</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF1_PHASE_3_TO_1_VOLTAGE">
				<function>3</function>
				<start_addr>147</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF1_ACTIVE_POWER">
				<function>3</function>
				<start_addr>150</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF1_REACTIVE_POWER">
				<function>3</function>
				<start_addr>151</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF1_APPARENT_POWER">
				<function>3</function>
				<start_addr>152</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_203">
				<function>3</function>
				<start_addr>203</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="1QF2_PHASE_CURRENT_L1">
				<function>3</function>
				<start_addr>240</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF2_PHASE_CURRENT_L2">
				<function>3</function>
				<start_addr>241</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF2_PHASE_CURRENT_L3">
				<function>3</function>
				<start_addr>242</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF2_PHASE_1_TO_2_VOLTAGE">
				<function>3</function>
				<start_addr>245</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF2_PHASE_2_TO_3_VOLTAGE">
				<function>3</function>
				<start_addr>246</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF2_PHASE_3_TO_1_VOLTAGE">
				<function>3</function>
				<start_addr>247</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF2_ACTIVE_POWER">
				<function>3</function>
				<start_addr>250</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF2_REACTIVE_POWER">
				<function>3</function>
				<start_addr>251</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF2_APPARENT_POWER">
				<function>3</function>
				<start_addr>252</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_303">
				<function>3</function>
				<start_addr>303</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_403">
				<function>3</function>
				<start_addr>403</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_503">
				<function>3</function>
				<start_addr>503</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="2QF_PHASE_CURRENT_L1">
				<function>3</function>
				<start_addr>440</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF_PHASE_CURRENT_L2">
				<function>3</function>
				<start_addr>441</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF_PHASE_CURRENT_L3">
				<function>3</function>
				<start_addr>442</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF_PHASE_1_TO_2_VOLTAGE">
				<function>3</function>
				<start_addr>445</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF_PHASE_2_TO_3_VOLTAGE">
				<function>3</function>
				<start_addr>446</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF_PHASE_3_TO_1_VOLTAGE">
				<function>3</function>
				<start_addr>447</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF_ACTIVE_POWER">
				<function>3</function>
				<start_addr>450</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF_REACTIVE_POWER">
				<function>3</function>
				<start_addr>451</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF_APPARENT_POWER">
				<function>3</function>
				<start_addr>452</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_503">
				<function>3</function>
				<start_addr>503</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="2QF1_PHASE_CURRENT_L1">
				<function>3</function>
				<start_addr>540</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF1_PHASE_CURRENT_L2">
				<function>3</function>
				<start_addr>541</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF1_PHASE_CURRENT_L3">
				<function>3</function>
				<start_addr>542</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF1_PHASE_1_TO_2_VOLTAGE">
				<function>3</function>
				<start_addr>545</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF1_PHASE_2_TO_3_VOLTAGE">
				<function>3</function>
				<start_addr>546</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF1_PHASE_3_TO_1_VOLTAGE">
				<function>3</function>
				<start_addr>547</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF1_ACTIVE_POWER">
				<function>3</function>
				<start_addr>550</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF1_REACTIVE_POWER">
				<function>3</function>
				<start_addr>551</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF1_APPARENT_POWER">
				<function>3</function>
				<start_addr>552</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_603">
				<function>3</function>
				<start_addr>603</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="2QF2_PHASE_CURRENT_L1">
				<function>3</function>
				<start_addr>640</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF2_PHASE_CURRENT_L2">
				<function>3</function>
				<start_addr>641</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF2_PHASE_CURRENT_L3">
				<function>3</function>
				<start_addr>642</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF2_PHASE_1_TO_2_VOLTAGE">
				<function>3</function>
				<start_addr>645</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF2_PHASE_2_TO_3_VOLTAGE">
				<function>3</function>
				<start_addr>646</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF2_PHASE_3_TO_1_VOLTAGE">
				<function>3</function>
				<start_addr>647</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF2_ACTIVE_POWER">
				<function>3</function>
				<start_addr>650</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF2_REACTIVE_POWER">
				<function>3</function>
				<start_addr>651</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="2QF2_APPARENT_POWER">
				<function>3</function>
				<start_addr>652</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_703">
				<function>3</function>
				<start_addr>703</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="1QF_PHASE_CURRENT_L1">
				<function>3</function>
				<start_addr>740</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF_PHASE_CURRENT_L2">
				<function>3</function>
				<start_addr>741</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF_PHASE_CURRENT_L3">
				<function>3</function>
				<start_addr>742</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF_PHASE_1_TO_2_VOLTAGE">
				<function>3</function>
				<start_addr>745</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF_PHASE_2_TO_3_VOLTAGE">
				<function>3</function>
				<start_addr>746</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF_PHASE_3_TO_1_VOLTAGE">
				<function>3</function>
				<start_addr>747</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF_ACTIVE_POWER">
				<function>3</function>
				<start_addr>750</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF_REACTIVE_POWER">
				<function>3</function>
				<start_addr>751</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="1QF_APPARENT_POWER">
				<function>3</function>
				<start_addr>752</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_803">
				<function>3</function>
				<start_addr>803</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="DGS1_AVERAGE_PHASE_TO_PHASE_VOLTAGE">
				<function>3</function>
				<start_addr>839</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS1_AVERAGE_CURRENT">
				<function>3</function>
				<start_addr>840</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS1_AVERAGE_FREQUENCY_OF_CURRENT">
				<function>3</function>
				<start_addr>841</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS1_FUEL_LEVEL">
				<function>3</function>
				<start_addr>842</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS1_OIL_TEMPERATURE">
				<function>3</function>
				<start_addr>843</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS1_OIL_PRESSURE">
				<function>3</function>
				<start_addr>844</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS1_COOLANT_TEMPERATURE">
				<function>3</function>
				<start_addr>845</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS1_BATTERY_VOLTAGE">
				<function>3</function>
				<start_addr>846</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS1_ENGINE_ROTATIONAL_SPEED">
				<function>3</function>
				<start_addr>847</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_850">
				<function>3</function>
				<start_addr>850</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="DGS2_AVERAGE_PHASE_TO_PHASE_VOLTAGE">
				<function>3</function>
				<start_addr>859</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS2_AVERAGE_CURRENT">
				<function>3</function>
				<start_addr>860</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS2_AVERAGE_FREQUENCY_OF_CURRENT">
				<function>3</function>
				<start_addr>861</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS2_FUEL_LEVEL">
				<function>3</function>
				<start_addr>862</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS2_OIL_TEMPERATURE">
				<function>3</function>
				<start_addr>863</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS2_OIL_PRESSURE">
				<function>3</function>
				<start_addr>864</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS2_COOLANT_TEMPERATURE">
				<function>3</function>
				<start_addr>865</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS2_BATTERY_VOLTAGE">
				<function>3</function>
				<start_addr>866</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="DGS2_ENGINE_ROTATIONAL_SPEED">
				<function>3</function>
				<start_addr>867</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_870">
				<function>3</function>
				<start_addr>870</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_970">
				<function>3</function>
				<start_addr>970</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_971">
				<function>3</function>
				<start_addr>971</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_972">
				<function>3</function>
				<start_addr>972</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="REGISTER_973">
				<function>3</function>
				<start_addr>973</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>
