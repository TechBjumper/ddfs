<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="cummins_pcc3100"
	ddfname="Cummins PCC3100"
	ddfversion="1"
	canremove="yes">
		 
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="cummins_pcc3100">

		<setProductData ruleid="vendordata" field="vendor">Cummins</setProductData>
		<setProductData ruleid="modeldata" field="model">PCC3100</setProductData>
		<setProductData ruleid="typedata" field="type">Generator</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		
        <numSensor ruleid="DEVICE_TYPE_SENSOR">
            <type>num</type>
            <sensorId>device_type</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>devicetype</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Device Type</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="CONTROL_SWITCH_SENSOR">
            <type>num</type>
            <sensorId>control_switch</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>controlswitch</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Control Switch</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="STATE_SENSOR">
            <type>num</type>
            <sensorId>state</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>state</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>State</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="FAULT_CODE_SENSOR">
            <type>num</type>
            <sensorId>fault_code</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>faultcode</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Fault Code</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="FAULT_TYPE_SENSOR">
            <type>num</type>
            <sensorId>fault_type</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>faulttype</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Fault Type</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="PERCENT_KW_SENSOR">
            <type>num</type>
            <sensorId>percent_kw</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>percentkw</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Percent Kw</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TOTAL_KW_SENSOR">
            <type>num</type>
            <sensorId>total_kw</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>totalkw</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Total Kw</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="FREQUENCY_SENSOR">
            <type>num</type>
            <sensorId>frequency</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>frequency</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Frequency</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TOTAL_PF_SENSOR">
            <type>num</type>
            <sensorId>total_pf</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>totalpf</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Total PF</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TOTAL_KVA_SENSOR">
            <type>num</type>
            <sensorId>total_kva</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>totalkva</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Total kva</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TOTAL_KW_SENSOR">
            <type>num</type>
            <sensorId>total_kw</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>totalkw</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Total kW</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TOTAL_AB_SENSOR">
            <type>num</type>
            <sensorId>total_ab</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>totalab</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Total ab</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TOTAL_BC_SENSOR">
            <type>num</type>
            <sensorId>total_bc</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>totalbc</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Total bc</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TOTAL_CA_SENSOR">
            <type>num</type>
            <sensorId>total_ca</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>totalca</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Total ca</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="PERCENT_AMPS_A_SENSOR">
            <type>num</type>
            <sensorId>percent_amps_a</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>percentampsa</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Percent amps A</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="PERCENT_AMPS_B_SENSOR">
            <type>num</type>
            <sensorId>percent_amps_b</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>percentampsb</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Percent amps B</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="PERCENT_AMPS_C_SENSOR">
            <type>num</type>
            <sensorId>percent_amps_c</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>percentampsc</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Percent amps C</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="BATTERY_VOLTAGE_SENSOR">
            <type>voltage</type>
            <sensorId>battery_voltage</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>batteryvoltage</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Battery Voltage</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="OIL_PRESSURE_SENSOR">
            <type>num</type>
            <sensorId>oil_pressure</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>oilpressure</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Oil Pressure</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="OIL_TEMP_SENSOR">
            <type>temp</type>
            <sensorId>oil_temp</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>oiltemp</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Oil Temp</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="COOLANT_TEMP_SENSOR">
            <type>temp</type>
            <sensorId>coolant_temp</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>coolanttemp</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Coolant Temp</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="MISC_TEMP_1_SENSOR">
            <type>temp</type>
            <sensorId>misc_temp_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>misctemp1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Misc Temp 1</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="MISC_TEMP_2_SENSOR">
            <type>temp</type>
            <sensorId>misc_temp_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>misctemp2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Misc Temp 2</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="FUEL_RATE_SENSOR">
            <type>num</type>
            <sensorId>fuel_rate</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>fuelrate</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Fuel Rate</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="ENGINE_RPM_SENSOR">
            <type>num</type>
            <sensorId>engine_rpm</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>enginerpm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Engine RPM</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="ENGINE_STARTS_SENSOR">
            <type>num</type>
            <sensorId>engine_starts</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>enginestarts</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Engine starts</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="ENGINE_RUNTIME_SENSOR">
            <type>timeinsec</type>
            <sensorId>engine_runtime</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>engineruntime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Engine runtime</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TOTAL_KWH_SENSOR">
            <type>num</type>
            <sensorId>total_kwh</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>totalkwh</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Total kWh</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TOTAL_FUEL_SENSOR">
            <type>num</type>
            <sensorId>total_fuel</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>totalfuel</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Total Fuel</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<enumMap ruleid="online_offline_em">
			<label>On-Line</label>
			<label>Off-Line</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="off_on_em">
			<label>Off</label>
			<label>On</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="no_yes_em">
			<label>No</label>
			<label>Yes</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="normal_alarm_em">
			<label>Normal</label>
			<label>Alarm</label>
			<label>Unknown</label>
		</enumMap>



        <stateSensor ruleid="STATUS_REGISTER_0_BIT_0_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_0</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Communication Status</label><enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="STATUS_REGISTER_0_BIT_1_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_1</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Common Alarm</label><enum>off_on_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="STATUS_REGISTER_0_BIT_2_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_2</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Genset Supplying Load</label><enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="STATUS_REGISTER_0_BIT_3_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_3</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Genset Running</label><enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="STATUS_REGISTER_0_BIT_4_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_4</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Not in Auto</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_0_BIT_5_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_5</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>High Battery Voltage</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_0_BIT_6_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_6</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Low Battery Voltage</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_0_BIT_7_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_7</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Charger AC Failure</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_0_BIT_8_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_8</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Fail to Start</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_0_BIT_9_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_9</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Low Coolant Temperature</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_0_BIT_10_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_10</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Pre-high Engine Temperature</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_0_BIT_11_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_11</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>High Engine Temperature</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_0_BIT_12_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_12</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Pre-low Oil Pressure</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_0_BIT_13_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_13</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Low Oil Pressure</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_0_BIT_14_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_14</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Over speed</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_0_BIT_15_SENSOR">
            <type>state</type>
            <sensorId>status_register_0_bit_15</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Low Coolant Level</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_0_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_0</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Low Fuel Level</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_1_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_1</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Check Genset</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_2_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_2</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Ground Fault</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_3_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_3</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>High AC Voltage</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_4_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_4</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Low AC Voltage</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_5_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_5</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Under Frequency</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_6_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_6</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Overload</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_7_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_7</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Overcurrent</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_8_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_8</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Short Circuit</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_9_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_9</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Reverse KW</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="STATUS_REGISTER_1_BIT_10_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_10</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Reverse KVAR</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="STATUS_REGISTER_1_BIT_11_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_11</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Fail to Sync</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="STATUS_REGISTER_1_BIT_12_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_12</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Fail to Close</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_13_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_13</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Load Demand</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="STATUS_REGISTER_1_BIT_14_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_14</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Genset Circuit Breaker Tripped</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="STATUS_REGISTER_1_BIT_15_SENSOR">
            <type>state</type>
            <sensorId>status_register_1_bit_15</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Utility Circuit Breaker Tripped</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="STATUS_REGISTER_2_BIT_0_SENSOR">
            <type>state</type>
            <sensorId>status_register_2_bit_0</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Emergency Stop</label><enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>




    </device>
    <protocol>
        <modbus>

            <value_ref_id valid="statusregister0">
                <function>3</function>
                <start_addr>1000</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
		
            <value_ref_id valid="statusregister1">
                <function>3</function>
                <start_addr>1001</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister2">
                <function>3</function>
                <start_addr>1002</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="devicetype">
                <function>3</function>
                <start_addr>0</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="controlswitch">
                <function>3</function>
                <start_addr>2</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="state">
                <function>3</function>
                <start_addr>4</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="faultcode">
                <function>3</function>
                <start_addr>6</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="faulttype">
                <function>3</function>
                <start_addr>8</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="percentkw">
                <function>3</function>
                <start_addr>10</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="totalkw">
                <function>3</function>
                <start_addr>12</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="frequency">
                <function>3</function>
                <start_addr>14</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="totalpf">
                <function>3</function>
                <start_addr>16</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="totalkva">
                <function>3</function>
                <start_addr>18</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="totalkw">
                <function>3</function>
                <start_addr>20</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="totalab">
                <function>3</function>
                <start_addr>24</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="totalbc">
                <function>3</function>
                <start_addr>26</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="totalca">
                <function>3</function>
                <start_addr>28</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="percentampsa">
                <function>3</function>
                <start_addr>42</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="percentampsb">
                <function>3</function>
                <start_addr>44</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="percentampsc">
                <function>3</function>
                <start_addr>46</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="batteryvoltage">
                <function>3</function>
                <start_addr>48</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="oilpressure">
                <function>3</function>
                <start_addr>50</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="oiltemp">
                <function>3</function>
                <start_addr>52</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="coolanttemp">
                <function>3</function>
                <start_addr>54</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="misctemp1">
                <function>3</function>
                <start_addr>56</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="misctemp2">
                <function>3</function>
                <start_addr>58</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="fuelrate">
                <function>3</function>
                <start_addr>60</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="enginerpm">
                <function>3</function>
                <start_addr>62</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="enginestarts">
                <function>3</function>
                <start_addr>64</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="engineruntime">
                <function>3</function>
                <start_addr>66</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="totalkwh">
                <function>3</function>
                <start_addr>68</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="totalfuel">
                <function>3</function>
                <start_addr>70</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>


		</modbus>
	</protocol>
</APC_DDF>