<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="marelli_te804" ddfname="Marelli TE804" ddfversion="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="marelli_te804">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">Marelli</setProductData>
    <setProductData ruleid="modeldata" field="model">TE804</setProductData>
    <setProductData ruleid="typedata" field="type">Generator</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />
      - Slave
      <commSetting field="slaveaddress" />
    </setDefaultLabel>
    <numSensor ruleid="mains_phase_voltage_l1_">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>MAINS_PHASE_VOLTAGE_L1_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Mains phase voltage L1</label>
      <sensorSet>Mains</sensorSet>
    </numSensor>
    <numSensor ruleid="mains_phase_voltage_l2_">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>MAINS_PHASE_VOLTAGE_L2_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Mains phase voltage L2</label>
      <sensorSet>Mains</sensorSet>
    </numSensor>
    <numSensor ruleid="mains_phase_voltage_l3_">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>MAINS_PHASE_VOLTAGE_L3_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Mains phase voltage L3</label>
      <sensorSet>Mains</sensorSet>
    </numSensor>
    <numSensor ruleid="mains_phase_to_phase_voltage_l1-l2_">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_4</sensorId>
      <value>
        <mult>
          <op>
            <getOid>MAINS_PHASE_TO_PHASE_VOLTAGE_L1L2_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Mains phase to phase voltage L1-L2</label>
      <sensorSet>Mains</sensorSet>
    </numSensor>
    <numSensor ruleid="mains_phase_to_phase_voltage_l2-l3">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_5</sensorId>
      <value>
        <mult>
          <op>
            <getOid>MAINS_PHASE_TO_PHASE_VOLTAGE_L2L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Mains phase to phase voltage L2-L3</label>
      <sensorSet>Mains</sensorSet>
    </numSensor>
    <numSensor ruleid="mains_phase_to_phase_voltage_l3-l1">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_6</sensorId>
      <value>
        <mult>
          <op>
            <getOid>MAINS_PHASE_TO_PHASE_VOLTAGE_L3L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Mains phase to phase voltage L3-L1</label>
      <sensorSet>Mains</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_phase_voltage_l1_">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_7</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_PHASE_VOLTAGE_L1_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator phase voltage L1</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_phase_voltage_l2_">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_8</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_PHASE_VOLTAGE_L2_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator phase voltage L2</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_phase_voltage_l3_">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_9</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_PHASE_VOLTAGE_L3_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator phase voltage L3</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_phase_to_phase_voltage_l1-l2_">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_10</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_PHASE_TO_PHASE_VOLTAGE_L1L2_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator phase to phase voltage L1-L2</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_phase_to_phase_voltage_l2-l3_">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_11</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_PHASE_TO_PHASE_VOLTAGE_L2L3_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator phase to phase voltage L2-L3</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_phase_to_phase_voltage_l3-l1_">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_12</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_PHASE_TO_PHASE_VOLTAGE_L3L1_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator phase to phase voltage L3-L1</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="current_l1_">
      <type>amparage</type>
      <units />
      <sensorId>INPUT_CURRENT_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>CURRENT_L1_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Current L1</label>
      <sensorSet>Current</sensorSet>
    </numSensor>
    <numSensor ruleid="current_l2">
      <type>amparage</type>
      <units />
      <sensorId>INPUT_CURRENT_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>CURRENT_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Current L2</label>
      <sensorSet>Current</sensorSet>
    </numSensor>
    <numSensor ruleid="current_l3">
      <type>amparage</type>
      <units />
      <sensorId>INPUT_CURRENT_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>CURRENT_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Current L3</label>
      <sensorSet>Current</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_total_active_power_">
      <type>num/powerKW</type>
      <units />
      <sensorId>_OUTPUT_POWER_KW_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_TOTAL_ACTIVE_POWER_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator total active power</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_total_reactive_power_">
      <type>num/powerKVAR</type>
      <units />
      <sensorId>_OUTPUT_POWER_KVAR_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_TOTAL_REACTIVE_POWER_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator total reactive power</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_total_apparent_power_">
      <type>num/powerKVA</type>
      <units />
      <sensorId>_OUTPUT_POWER_KVA_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_TOTAL_APPARENT_POWER_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator total apparent power</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_power_factor_l1_unsigned_long">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_OUTPUT_POWER_FACTOR_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_POWER_FACTOR_L1_UNSIGNED_LONG</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator power factor L1 Unsigned long</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_power_factor_l2_unsigned_long">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_OUTPUT_POWER_FACTOR_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_POWER_FACTOR_L2_UNSIGNED_LONG</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator power factor L2 Unsigned long</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_power_factor_l3_unsigned_long">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_OUTPUT_POWER_FACTOR_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_POWER_FACTOR_L3_UNSIGNED_LONG</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator power factor L3 Unsigned long</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_total_power_factor_unsigned_long">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_OUTPUT_POWER_FACTOR_4</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_TOTAL_POWER_FACTOR_UNSIGNED_LONG</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator total power factor Unsigned long</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="mains_total_active_energy_">
      <type>num/kwatthr</type>
      <units />
      <sensorId>1_OUTPUT_ENERGY_TOTAL</sensorId>
      <value>
        <mult>
          <op>
            <getOid>MAINS_TOTAL_ACTIVE_ENERGY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Mains total active energy</label>
      <sensorSet>Mains</sensorSet>
    </numSensor>
    <numSensor ruleid="mains_total_reactive_power_">
      <type>num/kVARhr</type>
      <units />
      <sensorId>1_OUTPUT_REACTIVE_ENERGY_TOTAL</sensorId>
      <value>
        <mult>
          <op>
            <getOid>MAINS_TOTAL_REACTIVE_POWER_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Mains total reactive power</label>
      <sensorSet>Mains</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_total_active_energy_">
      <type>num/kwatthr</type>
      <units />
      <sensorId>2_OUTPUT_ENERGY_TOTAL</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_TOTAL_ACTIVE_ENERGY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator total active energy</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_total_reactive_energy_">
      <type>num/kVARhr</type>
      <units />
      <sensorId>2_OUTPUT_REACTIVE_ENERGY_TOTAL</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_TOTAL_REACTIVE_ENERGY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator total reactive energy</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="mains_frequency_">
      <type>frequency</type>
      <units />
      <sensorId>FREQUENCY_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>MAINS_FREQUENCY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Mains frequency</label>
      <sensorSet>Mains</sensorSet>
    </numSensor>
    <numSensor ruleid="generator_frequency_">
      <type>frequency</type>
      <units />
      <sensorId>FREQUENCY_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>GENERATOR_FREQUENCY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Generator frequency</label>
      <sensorSet>Generator</sensorSet>
    </numSensor>
    <numSensor ruleid="speed_w_">
      <type>fanspeed</type>
      <units />
      <sensorId>_FAN_SPEED_FAN_1_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>SPEED_W_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Speed W</label>
      <sensorSet>Speed</sensorSet>
    </numSensor>
    <numSensor ruleid="speed_calculated_from_generator_frequency_">
      <type>fanspeed</type>
      <units />
      <sensorId>_FAN_SPEED_FAN_1_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>SPEED_CALCULATED_FROM_GENERATOR_FREQUENCY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Speed calculated from generator frequency</label>
      <sensorSet>Speed</sensorSet>
    </numSensor>
    <numSensor ruleid="temperature_">
      <type>temp</type>
      <units />
      <sensorId>_TEMP_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>TEMPERATURE_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Temperature</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="pressure_">
      <type>pressure</type>
      <units />
      <sensorId>1_RDT2_DISCHARGE_PRESSURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>PRESSURE_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Pressure</label>
      <sensorSet>Pressure</sensorSet>
    </numSensor>
    <numSensor ruleid="fuel">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_GENERATOR_OUTPUT_CURRENT_PCT_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>FUEL</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Fuel</label>
      <sensorSet>Fuel</sensorSet>
    </numSensor>
    <numSensor ruleid="battery_">
      <type>voltage</type>
      <units />
      <sensorId>INPUT_VOLTAGE_L2N_13</sensorId>
      <value>
        <mult>
          <op>
            <getOid>BATTERY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Battery</label>
      <sensorSet>Battery</sensorSet>
    </numSensor>
    <stateSensor ruleid="engine_temperature_warning_">
      <type>state</type>
      <sensorId>_ENGINE_TEMPERATURE_WARNING_</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ENGINE_TEMPERATURE_WARNING_</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Engine temperature warning</label>
      <enum>true_false_em</enum>
      <sensorSet>analog</sensorSet>
    </stateSensor>
    <stateSensor ruleid="high_engine_temperatureanalog">
      <type>state</type>
      <sensorId>_HIGH_ENGINE_TEMPERATUREANALOG</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>HIGH_ENGINE_TEMPERATUREANALOG</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High engine temperatureAnalog</label>
      <enum>true_false_em</enum>
      <sensorSet>analog</sensorSet>
    </stateSensor>
    <stateSensor ruleid="temperature_analog_sensor_fault">
      <type>state</type>
      <sensorId>_TEMPERATURE_ANALOG_SENSOR_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TEMPERATURE_ANALOG_SENSOR_FAULT</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Temperature analog sensor fault</label>
      <enum>true_false_em</enum>
      <sensorSet>sensor</sensorSet>
    </stateSensor>
    <stateSensor ruleid="high_engine_temperaturedigital">
      <type>state</type>
      <sensorId>_HIGH_ENGINE_TEMPERATUREDIGITAL</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>HIGH_ENGINE_TEMPERATUREDIGITAL</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High engine temperatureDigital</label>
      <enum>true_false_em</enum>
      <sensorSet>digital</sensorSet>
    </stateSensor>
    <stateSensor ruleid="oil_pressure_warning_">
      <type>state</type>
      <sensorId>_OIL_PRESSURE_WARNING_</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>OIL_PRESSURE_WARNING_</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil pressure warning</label>
      <enum>true_false_em</enum>
      <sensorSet>analog</sensorSet>
    </stateSensor>
    <stateSensor ruleid="low_oil_pressureanalog">
      <type>state</type>
      <sensorId>_LOW_OIL_PRESSUREANALOG</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>LOW_OIL_PRESSUREANALOG</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low oil pressureAnalog</label>
      <enum>true_false_em</enum>
      <sensorSet>analog</sensorSet>
    </stateSensor>
    <stateSensor ruleid="pressure_analog_sensor_fault">
      <type>state</type>
      <sensorId>_PRESSURE_ANALOG_SENSOR_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>PRESSURE_ANALOG_SENSOR_FAULT</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Pressure analog sensor fault</label>
      <enum>true_false_em</enum>
      <sensorSet>sensor</sensorSet>
    </stateSensor>
    <stateSensor ruleid="low_oil_pressure_">
      <type>state</type>
      <sensorId>_LOW_OIL_PRESSURE_</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>LOW_OIL_PRESSURE_</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low oil pressure</label>
      <enum>true_false_em</enum>
      <sensorSet>sensor</sensorSet>
    </stateSensor>
    <stateSensor ruleid="pressure_digital_sensor_fault">
      <type>state</type>
      <sensorId>_PRESSURE_DIGITAL_SENSOR_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>PRESSURE_DIGITAL_SENSOR_FAULT</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Pressure digital sensor fault</label>
      <enum>true_false_em</enum>
      <sensorSet>sensor</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fuel_level_warning_">
      <type>state</type>
      <sensorId>_FUEL_LEVEL_WARNING_</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FUEL_LEVEL_WARNING_</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fuel level warning</label>
      <enum>true_false_em</enum>
      <sensorSet>sensor</sensorSet>
    </stateSensor>
    <stateSensor ruleid="low_fuel_levelanalog">
      <type>state</type>
      <sensorId>_LOW_FUEL_LEVELANALOG</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>LOW_FUEL_LEVELANALOG</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low fuel levelAnalog</label>
      <enum>true_false_em</enum>
      <sensorSet>sensor</sensorSet>
    </stateSensor>
    <stateSensor ruleid="level_analog_sensor_fault">
      <type>state</type>
      <sensorId>_LEVEL_ANALOG_SENSOR_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>LEVEL_ANALOG_SENSOR_FAULT</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Level analog sensor fault</label>
      <enum>true_false_em</enum>
      <sensorSet>sensor</sensorSet>
    </stateSensor>
    <stateSensor ruleid="low_fuel_leveldigital">
      <type>state</type>
      <sensorId>_LOW_FUEL_LEVELDIGITAL</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>LOW_FUEL_LEVELDIGITAL</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low fuel levelDigital</label>
      <enum>true_false_em</enum>
      <sensorSet>sensor</sensorSet>
    </stateSensor>
    <stateSensor ruleid="high_battery_voltage">
      <type>state</type>
      <sensorId>_HIGH_BATTERY_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>HIGH_BATTERY_VOLTAGE</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High battery voltage</label>
      <enum>true_false_em</enum>
      <sensorSet>voltage</sensorSet>
    </stateSensor>
    <stateSensor ruleid="low_battery_voltage">
      <type>state</type>
      <sensorId>_LOW_BATTERY_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>LOW_BATTERY_VOLTAGE</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low battery voltage</label>
      <enum>true_false_em</enum>
      <sensorSet>voltage</sensorSet>
    </stateSensor>
    <stateSensor ruleid="inefficient_battery">
      <type>state</type>
      <sensorId>_INEFFICIENT_BATTERY</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>INEFFICIENT_BATTERY</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Inefficient battery</label>
      <enum>true_false_em</enum>
      <sensorSet>Battery</sensorSet>
    </stateSensor>
    <stateSensor ruleid="charger_alternator_failure">
      <type>state</type>
      <sensorId>_CHARGER_ALTERNATOR_FAILURE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>CHARGER_ALTERNATOR_FAILURE</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Charger alternator failure</label>
      <enum>true_false_em</enum>
      <sensorSet>alternator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="w_signal_failure">
      <type>state</type>
      <sensorId>_W_SIGNAL_FAILURE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>W_SIGNAL_FAILURE</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>W signal failure</label>
      <enum>true_false_em</enum>
      <sensorSet>signal</sensorSet>
    </stateSensor>
    <stateSensor ruleid="low_engine_w_speed">
      <type>state</type>
      <sensorId>_LOW_ENGINE_W_SPEED</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>LOW_ENGINE_W_SPEED</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low engine W speed</label>
      <enum>true_false_em</enum>
      <sensorSet>Speed</sensorSet>
    </stateSensor>
    <stateSensor ruleid="high_engine_w_speed">
      <type>state</type>
      <sensorId>_HIGH_ENGINE_W_SPEED</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>HIGH_ENGINE_W_SPEED</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High engine W speed</label>
      <enum>true_false_em</enum>
      <sensorSet>speed</sensorSet>
    </stateSensor>
    <stateSensor ruleid="starting_failure">
      <type>state</type>
      <sensorId>_STARTING_FAILURE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>STARTING_FAILURE</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Starting failure</label>
      <enum>true_false_em</enum>
      <sensorSet>starting</sensorSet>
    </stateSensor>
    <stateSensor ruleid="emergency_stop">
      <type>state</type>
      <sensorId>_EMERGENCY_STOP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>EMERGENCY_STOP</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Emergency stop</label>
      <enum>true_false_em</enum>
      <sensorSet>stop</sensorSet>
    </stateSensor>
    <stateSensor ruleid="unexpected_stop">
      <type>state</type>
      <sensorId>_UNEXPECTED_STOP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>UNEXPECTED_STOP</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Unexpected stop</label>
      <enum>true_false_em</enum>
      <sensorSet>stop</sensorSet>
    </stateSensor>
    <stateSensor ruleid="engine_stop_failure">
      <type>state</type>
      <sensorId>_ENGINE_STOP_FAILURE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ENGINE_STOP_FAILURE</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Engine stop failure</label>
      <enum>true_false_em</enum>
      <sensorSet>stop</sensorSet>
    </stateSensor>
    <stateSensor ruleid="low_generator_frequency">
      <type>state</type>
      <sensorId>_LOW_GENERATOR_FREQUENCY</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>LOW_GENERATOR_FREQUENCY</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low generator frequency</label>
      <enum>true_false_em</enum>
      <sensorSet>Generator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="high_generator_frequency">
      <type>state</type>
      <sensorId>_HIGH_GENERATOR_FREQUENCY</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>HIGH_GENERATOR_FREQUENCY</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High generator frequency</label>
      <enum>true_false_em</enum>
      <sensorSet>Generator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="low_generator_voltage">
      <type>state</type>
      <sensorId>_LOW_GENERATOR_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>LOW_GENERATOR_VOLTAGE</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low generator voltage</label>
      <enum>true_false_em</enum>
      <sensorSet>Generator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="high_generator_voltage">
      <type>state</type>
      <sensorId>_HIGH_GENERATOR_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>HIGH_GENERATOR_VOLTAGE</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High generator voltage</label>
      <enum>true_false_em</enum>
      <sensorSet>Generator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="generator_asymmetry">
      <type>state</type>
      <sensorId>_GENERATOR_ASYMMETRY</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>GENERATOR_ASYMMETRY</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Generator asymmetry</label>
      <enum>true_false_em</enum>
      <sensorSet>Generator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="generator_short-circuit">
      <type>state</type>
      <sensorId>_GENERATOR_SHORT-CIRCUIT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>GENERATOR_SHORTCIRCUIT</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Generator short-circuit</label>
      <enum>true_false_em</enum>
      <sensorSet>Generator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="generator_overload">
      <type>state</type>
      <sensorId>_GENERATOR_OVERLOAD</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>GENERATOR_OVERLOAD</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Generator overload</label>
      <enum>true_false_em</enum>
      <sensorSet>Generator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="external_generator_protection_tripping">
      <type>state</type>
      <sensorId>_EXTERNAL_GENERATOR_PROTECTION_TRIPPING</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>EXTERNAL_GENERATOR_PROTECTION_TRIPPING</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>External generator protection tripping</label>
      <enum>true_false_em</enum>
      <sensorSet>Generator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="incorrect_generator_phase_sequence">
      <type>state</type>
      <sensorId>_INCORRECT_GENERATOR_PHASE_SEQUENCE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>INCORRECT_GENERATOR_PHASE_SEQUENCE</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Incorrect generator phase sequence</label>
      <enum>true_false_em</enum>
      <sensorSet>Generator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="incorrect_mains_phase_sequence">
      <type>state</type>
      <sensorId>_INCORRECT_MAINS_PHASE_SEQUENCE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>INCORRECT_MAINS_PHASE_SEQUENCE</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Incorrect mains phase sequence</label>
      <enum>true_false_em</enum>
      <sensorSet>phase</sensorSet>
    </stateSensor>
    <stateSensor ruleid="wrong_system_frequency_setting">
      <type>state</type>
      <sensorId>_WRONG_SYSTEM_FREQUENCY_SETTING</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>WRONG_SYSTEM_FREQUENCY_SETTING</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Wrong system frequency setting</label>
      <enum>true_false_em</enum>
      <sensorSet>frequency</sensorSet>
    </stateSensor>
    <stateSensor ruleid="generator_contactor_failure">
      <type>state</type>
      <sensorId>_GENERATOR_CONTACTOR_FAILURE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>GENERATOR_CONTACTOR_FAILURE</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Generator contactor failure</label>
      <enum>true_false_em</enum>
      <sensorSet>Generator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mains_contactor_failure">
      <type>state</type>
      <sensorId>_MAINS_CONTACTOR_FAILURE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MAINS_CONTACTOR_FAILURE</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mains contactor failure</label>
      <enum>true_false_em</enum>
      <sensorSet>Mains</sensorSet>
    </stateSensor>
    <stateSensor ruleid="maintenance_requested">
      <type>state</type>
      <sensorId>_MAINTENANCE_REQUESTED</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MAINTENANCE_REQUESTED</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Maintenance requested</label>
      <enum>true_false_em</enum>
      <sensorSet>maintenance</sensorSet>
    </stateSensor>
    <stateSensor ruleid="system_error">
      <type>state</type>
      <sensorId>_SYSTEM_ERROR</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>SYSTEM_ERROR</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>System error</label>
      <enum>true_false_em</enum>
      <sensorSet>system</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fuel_transfer_empty">
      <type>state</type>
      <sensorId>_FUEL_TRANSFER_EMPTY</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FUEL_TRANSFER_EMPTY</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fuel transfer empty</label>
      <enum>true_false_em</enum>
      <sensorSet>Fuel</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fuel_transfer_too_full">
      <type>state</type>
      <sensorId>_FUEL_TRANSFER_TOO_FULL</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FUEL_TRANSFER_TOO_FULL</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fuel transfer too full</label>
      <enum>true_false_em</enum>
      <sensorSet>Fuel</sensorSet>
    </stateSensor>
    <stateSensor ruleid="rent_hours_exhausted">
      <type>state</type>
      <sensorId>_RENT_HOURS_EXHAUSTED</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>RENT_HOURS_EXHAUSTED</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Rent hours exhausted</label>
      <enum>true_false_em</enum>
      <sensorSet>hours</sensorSet>
    </stateSensor>
    <stateSensor ruleid="low_radiator_liquid_level">
      <type>state</type>
      <sensorId>_LOW_RADIATOR_LIQUID_LEVEL</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>LOW_RADIATOR_LIQUID_LEVEL</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low radiator liquid level</label>
      <enum>true_false_em</enum>
      <sensorSet>liquid</sensorSet>
    </stateSensor>
    <stateSensor ruleid="alarm">
      <type>state</type>
      <sensorId>_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>Alarm</sensorSet>
    </stateSensor>
    <stateSensor ruleid="engine_start">
      <type>state</type>
      <sensorId>_ENGINE_START</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ENGINE_START</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Engine Start</label>
      <enum>true_false_em</enum>
      <sensorSet>Engine</sensorSet>
    </stateSensor>
    <stateSensor ruleid="engine_stop">
      <type>state</type>
      <sensorId>_ENGINE_STOP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ENGINE_STOP</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Engine Stop</label>
      <enum>true_false_em</enum>
      <sensorSet>Engine</sensorSet>
    </stateSensor>
    <stateSensor ruleid="cooling">
      <type>state</type>
      <sensorId>_COOLING</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>COOLING</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Cooling</label>
      <enum>true_false_em</enum>
      <sensorSet>Cooling</sensorSet>
    </stateSensor>
    <stateSensor ruleid="test">
      <type>state</type>
      <sensorId>_TEST</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TEST</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Test</label>
      <enum>true_false_em</enum>
      <sensorSet>Test</sensorSet>
    </stateSensor>
    <stateSensor ruleid="reset_mode">
      <type>state</type>
      <sensorId>_RESET_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>RESET_MODE</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Reset mode</label>
      <enum>true_false_em</enum>
      <sensorSet>Reset</sensorSet>
    </stateSensor>
    <stateSensor ruleid="manual_mode">
      <type>state</type>
      <sensorId>_MANUAL_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MANUAL_MODE</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Manual mode</label>
      <enum>true_false_em</enum>
      <sensorSet>Manual</sensorSet>
    </stateSensor>
    <stateSensor ruleid="automatic_mode">
      <type>state</type>
      <sensorId>_AUTOMATIC_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>AUTOMATIC_MODE</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Automatic mode</label>
      <enum>true_false_em</enum>
      <sensorSet>Automatic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="test_mode">
      <type>state</type>
      <sensorId>_TEST_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TEST_MODE</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Test mode</label>
      <enum>true_false_em</enum>
      <sensorSet>Test</sensorSet>
    </stateSensor>
    <stateSensor ruleid="main_voltage">
      <type>state</type>
      <sensorId>_MAIN_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MAIN_VOLTAGE</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Main voltage</label>
      <enum>true_false_em</enum>
      <sensorSet>Main</sensorSet>
    </stateSensor>
    <stateSensor ruleid="generator_voltage">
      <type>state</type>
      <sensorId>_GENERATOR_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>GENERATOR_VOLTAGE</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Generator voltage</label>
      <enum>true_false_em</enum>
      <sensorSet>Generator</sensorSet>
    </stateSensor>
    <stateSensor ruleid="motor_running">
      <type>state</type>
      <sensorId>_MOTOR_RUNNING</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MOTOR_RUNNING</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Motor Running</label>
      <enum>true_false_em</enum>
      <sensorSet>Motor</sensorSet>
    </stateSensor>
    <stateSensor ruleid="alarm_on">
      <type>state</type>
      <sensorId>_ALARM_ON</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ALARM_ON</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Alarm on</label>
      <enum>true_false_em</enum>
      <sensorSet>Alarm</sensorSet>
    </stateSensor>
	<enumMap ruleid="true_false_em">
			<label>True</label>
			<label>False</label>
		</enumMap>
		<valueMap ruleid="true_false_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
	
  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="LOW_FUEL_LEVELDIGITAL">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAINS_PHASE_TO_PHASE_VOLTAGE_L3L1">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="HIGH_GENERATOR_VOLTAGE">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_PHASE_TO_PHASE_VOLTAGE_L3L1_">
        <function>3</function>
        <start_addr>23</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="TEMPERATURE_">
        <function>3</function>
        <start_addr>113</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="LEVEL_ANALOG_SENSOR_FAULT">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_POWER_FACTOR_L3_UNSIGNED_LONG">
        <function>3</function>
        <start_addr>91</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_TOTAL_ACTIVE_ENERGY_">
        <function>3</function>
        <start_addr>99</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="ENGINE_STOP">
        <function>3</function>
        <start_addr>399</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MOTOR_RUNNING">
        <function>3</function>
        <start_addr>415</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="INCORRECT_MAINS_PHASE_SEQUENCE">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="HIGH_ENGINE_W_SPEED">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ENGINE_STOP_FAILURE">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="SPEED_CALCULATED_FROM_GENERATOR_FREQUENCY_">
        <function>3</function>
        <start_addr>109</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="RENT_HOURS_EXHAUSTED">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAIN_VOLTAGE">
        <function>3</function>
        <start_addr>415</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAINS_PHASE_VOLTAGE_L2_">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="BATTERY_">
        <function>3</function>
        <start_addr>119</start_addr>
        <quantity>2</quantity>
        <type>uint_33</type>
      </value_ref_id>
      <value_ref_id valid="MAINS_FREQUENCY_">
        <function>3</function>
        <start_addr>103</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="SYSTEM_ERROR">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FUEL_TRANSFER_EMPTY">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LOW_BATTERY_VOLTAGE">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_PHASE_TO_PHASE_VOLTAGE_L2L3_">
        <function>3</function>
        <start_addr>21</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="SPEED_W_">
        <function>3</function>
        <start_addr>107</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="TEST">
        <function>3</function>
        <start_addr>399</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAINS_PHASE_TO_PHASE_VOLTAGE_L2L3">
        <function>3</function>
        <start_addr>9</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_VOLTAGE">
        <function>3</function>
        <start_addr>415</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CURRENT_L1_">
        <function>3</function>
        <start_addr>25</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_TOTAL_APPARENT_POWER_">
        <function>3</function>
        <start_addr>77</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_ASYMMETRY">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="HIGH_GENERATOR_FREQUENCY">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FUEL">
        <function>3</function>
        <start_addr>117</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="MAINS_TOTAL_ACTIVE_ENERGY_">
        <function>3</function>
        <start_addr>95</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="PRESSURE_">
        <function>3</function>
        <start_addr>115</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="EXTERNAL_GENERATOR_PROTECTION_TRIPPING">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="RESET_MODE">
        <function>3</function>
        <start_addr>415</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="AUTOMATIC_MODE">
        <function>3</function>
        <start_addr>415</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_PHASE_TO_PHASE_VOLTAGE_L1L2_">
        <function>3</function>
        <start_addr>19</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_PHASE_VOLTAGE_L2_">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="INCORRECT_GENERATOR_PHASE_SEQUENCE">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_TOTAL_REACTIVE_ENERGY_">
        <function>3</function>
        <start_addr>101</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="ENGINE_TEMPERATURE_WARNING_">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LOW_GENERATOR_FREQUENCY">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_TOTAL_REACTIVE_POWER_">
        <function>3</function>
        <start_addr>75</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="MAINS_TOTAL_REACTIVE_POWER_">
        <function>3</function>
        <start_addr>97</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="CHARGER_ALTERNATOR_FAILURE">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_TOTAL_ACTIVE_POWER_">
        <function>3</function>
        <start_addr>73</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="LOW_OIL_PRESSURE_">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="PRESSURE_DIGITAL_SENSOR_FAULT">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="STARTING_FAILURE">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_CONTACTOR_FAILURE">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAINS_PHASE_VOLTAGE_L1_">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="OIL_PRESSURE_WARNING_">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_POWER_FACTOR_L1_UNSIGNED_LONG">
        <function>3</function>
        <start_addr>87</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="LOW_ENGINE_W_SPEED">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="HIGH_ENGINE_TEMPERATUREANALOG">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MANUAL_MODE">
        <function>3</function>
        <start_addr>415</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LOW_OIL_PRESSUREANALOG">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_SHORTCIRCUIT">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="HIGH_BATTERY_VOLTAGE">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FUEL_LEVEL_WARNING_">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="WRONG_SYSTEM_FREQUENCY_SETTING">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_OVERLOAD">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_TOTAL_POWER_FACTOR_UNSIGNED_LONG">
        <function>3</function>
        <start_addr>93</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_FREQUENCY_">
        <function>3</function>
        <start_addr>105</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_PHASE_VOLTAGE_L3_">
        <function>3</function>
        <start_addr>17</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="MAINS_CONTACTOR_FAILURE">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LOW_FUEL_LEVELANALOG">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="EMERGENCY_STOP">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="UNEXPECTED_STOP">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ALARM">
        <function>3</function>
        <start_addr>399</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CURRENT_L3">
        <function>3</function>
        <start_addr>29</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="MAINTENANCE_REQUESTED">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FUEL_TRANSFER_TOO_FULL">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TEMPERATURE_ANALOG_SENSOR_FAULT">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LOW_GENERATOR_VOLTAGE">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAINS_PHASE_VOLTAGE_L3_">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="COOLING">
        <function>3</function>
        <start_addr>399</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="PRESSURE_ANALOG_SENSOR_FAULT">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="INEFFICIENT_BATTERY">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAINS_PHASE_TO_PHASE_VOLTAGE_L1L2_">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="CURRENT_L2">
        <function>3</function>
        <start_addr>27</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="ALARM_ON">
        <function>3</function>
        <start_addr>415</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="W_SIGNAL_FAILURE">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ENGINE_START">
        <function>3</function>
        <start_addr>399</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_PHASE_VOLTAGE_L1_">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_POWER_FACTOR_L2_UNSIGNED_LONG">
        <function>3</function>
        <start_addr>89</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="LOW_RADIATOR_LIQUID_LEVEL">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TEST_MODE">
        <function>3</function>
        <start_addr>415</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="HIGH_ENGINE_TEMPERATUREDIGITAL">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
