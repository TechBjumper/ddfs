<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<APC_DDF canremove="yes"
    xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    ddfversion="2"
    ddfname="GE 750/760 Multilin Power Meter"
    ddfid="ge_750-760_multilin_power_meter">
  <schemaVersion>1.6</schemaVersion>


  <device deviceid="ge_multilin_pm_header">
    <oidMustExist oid="MODBUS_OID_MUST_EXIST" ruleid="OIDMustExist_modbusdevicetest" />

    <setProductData ruleid="vendordata" field="vendor">GE</setProductData>

    <!-- GE 750/760 Multilin Power Meter -->
    <setProductData ruleid="modeldata" field="model">750/760 Multilin</setProductData>

    <!-- Power Meter -->
    <setProductData ruleid="typedata" field="type">Power Meter</setProductData>

    <setDefaultLabel ruleid="labeldata"><getOid>user_text_message_1</getOid></setDefaultLabel>

  </device>

  <device deviceid="ge_multilin_sensors">
    <oidMustExist oid="MODBUS_OID_MUST_EXIST" ruleid="OIDMustExist_modbusdevicetest" />

       <numSensor ruleid="neutral_voltage_sensor">
          <type>voltageAC</type>
          <sensorId>NEUTRAL_VOLTAGE_NR</sensorId>
          <value>
             <!-- Value is in  kV with 2 decimal places 
                 value * 1000 / 100 = value * 10
              -->
            <mult>
              <op>
                <getOid>neutral_voltage</getOid>
              </op>
              <op>10</op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
        <label>Neutral Voltage</label>
          <sensorSet>Voltage</sensorSet>
        </numSensor>

        <numSensor ruleid="sensitive_ground_current_sensor">
          <type>amperage</type>
          <sensorId>SENSITIVE_GROUND_CURRENT_5</sensorId>
          <value>
            <div>
              <op>
                <getOid>sensitive_ground_current</getOid>
              </op>
              <op>100</op>
            </div>
          </value>
          <valueInc>0.01</valueInc>
        <label>Sensitive Ground Current</label>
          <sensorSet>Current</sensorSet>
        </numSensor>

        <numSensor ruleid="phase_a_rms_current_sensor">
          <type>amperage/phaseamperage</type>
          <sensorId>CURRENT_1</sensorId>
          <value>
            <getOid>phase_a_rms_current</getOid>
          </value>
          <valueInc>1.0</valueInc>
          <label>Phase A Rms Current</label>
          <sensorSet>Current</sensorSet>
        </numSensor>

        <numSensor ruleid="phase_b_rms_current_sensor">
          <type>amperage/phaseamperage</type>
          <sensorId>CURRENT_2</sensorId>
          <value>
            <getOid>phase_b_rms_current</getOid>
          </value>
          <valueInc>1.0</valueInc>
          <label>Phase B Rms Current</label>
          <sensorSet>Current</sensorSet>
        </numSensor>

        <numSensor ruleid="phase_c_rms_current_sensor">
          <type>amperage/phaseamperage</type>
          <sensorId>CURRENT_3</sensorId>
          <value>
            <getOid>phase_c_rms_current</getOid>
          </value>
          <valueInc>1.0</valueInc>
          <label>Phase C Rms Current</label>
          <sensorSet>Current</sensorSet>
        </numSensor>

        <numSensor ruleid="percent_load_to_trip_sensor">
          <type>pctofcapacity</type>
          <sensorId>PERCENT_LOAD_TO_TRIP</sensorId>
          <value>
            <getOid>percent_load_to_trip</getOid>
          </value>
          <valueInc>1.0</valueInc>
          <label>Percent Load To Trip</label>
          <sensorSet>Other</sensorSet>
        </numSensor>

        <numSensor ruleid="ground_current_sensor">
          <type>amperage</type>
          <sensorId>GROUND_CURRENT_5</sensorId>
          <value>
            <getOid>ground_current</getOid>
          </value>
          <valueInc>1.0</valueInc>
          <label>Ground Current</label>
          <sensorSet>Current</sensorSet>
        </numSensor>

        <numSensor ruleid="a_n_rms_voltage_sensor">
          <type>voltageAC</type>
          <sensorId>VOLTAGE_LN_1</sensorId>
          <value>
            <!-- Value is in  kV with 2 decimal places 
                 value * 1000 / 100 = value * 10
              -->
            <mult>
              <op>
                <getOid>a_n_rms_voltage</getOid>
              </op>
              <op>10</op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>A-N Rms Voltage</label>
          <sensorSet>Voltage</sensorSet>
        </numSensor>

        <numSensor ruleid="b_n_rms_voltage_sensor">
          <type>voltageAC</type>
          <sensorId>VOLTAGE_LN_2</sensorId>
          <value>
            <!-- Value is in  kV with 2 decimal places 
                 value * 1000 / 100 = value * 10
              -->
            <mult>
              <op>
                <getOid>b_n_rms_voltage</getOid>
              </op>
              <op>10</op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>B-N Rms Voltage</label>
          <sensorSet>Voltage</sensorSet>
        </numSensor>

        <numSensor ruleid="c_n_rms_voltage_sensor">
          <type>voltageAC</type>
          <sensorId>VOLTAGE_LN_3</sensorId>
          <value>
            <!-- Value is in  kV with 2 decimal places 
                 value * 1000 / 100 = value * 10
              -->
            <mult>
              <op>
                <getOid>c_n_rms_voltage</getOid>
              </op>
              <op>10</op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>C-N Rms Voltage</label>
          <sensorSet>Voltage</sensorSet>
        </numSensor>

        <numSensor ruleid="a_b_rms_voltage_sensor">
          <type>voltageAC</type>
          <sensorId>VOLTAGE_LL_1</sensorId>
          <value>
            <!-- Value is in  kV with 2 decimal places 
                 value * 1000 / 100 = value * 10
              -->
            <mult>
              <op>
                <getOid>a_b_rms_voltage</getOid>
              </op>
              <op>10</op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>A-B Rms Voltage</label>
          <sensorSet>Voltage</sensorSet>
        </numSensor>

        <numSensor ruleid="b_c_rms_voltage_sensor">
          <type>voltageAC</type>
          <sensorId>VOLTAGE_LL_2</sensorId>
          <value>
            <!-- Value is in  kV with 2 decimal places 
                 value * 1000 / 100 = value * 10
              -->
            <mult>
              <op>
                <getOid>b_c_rms_voltage</getOid>
              </op>
              <op>10</op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>B-C Rms Voltage</label>
          <sensorSet>Voltage</sensorSet>
        </numSensor>

        <numSensor ruleid="c_a_rms_voltage_sensor">
          <type>voltageAC</type>
          <sensorId>VOLTAGE_LL_3</sensorId>
          <value>
            <!-- Value is in  kV with 2 decimal places 
                 value * 1000 / 100 = value * 10
              -->
            <mult>
              <op>
                <getOid>c_a_rms_voltage</getOid>
              </op>
              <op>10</op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>C-A Rms Voltage</label>
          <sensorSet>Voltage</sensorSet>
        </numSensor>

        <numSensor ruleid="average_current_sensor">
          <type>amperage</type>
          <sensorId>AVERAGE_CURRENT_1</sensorId>
          <value>
            <getOid>average_current</getOid>
          </value>
          <valueInc>1.0</valueInc>
          <label>Average Current</label>
          <sensorSet>Current</sensorSet>
        </numSensor>

        <numSensor ruleid="average_line_voltage_sensor">
          <type>voltageAC</type>
          <sensorId>AVERAGE_VOLTAGE_LL_1</sensorId>
          <value>
            <!-- Value is in  kV with 2 decimal places 
                 value * 1000 / 100 = value * 10
              -->
            <mult>
              <op>
                <getOid>average_line_voltage</getOid>
              </op>
              <op>10</op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Average Line Voltage</label>
          <sensorSet>Voltage</sensorSet>
        </numSensor>

        <numSensor ruleid="average_phase_voltage_sensor">
          <type>voltageAC</type>
          <sensorId>AVERAGE_VOLTAGE_LN_1</sensorId>
          <value>
            <!-- Value is in  kV with 2 decimal places 
                 value * 1000 / 100 = value * 10
              -->
            <mult>
              <op>
                <getOid>average_phase_voltage</getOid>
              </op>
              <op>10</op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Average Phase Voltage</label>
          <sensorSet>Voltage</sensorSet>
        </numSensor>

        <numSensor ruleid="neutral_current_sensor">
          <type>amperage</type>
          <sensorId>NEUTRAL_CURRENT_4</sensorId>
          <value>
            <getOid>neutral_current</getOid>
          </value>
          <valueInc>1.0</valueInc>
          <label>Neutral Current</label>
          <sensorSet>Current</sensorSet>
        </numSensor>

        <numSensor ruleid="three_phase_real_power_sensor">
          <type>num/powerKW</type>
          <sensorId>TOTAL_POWER_KW_1</sensorId>
          <value>
            <!-- Energy/Power values need to be multiplied 
                 by a power quantity multiplier
              -->
            <mult>
              <op>
                <getOid>three_phase_real_power</getOid>
              </op>
              <op>
                <getOid default="1">power_quantity_multiplier</getOid>
              </op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Three Phase Real Power</label>
          <sensorSet>Power</sensorSet>
        </numSensor>

        <numSensor ruleid="three_phase_reactive_power_sensor">
          <type>num/powerKVAR</type>
          <sensorId>TOTAL_POWER_KVAR_1</sensorId>
          <value>
            <!-- Energy/Power values need to be multiplied 
                 by a power quantity multiplier
              -->
            <mult>
              <op>
                <getOid>three_phase_reactive_power</getOid>
              </op>
              <op>
                <getOid default="1">power_quantity_multiplier</getOid>
              </op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Three Phase Reactive Power</label>
          <sensorSet>Power</sensorSet>
        </numSensor>

        <numSensor ruleid="three_phase_apparent_power_sensor">
          <type>num/powerKVA</type>
          <sensorId>TOTAL_POWER_KVA_1</sensorId>
          <value>
            <!-- Energy/Power values need to be multiplied 
                 by a power quantity multiplier
              -->
            <mult>
              <op>
                <getOid>three_phase_apparent_power</getOid>
              </op>
              <op>
                <getOid default="1">power_quantity_multiplier</getOid>
              </op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Three Phase Apparent Power</label>
          <sensorSet>Power</sensorSet>
        </numSensor>

        <numSensor ruleid="three_phase_power_factor_sensor">
          <type>num/powerfactor</type>
          <sensorId>TOTAL_POWER_FACTOR_1</sensorId>
          <value>
            <!--  
                 divide value by 100
              -->
            <mult>
              <op>
                <getOid>three_phase_power_factor</getOid>
              </op>
              <op>0.01</op>
            </mult>
          </value>
          <valueInc>0.01</valueInc>
          <label>Three Phase Power Factor</label>
          <sensorSet>Power</sensorSet>
        </numSensor>

        <numSensor ruleid="system_frequency_sensor">
          <type>frequency</type>
          <sensorId>SYSTEM_FREQUENCY_1</sensorId>
          <value>
            <!--  
                 divide value by 100
              -->
            <mult>
              <op>
                <getOid>system_frequency</getOid>
              </op>
              <op>0.01</op>
            </mult>
          </value>
          <valueInc>0.01</valueInc>
          <label>System Frequency</label>
          <sensorSet>Other</sensorSet>
        </numSensor>

        <numSensor ruleid="synchronizing_rms_voltage_sensor">
          <type>voltageAC</type>
          <sensorId>SYNCHRONIZING_RMS_VOLTAGE</sensorId>
          <value>
            <!-- Value is in  kV with 2 decimal places 
                 value * 1000 / 100 = value * 10
              -->
            <mult>
              <op>
                <getOid>synchronizing_rms_voltage</getOid>
              </op>
              <op>10</op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Synchronizing Rms Voltage</label>
          <sensorSet>Synchronizing</sensorSet>
        </numSensor>

        <numSensor ruleid="synchronizing_rms_voltage_frequency_sensor">
          <type>frequency</type>
          <sensorId>SYNCHRONIZING_RMS_VOLTAGE_FREQUENCY_1</sensorId>
          <value>
            <!-- Divide by 100 -->
            <mult>
              <op>
                <getOid>synchronizing_rms_voltage_frequency</getOid>
              </op>
              <op>0.01</op>
            </mult>
            <getOid>synchronizing_rms_voltage_frequency</getOid>
          </value>
          <valueInc>0.01</valueInc>
          <label>Synchronizing Rms Voltage Frequency</label>
          <sensorSet>Synchronizing</sensorSet>
        </numSensor>

        <numSensor ruleid="synchronizing_voltage_difference_sensor">
          <type>voltageAC</type>
          <sensorId>SYNCHRONIZING_VOLTAGE_DIFFERENCE</sensorId>
          <value>
            <!-- Value is in  kV with 2 decimal places 
                 value * 1000 / 100 = value * 10
              -->
            <mult>
              <op>
                <getOid>synchronizing_voltage_difference</getOid>
              </op>
              <op>10</op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Synchronizing Voltage Difference</label>
          <sensorSet>Synchronizing</sensorSet>
        </numSensor>

        <numSensor ruleid="synchronizing_phase_difference_sensor">
          <type>num</type>
          <units>degreesAngle</units>
          <sensorId>SYNCHRONIZING_PHASE_DIFFERENCE</sensorId>
          <value>
            <getOid>synchronizing_phase_difference</getOid>
          </value>
          <valueInc>1.0</valueInc>
          <label>Synchronizing Phase Difference</label>
          <sensorSet>Synchronizing</sensorSet>
        </numSensor>

        <numSensor ruleid="synchronizing_frequency_difference_sensor">
          <type>frequency</type>
          <sensorId>SYNCHRONIZING_DIFFERENCE_FREQUENCY_1</sensorId>
          <value>
            <!-- Divide by 100 -->
            <mult>
              <op>
                <getOid>synchronizing_frequency_difference</getOid>
              </op>
              <op>0.01</op>
            </mult>
          </value>
          <valueInc>0.01</valueInc>
          <label>Synchronizing Frequency Difference</label>
          <sensorSet>Synchronizing</sensorSet>
        </numSensor>

        <numSensor ruleid="synchronizing_voltage_angle_sensor">
          <type>num</type>
          <units>degreesAngle</units>
          <sensorId>SYNCHRONIZING_VOLTAGE_ANGLE</sensorId>
          <value>
            <getOid>synchronizing_voltage_angle</getOid>
          </value>
          <valueInc>1.0</valueInc>
          <label>Synchronizing Voltage Angle</label>
          <sensorSet>Synchronizing</sensorSet>
        </numSensor>

        <numSensor ruleid="positive_watthours_sensor">
          <type>num/kwatthr</type>
          <sensorId>TOTAL_ENERGY_REC_KWH_1</sensorId>
          <value>
            <!-- Energy/Power values need to be multiplied 
                 by a power quantity multiplier
              -->
            <mult>
              <op>
                <getOid>positive_watthours</getOid>
              </op>
              <op>
                <getOid default="1">power_quantity_multiplier</getOid>
              </op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Positive Watthours (Real Energy kWh)</label>
          <sensorSet>Energy</sensorSet>
        </numSensor>

        <numSensor ruleid="positive_watthour_cost_sensor">
          <type>num</type>
          <sensorId>POSITIVE_WATTHOUR_COST</sensorId>
          <value>
            <getOid>positive_watthour_cost</getOid>
          </value>
          <valueInc>1.0</valueInc>
          <label>Positive Watthour Cost ($)</label>
          <sensorSet>Energy</sensorSet>
        </numSensor>

        <numSensor ruleid="phase_a_real_power_sensor">
          <type>num/powerKW</type>
          <sensorId>POWER_KW_1</sensorId>
          <value>
            <!-- Energy/Power values need to be multiplied 
                 by a power quantity multiplier
              -->
            <mult>
              <op>
                <getOid>phase_a_real_power</getOid>
              </op>
              <op>
                <getOid default="1">power_quantity_multiplier</getOid>
              </op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Phase A Real Power</label>
          <sensorSet>Power</sensorSet>
        </numSensor>

        <numSensor ruleid="phase_b_real_power_sensor">
          <type>num/powerKW</type>
          <sensorId>POWER_KW_2</sensorId>
          <value>
            <!-- Energy/Power values need to be multiplied 
                 by a power quantity multiplier
              -->
            <mult>
              <op>
                <getOid>phase_b_real_power</getOid>
              </op>
              <op>
                <getOid default="1">power_quantity_multiplier</getOid>
              </op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Phase B Real Power</label>
          <sensorSet>Power</sensorSet>
        </numSensor>

        <numSensor ruleid="phase_c_real_power_sensor">
          <type>num/powerKW</type>
          <sensorId>POWER_KW_3</sensorId>
          <value>
            <!-- Energy/Power values need to be multiplied 
                 by a power quantity multiplier
              -->
            <mult>
              <op>
                <getOid>phase_c_real_power</getOid>
              </op>
              <op>
                <getOid default="1">power_quantity_multiplier</getOid>
              </op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Phase C Real Power</label>
          <sensorSet>Power</sensorSet>
        </numSensor>

        <numSensor ruleid="maximum_real_power_demand_sensor">
          <type>num/powerKW</type>
          <sensorId>TOTAL_PEAK_POWER_KW_1</sensorId>
          <value>
            <!-- Energy/Power values need to be multiplied 
                 by a power quantity multiplier
              -->
            <mult>
              <op>
                <getOid>maximum_real_power_demand</getOid>
              </op>
              <op>
                <getOid default="1">power_quantity_multiplier</getOid>
              </op>
            </mult>
          </value>
          <valueInc>1.0</valueInc>
          <label>Maximum Real Power Demand</label>
          <sensorSet>Power</sensorSet>
        </numSensor>

        <numSensor ruleid="breaker_trips_sensor">
          <type>num</type>
          <sensorId>BREAKER_TRIPS</sensorId>
          <value>
            <getOid>breaker_trips</getOid>
          </value>
          <valueInc>1.0</valueInc>
          <label>Breaker Trips</label>
          <sensorSet>Other</sensorSet>
        </numSensor>

        <numSensor ruleid="cost_of_energy_sensor">
          <type>num</type>
          <sensorId>COST_OF_ENERGY</sensorId>
          <value>
            <!-- Divide value by 10 -->
            <div>
              <op>
                <getOid>cost_of_energy</getOid>
              </op>
              <op>10</op>
            </div>
          </value>
           <valueInc>0.01</valueInc>
         <label>Cost Of Energy (cents/kWh)</label>
          <sensorSet>Other</sensorSet>
        </numSensor>
  </device>


  <protocol>
    <modbus>

        <value_ref_id valid="neutral_voltage">
            <function>3</function>
            <start_addr>766</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="sensitive_ground_current">
            <function>3</function>
            <start_addr>767</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="phase_a_rms_current">
            <function>3</function>
            <start_addr>768</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="phase_b_rms_current">
            <function>3</function>
            <start_addr>769</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="phase_c_rms_current">
            <function>3</function>
            <start_addr>770</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="percent_load_to_trip">
            <function>3</function>
            <start_addr>771</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="ground_current">
            <function>3</function>
            <start_addr>772</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="a_n_rms_voltage">
            <function>3</function>
            <start_addr>773</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="b_n_rms_voltage">
            <function>3</function>
            <start_addr>774</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="c_n_rms_voltage">
            <function>3</function>
            <start_addr>775</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="a_b_rms_voltage">
            <function>3</function>
            <start_addr>776</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="b_c_rms_voltage">
            <function>3</function>
            <start_addr>777</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="c_a_rms_voltage">
            <function>3</function>
            <start_addr>778</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>

        <value_ref_id valid="average_current">
            <function>3</function>
            <start_addr>780</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="average_line_voltage">
            <function>3</function>
            <start_addr>781</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="average_phase_voltage">
            <function>3</function>
            <start_addr>782</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="neutral_current">
            <function>3</function>
            <start_addr>783</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="three_phase_real_power">
            <function>3</function>
            <start_addr>784</start_addr>
            <quantity>1</quantity>
            <type>int_16</type>
        </value_ref_id>
        <value_ref_id valid="three_phase_reactive_power">
            <function>3</function>
            <start_addr>785</start_addr>
            <quantity>1</quantity>
            <type>int_16</type>
        </value_ref_id>
        <value_ref_id valid="three_phase_apparent_power">
            <function>3</function>
            <start_addr>786</start_addr>
            <quantity>1</quantity>
            <type>int_16</type>
        </value_ref_id>
        <value_ref_id valid="three_phase_power_factor">
            <function>3</function>
            <start_addr>787</start_addr>
            <quantity>1</quantity>
            <type>int_16</type>
        </value_ref_id>
        <value_ref_id valid="system_frequency">
            <function>3</function>
            <start_addr>788</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>

        <value_ref_id valid="power_quantity_multiplier">
            <function>3</function>
            <start_addr>790</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>

        <value_ref_id valid="synchronizing_rms_voltage">
            <function>3</function>
            <start_addr>792</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="synchronizing_rms_voltage_frequency">
            <function>3</function>
            <start_addr>793</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="synchronizing_voltage_difference">
            <function>3</function>
            <start_addr>794</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="synchronizing_phase_difference">
            <function>3</function>
            <start_addr>795</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="synchronizing_frequency_difference">
            <function>3</function>
            <start_addr>796</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>
        <value_ref_id valid="synchronizing_voltage_angle">
            <function>3</function>
            <start_addr>797</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>

        <value_ref_id valid="positive_watthours">
            <function>3</function>
            <start_addr>800</start_addr>
            <quantity>2</quantity>
            <type>uint_32</type>
        </value_ref_id>
        <value_ref_id valid="positive_watthour_cost">
            <function>3</function>
            <start_addr>802</start_addr>
            <quantity>2</quantity>
            <type>uint_32</type>
        </value_ref_id>

        <value_ref_id valid="maximum_real_power_demand">
            <function>3</function>
            <start_addr>847</start_addr>
            <quantity>1</quantity>
            <type>int_16</type>
        </value_ref_id>

        <value_ref_id valid="phase_a_real_power">
            <function>3</function>
            <start_addr>864</start_addr>
            <quantity>1</quantity>
            <type>int_16</type>
        </value_ref_id>

        <value_ref_id valid="phase_b_real_power">
            <function>3</function>
            <start_addr>868</start_addr>
            <quantity>1</quantity>
            <type>int_16</type>
        </value_ref_id>

        <value_ref_id valid="phase_c_real_power">
            <function>3</function>
            <start_addr>872</start_addr>
            <quantity>1</quantity>
            <type>int_16</type>
        </value_ref_id>

        <value_ref_id valid="breaker_trips">
            <function>3</function>
            <start_addr>896</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>

        <value_ref_id valid="user_text_message_1">
            <function>3</function>
            <start_addr>4160</start_addr>
            <quantity>20</quantity>
            <type>ascii</type>
        </value_ref_id>

        <value_ref_id valid="cost_of_energy">
            <function>3</function>
            <start_addr>4359</start_addr>
            <quantity>1</quantity>
            <type>uint_16</type>
        </value_ref_id>


        <packet>
            <function>3</function>
            <start_addr>766</start_addr>
            <quantity>13</quantity>
        </packet>
        <packet>
            <function>3</function>
            <start_addr>780</start_addr>
            <quantity>9</quantity>
        </packet>
        <packet>
            <function>3</function>
            <start_addr>790</start_addr>
            <quantity>1</quantity>
        </packet>
        <packet>
            <function>3</function>
            <start_addr>792</start_addr>
            <quantity>6</quantity>
        </packet>
        <packet>
            <function>3</function>
            <start_addr>800</start_addr>
            <quantity>4</quantity>
        </packet>
        <packet>
            <function>3</function>
            <start_addr>847</start_addr>
            <quantity>1</quantity>
        </packet>
        <packet>
            <function>3</function>
            <start_addr>864</start_addr>
            <quantity>1</quantity>
        </packet>
        <packet>
            <function>3</function>
            <start_addr>868</start_addr>
            <quantity>1</quantity>
        </packet>
        <packet>
            <function>3</function>
            <start_addr>872</start_addr>
            <quantity>1</quantity>
        </packet>
        <packet>
            <function>3</function>
            <start_addr>896</start_addr>
            <quantity>1</quantity>
        </packet>
        <packet>
            <function>3</function>
            <start_addr>4160</start_addr>
            <quantity>20</quantity>
        </packet>
        <packet>
            <function>3</function>
            <start_addr>4359</start_addr>
            <quantity>1</quantity>
        </packet>

    </modbus>
  </protocol>
</APC_DDF>
