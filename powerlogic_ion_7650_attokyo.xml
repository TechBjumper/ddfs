<?xml version="1.0"?>
<!-- Same as standard ion7650 DDF but with support for I/O module installed and 16 DIs mapped to registers 40011-40026 -->
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_4.xsd"
		 ddfid="powerlogic_ion_7650_attokyo" ddfname="PowerLogic ION 7650 - At Tokyo" ddfversion="4">
	<schemaVersion>1.4</schemaVersion>

	<device deviceid="powerlogic_ion_7650_attokyo">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<setProductData ruleid="vendordata" field="vendor">PowerLogic</setProductData>
		<setProductData ruleid="modeldata" field="model">PowerLogic ION7650</setProductData>
		<setProductData ruleid="typedata" field="type">Power Meter</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
		<setProductData ruleid="appversion" field="appversion">
			<getOid>firmware_version</getOid>
		</setProductData>

		<numSensor ruleid="power_kva_tot">
			<rowTest>
				<mapValue mapid="delete_null_sensor_i32">
					<getOid default="-1">kvatot</getOid>
				</mapValue>
			</rowTest>
			<type>num/powerKVA</type>
			<sensorId>TOTAL_POWER_KVA_1</sensorId>
			<value>
				<getOid>kvatot</getOid>
			</value>
			<label>kVA tot</label> 
			<sensorSet>Power Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="input_current_ia">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u16">
					<getOid default="-1">ia</getOid>
				</mapValue>
			</rowTest>
			<type>amperage</type>
			<sensorId>CURRENT_1</sensorId>
			<value>
				<mult>
					<op><getOid>ia</getOid></op>
					<op>0.1</op>
				</mult>
			</value>
			<label>I a</label> 
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="input_current_ib">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u16">
					<getOid default="-1">ib</getOid>
				</mapValue>
			</rowTest>
			<type>amperage</type>
			<sensorId>CURRENT_2</sensorId>
			<value>
				<mult>
					<op><getOid>ib</getOid></op>
					<op>0.1</op>
				</mult>
			</value>
			<label>I b</label> 
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="input_current_ic">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u16">
					<getOid default="-1">ic</getOid>
				</mapValue>
			</rowTest>
			<type>amperage</type>
			<sensorId>CURRENT_3</sensorId>
			<value>
				<mult>
					<op><getOid>ic</getOid></op>
					<op>0.1</op>
				</mult>
			</value>
			<label>I c</label> 
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>
	 
		<numSensor ruleid="input_current_ia_demand">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u16">
					<getOid default="-1">iademand</getOid>
				</mapValue>
			</rowTest>
			<type>amperage</type>
			<sensorId>CURRENT_DEMAND_1</sensorId>
			<value>
				<mult>
					<op><getOid>iademand</getOid></op>
					<op>0.1</op>
				</mult>
			</value>
			<label>I a Demand</label> 
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_current_ib_demand">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u16">
					<getOid default="-1">ibdemand</getOid>
				</mapValue>
			</rowTest>
			<type>amperage</type>
			<sensorId>CURRENT_DEMAND_2</sensorId>
			<value>
				<mult>
					<op><getOid>ibdemand</getOid></op>
					<op>0.1</op>
				</mult>
			</value>
			<label>I b Demand</label> 
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_current_ic_demand">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u16">
					<getOid default="-1">icdemand</getOid>
				</mapValue>
			</rowTest>
			<type>amperage</type>
			<sensorId>CURRENT_DEMAND_3</sensorId>
			<value>
				<mult>
					<op><getOid>icdemand</getOid></op>
					<op>0.1</op>
				</mult>
			</value>
			<label>I c Demand</label> 
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_current_ia_demand_pk">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u16">
					<getOid default="-1">iademandpk</getOid>
				</mapValue>
			</rowTest>
			<type>amperage</type>
			<sensorId>CURRENT_DEMAND_PK_1</sensorId>
			<value>
				<mult>
					<op><getOid>iademandpk</getOid></op>
					<op>0.1</op>
				</mult>
			</value>
			<label>I a Peak Demand</label> 
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_current_ib_demand_pk">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u16">
					<getOid default="-1">ibdemandpk</getOid>
				</mapValue>
			</rowTest>
			<type>amperage</type>
			<sensorId>CURRENT_DEMAND_PK_2</sensorId>
			<value>
				<mult>
					<op><getOid>ibdemandpk</getOid></op>
					<op>0.1</op>
				</mult>
			</value>
			<label>I b Peak Demand</label> 
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="input_current_ic_demand_pk">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u16">
					<getOid default="-1">icdemandpk</getOid>
				</mapValue>
			</rowTest>
			<type>amperage</type>
			<sensorId>CURRENT_DEMAND_PK_3</sensorId>
			<value>
				<mult>
					<op><getOid>icdemandpk</getOid></op>
					<op>0.1</op>
				</mult>
			</value>
			<label>I c Peak Demand</label> 
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="voltage_ll_ab">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u32">
					<getOid default="-1">v_ll_ab</getOid>
				</mapValue>
			</rowTest>
			<type>voltage</type>
			<sensorId>VOLTAGE_LL_1</sensorId>
			<value>
				<getOid>v_ll_ab</getOid>
			</value>
			<label>Vll a-b</label> 
			<sensorSet>Voltage Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="voltage_ll_bc">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u32">
					<getOid default="-1">v_ll_bc</getOid>
				</mapValue>
			</rowTest>
			<type>voltage</type>
			<sensorId>VOLTAGE_LL_2</sensorId>
			<value>
				<getOid>v_ll_bc</getOid>
			</value>
			<label>Vll b-c</label> 
			<sensorSet>Voltage Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="voltage_ll_ca">
			<rowTest>
				<mapValue mapid="delete_null_sensor_u32">
					<getOid default="-1">v_ll_ca</getOid>
				</mapValue>
			</rowTest>
			<type>voltage</type>
			<sensorId>VOLTAGE_LL_3</sensorId>
			<value>
				<getOid>v_ll_ca</getOid>
			</value>
			<label>Vll c-a</label> 
			<sensorSet>Voltage Sensors</sensorSet>
		</numSensor>
	
		<numSensor ruleid="kwh_del">
			<rowTest>
				<mapValue mapid="delete_null_sensor_i32">
					<getOid default="-1">kwhdel</getOid>
				</mapValue>
			</rowTest>
			<type>num/kwatthr</type>
			<sensorId>TOTAL_ENERGY_DEL_KWH_1</sensorId>
			<value>
				<getOid>kwhdel</getOid>
			</value>
			<label>kWh del</label> 
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
	
	<!-- Modbus Slave Module is an add-on to the power meter -->
	<!-- Configurable as to what registers it maps to -->
	<!-- Can be used for add-ons with different purposes-->
	<!-- This DDF is setup to expect an I/O module add-on with 16 discrete inputs mapped to the specified regs -->
	<!-- If registers are not mapped, value should be FFFF -->
	<stateSensor ruleid="slave_module1_input" index="slave_module1_input">
		<rowTest>
			<mapValue mapid="delete_null_sensor2">
				<getRowOid default="65535">slave_module1_input</getRowOid>
			</mapValue>
		</rowTest>
		<type>state</type>
		<sensorId>SLAVE_MODULE_1_INPUT_STATUS_<rowNumber/></sensorId>
		<value>
			<mapValue mapid="iostatus-vm"><getRowOid>slave_module1_input</getRowOid></mapValue>
		</value>
		<label>Slave Module Input Status<space/><formatNumber><add><op><rowNumber/></op><op>1</op></add></formatNumber></label>
		<enum>iostatus-em</enum>
		<sensorSet>Discrete Input Status Sensors</sensorSet>
	</stateSensor>

	<!-- I/O Status value map -->
	<valueMap ruleid="iostatus-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<!-- I/O Status Enums -->
	<enumMap ruleid="iostatus-em">
		<label>Off</label>
		<label>On</label>
	</enumMap> 

	<valueMap ruleid="delete_null_sensor_i32">
		<valueIn>-1</valueIn><valueOut>[false]</valueOut>
		<valueIn>*</valueIn><valueOut>[true]</valueOut>
	</valueMap> 

	<valueMap ruleid="delete_null_sensor_u32">
		<valueIn>4294967295</valueIn><valueOut>[false]</valueOut>
		<valueIn>-1</valueIn><valueOut>[false]</valueOut>
		<valueIn>*</valueIn><valueOut>[true]</valueOut>
	</valueMap> 

	<valueMap ruleid="delete_null_sensor_u16">
		<valueIn>65535</valueIn><valueOut>[false]</valueOut>
		<valueIn>-1</valueIn><valueOut>[false]</valueOut>
		<valueIn>*</valueIn><valueOut>[true]</valueOut>
	</valueMap> 

	<valueMap ruleid="delete_null_sensor2">
		<valueIn>0</valueIn><valueOut>[true]</valueOut>
		<valueIn>1</valueIn><valueOut>[true]</valueOut>
		<valueIn>*</valueIn><valueOut>[false]</valueOut>
	</valueMap> 
	</device>

	<protocol>
		<modbus>
		<!-- Modbus Slave Module is an add-on to the power meter -->
		<!-- Configurable as to what registers it maps to -->
		<!-- Can be used for add-ons with different purposes-->
		<!-- This DDF is setup to expect an I/O module add-on with 16 discrete inputs mapped to the specified regs -->
		<!-- If registers are not mapped, value should be FFFF -->
		<table_ref_id indexid="slave_module1_input">
			<entry num="1">slave_module1_input1</entry>
			<entry num="2">slave_module1_input2</entry>
			<entry num="3">slave_module1_input3</entry>
			<entry num="4">slave_module1_input4</entry>
			<entry num="5">slave_module1_input5</entry>
			<entry num="6">slave_module1_input6</entry>
			<entry num="7">slave_module1_input7</entry>
			<entry num="8">slave_module1_input8</entry>
			<entry num="9">slave_module1_input9</entry>
			<entry num="10">slave_module1_input10</entry>
			<entry num="11">slave_module1_input11</entry>
			<entry num="12">slave_module1_input12</entry>
			<entry num="13">slave_module1_input13</entry>
			<entry num="14">slave_module1_input14</entry>
			<entry num="15">slave_module1_input15</entry>
			<entry num="16">slave_module1_input16</entry>
			<entry num="17">slave_module1_input17</entry>
			<entry num="18">slave_module1_input18</entry>
			<entry num="19">slave_module1_input19</entry>
			<entry num="20">slave_module1_input20</entry>
			<entry num="21">slave_module1_input21</entry>
			<entry num="22">slave_module1_input22</entry>
			<entry num="23">slave_module1_input23</entry>
			<entry num="24">slave_module1_input24</entry>
			<entry num="25">slave_module1_input25</entry>
			<entry num="26">slave_module1_input26</entry>
			<entry num="27">slave_module1_input27</entry>
			<entry num="28">slave_module1_input28</entry>
			<entry num="29">slave_module1_input29</entry>
			<entry num="30">slave_module1_input30</entry>
			<entry num="31">slave_module1_input31</entry>
			<entry num="32">slave_module1_input32</entry>
		</table_ref_id>
		<value_ref_id valid="slave_module1_input1">
			<function>3</function>
			<start_addr>10</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input2">
			<function>3</function>
			<start_addr>11</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input3">
			<function>3</function>
			<start_addr>12</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input4">
			<function>3</function>
			<start_addr>13</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input5">
			<function>3</function>
			<start_addr>14</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input6">
			<function>3</function>
			<start_addr>15</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input7">
			<function>3</function>
			<start_addr>16</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input8">
			<function>3</function>
			<start_addr>17</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input9">
			<function>3</function>
			<start_addr>18</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input10">
			<function>3</function>
			<start_addr>19</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input11">
			<function>3</function>
			<start_addr>20</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input12">
			<function>3</function>
			<start_addr>21</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input13">
			<function>3</function>
			<start_addr>22</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input14">
			<function>3</function>
			<start_addr>23</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input15">
			<function>3</function>
			<start_addr>24</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input16">
			<function>3</function>
			<start_addr>25</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>

		<value_ref_id valid="slave_module1_input17">
			<function>3</function>
			<start_addr>26</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input18">
			<function>3</function>
			<start_addr>27</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input19">
			<function>3</function>
			<start_addr>28</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input20">
			<function>3</function>
			<start_addr>29</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input21">
			<function>3</function>
			<start_addr>30</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input22">
			<function>3</function>
			<start_addr>31</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input23">
			<function>3</function>
			<start_addr>32</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input24">
			<function>3</function>
			<start_addr>33</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input25">
			<function>3</function>
			<start_addr>34</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input26">
			<function>3</function>
			<start_addr>35</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input27">
			<function>3</function>
			<start_addr>36</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input28">
			<function>3</function>
			<start_addr>37</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input29">
			<function>3</function>
			<start_addr>38</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input30">
			<function>3</function>
			<start_addr>39</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input31">
			<function>3</function>
			<start_addr>40</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="slave_module1_input32">
			<function>3</function>
			<start_addr>41</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
			<!-- these 6 are custom; not part of std reg map -->
		<value_ref_id valid="iademand">
			<function>3</function>
			<start_addr>49</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="ibdemand">
			<function>3</function>
			<start_addr>50</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="icdemand">
			<function>3</function>
			<start_addr>51</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="iademandpk">
			<function>3</function>
			<start_addr>52</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="ibdemandpk">
			<function>3</function>
			<start_addr>53</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="icdemandpk">
			<function>3</function>
			<start_addr>54</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>

			<!-- Current sensors -->
		<value_ref_id valid="ia">
			<function>3</function>
			<start_addr>149</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="ib">
			<function>3</function>
			<start_addr>150</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="ic">
			<function>3</function>
			<start_addr>151</start_addr>
			<quantity>1</quantity>
			<type>uint_16</type>
		</value_ref_id>
		<value_ref_id valid="v_ll_ab">
			<function>3</function>
			<start_addr>177</start_addr>
			<quantity>2</quantity>
			<type>uint_32</type>
		</value_ref_id>
		<value_ref_id valid="v_ll_bc">
			<function>3</function>
			<start_addr>179</start_addr>
			<quantity>2</quantity>
			<type>uint_32</type>
		</value_ref_id>
		<value_ref_id valid="v_ll_ca">
			<function>3</function>
			<start_addr>181</start_addr>
			<quantity>2</quantity>
			<type>uint_32</type>
		</value_ref_id>
		<value_ref_id valid="kwtot">
			<function>3</function>
			<start_addr>203</start_addr>
			<quantity>2</quantity>
			<type>int_32</type>
		</value_ref_id>
		<value_ref_id valid="kvatot">
			<function>3</function>
			<start_addr>223</start_addr>
			<quantity>2</quantity>
			<type>int_32</type>
		</value_ref_id>
		<value_ref_id valid="kwhdel">
			<function>3</function>
			<start_addr>229</start_addr>
			<quantity>2</quantity>
			<type>int_32</type>
		</value_ref_id>
			
		<packet>
			<function>3</function>
			<start_addr>10</start_addr>
			<quantity>32</quantity>
		</packet>
		<packet>
			<function>3</function>
			<start_addr>49</start_addr>
			<quantity>6</quantity>
		</packet>
		<packet>
			<function>3</function>
			<start_addr>149</start_addr>
			<quantity>3</quantity>
		</packet>
		<packet>
			<function>3</function>
			<start_addr>177</start_addr>
			<quantity>6</quantity>
		</packet>
		<packet>
			<function>3</function>
			<start_addr>203</start_addr>
			<quantity>2</quantity>
		</packet>
		<packet>
			<function>3</function>
			<start_addr>223</start_addr>
			<quantity>2</quantity>
		</packet>			
		<packet>
			<function>3</function>
			<start_addr>229</start_addr>
			<quantity>2</quantity>
		</packet>			

		</modbus>
	</protocol>
</APC_DDF>
