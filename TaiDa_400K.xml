<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="TaiDa_400K" ddfname="TaiDa 400K" ddfversion="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="TaiDa_400K">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">TaiDa</setProductData>
    <setProductData ruleid="modeldata" field="model">400K</setProductData>
    <setProductData ruleid="typedata" field="type">UPS</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />
      - Slave
      <commSetting field="slaveaddress" />
    </setDefaultLabel>
    <numSensor ruleid="low_transfer_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_LOW_TRANSFER_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_1</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Low transfer voltage</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="high_transfer_voltage_">
      <type>voltage</type>
      <units />
      <sensorId>_HIGH_TRANSFER_VOLTAGE_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_2</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>High transfer voltage</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_low_transfer_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_LOW_TRANSFER_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_9</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Bypass low transfer voltage</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_high_transfer_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_HIGH_TRANSFER_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_10</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Bypass high transfer voltage</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_voltage_tolerance">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_VOLTAGE_TOLERANCE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_11</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Bypass voltage tolerance</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="seconds_on_battery">
      <type>timeinsec</type>
      <units />
      <sensorId>_SECONDS_ON_BATTERY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_18</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Seconds on battery</label>
      <sensorSet>Time</sensorSet>
    </numSensor>
    <numSensor ruleid="estimated_minutes_remaining">
      <type>timeinmin</type>
      <units />
      <sensorId>_ESTIMATED_MINUTES_REMAINING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_19</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Estimated minutes remaining</label>
      <sensorSet>Time</sensorSet>
    </numSensor>
    <numSensor ruleid="estimated_charge_remaining">
      <type>num</type>
      <units />
      <sensorId>_ESTIMATED_CHARGE_REMAINING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_20</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Estimated charge remaining</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="battery_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_BATTERY_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_21</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Battery voltage</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="battery_current_">
      <type>amperage</type>
      <units />
      <sensorId>_BATTERY_CURRENT_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_22</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Battery current</label>
      <sensorSet>Amperage</sensorSet>
    </numSensor>
    <numSensor ruleid="battery_temperature">
      <type>temp</type>
      <units />
      <sensorId>_BATTERY_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_23</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Battery temperature</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="battery_level">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_BATTERY_LEVEL</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_24</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Battery level</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="external_battery_pack">
      <type>num</type>
      <units />
      <sensorId>_EXTERNAL_BATTERY_PACK</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_25</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>External battery pack</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="negative_battery_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_NEGATIVE_BATTERY_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_26</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Negative battery voltage</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="negative_battery_current_">
      <type>amperage</type>
      <units />
      <sensorId>_NEGATIVE_BATTERY_CURRENT_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_27</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Negative battery current</label>
      <sensorSet>Amperage</sensorSet>
    </numSensor>
    <numSensor ruleid="negative_battery_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NEGATIVE_BATTERY_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_28</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Negative battery temperature</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="negative_battery_level">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NEGATIVE_BATTERY_LEVEL</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_29</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Negative battery level</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="input_number_lines">
      <type>num</type>
      <units />
      <sensorId>_INPUT_NUMBER_LINES</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_30</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Input number lines</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="input_frequency_1_">
      <type>frequency</type>
      <units />
      <sensorId>_INPUT_FREQUENCY_1_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_31</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input frequency 1</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
    <numSensor ruleid="input_voltage_1">
      <type>voltage</type>
      <units />
      <sensorId>_INPUT_VOLTAGE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_32</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input voltage 1</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="input_current_1">
      <type>amperage</type>
      <units />
      <sensorId>_INPUT_CURRENT_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_33</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input current 1</label>
      <sensorSet>Amperage</sensorSet>
    </numSensor>
    <numSensor ruleid="input_power_1">
      <type>powerW</type>
      <units />
      <sensorId>_INPUT_POWER_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_34</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Input power 1</label>
      <sensorSet>Watt</sensorSet>
    </numSensor>
    <numSensor ruleid="input_frequency_2">
      <type>frequency</type>
      <units />
      <sensorId>_INPUT_FREQUENCY_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_35</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input frequency 2</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
    <numSensor ruleid="input_voltage_2">
      <type>voltage</type>
      <units />
      <sensorId>_INPUT_VOLTAGE_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_36</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input voltage 2</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="input_current_2">
      <type>amperage</type>
      <units />
      <sensorId>_INPUT_CURRENT_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_37</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input current 2</label>
      <sensorSet>Amperage</sensorSet>
    </numSensor>
    <numSensor ruleid="input_power_2">
      <type>powerW</type>
      <units />
      <sensorId>_INPUT_POWER_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_38</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Input power 2</label>
      <sensorSet>Watt</sensorSet>
    </numSensor>
    <numSensor ruleid="input_frequency_3">
      <type>frequency</type>
      <units />
      <sensorId>_INPUT_FREQUENCY_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_39</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input frequency 3</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
    <numSensor ruleid="input_voltage_3">
      <type>voltage</type>
      <units />
      <sensorId>_INPUT_VOLTAGE_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_40</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input voltage 3</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="input_current_3">
      <type>amperage</type>
      <units />
      <sensorId>_INPUT_CURRENT_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_41</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input current 3</label>
      <sensorSet>Amperage</sensorSet>
    </numSensor>
    <numSensor ruleid="input_power_3">
      <type>powerW</type>
      <units />
      <sensorId>_INPUT_POWER_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_42</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Input power 3</label>
      <sensorSet>Watt</sensorSet>
    </numSensor>
    <numSensor ruleid="input_voltage_12">
      <type>voltage</type>
      <units />
      <sensorId>_INPUT_VOLTAGE_12</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_43</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input voltage 12</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="input_voltage_23">
      <type>voltage</type>
      <units />
      <sensorId>_INPUT_VOLTAGE_23</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_44</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input voltage 23</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="input_voltage_31">
      <type>voltage</type>
      <units />
      <sensorId>_INPUT_VOLTAGE_31</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_45</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Input voltage 31</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_frequency_">
      <type>frequency</type>
      <units />
      <sensorId>_OUTPUT_FREQUENCY_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_47</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
    <numSensor ruleid="output_number_lines">
      <type>num</type>
      <units />
      <sensorId>_OUTPUT_NUMBER_LINES</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_48</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Output number lines</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="output_voltage_1">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_VOLTAGE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_49</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output voltage 1</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_current_1">
      <type>amperage</type>
      <units />
      <sensorId>_OUTPUT_CURRENT_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_50</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output current 1</label>
      <sensorSet>Amperage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_power_1">
      <type>powerW</type>
      <units />
      <sensorId>_OUTPUT_POWER_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_51</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Output power 1</label>
      <sensorSet>Watt</sensorSet>
    </numSensor>
    <numSensor ruleid="output_load_1">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_OUTPUT_LOAD_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_52</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Output load 1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="output_voltage_2">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_VOLTAGE_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_53</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output voltage 2</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_current_2">
      <type>amperage</type>
      <units />
      <sensorId>_OUTPUT_CURRENT_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_54</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output current 2</label>
      <sensorSet>Amperage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_power_2">
      <type>powerW</type>
      <units />
      <sensorId>_OUTPUT_POWER_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_55</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Output power 2</label>
      <sensorSet>Watt</sensorSet>
    </numSensor>
    <numSensor ruleid="output_load_2">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_OUTPUT_LOAD_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_56</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Output load 2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="output_voltage_3">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_VOLTAGE_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_57</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output voltage 3</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_current_3">
      <type>amperage</type>
      <units />
      <sensorId>_OUTPUT_CURRENT_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_58</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output current 3</label>
      <sensorSet>Amperage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_power_3">
      <type>powerW</type>
      <units />
      <sensorId>_OUTPUT_POWER_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_59</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Output power 3</label>
      <sensorSet>Watt</sensorSet>
    </numSensor>
    <numSensor ruleid="output_load_3">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_OUTPUT_LOAD_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_60</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Output load 3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="output_voltage_12">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_VOLTAGE_12</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_61</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output voltage 12</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_voltage_23">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_VOLTAGE_23</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_62</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output voltage 23</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_voltage_31">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_VOLTAGE_31</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_63</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output voltage 31</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_BYPASS_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_64</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Bypass frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_number_lines">
      <type>num</type>
      <units />
      <sensorId>_BYPASS_NUMBER_LINES</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_65</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Bypass number lines</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_voltage_1">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_VOLTAGE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_66</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Bypass voltage 1</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_current_1">
      <type>amperage</type>
      <units />
      <sensorId>_BYPASS_CURRENT_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_67</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Bypass current 1</label>
      <sensorSet>Amperage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_power_1">
      <type>powerW</type>
      <units />
      <sensorId>_BYPASS_POWER_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_68</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Bypass power 1</label>
      <sensorSet>Watt</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_voltage_2">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_VOLTAGE_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_69</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Bypass voltage 2</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_current_2">
      <type>amperage</type>
      <units />
      <sensorId>_BYPASS_CURRENT_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_70</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Bypass current 2</label>
      <sensorSet>Amperage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_power_2">
      <type>powerW</type>
      <units />
      <sensorId>_BYPASS_POWER_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_71</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Bypass power 2</label>
      <sensorSet>Watt</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_voltage_3">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_VOLTAGE_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_72</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Bypass voltage 3</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_current_3">
      <type>amperage</type>
      <units />
      <sensorId>_BYPASS_CURRENT_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_73</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Bypass current 3</label>
      <sensorSet>Amperage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_power_3">
      <type>powerW</type>
      <units />
      <sensorId>_BYPASS_POWER_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_74</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Bypass power 3</label>
      <sensorSet>Watt</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_voltage_12">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_VOLTAGE_12</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_75</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Bypass voltage 12</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_voltage_23">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_VOLTAGE_23</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_76</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Bypass voltage 23</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_voltage_31">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_VOLTAGE_31</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_77</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Bypass voltage 31</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_sts_temperature">
      <type>temp</type>
      <units />
      <sensorId>_BYPASS_STS_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_78</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Bypass sts temperature</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="temperature">
      <type>temp</type>
      <units />
      <sensorId>_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_79</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Temperature</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="humidify_">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_HUMIDIFY_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_80</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Humidify</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="battery_cabinet_#1_temperature">
      <type>temp</type>
      <units />
      <sensorId>_BATTERY_CABINET_#1_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_85</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Battery cabinet #1 temperature</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="battery_cabinet_#2_temperature">
      <type>temp</type>
      <units />
      <sensorId>_BATTERY_CABINET_#2_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_86</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Battery cabinet #2 temperature</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="battery_cabinet_#3_temperature">
      <type>temp</type>
      <units />
      <sensorId>_BATTERY_CABINET_#3_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_87</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Battery cabinet #3 temperature</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="battery_cabinet_#4_temperature">
      <type>temp</type>
      <units />
      <sensorId>_BATTERY_CABINET_#4_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_88</getOid>
          </op>
          <op>N/A</op>
        </mult>
      </value>
      <label>Battery cabinet #4 temperature</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <stateSensor ruleid="dry_contact_w1">
      <type>state</type>
      <sensorId>_DRY_CONTACT_W1</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_3</getOid>
        </mapValue>
      </value>
      <label>Dry contact w1</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dry_contact_w2">
      <type>state</type>
      <sensorId>_DRY_CONTACT_W2</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_4</getOid>
        </mapValue>
      </value>
      <label>Dry contact w2</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dry_contact_w3">
      <type>state</type>
      <sensorId>_DRY_CONTACT_W3</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_5</getOid>
        </mapValue>
      </value>
      <label>Dry contact w3</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dry_contact_w4">
      <type>state</type>
      <sensorId>_DRY_CONTACT_W4</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_6</getOid>
        </mapValue>
      </value>
      <label>Dry contact w4</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dry_contact_w5">
      <type>state</type>
      <sensorId>_DRY_CONTACT_W5</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_7</getOid>
        </mapValue>
      </value>
      <label>Dry contact w5</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dry_contact_w6">
      <type>state</type>
      <sensorId>_DRY_CONTACT_W6</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_8</getOid>
        </mapValue>
      </value>
      <label>Dry contact w6</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dry_contact_input_status_1">
      <type>state</type>
      <sensorId>_DRY_CONTACT_INPUT_STATUS_1</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_12</getOid>
        </mapValue>
      </value>
      <label>Dry contact input status 1</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dry_contact_input_status_2">
      <type>state</type>
      <sensorId>_DRY_CONTACT_INPUT_STATUS_2</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_13</getOid>
        </mapValue>
      </value>
      <label>Dry contact input status 2</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups_type">
      <type>state</type>
      <sensorId>_UPS_TYPE</sensorId>
      <value>
        <mapValue mapid="state1_vm">
          <getOid>Function_3_Reg_14</getOid>
        </mapValue>
      </value>
      <label>Ups type</label>
      <enum>state1_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="battery_condition">
      <type>state</type>
      <sensorId>_BATTERY_CONDITION</sensorId>
      <value>
        <mapValue mapid="goodweakreplace_vm">
          <getOid>Function_3_Reg_15</getOid>
        </mapValue>
      </value>
      <label>Battery condition</label>
      <enum>goodweakreplace_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="battery_status">
      <type>state</type>
      <sensorId>_BATTERY_STATUS</sensorId>
      <value>
        <mapValue mapid="oklowdepleted_vm">
          <getOid>Function_3_Reg_16</getOid>
        </mapValue>
      </value>
      <label>Battery status</label>
      <enum>oklowdepleted_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="battery_charge">
      <type>state</type>
      <sensorId>_BATTERY_CHARGE</sensorId>
      <value>
        <mapValue mapid="state2_vm">
          <getOid>Function_3_Reg_17</getOid>
        </mapValue>
      </value>
      <label>Battery charge</label>
      <enum>state2_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="output_source">
      <type>state</type>
      <sensorId>_OUTPUT_SOURCE</sensorId>
      <value>
        <mapValue mapid="state3_vm">
          <getOid>Function_3_Reg_46</getOid>
        </mapValue>
      </value>
      <label>Output source</label>
      <enum>state3_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="relay_1">
      <type>state</type>
      <sensorId>_RELAY_1</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_81</getOid>
        </mapValue>
      </value>
      <label>Relay 1</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="relay_2">
      <type>state</type>
      <sensorId>_RELAY_2</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_82</getOid>
        </mapValue>
      </value>
      <label>Relay 2</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="relay_3">
      <type>state</type>
      <sensorId>_RELAY_3</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_83</getOid>
        </mapValue>
      </value>
      <label>Relay 3</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="relay_4">
      <type>state</type>
      <sensorId>_RELAY_4</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_84</getOid>
        </mapValue>
      </value>
      <label>Relay 4</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="alarm_output_off">
      <type>state</type>
      <sensorId>_ALARM_OUTPUT_OFF</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_94</getOid>
        </mapValue>
      </value>
      <label>Alarm output off</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="alarm_ups_shutdown">
      <type>state</type>
      <sensorId>_ALARM_UPS_SHUTDOWN</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_95</getOid>
        </mapValue>
      </value>
      <label>Alarm ups shutdown</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="alarm_system_off">
      <type>state</type>
      <sensorId>_ALARM_SYSTEM_OFF</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_97</getOid>
        </mapValue>
      </value>
      <label>Alarm system off</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="alarm_shutdown_pending">
      <type>state</type>
      <sensorId>_ALARM_SHUTDOWN_PENDING</sensorId>
      <value>
        <mapValue mapid="state5_vm">
          <getOid>Function_3_Reg_101</getOid>
        </mapValue>
      </value>
      <label>Alarm shutdown pending</label>
      <enum>state5_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="alarm_shutdown_imminent">
      <type>state</type>
      <sensorId>_ALARM_SHUTDOWN_IMMINENT</sensorId>
      <value>
        <mapValue mapid="state6_vm">
          <getOid>Function_3_Reg_102</getOid>
        </mapValue>
      </value>
      <label>Alarm shutdown imminent</label>
      <enum>state6_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="economic_mode">
      <type>state</type>
      <sensorId>_ECONOMIC_MODE</sensorId>
      <value>
        <mapValue mapid="noyes_vm">
          <getOid>Function_3_Reg_104</getOid>
        </mapValue>
      </value>
      <label>Economic mode</label>
      <enum>noyes_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="emergency_power_off">
      <type>state</type>
      <sensorId>_EMERGENCY_POWER_OFF</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_3_Reg_106</getOid>
        </mapValue>
      </value>
      <label>Emergency power off</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="buzzer_state">
      <type>state</type>
      <sensorId>_BUZZER_STATE</sensorId>
      <value>
        <mapValue mapid="disableenable_vm">
          <getOid>Function_3_Reg_107</getOid>
        </mapValue>
      </value>
      <label>Buzzer state</label>
      <enum>disableenable_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="inverter_on">
      <type>state</type>
      <sensorId>_INVERTER_ON</sensorId>
      <value>
        <mapValue mapid="state7_vm">
          <getOid>Function_3_Reg_115</getOid>
        </mapValue>
      </value>
      <label>Inverter on</label>
      <enum>state7_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="alarm_load_on_reserve">
      <type>state</type>
      <sensorId>_ALARM_LOAD_ON_RESERVE</sensorId>
      <value>
        <mapValue mapid="state4_vm">
          <getOid>Function_3_Reg_118</getOid>
        </mapValue>
      </value>
      <label>Alarm load on reserve</label>
      <enum>state4_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="alarm_test_in_progress">
      <type>state</type>
      <sensorId>_ALARM_TEST_IN_PROGRESS</sensorId>
      <value>
        <mapValue mapid="state8_vm">
          <getOid>Function_3_Reg_121</getOid>
        </mapValue>
      </value>
      <label>Alarm test in progress</label>
      <enum>state8_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups_in_sleep_mode">
      <type>state</type>
      <sensorId>_UPS_IN_SLEEP_MODE</sensorId>
      <value>
        <mapValue mapid="noyes_vm">
          <getOid>Function_3_Reg_123</getOid>
        </mapValue>
      </value>
      <label>Ups in sleep mode</label>
      <enum>noyes_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <alarmFlags ruleid="alarm_temperature">
      <value>
        <getOid>Function_3_Reg_89</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Temperature Condition Present</activeText>
          <inactiveText>Alarm Temperature Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Temperature Condition Present</activeText>
          <inactiveText>Alarm Temperature Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_input_bad">
      <value>
        <getOid>Function_3_Reg_90</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Input Bad Condition Present</activeText>
          <inactiveText>Alarm Input Bad Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Input Bad Condition Present</activeText>
          <inactiveText>Alarm Input Bad Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_output_bad">
      <value>
        <getOid>Function_3_Reg_91</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Output Bad Condition Present</activeText>
          <inactiveText>Alarm Output Bad Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Output Bad Condition Present</activeText>
          <inactiveText>Alarm Output Bad Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_overload">
      <value>
        <getOid>Function_3_Reg_92</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Overload Condition Present</activeText>
          <inactiveText>Alarm Overload Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Overload Condition Present</activeText>
          <inactiveText>Alarm Overload Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_bypass_bad">
      <value>
        <getOid>Function_3_Reg_93</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Bypass Bad Condition Present</activeText>
          <inactiveText>Alarm Bypass Bad Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Bypass Bad Condition Present</activeText>
          <inactiveText>Alarm Bypass Bad Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_charger_failure">
      <value>
        <getOid>Function_3_Reg_96</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Charger Failure Condition Present</activeText>
          <inactiveText>Alarm Charger Failure Condition Cleared</inactiveText>
        </name>
        <severity>failure</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Charger Failure Condition Present</activeText>
          <inactiveText>Alarm Charger Failure Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_fan_failure">
      <value>
        <getOid>Function_3_Reg_98</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Fan Failure Condition Present</activeText>
          <inactiveText>Alarm Fan Failure Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Fan Failure Condition Present</activeText>
          <inactiveText>Alarm Fan Failure Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_fuse_failure">
      <value>
        <getOid>Function_3_Reg_99</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Fuse Failure Condition Present</activeText>
          <inactiveText>Alarm Fuse Failure Condition Cleared</inactiveText>
        </name>
        <severity>failure</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Fuse Failure Condition Present</activeText>
          <inactiveText>Alarm Fuse Failure Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_general_fault">
      <value>
        <getOid>Function_3_Reg_100</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm General Fault Condition Present</activeText>
          <inactiveText>Alarm General Fault Condition Cleared</inactiveText>
        </name>
        <severity>failure</severity>
        <category>system</category>
        <description>
          <activeText>Alarm General Fault Condition Present</activeText>
          <inactiveText>Alarm General Fault Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="buzzer_status">
      <value>
        <getOid>Function_3_Reg_103</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Buzzer Status Condition Present</activeText>
          <inactiveText>Buzzer Status Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Buzzer Status Condition Present</activeText>
          <inactiveText>Buzzer Status Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_inverter_bad">
      <value>
        <getOid>Function_3_Reg_105</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Inverter Bad Condition Present</activeText>
          <inactiveText>Alarm Inverter Bad Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Inverter Bad Condition Present</activeText>
          <inactiveText>Alarm Inverter Bad Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="battery_ground_fault">
      <value>
        <getOid>Function_3_Reg_108</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Battery Ground Fault Condition Present</activeText>
          <inactiveText>Battery Ground Fault Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Battery Ground Fault Condition Present</activeText>
          <inactiveText>Battery Ground Fault Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_rectifier_main_fail">
      <value>
        <getOid>Function_3_Reg_109</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Rectifier Main Fail Condition Present</activeText>
          <inactiveText>Alarm Rectifier Main Fail Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Rectifier Main Fail Condition Present</activeText>
          <inactiveText>Alarm Rectifier Main Fail Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_rectifier_hi_dc_stop__0x0119">
      <value>
        <getOid>Function_3_Reg_110</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Rectifier Hi DC Stop  0x0119 Condition Present</activeText>
          <inactiveText>Alarm Rectifier Hi DC Stop  0x0119 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Rectifier Hi DC Stop  0x0119 Condition Present</activeText>
          <inactiveText>Alarm Rectifier Hi DC Stop  0x0119 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_over_temperature_or_fuse_fail">
      <value>
        <getOid>Function_3_Reg_111</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Over Temperature or Fuse Fail Condition Present</activeText>
          <inactiveText>Alarm Over Temperature or Fuse Fail Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Over Temperature or Fuse Fail Condition Present</activeText>
          <inactiveText>Alarm Over Temperature or Fuse Fail Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_battery_low">
      <value>
        <getOid>Function_3_Reg_112</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Battery Low Condition Present</activeText>
          <inactiveText>Alarm Battery Low Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Battery Low Condition Present</activeText>
          <inactiveText>Alarm Battery Low Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_battery_low_stop">
      <value>
        <getOid>Function_3_Reg_113</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Battery Low Stop Condition Present</activeText>
          <inactiveText>Alarm Battery Low Stop Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Battery Low Stop Condition Present</activeText>
          <inactiveText>Alarm Battery Low Stop Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_battery_ground_fault">
      <value>
        <getOid>Function_3_Reg_114</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Battery Ground Fault Condition Present</activeText>
          <inactiveText>Alarm Battery Ground Fault Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Battery Ground Fault Condition Present</activeText>
          <inactiveText>Alarm Battery Ground Fault Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_inverter_overload">
      <value>
        <getOid>Function_3_Reg_116</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Inverter Overload Condition Present</activeText>
          <inactiveText>Alarm Inverter Overload Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Inverter Overload Condition Present</activeText>
          <inactiveText>Alarm Inverter Overload Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_inverter_abnormal">
      <value>
        <getOid>Function_3_Reg_117</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Inverter Abnormal Condition Present</activeText>
          <inactiveText>Alarm Inverter Abnormal Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Inverter Abnormal Condition Present</activeText>
          <inactiveText>Alarm Inverter Abnormal Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_reserve_mains_fail">
      <value>
        <getOid>Function_3_Reg_119</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Reserve Mains Fail Condition Present</activeText>
          <inactiveText>Alarm Reserve Mains Fail Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Reserve Mains Fail Condition Present</activeText>
          <inactiveText>Alarm Reserve Mains Fail Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_reserve_freq">
      <value>
        <getOid>Function_3_Reg_120</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Reserve Freq Condition Present</activeText>
          <inactiveText>Alarm Reserve Freq Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Reserve Freq Condition Present</activeText>
          <inactiveText>Alarm Reserve Freq Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_test_error">
      <value>
        <getOid>Function_3_Reg_122</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Test Error Condition Present</activeText>
          <inactiveText>Alarm Test Error Condition Cleared</inactiveText>
        </name>
        <severity>error</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Test Error Condition Present</activeText>
          <inactiveText>Alarm Test Error Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_bypass_volt/freq._bad__">
      <value>
        <getOid>Function_3_Reg_124</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Bypass Volt/Freq. Bad   Condition Present</activeText>
          <inactiveText>Alarm Bypass Volt/Freq. Bad   Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Bypass Volt/Freq. Bad   Condition Present</activeText>
          <inactiveText>Alarm Bypass Volt/Freq. Bad   Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm_bypass_phase_sequence_bad">
      <value>
        <getOid>Function_3_Reg_125</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm Bypass Phase Sequence Bad Condition Present</activeText>
          <inactiveText>Alarm Bypass Phase Sequence Bad Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm Bypass Phase Sequence Bad Condition Present</activeText>
          <inactiveText>Alarm Bypass Phase Sequence Bad Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
	
	
	
	<valueMap ruleid="offon_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="offon_em">
<label>OFF</label>
<label>0N</label>
</enumMap>

<valueMap ruleid="state1_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>2</valueIn>
			<valueOut>2</valueOut>
<valueIn>3</valueIn>
			<valueOut>3</valueOut>
<valueIn>4</valueIn>
			<valueOut>4</valueOut>
<valueIn>5</valueIn>
			<valueOut>5</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="state1_em">
<label>On-Line</label>
<label>Off-Line</label>
<label>Line-nteractive</label>
<label>3Phase</label>
<label>SplitPhase</label>
<label>Others</label>
</enumMap>

<valueMap ruleid="goodweakreplace_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>2</valueIn>
			<valueOut>2</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="goodweakreplace_em">
<label>Good</label>
<label>Weak</label>
<label>Replace</label>
</enumMap>

<valueMap ruleid="oklowdepleted_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>2</valueIn>
			<valueOut>2</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="oklowdepleted_em">
<label>OK</label>
<label>Low</label>
<label>Depleted</label>
</enumMap>

<valueMap ruleid="state2_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>2</valueIn>
			<valueOut>2</valueOut>
<valueIn>3</valueIn>
			<valueOut>3</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="state2_em">
<label>Floating</label>
<label>Charging</label>
<label>Resting</label>
<label>Discharging</label>
</enumMap>

<valueMap ruleid="state3_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>2</valueIn>
			<valueOut>2</valueOut>
<valueIn>3</valueIn>
			<valueOut>3</valueOut>
<valueIn>4</valueIn>
			<valueOut>4</valueOut>
<valueIn>5</valueIn>
			<valueOut>5</valueOut>
<valueIn>6</valueIn>
			<valueOut>6</valueOut>
<valueIn>7</valueIn>
			<valueOut>7</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="state3_em">
<label>Normal</label>
<label>Battery</label>
<label>Bypass(Reserve)</label>
<label>Reducing</label>
<label>Boosting</label>
<label>ManualBypass</label>
<label>Other</label>
<label>None</label>
</enumMap>

<valueMap ruleid="noyes_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="noyes_em">
<label>no</label>
<label>yes</label>
</enumMap>

<valueMap ruleid="state4_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>2</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="state4_em">
<label>LoadNotOnReserve</label>
<label>LoadOnReserve</label>
</enumMap>

<valueMap ruleid="state5_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="state5_em">
<label>Normal</label>
<label>ShutdownPending</label>
</enumMap>

<valueMap ruleid="state6_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="state6_em">
<label>Normal</label>
<label>Shutdownmminent</label>
</enumMap>

<valueMap ruleid="disableenable_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="disableenable_em">
<label>disable</label>
<label>enable</label>
</enumMap>

<valueMap ruleid="state7_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="state7_em">
<label>InverterOFF</label>
<label>InverterON</label>
</enumMap>

<valueMap ruleid="state8_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="state8_em">
<label>NO</label>
<label>TestIn</label>
</enumMap>

	
	
	
	
  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="Function_3_Reg_22">
        <function>3</function>
        <start_addr>21</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_113">
        <function>3</function>
        <start_addr>112</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_124">
        <function>3</function>
        <start_addr>123</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_37">
        <function>3</function>
        <start_addr>36</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_90">
        <function>3</function>
        <start_addr>89</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_6">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_92">
        <function>3</function>
        <start_addr>91</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_64">
        <function>3</function>
        <start_addr>63</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_102">
        <function>3</function>
        <start_addr>101</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_21">
        <function>3</function>
        <start_addr>20</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_20">
        <function>3</function>
        <start_addr>19</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_66">
        <function>3</function>
        <start_addr>65</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_23">
        <function>3</function>
        <start_addr>22</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_38">
        <function>3</function>
        <start_addr>37</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_123">
        <function>3</function>
        <start_addr>122</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_112">
        <function>3</function>
        <start_addr>111</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_93">
        <function>3</function>
        <start_addr>92</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_101">
        <function>3</function>
        <start_addr>100</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_65">
        <function>3</function>
        <start_addr>64</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_100">
        <function>3</function>
        <start_addr>99</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_24">
        <function>3</function>
        <start_addr>23</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_39">
        <function>3</function>
        <start_addr>38</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_60">
        <function>3</function>
        <start_addr>59</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_114">
        <function>3</function>
        <start_addr>113</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_51">
        <function>3</function>
        <start_addr>50</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_110">
        <function>3</function>
        <start_addr>109</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_125">
        <function>3</function>
        <start_addr>124</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_34">
        <function>3</function>
        <start_addr>33</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_53">
        <function>3</function>
        <start_addr>52</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_120">
        <function>3</function>
        <start_addr>119</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_36">
        <function>3</function>
        <start_addr>35</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_68">
        <function>3</function>
        <start_addr>67</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_103">
        <function>3</function>
        <start_addr>102</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_50">
        <function>3</function>
        <start_addr>49</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_63">
        <function>3</function>
        <start_addr>62</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_78">
        <function>3</function>
        <start_addr>77</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_95">
        <function>3</function>
        <start_addr>94</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_54">
        <function>3</function>
        <start_addr>53</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_11">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_26">
        <function>3</function>
        <start_addr>25</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_69">
        <function>3</function>
        <start_addr>68</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_75">
        <function>3</function>
        <start_addr>74</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_30">
        <function>3</function>
        <start_addr>29</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_4">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_105">
        <function>3</function>
        <start_addr>104</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_83">
        <function>3</function>
        <start_addr>82</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_115">
        <function>3</function>
        <start_addr>114</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_98">
        <function>3</function>
        <start_addr>97</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_49">
        <function>3</function>
        <start_addr>48</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_55">
        <function>3</function>
        <start_addr>54</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_35">
        <function>3</function>
        <start_addr>34</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_117">
        <function>3</function>
        <start_addr>116</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_84">
        <function>3</function>
        <start_addr>83</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_99">
        <function>3</function>
        <start_addr>98</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_45">
        <function>3</function>
        <start_addr>44</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_122">
        <function>3</function>
        <start_addr>121</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_94">
        <function>3</function>
        <start_addr>93</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_5">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_79">
        <function>3</function>
        <start_addr>78</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_74">
        <function>3</function>
        <start_addr>73</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_25">
        <function>3</function>
        <start_addr>24</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_89">
        <function>3</function>
        <start_addr>88</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_71">
        <function>3</function>
        <start_addr>70</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_86">
        <function>3</function>
        <start_addr>85</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_9">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_43">
        <function>3</function>
        <start_addr>42</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_15">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_58">
        <function>3</function>
        <start_addr>57</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_119">
        <function>3</function>
        <start_addr>118</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_72">
        <function>3</function>
        <start_addr>71</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_108">
        <function>3</function>
        <start_addr>107</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_107">
        <function>3</function>
        <start_addr>106</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_87">
        <function>3</function>
        <start_addr>86</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_2">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_44">
        <function>3</function>
        <start_addr>43</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_118">
        <function>3</function>
        <start_addr>117</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_16">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_59">
        <function>3</function>
        <start_addr>58</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_10">
        <function>3</function>
        <start_addr>9</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_41">
        <function>3</function>
        <start_addr>40</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_70">
        <function>3</function>
        <start_addr>69</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_73">
        <function>3</function>
        <start_addr>72</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_56">
        <function>3</function>
        <start_addr>55</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_88">
        <function>3</function>
        <start_addr>87</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_3">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_17">
        <function>3</function>
        <start_addr>16</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_19">
        <function>3</function>
        <start_addr>18</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_85">
        <function>3</function>
        <start_addr>84</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_14">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_31">
        <function>3</function>
        <start_addr>30</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_29">
        <function>3</function>
        <start_addr>28</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_40">
        <function>3</function>
        <start_addr>39</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_46">
        <function>3</function>
        <start_addr>45</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_109">
        <function>3</function>
        <start_addr>108</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_48">
        <function>3</function>
        <start_addr>47</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_97">
        <function>3</function>
        <start_addr>96</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_116">
        <function>3</function>
        <start_addr>115</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_32">
        <function>3</function>
        <start_addr>31</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_81">
        <function>3</function>
        <start_addr>80</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_47">
        <function>3</function>
        <start_addr>46</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_7">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_104">
        <function>3</function>
        <start_addr>103</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_61">
        <function>3</function>
        <start_addr>60</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_80">
        <function>3</function>
        <start_addr>79</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_12">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_27">
        <function>3</function>
        <start_addr>26</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_76">
        <function>3</function>
        <start_addr>75</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_33">
        <function>3</function>
        <start_addr>32</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_82">
        <function>3</function>
        <start_addr>81</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_18">
        <function>3</function>
        <start_addr>17</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_67">
        <function>3</function>
        <start_addr>66</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_13">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_62">
        <function>3</function>
        <start_addr>61</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_28">
        <function>3</function>
        <start_addr>27</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_77">
        <function>3</function>
        <start_addr>76</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_111">
        <function>3</function>
        <start_addr>110</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_96">
        <function>3</function>
        <start_addr>95</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_42">
        <function>3</function>
        <start_addr>41</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_8">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_91">
        <function>3</function>
        <start_addr>90</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_1">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_57">
        <function>3</function>
        <start_addr>56</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_121">
        <function>3</function>
        <start_addr>120</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_106">
        <function>3</function>
        <start_addr>105</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_52">
        <function>3</function>
        <start_addr>51</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
