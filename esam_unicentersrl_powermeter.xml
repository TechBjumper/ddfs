<?xml version="1.0"?>
<!-- Test Modbus related information -->
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
         ddfid="esam_unicentersrl_powermeter" ddfname="E.S.A.M. unicenter s.r.l. Power Meter" ddfversion="2" canremove="yes">
  <schemaVersion>1.6</schemaVersion>

  <device deviceid="esam_unicentersrl_powermeter">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

    <setProductData ruleid="vendordata" field="vendor">E.S.A.M. Unicenter s.r.l.</setProductData>
    <setProductData ruleid="modeldata" field="model">E92002</setProductData>
    <setProductData ruleid="typedata" field="type">Power Meter</setProductData>
    <setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

    <numSensor ruleid="voltage_ab">
      <type>voltage</type>
      <sensorId>VOLTAGE_LL_1</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_voltageab</getOid></op>
          <op><getOid>be_voltageab</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Phase 1-2</label>
      <sensorSet>Voltage Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_bc">
      <type>voltage</type>
      <sensorId>VOLTAGE_LL_2</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_voltagebc</getOid></op>
          <op><getOid>be_voltagebc</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Phase 2-3</label>
      <sensorSet>Voltage Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_ca">
      <type>voltage</type>
      <sensorId>VOLTAGE_LL_3</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_voltageca</getOid></op>
          <op><getOid>be_voltageca</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Phase 3-1</label>
      <sensorSet>Voltage Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_ll_avg">
      <type>voltage</type>
      <sensorId>AVERAGE_VOLTAGE_LL_1</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_voltagellavg</getOid></op>
          <op><getOid>be_voltagellavg</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Average Voltage</label>
      <sensorSet>Voltage Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="current_a">
      <type>amperage</type>
      <sensorId>CURRENT_1</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_currenta</getOid></op>
          <op><getOid>be_currenta</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Current Phase 1</label>
      <sensorSet>Current Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="current_b">
      <type>amperage</type>
      <sensorId>CURRENT_2</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_currentb</getOid></op>
          <op><getOid>be_currentb</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Current Phase 2</label>
      <sensorSet>Current Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="current_c">
      <type>amperage</type>
      <sensorId>CURRENT_3</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_currentc</getOid></op>
          <op><getOid>be_currentc</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Current Phase 3</label>
      <sensorSet>Current Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="current_avg">
      <type>amperage</type>
      <sensorId>AVERAGE_CURRENT_1</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_currentavg</getOid></op>
          <op><getOid>be_currentavg</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Average Current</label>
      <sensorSet>Current Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_an">
      <type>voltage</type>
      <sensorId>VOLTAGE_LN_1</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_voltagean</getOid></op>
          <op><getOid>be_voltagean</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Phase 1</label>
      <sensorSet>Voltage Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_bn">
      <type>voltage</type>
      <sensorId>VOLTAGE_LN_2</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_voltagebn</getOid></op>
          <op><getOid>be_voltagebn</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Phase 2</label>
      <sensorSet>Voltage Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_cn">
      <type>voltage</type>
      <sensorId>VOLTAGE_LN_3</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_voltagecn</getOid></op>
          <op><getOid>be_voltagecn</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Voltage Phase 3</label>
      <sensorSet>Voltage Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="real_power_a">
      <type>num/powerKW</type>
      <sensorId>POWER_KW_1</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_realpowera</getOid></op>
              <op><getOid>be_realpowera</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Active Power Phase 1</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="real_power_b">
      <type>num/powerKW</type>
      <sensorId>POWER_KW_2</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_realpowerb</getOid></op>
              <op><getOid>be_realpowerb</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Active Power Phase 2</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="real_power_c">
      <type>num/powerKW</type>
      <sensorId>POWER_KW_3</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_realpowerc</getOid></op>
              <op><getOid>be_realpowerc</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Active Power Phase 3</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="real_power_tot">
      <type>num/powerKW</type>
      <sensorId>TOTAL_POWER_KW_1</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_realpowertot</getOid></op>
              <op><getOid>be_realpowertot</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Total Active Power</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="reactive_power_a">
      <type>num/powerKVAR</type>
      <sensorId>POWER_KVAR_1</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_reactivepowera</getOid></op>
              <op><getOid>be_reactivepowera</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Reactive Power Phase 1</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="reactive_power_b">
      <type>num/powerKVAR</type>
      <sensorId>POWER_KVAR_2</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_reactivepowerb</getOid></op>
              <op><getOid>be_reactivepowerb</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Reactive Power Phase 2</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="reactive_power_c">
      <type>num/powerKVAR</type>
      <sensorId>POWER_KVAR_3</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_reactivepowerc</getOid></op>
              <op><getOid>be_reactivepowerc</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Reactive Power Phase 3</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="reactive_power_tot">
      <type>num/powerKVAR</type>
      <sensorId>TOTAL_POWER_KVAR_1</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_reactivepowertot</getOid></op>
              <op><getOid>be_reactivepowertot</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Total Reactive Power</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="apparent_power_a">
      <type>num/powerKVA</type>
      <sensorId>POWER_KVA_1</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_apparentpowera</getOid></op>
              <op><getOid>be_apparentpowera</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Apparent Power Phase 1</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="apparent_power_b">
      <type>num/powerKVA</type>
      <sensorId>POWER_KVA_2</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_apparentpowerb</getOid></op>
              <op><getOid>be_apparentpowerb</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Apparent Power Phase 2</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="apparent_power_c">
      <type>num/powerKVA</type>
      <sensorId>POWER_KVA_3</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_apparentpowerc</getOid></op>
              <op><getOid>be_apparentpowerc</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Apparent Power Phase 3</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="apparent_power_tot">
      <type>num/powerKVA</type>
      <sensorId>TOTAL_POWER_KVA_1</sensorId>
      <value>
        <mult>
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_apparentpowertot</getOid></op>
              <op><getOid>be_apparentpowertot</getOid></op>
            </if>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <valueInc>0.001</valueInc>
      <label>Total Apparent Power</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="power_factor_a">
      <type>num/powerfactor</type>
      <sensorId>POWER_FACTOR_1</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_powerfactora</getOid></op>
          <op><getOid>be_powerfactora</getOid></op>
        </if>
      </value>
      <minValue>-1.0</minValue>
      <valueInc>0.001</valueInc>
      <label>Power Factor Phase 1</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="power_factor_b">
      <type>num/powerfactor</type>
      <sensorId>POWER_FACTOR_2</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_powerfactorb</getOid></op>
          <op><getOid>be_powerfactorb</getOid></op>
        </if>
      </value>
      <minValue>-1.0</minValue>
      <valueInc>0.001</valueInc>
      <label>Power Factor Phase 2</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="power_factor_c">
      <type>num/powerfactor</type>
      <sensorId>POWER_FACTOR_3</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_powerfactorc</getOid></op>
          <op><getOid>be_powerfactorc</getOid></op>
        </if>
      </value>
      <minValue>-1.0</minValue>
      <valueInc>0.001</valueInc>
      <label>Power Factor Phase 3</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="power_factor_tot">
      <type>num/powerfactor</type>
      <sensorId>TOTAL_POWER_FACTOR_1</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_powerfactortot</getOid></op>
          <op><getOid>be_powerfactortot</getOid></op>
        </if>
      </value>
      <minValue>-1.0</minValue>
      <valueInc>0.001</valueInc>
      <label>Total Power Factor</label>
      <sensorSet>Power Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="frequency">
      <type>frequency</type>
      <sensorId>FREQUENCY_1</sensorId>
      <value>
        <if>
          <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
          <op><getOid>le_frequency</getOid></op>
          <op><getOid>be_frequency</getOid></op>
        </if>
      </value>
      <valueInc>0.01</valueInc>
      <label>Frequency</label>
      <sensorSet>Other Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="real_energy_tot_pos">
      <type>num/kwatthr</type>
      <sensorId>TOTAL_ENERGY_DEL_KWH_1</sensorId>
      <value>
        <add> <!-- KWh + (Wh*.001) -->
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_realenergytotpos_kwh</getOid></op>
              <op><getOid>be_realenergytotpos_kwh</getOid></op>
            </if>
          </op>
          <op>
            <mult>
              <op><getOid>realenergytotpos_wh</getOid></op>
              <op>0.001</op>
            </mult>
          </op>
        </add>
      </value>
      <valueInc>0.001</valueInc>
      <label>Total Active Energy Positive</label>
      <sensorSet>Energy Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="real_energy_tot_neg">
      <type>num/kwatthr</type>
      <sensorId>TOTAL_ENERGY_REC_KWH_1</sensorId>
      <value>
        <add> <!-- KWh + (Wh*.001) -->
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_realenergytotneg_kwh</getOid></op>
              <op><getOid>be_realenergytotneg_kwh</getOid></op>
            </if>
          </op>
          <op>
            <mult>
              <op><getOid>realenergytotneg_wh</getOid></op>
              <op>0.001</op>
            </mult>
          </op>
        </add>
      </value>
      <valueInc>0.001</valueInc>
      <label>Total Active Energy Negative</label>
      <sensorSet>Energy Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="reactive_energy_tot_pos">
      <type>num/kVARhr</type>
      <sensorId>TOTAL_ENERGY_DEL_KVARH_1</sensorId>
      <value>
        <add> <!-- KVARh + (VARh*.001) -->
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_reactiveenergytotpos_kvarh</getOid></op>
              <op><getOid>be_reactiveenergytotpos_kvarh</getOid></op>
            </if>
          </op>
          <op>
            <mult>
              <op><getOid>reactiveenergytotpos_varh</getOid></op>
              <op>0.001</op>
            </mult>
          </op>
        </add>
      </value>
      <valueInc>0.001</valueInc>
      <label>Total Reactive Energy Positive</label>
      <sensorSet>Energy Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="reactive_energy_tot_neg">
      <type>num/kVARhr</type>
      <sensorId>TOTAL_ENERGY_REC_KVARH_1</sensorId>
      <value>
        <add> <!-- KVARh + (VARh*.001) -->
          <op>
            <if>
              <op><eq><op><getOid>floating_point_swap</getOid></op><op>1</op></eq></op>
              <op><getOid>le_reactiveenergytotneg_kvarh</getOid></op>
              <op><getOid>be_reactiveenergytotneg_kvarh</getOid></op>
            </if>
          </op>
          <op>
            <mult>
              <op><getOid>reactiveenergytotneg_varh</getOid></op>
              <op>0.001</op>
            </mult>
          </op>
        </add>
      </value>
      <valueInc>0.001</valueInc>
      <label>Total Reactive Energy Negative</label>
      <sensorSet>Energy Sensors</sensorSet>
    </numSensor>

  </device>

  <protocol>
    <modbus>

      <!-- a register indicates the word order for 32-bit data: 0=big endian, 1=little endian -->
      <value_ref_id valid="floating_point_swap">
        <function>3</function>
        <start_addr>600</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <!-- single register values - not swapped -->
      <value_ref_id valid="realenergytotpos_wh">
        <function>3</function>
        <start_addr>201</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="realenergytotneg_wh">
        <function>3</function>
        <start_addr>204</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="reactiveenergytotpos_varh">
        <function>3</function>
        <start_addr>207</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="reactiveenergytotneg_varh">
        <function>3</function>
        <start_addr>210</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>

      <!-- little endian word order -->
      <type_definition type_name="swapped_float">
        <type>float</type>                 <!-- must be one of our 'normal' modbus types -->
        <byte_order>1,0,3,2</byte_order>   <!-- mapping of device's byte string into the order which we want -->
      </type_definition>
      <type_definition type_name="swapped_int32">
        <type>int_32</type>                 <!-- must be one of our 'normal' modbus types -->
        <byte_order>1,0,3,2</byte_order>   <!-- mapping of device's byte string into the order which we want -->
      </type_definition>

      <!-- datapoint definitions used when little endian word order configured -->
      <value_ref_id valid="le_voltageab">
        <function>3</function>
        <start_addr>99</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_voltagebc">
        <function>3</function>
        <start_addr>101</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_voltageca">
        <function>3</function>
        <start_addr>103</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_voltagellavg">
        <function>3</function>
        <start_addr>105</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_currenta">
        <function>3</function>
        <start_addr>107</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_currentb">
        <function>3</function>
        <start_addr>109</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_currentc">
        <function>3</function>
        <start_addr>111</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_currentavg">
        <function>3</function>
        <start_addr>113</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_realpowertot">
        <function>3</function>
        <start_addr>115</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_reactivepowertot">
        <function>3</function>
        <start_addr>117</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_powerfactortot">
        <function>3</function>
        <start_addr>119</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_frequency">
        <function>3</function>
        <start_addr>121</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>

      <value_ref_id valid="le_voltagean">
        <function>3</function>
        <start_addr>123</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_voltagebn">
        <function>3</function>
        <start_addr>125</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_voltagecn">
        <function>3</function>
        <start_addr>127</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_realpowera">
        <function>3</function>
        <start_addr>129</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_realpowerb">
        <function>3</function>
        <start_addr>131</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_realpowerc">
        <function>3</function>
        <start_addr>133</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_reactivepowera">
        <function>3</function>
        <start_addr>135</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_reactivepowerb">
        <function>3</function>
        <start_addr>137</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_reactivepowerc">
        <function>3</function>
        <start_addr>139</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_powerfactora">
        <function>3</function>
        <start_addr>141</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_powerfactorb">
        <function>3</function>
        <start_addr>143</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_powerfactorc">
        <function>3</function>
        <start_addr>145</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>

      <value_ref_id valid="le_apparentpowera">
        <function>3</function>
        <start_addr>147</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_apparentpowerb">
        <function>3</function>
        <start_addr>149</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_apparentpowerc">
        <function>3</function>
        <start_addr>151</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>
      <value_ref_id valid="le_apparentpowertot">
        <function>3</function>
        <start_addr>153</start_addr>
        <quantity>2</quantity>
        <type>swapped_float</type>
      </value_ref_id>

      <value_ref_id valid="le_realenergytotpos_kwh">
        <function>3</function>
        <start_addr>199</start_addr>
        <quantity>2</quantity>
        <type>swapped_int32</type>
      </value_ref_id>
      <!-- realenergytotpos_wh defined above because not swapped -->
      <value_ref_id valid="le_realenergytotneg_kwh">
        <function>3</function>
        <start_addr>202</start_addr>
        <quantity>2</quantity>
        <type>swapped_int32</type>
      </value_ref_id>
      <value_ref_id valid="le_reactiveenergytotpos_kvarh">
        <function>3</function>
        <start_addr>205</start_addr>
        <quantity>2</quantity>
        <type>swapped_int32</type>
      </value_ref_id>
      <value_ref_id valid="le_reactiveenergytotneg_kvarh">
        <function>3</function>
        <start_addr>208</start_addr>
        <quantity>2</quantity>
        <type>swapped_int32</type>
      </value_ref_id>

      <!-- datapoint definitions used when big endian word order configured -->
      <value_ref_id valid="be_voltageab">
        <function>3</function>
        <start_addr>99</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_voltagebc">
        <function>3</function>
        <start_addr>101</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_voltageca">
        <function>3</function>
        <start_addr>103</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_voltagellavg">
        <function>3</function>
        <start_addr>105</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_currenta">
        <function>3</function>
        <start_addr>107</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_currentb">
        <function>3</function>
        <start_addr>109</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_currentc">
        <function>3</function>
        <start_addr>111</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_currentavg">
        <function>3</function>
        <start_addr>113</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_realpowertot">
        <function>3</function>
        <start_addr>115</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_reactivepowertot">
        <function>3</function>
        <start_addr>117</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_powerfactortot">
        <function>3</function>
        <start_addr>119</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_frequency">
        <function>3</function>
        <start_addr>121</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>

      <value_ref_id valid="be_voltagean">
        <function>3</function>
        <start_addr>123</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_voltagebn">
        <function>3</function>
        <start_addr>125</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_voltagecn">
        <function>3</function>
        <start_addr>127</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_realpowera">
        <function>3</function>
        <start_addr>129</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_realpowerb">
        <function>3</function>
        <start_addr>131</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_realpowerc">
        <function>3</function>
        <start_addr>133</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_reactivepowera">
        <function>3</function>
        <start_addr>135</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_reactivepowerb">
        <function>3</function>
        <start_addr>137</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_reactivepowerc">
        <function>3</function>
        <start_addr>139</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_powerfactora">
        <function>3</function>
        <start_addr>141</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_powerfactorb">
        <function>3</function>
        <start_addr>143</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_powerfactorc">
        <function>3</function>
        <start_addr>145</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>

      <value_ref_id valid="be_apparentpowera">
        <function>3</function>
        <start_addr>147</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_apparentpowerb">
        <function>3</function>
        <start_addr>149</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_apparentpowerc">
        <function>3</function>
        <start_addr>151</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="be_apparentpowertot">
        <function>3</function>
        <start_addr>153</start_addr>
        <quantity>2</quantity>
        <type>float</type>
      </value_ref_id>

      <value_ref_id valid="be_realenergytotpos_kwh">
        <function>3</function>
        <start_addr>199</start_addr>
        <quantity>2</quantity>
        <type>int_32</type>
      </value_ref_id>
      <value_ref_id valid="be_realenergytotneg_kwh">
        <function>3</function>
        <start_addr>202</start_addr>
        <quantity>2</quantity>
        <type>int_32</type>
      </value_ref_id>
      <value_ref_id valid="be_reactiveenergytotpos_kvarh">
        <function>3</function>
        <start_addr>205</start_addr>
        <quantity>2</quantity>
        <type>int_32</type>
      </value_ref_id>
      <value_ref_id valid="be_reactiveenergytotneg_kvarh">
        <function>3</function>
        <start_addr>208</start_addr>
        <quantity>2</quantity>
        <type>int_32</type>
      </value_ref_id>

      <!-- Bulk read for performance: 24 registers per request is max that device is spec'ed for -->
      <packet>
        <function>3</function>
        <start_addr>99</start_addr>
        <quantity>24</quantity>
      </packet>

      <packet>
        <function>3</function>
        <start_addr>123</start_addr>
        <quantity>24</quantity>
      </packet>

      <packet>
        <function>3</function>
        <start_addr>147</start_addr>
        <quantity>8</quantity>
      </packet>

      <packet>
        <function>3</function>
        <start_addr>199</start_addr>
        <quantity>12</quantity>
      </packet>
     </modbus>
  </protocol>
</APC_DDF>
