<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="asco_72e"
	ddfname="ASCO 72E"
	ddfversion="1"
	canremove="yes">
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="asco_72e">
		<setProductData ruleid="vendordata" field="vendor">ASCO</setProductData>
		<setProductData ruleid="modeldata" field="model">72E</setProductData>
		<setProductData ruleid="typedata" field="type">Transfer Switch</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<stateSensor ruleid="swgr-a-gen-a1-running">
			<type>state</type>
			<sensorId>SWGR-A_GEN_A1_RUNNING</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40001</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A Gen A1 Running</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-gen-a1-online">
			<type>state</type>
			<sensorId>SWGR-A_GEN_A1_ONLINE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40001</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A Gen A1 Online</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-gen-a1-locked-out">
			<type>state</type>
			<sensorId>SWGR-A_GEN_A1_LOCKED_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40001</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A Gen A1 Locked Out</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-system-test">
			<type>state</type>
			<sensorId>SWGR-A_MSB_SYSTEM_TEST</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40001</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB System Test</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-emergency-mode">
			<type>state</type>
			<sensorId>SWGR-A_MSB_EMERGENCY_MODE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40001</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Emergency Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-gen-a2-running">
			<type>state</type>
			<sensorId>SWGR-A_GEN_A2_RUNNING</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40002</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A Gen A2 Running</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-gen-a2-online">
			<type>state</type>
			<sensorId>SWGR-A_GEN_A2_ONLINE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40002</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A Gen A2 Online</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-gen-a2-locked-out">
			<type>state</type>
			<sensorId>SWGR-A_GEN_A2_LOCKED_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40002</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A Gen A2 Locked Out</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-priority-2-load-shed-active">
			<type>state</type>
			<sensorId>SWGR-A_MSB_PRIORITY_2_LOAD_SHED_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40002</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Priority 2 Load Shed Active</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-priority-2-load-shed-bypassed">
			<type>state</type>
			<sensorId>SWGR-A_MSB_PRIORITY_2_LOAD_SHED_BYPASSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40002</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Priority 2 Load Shed Bypassed</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-ethernet-comm-failure">
			<type>state</type>
			<sensorId>SWGR-A_MSB_ETHERNET_COMM_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40005</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Ethernet Comm Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-system-plc-diagnostic-fault">
			<type>state</type>
			<sensorId>SWGR-A_MSB_SYSTEM_PLC_DIAGNOSTIC_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40005</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB System PLC Diagnostic Fault</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-dc-converter-failure">
			<type>state</type>
			<sensorId>SWGR-A_MSB_DC_CONVERTER_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40005</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB DC Converter Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-load-demand-mode-active">
			<type>state</type>
			<sensorId>SWGR-A_MSB_LOAD_DEMAND_MODE_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40006</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Load Demand Mode Active</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-load-demand-start-td-active">
			<type>state</type>
			<sensorId>SWGR-A_MSB_LOAD_DEMAND_START_TD_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40006</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Load Demand Start TD Active</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-load-demand-stop-td-active">
			<type>state</type>
			<sensorId>SWGR-A_MSB_LOAD_DEMAND_STOP_TD_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40006</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Load Demand Stop TD Active</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-bus-under-frequency">
			<type>state</type>
			<sensorId>SWGR-A_MSB_BUS_UNDER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40006</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Bus Under Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-bus-under-voltage">
			<type>state</type>
			<sensorId>SWGR-A_MSB_BUS_UNDER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40006</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Bus Under Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-bus-optimization-mode-active">
			<type>state</type>
			<sensorId>SWGR-A_MSB_BUS_OPTIMIZATION_MODE_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40007</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Bus Optimization Mode Active</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-next-load-exceeds-headroom">
			<type>state</type>
			<sensorId>SWGR-A_MSB_NEXT_LOAD_EXCEEDS_HEADROOM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40007</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Next Load Exceeds Headroom</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-bus-loaded-to-capacity">
			<type>state</type>
			<sensorId>SWGR-A_MSB_BUS_LOADED_TO_CAPACITY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40007</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Bus Loaded to Capacity</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-bus-over-frequency">
			<type>state</type>
			<sensorId>SWGR-A_MSB_BUS_OVER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40007</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Bus Over Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-bus-over-voltage">
			<type>state</type>
			<sensorId>SWGR-A_MSB_BUS_OVER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40007</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Bus Over Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-plc-io-failure">
			<type>state</type>
			<sensorId>SWGR-A_MSB_PLC_IO_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40008</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB PLC IO Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-bus-overload">
			<type>state</type>
			<sensorId>SWGR-A_MSB_BUS_OVERLOAD</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40008</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Bus Overload</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-station-battery-charger-failure">
			<type>state</type>
			<sensorId>SWGR-A_MSB_STATION_BATTERY_CHARGER_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40008</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Station Battery Charger Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-station-battery-common-alarm">
			<type>state</type>
			<sensorId>SWGR-A_MSB_STATION_BATTERY_COMMON_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40008</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Station Battery Common Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-main-tank-low-fuel">
			<type>state</type>
			<sensorId>SWGR-A_MSB_MAIN_TANK_LOW_FUEL</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40008</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Main Tank Low Fuel</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-mas-spma-not-in-auto">
			<type>state</type>
			<sensorId>SWGR-A_MSB_MAS_SPMA_NOT_IN_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40009</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB MAS SPMA Not in Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-mas-ups-on-bypass">
			<type>state</type>
			<sensorId>SWGR-A_MSB_MAS_UPS_ON_BYPASS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40009</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB MAS UPS On Bypass</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-master-plc-stopped">
			<type>state</type>
			<sensorId>SWGR-A_MSB_MASTER_PLC_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40010</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB Master PLC Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-mas-slave-plc-stopped">
			<type>state</type>
			<sensorId>SWGR-A_MSB_MAS_SLAVE_PLC_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40010</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB MAS Slave PLC Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-mas-control-voltage-failure">
			<type>state</type>
			<sensorId>SWGR-A_MSB_MAS_CONTROL_VOLTAGE_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40010</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB MAS Control Voltage Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-a-msb-mas-system-not-in-auto">
			<type>state</type>
			<sensorId>SWGR-A_MSB_MAS_SYSTEM_NOT_IN_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40010</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-A MSB MAS System Not In Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-A</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-gen-b1-running">
			<type>state</type>
			<sensorId>SWGR-B_GEN_B1_RUNNING</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40011</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B Gen B1 Running</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-gen-b1-online">
			<type>state</type>
			<sensorId>SWGR-B_GEN_B1_ONLINE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40011</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B Gen B1 Online</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-gen-b1-locked-out">
			<type>state</type>
			<sensorId>SWGR-B_GEN_B1_LOCKED_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40011</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B Gen B1 Locked Out</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-system-test">
			<type>state</type>
			<sensorId>SWGR-B_MSB_SYSTEM_TEST</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40011</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB System Test</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-emergency-mode">
			<type>state</type>
			<sensorId>SWGR-B_MSB_EMERGENCY_MODE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40011</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Emergency Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-gen-b2-running">
			<type>state</type>
			<sensorId>SWGR-B_GEN_B2_RUNNING</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40012</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B Gen B2 Running</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-gen-b2-online">
			<type>state</type>
			<sensorId>SWGR-B_GEN_B2_ONLINE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40012</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B Gen B2 Online</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-gen-b2-locked-out">
			<type>state</type>
			<sensorId>SWGR-B_GEN_B2_LOCKED_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40012</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B Gen B2 Locked Out</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-priority-2-load-shed-active">
			<type>state</type>
			<sensorId>SWGR-B_MSB_PRIORITY_2_LOAD_SHED_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40012</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Priority 2 Load Shed Active</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-priority-2-load-shed-bypassed">
			<type>state</type>
			<sensorId>SWGR-B_MSB_PRIORITY_2_LOAD_SHED_BYPASSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40012</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Priority 2 Load Shed Bypassed</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-ethernet-comm-failure">
			<type>state</type>
			<sensorId>SWGR-B_MSB_ETHERNET_COMM_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40015</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Ethernet Comm Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-system-plc-diagnostic-fault">
			<type>state</type>
			<sensorId>SWGR-B_MSB_SYSTEM_PLC_DIAGNOSTIC_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40015</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB System PLC Diagnostic Fault</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-dc-converter-failure">
			<type>state</type>
			<sensorId>SWGR-B_MSB_DC_CONVERTER_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40015</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB DC Converter Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-load-demand-mode-active">
			<type>state</type>
			<sensorId>SWGR-B_MSB_LOAD_DEMAND_MODE_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40016</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Load Demand Mode Active</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-load-demand-start-td-active">
			<type>state</type>
			<sensorId>SWGR-B_MSB_LOAD_DEMAND_START_TD_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40016</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Load Demand Start TD Active</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-load-demand-stop-td-active">
			<type>state</type>
			<sensorId>SWGR-B_MSB_LOAD_DEMAND_STOP_TD_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40016</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Load Demand Stop TD Active</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-bus-under-frequency">
			<type>state</type>
			<sensorId>SWGR-B_MSB_BUS_UNDER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40016</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Bus Under Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-bus-under-voltage">
			<type>state</type>
			<sensorId>SWGR-B_MSB_BUS_UNDER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40016</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Bus Under Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-bus-optimization-mode-active">
			<type>state</type>
			<sensorId>SWGR-B_MSB_BUS_OPTIMIZATION_MODE_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40017</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Bus Optimization Mode Active</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-next-load-exceeds-headroom">
			<type>state</type>
			<sensorId>SWGR-B_MSB_NEXT_LOAD_EXCEEDS_HEADROOM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40017</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Next Load Exceeds Headroom</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-bus-loaded-to-capacity">
			<type>state</type>
			<sensorId>SWGR-B_MSB_BUS_LOADED_TO_CAPACITY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40017</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Bus Loaded to Capacity</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-bus-over-frequency">
			<type>state</type>
			<sensorId>SWGR-B_MSB_BUS_OVER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40017</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Bus Over Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-bus-over-voltage">
			<type>state</type>
			<sensorId>SWGR-B_MSB_BUS_OVER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40017</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Bus Over Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-plc-io-failure">
			<type>state</type>
			<sensorId>SWGR-B_MSB_PLC_IO_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40018</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB PLC IO Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-bus-overload">
			<type>state</type>
			<sensorId>SWGR-B_MSB_BUS_OVERLOAD</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40018</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Bus Overload</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-station-battery-charger-failure">
			<type>state</type>
			<sensorId>SWGR-B_MSB_STATION_BATTERY_CHARGER_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40018</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Station Battery Charger Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-station-battery-common-alarm">
			<type>state</type>
			<sensorId>SWGR-B_MSB_STATION_BATTERY_COMMON_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40018</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Station Battery Common Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-main-tank-low-fuel">
			<type>state</type>
			<sensorId>SWGR-B_MSB_MAIN_TANK_LOW_FUEL</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40018</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Main Tank Low Fuel</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-mas-spma-not-in-auto">
			<type>state</type>
			<sensorId>SWGR-B_MSB_MAS_SPMA_NOT_IN_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40019</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB MAS SPMA Not in Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-mas-ups-on-bypass">
			<type>state</type>
			<sensorId>SWGR-B_MSB_MAS_UPS_ON_BYPASS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40019</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB MAS UPS On Bypass</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-master-plc-stopped">
			<type>state</type>
			<sensorId>SWGR-B_MSB_MASTER_PLC_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40020</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB Master PLC Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-mas-slave-plc-stopped">
			<type>state</type>
			<sensorId>SWGR-B_MSB_MAS_SLAVE_PLC_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40020</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB MAS Slave PLC Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-mas-control-voltage-failure">
			<type>state</type>
			<sensorId>SWGR-B_MSB_MAS_CONTROL_VOLTAGE_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40020</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB MAS Control Voltage Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>
		<stateSensor ruleid="swgr-b-msb-mas-system-not-in-auto">
			<type>state</type>
			<sensorId>SWGR-B_MSB_MAS_SYSTEM_NOT_IN_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40020</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>SWGR-B MSB MAS System Not In Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>Master SWGR-B</sensorSet>
		</stateSensor>

		<stateSensor ruleid="utility-1-msa-utility-available">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_UTILITY_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40051</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Utility Available</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-utility-cb-locked-out">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_UTILITY_CB_LOCKED_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40051</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Utility CB Locked Out</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-utility-reverse-power">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_UTILITY_REVERSE_POWER</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40051</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Utility Reverse Power</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-common-feeder-cb-fail-to-open">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_COMMON_FEEDER_CB_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40053</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Common Feeder CB Fail to Open</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-common-feeder-cb-fail-to-close">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_COMMON_FEEDER_CB_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40053</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Common Feeder CB Fail to Close</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-common-feeder-cb-tripped">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_COMMON_FEEDER_CB_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40053</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Common Feeder CB Tripped</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-transfer-failure">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_TRANSFER_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40053</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Transfer Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-no-load-test-mode-is">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_NO_LOAD_TEST_MODE_IS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40054</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA No Load Test Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-load-test-mode-is">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_LOAD_TEST_MODE_IS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40054</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Load Test Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-normal-test-mode-is">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_NORMAL_TEST_MODE_IS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40054</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Normal Test Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-open-transition-mode-is">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_OPEN_TRANSITION_MODE_IS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40054</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Open Transition Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-closed-transition-mode-is">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_CLOSED_TRANSITION_MODE_IS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40054</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Closed Transition Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-utility-fail-to-synch">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_UTILITY_FAIL_TO_SYNCH</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40055</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA Utility Fail to Synch</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-1-msa-sr750-common-alarm">
			<type>state</type>
			<sensorId>UTILITY_1_MSA_SR750_COMMON_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40055</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 1 MSA SR750 Common Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-utility-available">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_UTILITY_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40061</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Utility Available</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-utility-cb-locked-out">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_UTILITY_CB_LOCKED_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40061</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Utility CB Locked Out</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-utility-reverse-power">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_UTILITY_REVERSE_POWER</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40061</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Utility Reverse Power</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-common-feeder-cb-fail-to-open">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_COMMON_FEEDER_CB_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40063</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Common Feeder CB Fail to Open</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-common-feeder-cb-fail-to-close">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_COMMON_FEEDER_CB_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40063</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Common Feeder CB Fail to Close</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-common-feeder-cb-tripped">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_COMMON_FEEDER_CB_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40063</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Common Feeder CB Tripped</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-transfer-failure">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_TRANSFER_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40063</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Transfer Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-no-load-test-mode-is">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_NO_LOAD_TEST_MODE_IS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40064</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB No Load Test Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-load-test-mode-is">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_LOAD_TEST_MODE_IS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40064</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Load Test Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-normal-test-mode-is">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_NORMAL_TEST_MODE_IS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40064</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Normal Test Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-open-transition-mode-is">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_OPEN_TRANSITION_MODE_IS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40064</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Open Transition Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-closed-transition-mode-is">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_CLOSED_TRANSITION_MODE_IS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40064</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Closed Transition Mode</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-utility-fail-to-synch">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_UTILITY_FAIL_TO_SYNCH</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40065</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB Utility Fail to Synch</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="utility-2-msa-sr750-common-alarm">
			<type>state</type>
			<sensorId>UTILITY_2_MSA_SR750_COMMON_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40065</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Utility 2 MSB SR750 Common Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Utility 2</sensorSet>
		</stateSensor>

		<stateSensor ruleid="generator-a1-gen-parallel-circuit-breaker-open-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_PARALLEL_CIRCUIT_BREAKER_OPEN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40111</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Parallel Circuit Breaker Open Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-parallel-circuit-breaker-closed-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_PARALLEL_CIRCUIT_BREAKER_CLOSED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40111</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Parallel Circuit Breaker Closed Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-parallel-circuit-breaker-tripped-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_PARALLEL_CIRCUIT_BREAKER_TRIPPED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40111</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Parallel Circuit Breaker Tripped Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-parallel-cb-close-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_PARALLEL_CB_CLOSE_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40111</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Parallel CB Close Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-failure-to-sync-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_FAILURE_TO_SYNC_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40111</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Failure to Sync Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-gen-output-cb-open-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_GEN_OUTPUT_CB_OPEN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40112</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Gen Output CB Open Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-gen-output-cb-closed-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_GEN_OUTPUT_CB_CLOSED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40112</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Gen Output CB Closed Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-parallel-cb-open-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_PARALLEL_CB_OPEN_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40112</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Parallel CB Open Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-parallel-circuit-breaker-withdrawn-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_PARALLEL_CIRCUIT_BREAKER_WITHDRAWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40112</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Parallel Circuit Breaker Withdrawn Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-ground-fault-alarm">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_GROUND_FAULT_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40112</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Ground Fault Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-overcrank-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_OVERCRANK_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40113</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Overcrank Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-overspeed-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_OVERSPEED_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40113</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Overspeed Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-reverse-power-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_REVERSE_POWER_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40113</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Reverse Power Shutdown status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-low-oil-pressure-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_LOW_OIL_PRESSURE_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40113</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Low Oil Pressure Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-high-water-temp_-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_HIGH_WATER_TEMP__SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40113</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen High Water Temp. Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-engine-running-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_ENGINE_RUNNING_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40115</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Engine Running Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-engine-diagnostics-fault">
			<type>state</type>
			<sensorId>GENERATOR_A1_ENGINE_DIAGNOSTICS_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40115</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Engine Diagnostics Fault</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-control-voltage-failure">
			<type>state</type>
			<sensorId>GENERATOR_A1_CONTROL_VOLTAGE_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40115</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Control Voltage Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-controls-not-in-auto-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_CONTROLS_NOT_IN_AUTO_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40115</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Controls Not In Auto Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-local-emergency-stop-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_LOCAL_EMERGENCY_STOP_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40116</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Local Emergency Stop Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-remote-emergency-stop-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_REMOTE_EMERGENCY_STOP_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40116</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Remote Emergency Stop Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-low-coolant-level-alarm-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_LOW_COOLANT_LEVEL_ALARM_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40116</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Low Coolant Level Alarm Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-low-coolant-temp-alarm-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_LOW_COOLANT_TEMP_ALARM_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40116</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Low Coolant Temp Alarm Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-generator-loss-of-excitation">
			<type>state</type>
			<sensorId>GENERATOR_A1_GENERATOR_LOSS_OF_EXCITATION</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40116</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Generator Loss of Excitation</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-day-tank-low-fuel-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_DAY_TANK_LOW_FUEL_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40117</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Day Tank Low Fuel Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-day-tank-high-fuel-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_DAY_TANK_HIGH_FUEL_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40117</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Day Tank High Fuel Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-day-tank-rupture-basin-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_DAY_TANK_RUPTURE_BASIN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40117</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Day Tank Rupture Basin Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-generator-over-voltage">
			<type>state</type>
			<sensorId>GENERATOR_A1_GENERATOR_OVER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40117</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Generator Over Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-generator-under-frequency">
			<type>state</type>
			<sensorId>GENERATOR_A1_GENERATOR_UNDER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40117</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Generator Under Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-battery-charger-failure">
			<type>state</type>
			<sensorId>GENERATOR_A1_BATTERY_CHARGER_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40118</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Battery Charger Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-high-battery-voltage">
			<type>state</type>
			<sensorId>GENERATOR_A1_HIGH_BATTERY_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40118</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 High Battery Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-low-battery-voltage">
			<type>state</type>
			<sensorId>GENERATOR_A1_LOW_BATTERY_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40118</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Low Battery Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-generator-under-voltage">
			<type>state</type>
			<sensorId>GENERATOR_A1_GENERATOR_UNDER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40118</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Generator Under Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-generator-under-frequency">
			<type>state</type>
			<sensorId>GENERATOR_A1_GENERATOR_UNDER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40118</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Generator Under Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-plc-1-stopped">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_PLC-1_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40119</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen PLC-1 Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-plc-2-stopped">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_PLC-2_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40119</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen PLC-2 Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-plc-diagnostic-fault">
			<type>state</type>
			<sensorId>GENERATOR_A1_PLC_DIAGNOSTIC_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40119</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 PLC Diagnostic Fault</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-common-shutdown">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_COMMON_SHUTDOWN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40120</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Common Shutdown</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-common-alarm">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_COMMON_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40120</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen Common Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-dc-convertor-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_DC_CONVERTOR_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40120</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A1 Gen DC Convertor Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>

		<stateSensor ruleid="generator-a2-gen-parallel-circuit-breaker-open-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_PARALLEL_CIRCUIT_BREAKER_OPEN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40121</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Parallel Circuit Breaker Open Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-parallel-circuit-breaker-closed-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_PARALLEL_CIRCUIT_BREAKER_CLOSED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40121</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Parallel Circuit Breaker Closed Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-parallel-circuit-breaker-tripped-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_PARALLEL_CIRCUIT_BREAKER_TRIPPED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40121</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Parallel Circuit Breaker Tripped Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-parallel-cb-close-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_PARALLEL_CB_CLOSE_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40121</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Parallel CB Close Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-failure-to-sync-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_FAILURE_TO_SYNC_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40121</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Failure to Sync Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-gen-output-cb-open-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_GEN_OUTPUT_CB_OPEN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40122</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Gen Output CB Open Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-gen-output-cb-closed-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_GEN_OUTPUT_CB_CLOSED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40122</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Gen Output CB Closed Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-parallel-cb-open-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_PARALLEL_CB_OPEN_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40122</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Parallel CB Open Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-parallel-circuit-breaker-withdrawn-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_PARALLEL_CIRCUIT_BREAKER_WITHDRAWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40122</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Parallel Circuit Breaker Withdrawn Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-ground-fault-alarm">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_GROUND_FAULT_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40122</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Ground Fault Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-overcrank-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_OVERCRANK_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40123</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Overcrank Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-overspeed-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_OVERSPEED_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40123</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Overspeed Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-reverse-power-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_REVERSE_POWER_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40123</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Reverse Power Shutdown status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-low-oil-pressure-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_LOW_OIL_PRESSURE_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40123</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Low Oil Pressure Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-high-water-temp_-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_HIGH_WATER_TEMP__SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40123</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen High Water Temp. Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-engine-running-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_ENGINE_RUNNING_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40125</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Engine Running Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-engine-diagnostics-fault">
			<type>state</type>
			<sensorId>GENERATOR_A2_ENGINE_DIAGNOSTICS_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40125</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Engine Diagnostics Fault</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-control-voltage-failure">
			<type>state</type>
			<sensorId>GENERATOR_A2_CONTROL_VOLTAGE_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40125</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Control Voltage Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-controls-not-in-auto-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_CONTROLS_NOT_IN_AUTO_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40125</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Controls Not In Auto Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-local-emergency-stop-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_LOCAL_EMERGENCY_STOP_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40126</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Local Emergency Stop Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-remote-emergency-stop-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_REMOTE_EMERGENCY_STOP_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40126</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Remote Emergency Stop Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-low-coolant-level-alarm-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_LOW_COOLANT_LEVEL_ALARM_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40126</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Low Coolant Level Alarm Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-low-coolant-temp-alarm-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_LOW_COOLANT_TEMP_ALARM_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40126</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Low Coolant Temp Alarm Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-generator-loss-of-excitation">
			<type>state</type>
			<sensorId>GENERATOR_A2_GENERATOR_LOSS_OF_EXCITATION</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40126</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Generator Loss of Excitation</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-day-tank-low-fuel-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_DAY_TANK_LOW_FUEL_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40127</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Day Tank Low Fuel Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-day-tank-high-fuel-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_DAY_TANK_HIGH_FUEL_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40127</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Day Tank High Fuel Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-day-tank-rupture-basin-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_DAY_TANK_RUPTURE_BASIN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40127</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Day Tank Rupture Basin Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-generator-over-voltage">
			<type>state</type>
			<sensorId>GENERATOR_A2_GENERATOR_OVER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40127</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Generator Over Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-generator-under-frequency">
			<type>state</type>
			<sensorId>GENERATOR_A2_GENERATOR_UNDER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40127</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Generator Under Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-battery-charger-failure">
			<type>state</type>
			<sensorId>GENERATOR_A2_BATTERY_CHARGER_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40128</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Battery Charger Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-high-battery-voltage">
			<type>state</type>
			<sensorId>GENERATOR_A2_HIGH_BATTERY_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40128</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 High Battery Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-low-battery-voltage">
			<type>state</type>
			<sensorId>GENERATOR_A2_LOW_BATTERY_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40128</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Low Battery Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-generator-under-voltage">
			<type>state</type>
			<sensorId>GENERATOR_A2_GENERATOR_UNDER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40128</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Generator Under Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-generator-under-frequency">
			<type>state</type>
			<sensorId>GENERATOR_A2_GENERATOR_UNDER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40128</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Generator Under Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-plc-1-stopped">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_PLC-1_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40129</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen PLC-1 Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-plc-2-stopped">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_PLC-2_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40129</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen PLC-2 Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-plc-diagnostic-fault">
			<type>state</type>
			<sensorId>GENERATOR_A2_PLC_DIAGNOSTIC_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40129</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 PLC Diagnostic Fault</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-common-shutdown">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_COMMON_SHUTDOWN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40130</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Common Shutdown</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-common-alarm">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_COMMON_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40130</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen Common Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-dc-convertor-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_DC_CONVERTOR_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40130</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator A2 Gen DC Convertor Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>

		<stateSensor ruleid="generator-b1-gen-parallel-circuit-breaker-open-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_PARALLEL_CIRCUIT_BREAKER_OPEN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40131</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Parallel Circuit Breaker Open Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-parallel-circuit-breaker-closed-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_PARALLEL_CIRCUIT_BREAKER_CLOSED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40131</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Parallel Circuit Breaker Closed Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-parallel-circuit-breaker-tripped-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_PARALLEL_CIRCUIT_BREAKER_TRIPPED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40131</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Parallel Circuit Breaker Tripped Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-parallel-cb-close-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_PARALLEL_CB_CLOSE_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40131</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Parallel CB Close Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-failure-to-sync-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_FAILURE_TO_SYNC_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40131</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Failure to Sync Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-gen-output-cb-open-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_GEN_OUTPUT_CB_OPEN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40132</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Gen Output CB Open Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-gen-output-cb-closed-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_GEN_OUTPUT_CB_CLOSED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40132</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Gen Output CB Closed Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-parallel-cb-open-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_PARALLEL_CB_OPEN_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40132</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Parallel CB Open Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-parallel-circuit-breaker-withdrawn-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_PARALLEL_CIRCUIT_BREAKER_WITHDRAWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40132</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Parallel Circuit Breaker Withdrawn Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-ground-fault-alarm">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_GROUND_FAULT_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40132</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Ground Fault Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-overcrank-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_OVERCRANK_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40133</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Overcrank Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-overspeed-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_OVERSPEED_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40133</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Overspeed Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-reverse-power-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_REVERSE_POWER_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40133</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Reverse Power Shutdown status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-low-oil-pressure-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_LOW_OIL_PRESSURE_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40133</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Low Oil Pressure Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-high-water-temp_-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_HIGH_WATER_TEMP__SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40133</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen High Water Temp. Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-engine-running-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_ENGINE_RUNNING_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40135</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Engine Running Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-engine-diagnostics-fault">
			<type>state</type>
			<sensorId>GENERATOR_B1_ENGINE_DIAGNOSTICS_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40135</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Engine Diagnostics Fault</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-control-voltage-failure">
			<type>state</type>
			<sensorId>GENERATOR_B1_CONTROL_VOLTAGE_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40135</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Control Voltage Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-controls-not-in-auto-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_CONTROLS_NOT_IN_AUTO_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40135</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Controls Not In Auto Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-local-emergency-stop-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_LOCAL_EMERGENCY_STOP_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40136</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Local Emergency Stop Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-remote-emergency-stop-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_REMOTE_EMERGENCY_STOP_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40136</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Remote Emergency Stop Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-low-coolant-level-alarm-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_LOW_COOLANT_LEVEL_ALARM_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40136</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Low Coolant Level Alarm Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-low-coolant-temp-alarm-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_LOW_COOLANT_TEMP_ALARM_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40136</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Low Coolant Temp Alarm Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-generator-loss-of-excitation">
			<type>state</type>
			<sensorId>GENERATOR_B1_GENERATOR_LOSS_OF_EXCITATION</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40136</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Generator Loss of Excitation</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-day-tank-low-fuel-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_DAY_TANK_LOW_FUEL_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40137</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Day Tank Low Fuel Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-day-tank-high-fuel-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_DAY_TANK_HIGH_FUEL_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40137</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Day Tank High Fuel Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-day-tank-rupture-basin-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_DAY_TANK_RUPTURE_BASIN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40137</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Day Tank Rupture Basin Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-generator-over-voltage">
			<type>state</type>
			<sensorId>GENERATOR_B1_GENERATOR_OVER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40137</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Generator Over Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-generator-under-frequency">
			<type>state</type>
			<sensorId>GENERATOR_B1_GENERATOR_UNDER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40137</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Generator Under Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-battery-charger-failure">
			<type>state</type>
			<sensorId>GENERATOR_B1_BATTERY_CHARGER_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40138</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Battery Charger Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-high-battery-voltage">
			<type>state</type>
			<sensorId>GENERATOR_B1_HIGH_BATTERY_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40138</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 High Battery Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-low-battery-voltage">
			<type>state</type>
			<sensorId>GENERATOR_B1_LOW_BATTERY_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40138</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Low Battery Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-generator-under-voltage">
			<type>state</type>
			<sensorId>GENERATOR_B1_GENERATOR_UNDER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40138</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Generator Under Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-generator-under-frequency">
			<type>state</type>
			<sensorId>GENERATOR_B1_GENERATOR_UNDER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40138</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Generator Under Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-plc-1-stopped">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_PLC-1_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40139</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen PLC-1 Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-plc-2-stopped">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_PLC-2_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40139</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen PLC-2 Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-plc-diagnostic-fault">
			<type>state</type>
			<sensorId>GENERATOR_B1_PLC_DIAGNOSTIC_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40139</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 PLC Diagnostic Fault</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-common-shutdown">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_COMMON_SHUTDOWN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40140</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Common Shutdown</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-common-alarm">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_COMMON_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40140</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen Common Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-dc-convertor-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_DC_CONVERTOR_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40140</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B1 Gen DC Convertor Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>

		<stateSensor ruleid="generator-b2-gen-parallel-circuit-breaker-open-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_PARALLEL_CIRCUIT_BREAKER_OPEN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40141</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Parallel Circuit Breaker Open Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-parallel-circuit-breaker-closed-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_PARALLEL_CIRCUIT_BREAKER_CLOSED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40141</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Parallel Circuit Breaker Closed Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-parallel-circuit-breaker-tripped-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_PARALLEL_CIRCUIT_BREAKER_TRIPPED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40141</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Parallel Circuit Breaker Tripped Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-parallel-cb-close-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_PARALLEL_CB_CLOSE_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40141</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Parallel CB Close Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-failure-to-sync-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_FAILURE_TO_SYNC_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40141</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Failure to Sync Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-gen-output-cb-open-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_GEN_OUTPUT_CB_OPEN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40142</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Gen Output CB Open Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-gen-output-cb-closed-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_GEN_OUTPUT_CB_CLOSED_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40142</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Gen Output CB Closed Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-parallel-cb-open-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_PARALLEL_CB_OPEN_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40142</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Parallel CB Open Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-parallel-circuit-breaker-withdrawn-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_PARALLEL_CIRCUIT_BREAKER_WITHDRAWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40142</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Parallel Circuit Breaker Withdrawn Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-ground-fault-alarm">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_GROUND_FAULT_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40142</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Ground Fault Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-overcrank-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_OVERCRANK_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40143</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Overcrank Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-overspeed-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_OVERSPEED_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40143</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Overspeed Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-reverse-power-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_REVERSE_POWER_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40143</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Reverse Power Shutdown status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-low-oil-pressure-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_LOW_OIL_PRESSURE_SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40143</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Low Oil Pressure Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-high-water-temp_-shutdown-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_HIGH_WATER_TEMP__SHUTDOWN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40143</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen High Water Temp. Shutdown Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-engine-running-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_ENGINE_RUNNING_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40145</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Engine Running Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-engine-diagnostics-fault">
			<type>state</type>
			<sensorId>GENERATOR_B2_ENGINE_DIAGNOSTICS_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40145</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Engine Diagnostics Fault</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-control-voltage-failure">
			<type>state</type>
			<sensorId>GENERATOR_B2_CONTROL_VOLTAGE_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40145</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Control Voltage Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-controls-not-in-auto-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_CONTROLS_NOT_IN_AUTO_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40145</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Controls Not In Auto Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-local-emergency-stop-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_LOCAL_EMERGENCY_STOP_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40146</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Local Emergency Stop Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-remote-emergency-stop-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_REMOTE_EMERGENCY_STOP_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40146</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Remote Emergency Stop Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-low-coolant-level-alarm-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_LOW_COOLANT_LEVEL_ALARM_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40146</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Low Coolant Level Alarm Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-low-coolant-temp-alarm-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_LOW_COOLANT_TEMP_ALARM_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40146</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Low Coolant Temp Alarm Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-generator-loss-of-excitation">
			<type>state</type>
			<sensorId>GENERATOR_B2_GENERATOR_LOSS_OF_EXCITATION</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40146</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Generator Loss of Excitation</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-day-tank-low-fuel-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_DAY_TANK_LOW_FUEL_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40147</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Day Tank Low Fuel Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-day-tank-high-fuel-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_DAY_TANK_HIGH_FUEL_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40147</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Day Tank High Fuel Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-day-tank-rupture-basin-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_DAY_TANK_RUPTURE_BASIN_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40147</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Day Tank Rupture Basin Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-generator-over-voltage">
			<type>state</type>
			<sensorId>GENERATOR_B2_GENERATOR_OVER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40147</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Generator Over Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-generator-under-frequency">
			<type>state</type>
			<sensorId>GENERATOR_B2_GENERATOR_UNDER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40147</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Generator Under Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-battery-charger-failure">
			<type>state</type>
			<sensorId>GENERATOR_B2_BATTERY_CHARGER_FAILURE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40148</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Battery Charger Failure</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-high-battery-voltage">
			<type>state</type>
			<sensorId>GENERATOR_B2_HIGH_BATTERY_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40148</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 High Battery Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-low-battery-voltage">
			<type>state</type>
			<sensorId>GENERATOR_B2_LOW_BATTERY_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40148</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Low Battery Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-generator-under-voltage">
			<type>state</type>
			<sensorId>GENERATOR_B2_GENERATOR_UNDER_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40148</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Generator Under Voltage</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-generator-under-frequency">
			<type>state</type>
			<sensorId>GENERATOR_B2_GENERATOR_UNDER_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40148</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Generator Under Frequency</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-plc-1-stopped">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_PLC-1_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40149</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen PLC-1 Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-plc-2-stopped">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_PLC-2_STOPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40149</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen PLC-2 Stopped</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-plc-diagnostic-fault">
			<type>state</type>
			<sensorId>GENERATOR_B2_PLC_DIAGNOSTIC_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40149</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 PLC Diagnostic Fault</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-common-shutdown">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_COMMON_SHUTDOWN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40150</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Common Shutdown</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-common-alarm">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_COMMON_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40150</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen Common Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-dc-convertor-failure-status">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_DC_CONVERTOR_FAILURE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40150</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Generator B2 Gen DC Convertor Failure Status</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>

		<stateSensor ruleid="breaker-52-a-f1-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F1_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41001</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F1 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f1-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F1_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41001</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F1 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f1-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F1_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41001</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F1 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f1-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F1_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41001</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F1 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f1-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F1_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41001</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F1 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f1-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F1_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41001</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F1 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f1-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F1_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41001</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F1 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f2-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F2_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41002</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F2 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f2-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F2_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41002</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F2 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f2-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F2_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41002</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F2 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f2-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F2_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41002</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F2 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f2-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F2_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41002</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F2 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f2-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F2_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41002</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F2 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f2-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F2_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41002</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F2 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f3-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F3_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41003</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F3 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f3-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F3_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41003</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F3 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f3-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F3_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41003</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F3 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f3-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F3_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41003</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F3 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f3-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F3_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41003</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F3 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f3-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F3_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41003</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F3 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f3-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F3_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41003</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F3 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f4-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F4_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41004</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F4 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f4-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F4_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41004</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F4 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f4-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F4_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41004</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F4 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f4-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F4_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41004</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F4 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f4-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F4_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41004</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F4 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f4-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F4_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41004</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F4 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f4-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F4_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41004</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F4 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f5-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F5_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41005</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F5 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f5-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F5_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41005</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F5 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f5-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F5_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41005</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F5 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f5-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F5_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41005</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F5 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f5-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F5_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41005</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F5 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f5-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F5_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41005</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F5 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f5-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F5_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41005</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F5 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f6-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F6_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41006</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F6 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f6-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F6_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41006</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F6 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f6-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F6_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41006</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F6 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f6-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F6_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41006</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F6 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f6-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F6_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41006</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F6 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f6-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F6_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41006</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F6 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f6-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F6_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41006</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F6 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f7-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F7_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41007</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F7 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f7-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F7_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41007</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F7 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f7-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F7_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41007</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F7 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f7-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F7_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41007</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F7 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f7-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F7_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41007</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F7 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f7-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F7_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41007</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F7 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f7-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F7_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41007</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F7 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f8-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F8_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41008</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F8 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f8-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F8_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41008</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F8 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f8-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F8_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41008</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F8 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f8-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F8_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41008</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F8 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f8-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F8_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41008</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F8 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f8-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F8_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41008</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F8 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f8-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F8_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41008</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F8 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f9-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F9_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41009</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F9 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f9-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F9_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41009</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F9 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f9-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F9_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41009</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F9 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f9-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F9_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41009</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F9 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f9-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F9_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41009</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F9 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f9-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F9_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41009</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F9 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f9-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F9_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41009</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F9 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f10-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F10_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41010</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F10 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f10-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F10_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41010</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F10 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f10-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F10_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41010</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F10 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f10-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F10_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41010</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F10 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f10-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F10_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41010</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F10 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f10-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F10_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41010</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F10 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f10-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F10_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41010</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F10 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f11-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F11_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41011</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F11 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f11-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F11_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41011</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F11 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f11-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F11_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41011</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F11 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f11-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F11_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41011</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F11 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f11-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F11_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41011</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F11 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f11-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F11_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41011</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F11 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f11-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F11_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41011</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F11 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f12-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_F12_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41012</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F12 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f12-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F12_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41012</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F12 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f12-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_F12_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41012</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F12 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f12-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_F12_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41012</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F12 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f12-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_F12_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41012</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F12 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f12-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_F12_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41012</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F12 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-f12-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_F12_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41012</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A F12 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-tie-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_TIE_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41013</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A Tie Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-tie-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_TIE_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41013</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A Tie Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-tie-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_TIE_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41013</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A Tie Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-tie-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_TIE_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41013</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A Tie Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-tie-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_TIE_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41013</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A Tie Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-tie-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_TIE_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41013</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A Tie Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-tie-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_TIE_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41013</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A Tie Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-utility-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_A_UTILITY_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41014</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A1 Utility Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-utility-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_UTILITY_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41014</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A1 Utility Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-utility-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_A_UTILITY_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41014</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A1 Utility Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-utility-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_A_UTILITY_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41014</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A1 Utility Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-utility-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_A_UTILITY_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41014</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A1 Utility Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-utility-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_A_UTILITY_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41014</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A1 Utility Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-a-utility-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_A_UTILITY_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41014</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 A1 Utility Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f1-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F1_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41015</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F1 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f1-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F1_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41015</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F1 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f1-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F1_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41015</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F1 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f1-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F1_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41015</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F1 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f1-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F1_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41015</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F1 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f1-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F1_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41015</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F1 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f1-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F1_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41015</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F1 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f2-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F2_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41016</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F2 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f2-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F2_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41016</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F2 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f2-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F2_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41016</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F2 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f2-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F2_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41016</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F2 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f2-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F2_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41016</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F2 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f2-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F2_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41016</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F2 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f2-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F2_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41016</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F2 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f3-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F3_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41017</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F3 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f3-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F3_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41017</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F3 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f3-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F3_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41017</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F3 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f3-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F3_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41017</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F3 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f3-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F3_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41017</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F3 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f3-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F3_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41017</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F3 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f3-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F3_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41017</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F3 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f4-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F4_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41018</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F4 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f4-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F4_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41018</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F4 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f4-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F4_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41018</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F4 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f4-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F4_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41018</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F4 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f4-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F4_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41018</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F4 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f4-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F4_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41018</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F4 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f4-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F4_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41018</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F4 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f5-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F5_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41019</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F5 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f5-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F5_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41019</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F5 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f5-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F5_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41019</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F5 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f5-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F5_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41019</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F5 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f5-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F5_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41019</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F5 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f5-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F5_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41019</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F5 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f5-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F5_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41019</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F5 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f6-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F6_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41020</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F6 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f6-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F6_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41020</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F6 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f6-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F6_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41020</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F6 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f6-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F6_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41020</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F6 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f6-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F6_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41020</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F6 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f6-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F6_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41020</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F6 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f6-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F6_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41020</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F6 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f7-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F7_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41021</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F7 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f7-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F7_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41021</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F7 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f7-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F7_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41021</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F7 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f7-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F7_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41021</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F7 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f7-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F7_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41021</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F7 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f7-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F7_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41021</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F7 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f7-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F7_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41021</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F7 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f8-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F8_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41022</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F8 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f8-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F8_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41022</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F8 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f8-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F8_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41022</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F8 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f8-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F8_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41022</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F8 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f8-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F8_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41022</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F8 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f8-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F8_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41022</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F8 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f8-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F8_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41022</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F8 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f9-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F9_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41023</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F9 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f9-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F9_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41023</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F9 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f9-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F9_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41023</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F9 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f9-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F9_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41023</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F9 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f9-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F9_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41023</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F9 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f9-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F9_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41023</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F9 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f9-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F9_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41023</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F9 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f10-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F10_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41024</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F10 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f10-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F10_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41024</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F10 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f10-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F10_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41024</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F10 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f10-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F10_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41024</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F10 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f10-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F10_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41024</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F10 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f10-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F10_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41024</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F10 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f10-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F10_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41024</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F10 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f11-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F11_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41025</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F11 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f11-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F11_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41025</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F11 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f11-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F11_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41025</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F11 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f11-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F11_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41025</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F11 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f11-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F11_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41025</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F11 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f11-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F11_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41025</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F11 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f11-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F11_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41025</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F11 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f12-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_F12_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41026</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F12 Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f12-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F12_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41026</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F12 Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f12-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_F12_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41026</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F12 Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f12-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_F12_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41026</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F12 Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f12-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_F12_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41026</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F12 Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f12-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_F12_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41026</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F12 Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-f12-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_F12_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41026</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B F12 Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-tie-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_TIE_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41027</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B Tie Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-tie-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_TIE_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41027</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B Tie Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-tie-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_TIE_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41027</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B Tie Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-tie-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_TIE_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41027</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B Tie Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-tie-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_TIE_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41027</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B Tie Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-tie-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_TIE_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41027</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B Tie Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-tie-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_TIE_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41027</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B Tie Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-utility-position-closed">
			<type>state</type>
			<sensorId>BREAKER_52_B_UTILITY_POSITION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41028</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B1 Utility Position Closed</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-utility-position-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_UTILITY_POSITION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41028</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B1 Utility Position Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-utility-position-not-connected">
			<type>state</type>
			<sensorId>BREAKER_52_B_UTILITY_POSITION_NOT_CONNECTED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41028</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B1 Utility Position Not Connected</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-utility-position-ground-fault">
			<type>state</type>
			<sensorId>BREAKER_52_B_UTILITY_POSITION_GROUND_FAULT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41028</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B1 Utility Position Ground Fault</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-utility-position-tripped">
			<type>state</type>
			<sensorId>BREAKER_52_B_UTILITY_POSITION_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41028</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B1 Utility Position Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-utility-position-fail-to-close">
			<type>state</type>
			<sensorId>BREAKER_52_B_UTILITY_POSITION_FAIL_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41028</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B1 Utility Position Fail to Close</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-52-b-utility-position-fail-to-open">
			<type>state</type>
			<sensorId>BREAKER_52_B_UTILITY_POSITION_FAIL_TO_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_41028</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>Breaker 52 B1 Utility Position Fail to Open</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</stateSensor>

		<numSensor ruleid="utility-a1-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>UTILITY_A1_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30001</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility A1 Phase A Current</label>
			<sensorSet>Utility 1</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-a1-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>UTILITY_A1_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30002</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility A1 Phase B Current</label>
			<sensorSet>Utility 1</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-a1-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>UTILITY_A1_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30003</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility A1 Phase C Current</label>
			<sensorSet>Utility 1</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-a1-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>UTILITY_A1_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30004</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility A1 Average Current</label>
			<sensorSet>Utility 1</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-a1-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>UTILITY_A1_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30005</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility A1 Average Line to Line Voltage</label>
			<sensorSet>Utility 1</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-a1-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>UTILITY_A1_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30006</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility A1 Total Active Power</label>
			<sensorSet>Utility 1</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-a1-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>UTILITY_A1_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30007</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility A1 Total Volt-Ampere Power</label>
			<sensorSet>Utility 1</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-a1-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>UTILITY_A1_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30008</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility A1 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Utility 1</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-a1-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>UTILITY_A1_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30009</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Utility A1 Frequency</label>
			<sensorSet>Utility 1</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-a1-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>UTILITY_A1_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30011</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Utility A1 Total Power Factor</label>
			<sensorSet>Utility 1</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-b1-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>UTILITY_B1_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30021</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility B1 Phase A Current</label>
			<sensorSet>Utility 2</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-b1-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>UTILITY_B1_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30022</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility B1 Phase B Current</label>
			<sensorSet>Utility 2</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-b1-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>UTILITY_B1_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30023</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility B1 Phase C Current</label>
			<sensorSet>Utility 2</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-b1-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>UTILITY_B1_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30024</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility B1 Average Current</label>
			<sensorSet>Utility 2</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-b1-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>UTILITY_B1_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30025</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility B1 Average Line to Line Voltage</label>
			<sensorSet>Utility 2</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-b1-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>UTILITY_B1_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30026</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility B1 Total Active Power</label>
			<sensorSet>Utility 2</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-b1-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>UTILITY_B1_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30027</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility B1 Total Volt-Ampere Power</label>
			<sensorSet>Utility 2</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-b1-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>UTILITY_B1_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30028</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Utility B1 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Utility 2</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-b1-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>UTILITY_B1_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30029</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Utility B1 Frequency</label>
			<sensorSet>Utility 2</sensorSet>
		</numSensor>
		<numSensor ruleid="utility-b1-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>UTILITY_B1_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30031</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Utility B1 Total Power Factor</label>
			<sensorSet>Utility 2</sensorSet>
		</numSensor>

		<numSensor ruleid="generator-a1-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_A1_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30101</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A1 Phase A Current</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_A1_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30102</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A1 Phase B Current</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_A1_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30103</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A1 Phase C Current</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_A1_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30104</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A1 Average Current</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>GENERATOR_A1_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30105</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A1 Average Line to Line Voltage</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>GENERATOR_A1_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30106</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A1 Total Active Power</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>GENERATOR_A1_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30107</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A1 Total Volt-Ampere Power</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>GENERATOR_A1_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30108</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A1 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>GENERATOR_A1_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30109</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A1 Frequency</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>GENERATOR_A1_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30111</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A1 Total Power Factor</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-coolant-temperature">
			<type>temp</type>
			<units></units>
			<sensorId>GENERATOR_A1_COOLANT_TEMPERATURE</sensorId>
			<value>
				<div>
				<op>
					<sub>
					<op><getOid>REG_30501</getOid></op>
					<op>32</op>
					</sub>
				</op>
				<op>1.8</op>
				</div>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A1 Coolant Temperature</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-oil-pressure">
			<type>pressure</type>
			<units></units>
			<sensorId>GENERATOR_A1_OIL_PRESSURE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30503</getOid></op>
				<op>6.89475729</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A1 Oil Pressure</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-engine-speed">
			<type>num</type>
			<units>rpm</units>
			<sensorId>GENERATOR_A1_ENGINE_SPEED</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30505</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A1 Engine Speed</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-system-battery-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>GENERATOR_A1_SYSTEM_BATTERY_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30507</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A1 System Battery Voltage</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-engine-runtime">
			<type>runhours</type>
			<units></units>
			<sensorId>GENERATOR_A1_ENGINE_RUNTIME</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30509</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A1 Engine Runtime</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a1-exhaust-temperature">
			<type>temp</type>
			<units></units>
			<sensorId>GENERATOR_A1_EXHAUST_TEMPERATURE</sensorId>
			<value>
				<div>
				<op>
					<sub>
					<op><getOid>REG_30511</getOid></op>
					<op>32</op>
					</sub>
				</op>
				<op>1.8</op>
				</div>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A1 Exhaust Temperature</label>
			<sensorSet>Generator A1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_A2_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30113</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A2 Phase A Current</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_A2_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30114</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A2 Phase B Current</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_A2_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30115</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A2 Phase C Current</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_A2_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30116</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A2 Average Current</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>GENERATOR_A2_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30117</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A2 Average Line to Line Voltage</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>GENERATOR_A2_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30118</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A2 Total Active Power</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>GENERATOR_A2_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30119</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A2 Total Volt-Ampere Power</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>GENERATOR_A2_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30120</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A2 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>GENERATOR_A2_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30121</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A2 Frequency</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>GENERATOR_A2_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30123</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A2 Total Power Factor</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-coolant-temperature">
			<type>temp</type>
			<units></units>
			<sensorId>GENERATOR_A2_COOLANT_TEMPERATURE</sensorId>
			<value>
				<div>
				<op>
					<sub>
					<op><getOid>REG_30521</getOid></op>
					<op>32</op>
					</sub>
				</op>
				<op>1.8</op>
				</div>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A2 Coolant Temperature</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-oil-pressure">
			<type>pressure</type>
			<units></units>
			<sensorId>GENERATOR_A2_OIL_PRESSURE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30523</getOid></op>
				<op>6.89475729</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A2 Oil Pressure</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-engine-speed">
			<type>num</type>
			<units>rpm</units>
			<sensorId>GENERATOR_A2_ENGINE_SPEED</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30525</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A2 Engine Speed</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-system-battery-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>GENERATOR_A2_SYSTEM_BATTERY_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30527</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A2 System Battery Voltage</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-engine-runtime">
			<type>runhours</type>
			<units></units>
			<sensorId>GENERATOR_A2_ENGINE_RUNTIME</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30529</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator A2 Engine Runtime</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-a2-exhaust-temperature">
			<type>temp</type>
			<units></units>
			<sensorId>GENERATOR_A2_EXHAUST_TEMPERATURE</sensorId>
			<value>
				<div>
				<op>
					<sub>
					<op><getOid>REG_30531</getOid></op>
					<op>32</op>
					</sub>
				</op>
				<op>1.8</op>
				</div>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator A2 Exhaust Temperature</label>
			<sensorSet>Generator A2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_B1_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30125</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B1 Phase A Current</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_B1_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30126</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B1 Phase B Current</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_B1_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30127</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B1 Phase C Current</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_B1_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30128</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B1 Average Current</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>GENERATOR_B1_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30129</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B1 Average Line to Line Voltage</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>GENERATOR_B1_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30130</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B1 Total Active Power</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>GENERATOR_B1_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30131</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B1 Total Volt-Ampere Power</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>GENERATOR_B1_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30132</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B1 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>GENERATOR_B1_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30133</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B1 Frequency</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>GENERATOR_B1_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30135</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B1 Total Power Factor</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-coolant-temperature">
			<type>temp</type>
			<units></units>
			<sensorId>GENERATOR_B1_COOLANT_TEMPERATURE</sensorId>
			<value>
				<div>
				<op>
					<sub>
					<op><getOid>REG_30541</getOid></op>
					<op>32</op>
					</sub>
				</op>
				<op>1.8</op>
				</div>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B1 Coolant Temperature</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-oil-pressure">
			<type>pressure</type>
			<units></units>
			<sensorId>GENERATOR_B1_OIL_PRESSURE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30543</getOid></op>
				<op>6.89475729</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B1 Oil Pressure</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-engine-speed">
			<type>num</type>
			<units>rpm</units>
			<sensorId>GENERATOR_B1_ENGINE_SPEED</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30545</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B1 Engine Speed</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-system-battery-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>GENERATOR_B1_SYSTEM_BATTERY_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30547</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B1 System Battery Voltage</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-engine-runtime">
			<type>runhours</type>
			<units></units>
			<sensorId>GENERATOR_B1_ENGINE_RUNTIME</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30549</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B1 Engine Runtime</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b1-exhaust-temperature">
			<type>temp</type>
			<units></units>
			<sensorId>GENERATOR_B1_EXHAUST_TEMPERATURE</sensorId>
			<value>
				<div>
				<op>
					<sub>
					<op><getOid>REG_30551</getOid></op>
					<op>32</op>
					</sub>
				</op>
				<op>1.8</op>
				</div>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B1 Exhaust Temperature</label>
			<sensorSet>Generator B1</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_B2_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30137</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B2 Phase A Current</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_B2_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30138</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B2 Phase B Current</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_B2_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30139</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B2 Phase C Current</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>GENERATOR_B2_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30140</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B2 Average Current</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>GENERATOR_B2_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30141</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B2 Average Line to Line Voltage</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>GENERATOR_B2_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30142</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B2 Total Active Power</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>GENERATOR_B2_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30143</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B2 Total Volt-Ampere Power</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>GENERATOR_B2_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30144</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B2 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>GENERATOR_B2_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30145</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B2 Frequency</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>GENERATOR_B2_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30147</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B2 Total Power Factor</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-coolant-temperature">
			<type>temp</type>
			<units></units>
			<sensorId>GENERATOR_B2_COOLANT_TEMPERATURE</sensorId>
			<value>
				<div>
				<op>
					<sub>
					<op><getOid>REG_30561</getOid></op>
					<op>32</op>
					</sub>
				</op>
				<op>1.8</op>
				</div>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B2 Coolant Temperature</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-oil-pressure">
			<type>pressure</type>
			<units></units>
			<sensorId>GENERATOR_B2_OIL_PRESSURE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30563</getOid></op>
				<op>6.89475729</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B2 Oil Pressure</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-engine-speed">
			<type>num</type>
			<units>rpm</units>
			<sensorId>GENERATOR_B2_ENGINE_SPEED</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30565</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B2 Engine Speed</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-system-battery-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>GENERATOR_B2_SYSTEM_BATTERY_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30567</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B2 System Battery Voltage</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-engine-runtime">
			<type>runhours</type>
			<units></units>
			<sensorId>GENERATOR_B2_ENGINE_RUNTIME</sensorId>
			<value>
				<mult>
				<op><getOid>REG_30569</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator B2 Engine Runtime</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>
		<numSensor ruleid="generator-b2-exhaust-temperature">
			<type>temp</type>
			<units></units>
			<sensorId>GENERATOR_B2_EXHAUST_TEMPERATURE</sensorId>
			<value>
				<div>
				<op>
					<sub>
					<op><getOid>REG_30571</getOid></op>
					<op>32</op>
					</sub>
				</op>
				<op>1.8</op>
				</div>
			</value>
			<valueInc>0.01</valueInc>
			<label>Generator B2 Exhaust Temperature</label>
			<sensorSet>Generator B2</sensorSet>
		</numSensor>

		<stateSensor ruleid="ats-01-normal-source-available">
			<type>state</type>
			<sensorId>ATS_01_NORMAL_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Normal Source Available</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-emergency-source-available">
			<type>state</type>
			<sensorId>ATS_01_EMERGENCY_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Emergency Source Available</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-main-on-normal-source-status">
			<type>state</type>
			<sensorId>ATS_01_MAIN_ON_NORMAL_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Main On Normal Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-main-on-emergency-source-status">
			<type>state</type>
			<sensorId>ATS_01_MAIN_ON_EMERGENCY_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Main On Emergency Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-aux-on-normal-source-status">
			<type>state</type>
			<sensorId>ATS_01_AUX_ON_NORMAL_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Aux On Normal Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-aux-on-emergency-source-status">
			<type>state</type>
			<sensorId>ATS_01_AUX_ON_EMERGENCY_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Aux On Emergency Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-has-bypass-switch-status">
			<type>state</type>
			<sensorId>ATS_01_HAS_BYPASS_SWITCH_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Has Bypass Switch Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-engine-start">
			<type>state</type>
			<sensorId>ATS_01_ENGINE_START</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Engine Start</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-load-shed">
			<type>state</type>
			<sensorId>ATS_01_LOAD_SHED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>8</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Load Shed</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-lock-out">
			<type>state</type>
			<sensorId>ATS_01_LOCK_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>9</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Lock Out</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-not-auto">
			<type>state</type>
			<sensorId>ATS_01_NOT_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>10</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Not Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-retransfer-inhibited">
			<type>state</type>
			<sensorId>ATS_01_RETRANSFER_INHIBITED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>11</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Retransfer Inhibited</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-transfer-switch-type">
			<type>state</type>
			<sensorId>ATS_01_TRANSFER_SWITCH_TYPE</sensorId>
			<value>
				<mapValue mapid="transferSwitchType-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42001</getOid></op>
						<op>12</op>
						</right_shift>
					</op>
					<op>3</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Transfer Switch Type</label>
			<enum>transferSwitchType-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-bypass-on-normal-source">
			<type>state</type>
			<sensorId>ATS_01_BYPASS_ON_NORMAL_SOURCE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42002</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Bypass On Normal Source</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-bypass-on-emergency-source">
			<type>state</type>
			<sensorId>ATS_01_BYPASS_ON_EMERGENCY_SOURCE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42002</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Bypass On Emergency Source</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-isolation-closed">
			<type>state</type>
			<sensorId>ATS_01_ISOLATION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42002</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Isolation Closed</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-isolation-open">
			<type>state</type>
			<sensorId>ATS_01_ISOLATION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42002</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Isolation Open</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-01-isolation-in-test">
			<type>state</type>
			<sensorId>ATS_01_ISOLATION_IN_TEST</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42002</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 01 Isolation in Test</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 01</sensorSet>
		</stateSensor>
		<numSensor ruleid="ats-01-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_01_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33001</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 01 Phase A Current</label>
			<sensorSet>ATS 01</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-01-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_01_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33002</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 01 Phase B Current</label>
			<sensorSet>ATS 01</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-01-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_01_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33003</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 01 Phase C Current</label>
			<sensorSet>ATS 01</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-01-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_01_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33004</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 01 Average Current</label>
			<sensorSet>ATS 01</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-01-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>ATS_01_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33005</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 01 Average Line to Line Voltage</label>
			<sensorSet>ATS 01</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-01-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>ATS_01_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33006</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 01 Total Active Power</label>
			<sensorSet>ATS 01</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-01-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>ATS_01_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33007</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 01 Total Volt-Ampere Power</label>
			<sensorSet>ATS 01</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-01-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>ATS_01_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33008</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 01 Total Reactive Volt-Ampere Power</label>
			<sensorSet>ATS 01</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-01-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>ATS_01_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33009</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>ATS 01 Frequency</label>
			<sensorSet>ATS 01</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-01-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>ATS_01_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33011</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>ATS 01 Total Power Factor</label>
			<sensorSet>ATS 01</sensorSet>
		</numSensor>
		<stateSensor ruleid="ats-02-normal-source-available">
			<type>state</type>
			<sensorId>ATS_02_NORMAL_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Normal Source Available</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-emergency-source-available">
			<type>state</type>
			<sensorId>ATS_02_EMERGENCY_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Emergency Source Available</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-main-on-normal-source-status">
			<type>state</type>
			<sensorId>ATS_02_MAIN_ON_NORMAL_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Main On Normal Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-main-on-emergency-source-status">
			<type>state</type>
			<sensorId>ATS_02_MAIN_ON_EMERGENCY_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Main On Emergency Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-aux-on-normal-source-status">
			<type>state</type>
			<sensorId>ATS_02_AUX_ON_NORMAL_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Aux On Normal Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-aux-on-emergency-source-status">
			<type>state</type>
			<sensorId>ATS_02_AUX_ON_EMERGENCY_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Aux On Emergency Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-has-bypass-switch-status">
			<type>state</type>
			<sensorId>ATS_02_HAS_BYPASS_SWITCH_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Has Bypass Switch Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-engine-start">
			<type>state</type>
			<sensorId>ATS_02_ENGINE_START</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Engine Start</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-load-shed">
			<type>state</type>
			<sensorId>ATS_02_LOAD_SHED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>8</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Load Shed</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-lock-out">
			<type>state</type>
			<sensorId>ATS_02_LOCK_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>9</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Lock Out</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-not-auto">
			<type>state</type>
			<sensorId>ATS_02_NOT_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>10</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Not Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-retransfer-inhibited">
			<type>state</type>
			<sensorId>ATS_02_RETRANSFER_INHIBITED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>11</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Retransfer Inhibited</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-transfer-switch-type">
			<type>state</type>
			<sensorId>ATS_02_TRANSFER_SWITCH_TYPE</sensorId>
			<value>
				<mapValue mapid="transferSwitchType-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42003</getOid></op>
						<op>12</op>
						</right_shift>
					</op>
					<op>3</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Transfer Switch Type</label>
			<enum>transferSwitchType-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-bypass-on-normal-source">
			<type>state</type>
			<sensorId>ATS_02_BYPASS_ON_NORMAL_SOURCE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42004</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Bypass On Normal Source</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-bypass-on-emergency-source">
			<type>state</type>
			<sensorId>ATS_02_BYPASS_ON_EMERGENCY_SOURCE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42004</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Bypass On Emergency Source</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-isolation-closed">
			<type>state</type>
			<sensorId>ATS_02_ISOLATION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42004</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Isolation Closed</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-isolation-open">
			<type>state</type>
			<sensorId>ATS_02_ISOLATION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42004</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Isolation Open</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-02-isolation-in-test">
			<type>state</type>
			<sensorId>ATS_02_ISOLATION_IN_TEST</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42004</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 02 Isolation in Test</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 02</sensorSet>
		</stateSensor>
		<numSensor ruleid="ats-02-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_02_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33013</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 02 Phase A Current</label>
			<sensorSet>ATS 02</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-02-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_02_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33014</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 02 Phase B Current</label>
			<sensorSet>ATS 02</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-02-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_02_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33015</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 02 Phase C Current</label>
			<sensorSet>ATS 02</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-02-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_02_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33016</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 02 Average Current</label>
			<sensorSet>ATS 02</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-02-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>ATS_02_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33017</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 02 Average Line to Line Voltage</label>
			<sensorSet>ATS 02</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-02-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>ATS_02_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33018</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 02 Total Active Power</label>
			<sensorSet>ATS 02</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-02-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>ATS_02_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33019</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 02 Total Volt-Ampere Power</label>
			<sensorSet>ATS 02</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-02-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>ATS_02_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33020</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 02 Total Reactive Volt-Ampere Power</label>
			<sensorSet>ATS 02</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-02-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>ATS_02_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33021</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>ATS 02 Frequency</label>
			<sensorSet>ATS 02</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-02-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>ATS_02_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33023</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>ATS 02 Total Power Factor</label>
			<sensorSet>ATS 02</sensorSet>
		</numSensor>
		<stateSensor ruleid="ats-03-normal-source-available">
			<type>state</type>
			<sensorId>ATS_03_NORMAL_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Normal Source Available</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-emergency-source-available">
			<type>state</type>
			<sensorId>ATS_03_EMERGENCY_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Emergency Source Available</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-main-on-normal-source-status">
			<type>state</type>
			<sensorId>ATS_03_MAIN_ON_NORMAL_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Main On Normal Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-main-on-emergency-source-status">
			<type>state</type>
			<sensorId>ATS_03_MAIN_ON_EMERGENCY_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Main On Emergency Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-aux-on-normal-source-status">
			<type>state</type>
			<sensorId>ATS_03_AUX_ON_NORMAL_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Aux On Normal Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-aux-on-emergency-source-status">
			<type>state</type>
			<sensorId>ATS_03_AUX_ON_EMERGENCY_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Aux On Emergency Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-has-bypass-switch-status">
			<type>state</type>
			<sensorId>ATS_03_HAS_BYPASS_SWITCH_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Has Bypass Switch Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-engine-start">
			<type>state</type>
			<sensorId>ATS_03_ENGINE_START</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Engine Start</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-load-shed">
			<type>state</type>
			<sensorId>ATS_03_LOAD_SHED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>8</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Load Shed</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-lock-out">
			<type>state</type>
			<sensorId>ATS_03_LOCK_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>9</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Lock Out</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-not-auto">
			<type>state</type>
			<sensorId>ATS_03_NOT_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>10</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Not Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-retransfer-inhibited">
			<type>state</type>
			<sensorId>ATS_03_RETRANSFER_INHIBITED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>11</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Retransfer Inhibited</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-transfer-switch-type">
			<type>state</type>
			<sensorId>ATS_03_TRANSFER_SWITCH_TYPE</sensorId>
			<value>
				<mapValue mapid="transferSwitchType-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42005</getOid></op>
						<op>12</op>
						</right_shift>
					</op>
					<op>3</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Transfer Switch Type</label>
			<enum>transferSwitchType-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-bypass-on-normal-source">
			<type>state</type>
			<sensorId>ATS_03_BYPASS_ON_NORMAL_SOURCE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42006</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Bypass On Normal Source</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-bypass-on-emergency-source">
			<type>state</type>
			<sensorId>ATS_03_BYPASS_ON_EMERGENCY_SOURCE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42006</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Bypass On Emergency Source</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-isolation-closed">
			<type>state</type>
			<sensorId>ATS_03_ISOLATION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42006</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Isolation Closed</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-isolation-open">
			<type>state</type>
			<sensorId>ATS_03_ISOLATION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42006</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Isolation Open</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-03-isolation-in-test">
			<type>state</type>
			<sensorId>ATS_03_ISOLATION_IN_TEST</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42006</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 03 Isolation in Test</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 03</sensorSet>
		</stateSensor>
		<numSensor ruleid="ats-03-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_03_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33025</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 03 Phase A Current</label>
			<sensorSet>ATS 03</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-03-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_03_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33026</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 03 Phase B Current</label>
			<sensorSet>ATS 03</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-03-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_03_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33027</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 03 Phase C Current</label>
			<sensorSet>ATS 03</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-03-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_03_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33028</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 03 Average Current</label>
			<sensorSet>ATS 03</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-03-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>ATS_03_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33029</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 03 Average Line to Line Voltage</label>
			<sensorSet>ATS 03</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-03-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>ATS_03_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33030</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 03 Total Active Power</label>
			<sensorSet>ATS 03</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-03-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>ATS_03_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33031</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 03 Total Volt-Ampere Power</label>
			<sensorSet>ATS 03</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-03-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>ATS_03_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33032</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 03 Total Reactive Volt-Ampere Power</label>
			<sensorSet>ATS 03</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-03-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>ATS_03_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33033</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>ATS 03 Frequency</label>
			<sensorSet>ATS 03</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-03-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>ATS_03_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33035</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>ATS 03 Total Power Factor</label>
			<sensorSet>ATS 03</sensorSet>
		</numSensor>
		<stateSensor ruleid="ats-04-normal-source-available">
			<type>state</type>
			<sensorId>ATS_04_NORMAL_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Normal Source Available</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-emergency-source-available">
			<type>state</type>
			<sensorId>ATS_04_EMERGENCY_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Emergency Source Available</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-main-on-normal-source-status">
			<type>state</type>
			<sensorId>ATS_04_MAIN_ON_NORMAL_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Main On Normal Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-main-on-emergency-source-status">
			<type>state</type>
			<sensorId>ATS_04_MAIN_ON_EMERGENCY_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Main On Emergency Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-aux-on-normal-source-status">
			<type>state</type>
			<sensorId>ATS_04_AUX_ON_NORMAL_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Aux On Normal Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-aux-on-emergency-source-status">
			<type>state</type>
			<sensorId>ATS_04_AUX_ON_EMERGENCY_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Aux On Emergency Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-has-bypass-switch-status">
			<type>state</type>
			<sensorId>ATS_04_HAS_BYPASS_SWITCH_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Has Bypass Switch Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-engine-start">
			<type>state</type>
			<sensorId>ATS_04_ENGINE_START</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Engine Start</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-load-shed">
			<type>state</type>
			<sensorId>ATS_04_LOAD_SHED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>8</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Load Shed</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-lock-out">
			<type>state</type>
			<sensorId>ATS_04_LOCK_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>9</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Lock Out</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-not-auto">
			<type>state</type>
			<sensorId>ATS_04_NOT_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>10</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Not Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-retransfer-inhibited">
			<type>state</type>
			<sensorId>ATS_04_RETRANSFER_INHIBITED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>11</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Retransfer Inhibited</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-transfer-switch-type">
			<type>state</type>
			<sensorId>ATS_04_TRANSFER_SWITCH_TYPE</sensorId>
			<value>
				<mapValue mapid="transferSwitchType-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42007</getOid></op>
						<op>12</op>
						</right_shift>
					</op>
					<op>3</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Transfer Switch Type</label>
			<enum>transferSwitchType-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-bypass-on-normal-source">
			<type>state</type>
			<sensorId>ATS_04_BYPASS_ON_NORMAL_SOURCE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42008</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Bypass On Normal Source</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-bypass-on-emergency-source">
			<type>state</type>
			<sensorId>ATS_04_BYPASS_ON_EMERGENCY_SOURCE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42008</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Bypass On Emergency Source</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-isolation-closed">
			<type>state</type>
			<sensorId>ATS_04_ISOLATION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42008</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Isolation Closed</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-isolation-open">
			<type>state</type>
			<sensorId>ATS_04_ISOLATION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42008</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Isolation Open</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-04-isolation-in-test">
			<type>state</type>
			<sensorId>ATS_04_ISOLATION_IN_TEST</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42008</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 04 Isolation in Test</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 04</sensorSet>
		</stateSensor>
		<numSensor ruleid="ats-04-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_04_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33037</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 04 Phase A Current</label>
			<sensorSet>ATS 04</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-04-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_04_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33038</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 04 Phase B Current</label>
			<sensorSet>ATS 04</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-04-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_04_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33039</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 04 Phase C Current</label>
			<sensorSet>ATS 04</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-04-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_04_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33040</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 04 Average Current</label>
			<sensorSet>ATS 04</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-04-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>ATS_04_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33041</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 04 Average Line to Line Voltage</label>
			<sensorSet>ATS 04</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-04-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>ATS_04_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33042</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 04 Total Active Power</label>
			<sensorSet>ATS 04</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-04-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>ATS_04_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33043</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 04 Total Volt-Ampere Power</label>
			<sensorSet>ATS 04</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-04-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>ATS_04_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33044</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 04 Total Reactive Volt-Ampere Power</label>
			<sensorSet>ATS 04</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-04-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>ATS_04_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33045</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>ATS 04 Frequency</label>
			<sensorSet>ATS 04</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-04-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>ATS_04_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33047</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>ATS 04 Total Power Factor</label>
			<sensorSet>ATS 04</sensorSet>
		</numSensor>
		<stateSensor ruleid="ats-05-normal-source-available">
			<type>state</type>
			<sensorId>ATS_05_NORMAL_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Normal Source Available</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-emergency-source-available">
			<type>state</type>
			<sensorId>ATS_05_EMERGENCY_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Emergency Source Available</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-main-on-normal-source-status">
			<type>state</type>
			<sensorId>ATS_05_MAIN_ON_NORMAL_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Main On Normal Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-main-on-emergency-source-status">
			<type>state</type>
			<sensorId>ATS_05_MAIN_ON_EMERGENCY_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Main On Emergency Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-aux-on-normal-source-status">
			<type>state</type>
			<sensorId>ATS_05_AUX_ON_NORMAL_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Aux On Normal Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-aux-on-emergency-source-status">
			<type>state</type>
			<sensorId>ATS_05_AUX_ON_EMERGENCY_SOURCE_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Aux On Emergency Source Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-has-bypass-switch-status">
			<type>state</type>
			<sensorId>ATS_05_HAS_BYPASS_SWITCH_STATUS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Has Bypass Switch Status</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-engine-start">
			<type>state</type>
			<sensorId>ATS_05_ENGINE_START</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Engine Start</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-load-shed">
			<type>state</type>
			<sensorId>ATS_05_LOAD_SHED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>8</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Load Shed</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-lock-out">
			<type>state</type>
			<sensorId>ATS_05_LOCK_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>9</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Lock Out</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-not-auto">
			<type>state</type>
			<sensorId>ATS_05_NOT_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>10</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Not Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-retransfer-inhibited">
			<type>state</type>
			<sensorId>ATS_05_RETRANSFER_INHIBITED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>11</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Retransfer Inhibited</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-transfer-switch-type">
			<type>state</type>
			<sensorId>ATS_05_TRANSFER_SWITCH_TYPE</sensorId>
			<value>
				<mapValue mapid="transferSwitchType-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42009</getOid></op>
						<op>12</op>
						</right_shift>
					</op>
					<op>3</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Transfer Switch Type</label>
			<enum>transferSwitchType-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-bypass-on-normal-source">
			<type>state</type>
			<sensorId>ATS_05_BYPASS_ON_NORMAL_SOURCE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42010</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Bypass On Normal Source</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-bypass-on-emergency-source">
			<type>state</type>
			<sensorId>ATS_05_BYPASS_ON_EMERGENCY_SOURCE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42010</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Bypass On Emergency Source</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-isolation-closed">
			<type>state</type>
			<sensorId>ATS_05_ISOLATION_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42010</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Isolation Closed</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-isolation-open">
			<type>state</type>
			<sensorId>ATS_05_ISOLATION_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42010</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Isolation Open</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ats-05-isolation-in-test">
			<type>state</type>
			<sensorId>ATS_05_ISOLATION_IN_TEST</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm"><formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_42010</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber></mapValue>
			</value>
			<label>ATS 05 Isolation in Test</label>
			<enum>onOff-em</enum>
			<sensorSet>ATS 05</sensorSet>
		</stateSensor>
		<numSensor ruleid="ats-05-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_05_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33049</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 05 Phase A Current</label>
			<sensorSet>ATS 05</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-05-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_05_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33050</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 05 Phase B Current</label>
			<sensorSet>ATS 05</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-05-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_05_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33051</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 05 Phase C Current</label>
			<sensorSet>ATS 05</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-05-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>ATS_05_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33052</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 05 Average Current</label>
			<sensorSet>ATS 05</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-05-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>ATS_05_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33053</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 05 Average Line to Line Voltage</label>
			<sensorSet>ATS 05</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-05-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>ATS_05_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33054</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 05 Total Active Power</label>
			<sensorSet>ATS 05</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-05-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>ATS_05_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33055</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 05 Total Volt-Ampere Power</label>
			<sensorSet>ATS 05</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-05-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>ATS_05_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33056</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>ATS 05 Total Reactive Volt-Ampere Power</label>
			<sensorSet>ATS 05</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-05-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>ATS_05_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33057</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>ATS 05 Frequency</label>
			<sensorSet>ATS 05</sensorSet>
		</numSensor>
		<numSensor ruleid="ats-05-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>ATS_05_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_33059</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>ATS 05 Total Power Factor</label>
			<sensorSet>ATS 05</sensorSet>
		</numSensor>

		<stateSensor ruleid="generator-a1-gen-auto-start">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_AUTO_START</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40114</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator A1 Gen Auto Start</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-ecs-reset-required">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_ECS_RESET_REQUIRED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40114</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator A1 Gen ECS Reset Required</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-engine-control-not-in-auto">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_ENGINE_CONTROL_NOT_IN_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40114</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator A1 Gen Engine Control Not In Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-low-oil-pressure-alarm">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_LOW_OIL_PRESSURE_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40114</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator A1 Gen Low Oil Pressure Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a1-gen-high-water-temp-alarm">
			<type>state</type>
			<sensorId>GENERATOR_A1_GEN_HIGH_WATER_TEMP_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40114</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator A1 Gen High Water Temp Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-auto-start">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_AUTO_START</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40124</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator A2 Gen Auto Start</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-ecs-reset-required">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_ECS_RESET_REQUIRED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40124</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator A2 Gen ECS Reset Required</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-engine-control-not-in-auto">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_ENGINE_CONTROL_NOT_IN_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40124</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator A2 Gen Engine Control Not In Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-low-oil-pressure-alarm">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_LOW_OIL_PRESSURE_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40124</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator A2 Gen Low Oil Pressure Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-a2-gen-high-water-temp-alarm">
			<type>state</type>
			<sensorId>GENERATOR_A2_GEN_HIGH_WATER_TEMP_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40124</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator A2 Gen High Water Temp Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator A2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-auto-start">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_AUTO_START</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40134</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator B1 Gen Auto Start</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-ecs-reset-required">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_ECS_RESET_REQUIRED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40134</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator B1 Gen ECS Reset Required</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-engine-control-not-in-auto">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_ENGINE_CONTROL_NOT_IN_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40134</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator B1 Gen Engine Control Not In Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-low-oil-pressure-alarm">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_LOW_OIL_PRESSURE_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40134</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator B1 Gen Low Oil Pressure Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b1-gen-high-water-temp-alarm">
			<type>state</type>
			<sensorId>GENERATOR_B1_GEN_HIGH_WATER_TEMP_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40134</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator B1 Gen High Water Temp Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-auto-start">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_AUTO_START</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40144</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator B2 Gen Auto Start</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-ecs-reset-required">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_ECS_RESET_REQUIRED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40144</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator B2 Gen ECS Reset Required</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-engine-control-not-in-auto">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_ENGINE_CONTROL_NOT_IN_AUTO</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40144</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator B2 Gen Engine Control Not In Auto</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-low-oil-pressure-alarm">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_LOW_OIL_PRESSURE_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40144</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator B2 Gen Low Oil Pressure Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="generator-b2-gen-high-water-temp-alarm">
			<type>state</type>
			<sensorId>GENERATOR_B2_GEN_HIGH_WATER_TEMP_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
					<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40144</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Generator B2 Gen High Water Temp Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Generator B2</sensorSet>
		</stateSensor>
		<numSensor ruleid="breaker-52-a-f1-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F1_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31001</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F1 Phase A Current</label>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f1-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F1_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31002</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F1 Phase B Current</label>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f1-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F1_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31003</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F1 Phase C Current</label>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f1-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F1_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31004</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F1 Average Current</label>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f1-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F1_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31005</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F1 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f1-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F1_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31006</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F1 Total Active Power</label>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f1-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F1_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31007</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F1 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f1-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F1_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31008</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F1 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f1-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F1_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31009</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F1 Frequency</label>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f1-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F1_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31011</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F1 Total Power Factor</label>
			<sensorSet>Breaker 52 A F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f2-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F2_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31013</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F2 Phase A Current</label>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f2-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F2_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31014</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F2 Phase B Current</label>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f2-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F2_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31015</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F2 Phase C Current</label>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f2-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F2_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31016</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F2 Average Current</label>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f2-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F2_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31017</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F2 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f2-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F2_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31018</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F2 Total Active Power</label>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f2-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F2_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31019</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F2 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f2-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F2_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31020</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F2 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f2-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F2_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31021</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F2 Frequency</label>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f2-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F2_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31023</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F2 Total Power Factor</label>
			<sensorSet>Breaker 52 A F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f3-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F3_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31025</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F3 Phase A Current</label>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f3-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F3_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31026</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F3 Phase B Current</label>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f3-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F3_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31027</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F3 Phase C Current</label>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f3-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F3_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31028</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F3 Average Current</label>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f3-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F3_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31029</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F3 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f3-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F3_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31030</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F3 Total Active Power</label>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f3-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F3_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31031</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F3 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f3-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F3_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31032</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F3 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f3-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F3_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31033</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F3 Frequency</label>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f3-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F3_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31035</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F3 Total Power Factor</label>
			<sensorSet>Breaker 52 A F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f4-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F4_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31037</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F4 Phase A Current</label>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f4-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F4_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31038</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F4 Phase B Current</label>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f4-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F4_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31039</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F4 Phase C Current</label>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f4-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F4_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31040</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F4 Average Current</label>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f4-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F4_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31041</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F4 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f4-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F4_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31042</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F4 Total Active Power</label>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f4-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F4_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31043</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F4 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f4-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F4_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31044</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F4 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f4-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F4_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31045</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F4 Frequency</label>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f4-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F4_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31047</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F4 Total Power Factor</label>
			<sensorSet>Breaker 52 A F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f5-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F5_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31049</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F5 Phase A Current</label>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f5-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F5_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31050</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F5 Phase B Current</label>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f5-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F5_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31051</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F5 Phase C Current</label>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f5-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F5_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31052</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F5 Average Current</label>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f5-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F5_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31053</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F5 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f5-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F5_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31054</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F5 Total Active Power</label>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f5-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F5_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31055</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F5 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f5-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F5_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31056</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F5 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f5-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F5_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31057</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F5 Frequency</label>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f5-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F5_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31059</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F5 Total Power Factor</label>
			<sensorSet>Breaker 52 A F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f6-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F6_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31061</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F6 Phase A Current</label>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f6-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F6_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31062</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F6 Phase B Current</label>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f6-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F6_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31063</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F6 Phase C Current</label>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f6-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F6_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31064</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F6 Average Current</label>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f6-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F6_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31065</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F6 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f6-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F6_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31066</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F6 Total Active Power</label>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f6-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F6_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31067</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F6 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f6-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F6_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31068</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F6 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f6-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F6_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31069</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F6 Frequency</label>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f6-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F6_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31071</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F6 Total Power Factor</label>
			<sensorSet>Breaker 52 A F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f7-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F7_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31073</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F7 Phase A Current</label>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f7-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F7_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31074</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F7 Phase B Current</label>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f7-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F7_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31075</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F7 Phase C Current</label>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f7-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F7_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31076</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F7 Average Current</label>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f7-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F7_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31077</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F7 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f7-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F7_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31078</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F7 Total Active Power</label>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f7-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F7_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31079</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F7 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f7-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F7_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31080</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F7 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f7-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F7_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31081</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F7 Frequency</label>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f7-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F7_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31083</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F7 Total Power Factor</label>
			<sensorSet>Breaker 52 A F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f8-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F8_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31085</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F8 Phase A Current</label>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f8-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F8_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31086</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F8 Phase B Current</label>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f8-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F8_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31087</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F8 Phase C Current</label>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f8-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F8_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31088</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F8 Average Current</label>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f8-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F8_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31089</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F8 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f8-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F8_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31090</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F8 Total Active Power</label>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f8-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F8_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31091</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F8 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f8-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F8_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31092</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F8 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f8-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F8_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31093</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F8 Frequency</label>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f8-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F8_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31095</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F8 Total Power Factor</label>
			<sensorSet>Breaker 52 A F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f9-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F9_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31097</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F9 Phase A Current</label>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f9-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F9_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31098</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F9 Phase B Current</label>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f9-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F9_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31099</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F9 Phase C Current</label>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f9-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F9_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31100</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F9 Average Current</label>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f9-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F9_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31101</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F9 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f9-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F9_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31102</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F9 Total Active Power</label>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f9-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F9_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31103</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F9 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f9-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F9_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31104</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F9 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f9-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F9_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31105</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F9 Frequency</label>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f9-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F9_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31107</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F9 Total Power Factor</label>
			<sensorSet>Breaker 52 A F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f10-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F10_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31109</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F10 Phase A Current</label>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f10-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F10_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31110</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F10 Phase B Current</label>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f10-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F10_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31111</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F10 Phase C Current</label>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f10-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F10_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31112</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F10 Average Current</label>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f10-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F10_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31113</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F10 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f10-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F10_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31114</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F10 Total Active Power</label>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f10-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F10_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31115</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F10 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f10-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F10_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31116</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F10 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f10-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F10_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31117</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F10 Frequency</label>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f10-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F10_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31119</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F10 Total Power Factor</label>
			<sensorSet>Breaker 52 A F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f11-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F11_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31121</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F11 Phase A Current</label>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f11-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F11_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31122</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F11 Phase B Current</label>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f11-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F11_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31123</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F11 Phase C Current</label>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f11-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F11_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31124</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F11 Average Current</label>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f11-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F11_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31125</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F11 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f11-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F11_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31126</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F11 Total Active Power</label>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f11-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F11_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31127</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F11 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f11-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F11_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31128</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F11 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f11-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F11_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31129</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F11 Frequency</label>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f11-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F11_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31131</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F11 Total Power Factor</label>
			<sensorSet>Breaker 52 A F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f12-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F12_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31133</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F12 Phase A Current</label>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f12-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F12_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31134</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F12 Phase B Current</label>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f12-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F12_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31135</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F12 Phase C Current</label>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f12-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F12_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31136</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F12 Average Current</label>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f12-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_F12_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31137</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F12 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f12-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_F12_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31138</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F12 Total Active Power</label>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f12-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_F12_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31139</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F12 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f12-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_F12_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31140</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A F12 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f12-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_F12_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31141</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F12 Frequency</label>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-f12-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_F12_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31143</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A F12 Total Power Factor</label>
			<sensorSet>Breaker 52 A F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-tie-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_TIE_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31145</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Tie Phase A Current</label>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-tie-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_TIE_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31146</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Tie Phase B Current</label>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-tie-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_TIE_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31147</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Tie Phase C Current</label>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-tie-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_TIE_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31148</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Tie Average Current</label>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-tie-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_TIE_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31149</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Tie Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-tie-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_TIE_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31150</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Tie Total Active Power</label>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-tie-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_TIE_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31151</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Tie Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-tie-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_TIE_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31152</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Tie Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-tie-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_TIE_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31153</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A Tie Frequency</label>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-tie-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_TIE_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31155</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A Tie Total Power Factor</label>
			<sensorSet>Breaker 52 A Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-utility-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_UTILITY_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31157</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Utility Phase A Current</label>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-utility-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_UTILITY_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31158</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Utility Phase B Current</label>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-utility-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_UTILITY_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31159</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Utility Phase C Current</label>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-utility-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_A_UTILITY_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31160</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Utility Average Current</label>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-utility-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_A_UTILITY_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31161</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Utility Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-utility-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_A_UTILITY_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31162</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Utility Total Active Power</label>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-utility-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_A_UTILITY_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31163</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Utility Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-utility-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_A_UTILITY_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31164</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 A Utility Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-utility-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_A_UTILITY_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31165</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A Utility Frequency</label>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-a-utility-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_A_UTILITY_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31167</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 A Utility Total Power Factor</label>
			<sensorSet>Breaker 52 A1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f1-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F1_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31169</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F1 Phase A Current</label>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f1-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F1_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31170</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F1 Phase B Current</label>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f1-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F1_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31171</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F1 Phase C Current</label>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f1-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F1_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31172</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F1 Average Current</label>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f1-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F1_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31173</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F1 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f1-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F1_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31174</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F1 Total Active Power</label>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f1-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F1_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31175</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F1 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f1-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F1_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31176</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F1 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f1-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F1_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31177</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F1 Frequency</label>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f1-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F1_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31179</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F1 Total Power Factor</label>
			<sensorSet>Breaker 52 B F1</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f2-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F2_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31181</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F2 Phase A Current</label>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f2-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F2_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31182</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F2 Phase B Current</label>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f2-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F2_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31183</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F2 Phase C Current</label>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f2-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F2_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31184</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F2 Average Current</label>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f2-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F2_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31185</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F2 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f2-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F2_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31186</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F2 Total Active Power</label>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f2-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F2_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31187</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F2 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f2-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F2_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31188</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F2 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f2-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F2_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31189</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F2 Frequency</label>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f2-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F2_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31191</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F2 Total Power Factor</label>
			<sensorSet>Breaker 52 B F2</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f3-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F3_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31193</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F3 Phase A Current</label>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f3-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F3_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31194</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F3 Phase B Current</label>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f3-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F3_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31195</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F3 Phase C Current</label>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f3-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F3_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31196</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F3 Average Current</label>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f3-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F3_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31197</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F3 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f3-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F3_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31198</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F3 Total Active Power</label>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f3-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F3_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31199</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F3 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f3-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F3_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31200</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F3 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f3-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F3_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31201</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F3 Frequency</label>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f3-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F3_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31203</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F3 Total Power Factor</label>
			<sensorSet>Breaker 52 B F3</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f4-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F4_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31205</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F4 Phase A Current</label>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f4-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F4_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31206</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F4 Phase B Current</label>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f4-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F4_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31207</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F4 Phase C Current</label>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f4-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F4_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31208</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F4 Average Current</label>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f4-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F4_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31209</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F4 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f4-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F4_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31210</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F4 Total Active Power</label>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f4-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F4_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31211</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F4 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f4-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F4_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31212</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F4 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f4-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F4_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31213</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F4 Frequency</label>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f4-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F4_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31215</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F4 Total Power Factor</label>
			<sensorSet>Breaker 52 B F4</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f5-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F5_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31217</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F5 Phase A Current</label>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f5-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F5_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31218</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F5 Phase B Current</label>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f5-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F5_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31219</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F5 Phase C Current</label>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f5-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F5_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31220</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F5 Average Current</label>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f5-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F5_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31221</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F5 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f5-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F5_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31222</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F5 Total Active Power</label>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f5-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F5_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31223</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F5 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f5-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F5_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31224</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F5 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f5-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F5_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31225</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F5 Frequency</label>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f5-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F5_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31227</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F5 Total Power Factor</label>
			<sensorSet>Breaker 52 B F5</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f6-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F6_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31229</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F6 Phase A Current</label>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f6-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F6_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31230</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F6 Phase B Current</label>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f6-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F6_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31231</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F6 Phase C Current</label>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f6-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F6_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31232</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F6 Average Current</label>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f6-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F6_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31233</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F6 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f6-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F6_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31234</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F6 Total Active Power</label>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f6-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F6_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31235</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F6 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f6-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F6_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31236</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F6 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f6-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F6_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31237</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F6 Frequency</label>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f6-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F6_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31239</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F6 Total Power Factor</label>
			<sensorSet>Breaker 52 B F6</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f7-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F7_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31241</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F7 Phase A Current</label>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f7-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F7_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31242</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F7 Phase B Current</label>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f7-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F7_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31243</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F7 Phase C Current</label>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f7-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F7_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31244</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F7 Average Current</label>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f7-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F7_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31245</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F7 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f7-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F7_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31246</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F7 Total Active Power</label>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f7-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F7_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31247</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F7 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f7-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F7_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31248</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F7 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f7-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F7_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31249</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F7 Frequency</label>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f7-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F7_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31251</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F7 Total Power Factor</label>
			<sensorSet>Breaker 52 B F7</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f8-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F8_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31253</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F8 Phase A Current</label>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f8-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F8_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31254</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F8 Phase B Current</label>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f8-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F8_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31255</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F8 Phase C Current</label>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f8-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F8_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31256</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F8 Average Current</label>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f8-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F8_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31257</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F8 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f8-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F8_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31258</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F8 Total Active Power</label>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f8-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F8_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31259</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F8 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f8-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F8_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31260</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F8 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f8-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F8_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31261</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F8 Frequency</label>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f8-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F8_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31263</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F8 Total Power Factor</label>
			<sensorSet>Breaker 52 B F8</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f9-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F9_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31265</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F9 Phase A Current</label>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f9-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F9_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31266</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F9 Phase B Current</label>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f9-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F9_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31267</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F9 Phase C Current</label>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f9-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F9_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31268</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F9 Average Current</label>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f9-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F9_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31269</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F9 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f9-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F9_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31270</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F9 Total Active Power</label>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f9-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F9_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31271</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F9 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f9-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F9_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31272</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F9 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f9-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F9_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31273</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F9 Frequency</label>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f9-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F9_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31275</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F9 Total Power Factor</label>
			<sensorSet>Breaker 52 B F9</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f10-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F10_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31277</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F10 Phase A Current</label>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f10-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F10_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31278</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F10 Phase B Current</label>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f10-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F10_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31279</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F10 Phase C Current</label>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f10-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F10_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31280</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F10 Average Current</label>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f10-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F10_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31281</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F10 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f10-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F10_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31282</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F10 Total Active Power</label>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f10-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F10_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31283</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F10 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f10-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F10_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31284</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F10 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f10-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F10_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31285</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F10 Frequency</label>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f10-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F10_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31287</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F10 Total Power Factor</label>
			<sensorSet>Breaker 52 B F10</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f11-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F11_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31289</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F11 Phase A Current</label>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f11-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F11_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31290</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F11 Phase B Current</label>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f11-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F11_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31291</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F11 Phase C Current</label>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f11-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F11_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31292</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F11 Average Current</label>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f11-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F11_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31293</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F11 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f11-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F11_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31294</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F11 Total Active Power</label>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f11-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F11_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31295</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F11 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f11-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F11_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31296</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F11 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f11-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F11_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31297</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F11 Frequency</label>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f11-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F11_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31299</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F11 Total Power Factor</label>
			<sensorSet>Breaker 52 B F11</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f12-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F12_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31301</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F12 Phase A Current</label>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f12-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F12_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31302</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F12 Phase B Current</label>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f12-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F12_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31303</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F12 Phase C Current</label>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f12-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F12_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31304</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F12 Average Current</label>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f12-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_F12_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31305</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F12 Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f12-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_F12_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31306</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F12 Total Active Power</label>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f12-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_F12_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31307</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F12 Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f12-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_F12_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31308</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B F12 Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f12-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_F12_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31309</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F12 Frequency</label>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-f12-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_F12_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31311</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B F12 Total Power Factor</label>
			<sensorSet>Breaker 52 B F12</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-tie-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_TIE_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31313</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Tie Phase A Current</label>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-tie-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_TIE_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31314</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Tie Phase B Current</label>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-tie-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_TIE_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31315</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Tie Phase C Current</label>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-tie-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_TIE_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31316</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Tie Average Current</label>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-tie-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_TIE_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31317</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Tie Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-tie-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_TIE_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31318</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Tie Total Active Power</label>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-tie-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_TIE_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31319</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Tie Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-tie-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_TIE_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31320</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Tie Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-tie-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_TIE_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31321</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B Tie Frequency</label>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-tie-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_TIE_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31323</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B Tie Total Power Factor</label>
			<sensorSet>Breaker 52 B Tie</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-utility-phase-a-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_UTILITY_PHASE_A_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31325</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Utility Phase A Current</label>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-utility-phase-b-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_UTILITY_PHASE_B_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31326</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Utility Phase B Current</label>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-utility-phase-c-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_UTILITY_PHASE_C_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31327</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Utility Phase C Current</label>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-utility-average-current">
			<type>amperage</type>
			<units></units>
			<sensorId>BREAKER_52_B_UTILITY_AVERAGE_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31328</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Utility Average Current</label>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-utility-average-line-to-line-voltage">
			<type>voltage</type>
			<units></units>
			<sensorId>BREAKER_52_B_UTILITY_AVERAGE_LINE_TO_LINE_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31329</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Utility Average Line to Line Voltage</label>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-utility-total-active-power">
			<type>num/powerKW</type>
			<units></units>
			<sensorId>BREAKER_52_B_UTILITY_TOTAL_ACTIVE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31330</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Utility Total Active Power</label>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-utility-total-volt-ampere-power">
			<type>num/powerKVA</type>
			<units></units>
			<sensorId>BREAKER_52_B_UTILITY_TOTAL_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31331</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Utility Total Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-utility-total-reactive-volt-ampere-power">
			<type>num/powerKVAR</type>
			<units></units>
			<sensorId>BREAKER_52_B_UTILITY_TOTAL_REACTIVE_VOLT-AMPERE_POWER</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31332</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Breaker 52 B Utility Total Reactive Volt-Ampere Power</label>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-utility-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>BREAKER_52_B_UTILITY_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31333</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B Utility Frequency</label>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</numSensor>
		<numSensor ruleid="breaker-52-b-utility-total-power-factor">
			<type>num/powerfactor</type>
			<units></units>
			<sensorId>BREAKER_52_B_UTILITY_TOTAL_POWER_FACTOR</sensorId>
			<value>
				<mult>
				<op><getOid>REG_31335</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Breaker 52 B Utility Total Power Factor</label>
			<sensorSet>Breaker 52 B1 Utility</sensorSet>
		</numSensor>


		<valueMap ruleid="binaryDefaultZero-vm">
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="onOff-em">
			<label>Off</label>
			<label>On</label>
		</enumMap>
		<enumMap ruleid="trueFalse-em">
			<label>False</label>
			<label>True</label>
		</enumMap>

		<valueMap ruleid="transferSwitchType-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>*</valueIn><valueOut>3</valueOut>
		</valueMap>
		<enumMap ruleid="transferSwitchType-em">
			<label>Open Transition</label>
			<label>Delayed Transition</label>
			<label>Closed Transition</label>
			<label>Unknown</label>
		</enumMap>

	</device>
	<protocol>
		<modbus>
			<value_ref_id valid="REG_40001">
				<function>3</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40002">
				<function>3</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40005">
				<function>3</function>
				<start_addr>4</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40006">
				<function>3</function>
				<start_addr>5</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40007">
				<function>3</function>
				<start_addr>6</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40008">
				<function>3</function>
				<start_addr>7</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40009">
				<function>3</function>
				<start_addr>8</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40010">
				<function>3</function>
				<start_addr>9</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40011">
				<function>3</function>
				<start_addr>10</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40012">
				<function>3</function>
				<start_addr>11</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40015">
				<function>3</function>
				<start_addr>14</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40016">
				<function>3</function>
				<start_addr>15</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40017">
				<function>3</function>
				<start_addr>16</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40018">
				<function>3</function>
				<start_addr>17</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40019">
				<function>3</function>
				<start_addr>18</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40020">
				<function>3</function>
				<start_addr>19</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>

			<value_ref_id valid="REG_40051">
				<function>3</function>
				<start_addr>50</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40052">
				<function>3</function>
				<start_addr>51</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40053">
				<function>3</function>
				<start_addr>52</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40054">
				<function>3</function>
				<start_addr>53</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40055">
				<function>3</function>
				<start_addr>54</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40061">
				<function>3</function>
				<start_addr>60</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40062">
				<function>3</function>
				<start_addr>61</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40063">
				<function>3</function>
				<start_addr>62</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40064">
				<function>3</function>
				<start_addr>63</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40065">
				<function>3</function>
				<start_addr>64</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>

			<value_ref_id valid="REG_40111">
				<function>3</function>
				<start_addr>110</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40112">
				<function>3</function>
				<start_addr>111</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40113">
				<function>3</function>
				<start_addr>112</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40114">
				<function>3</function>
				<start_addr>113</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40115">
				<function>3</function>
				<start_addr>114</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40116">
				<function>3</function>
				<start_addr>115</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40117">
				<function>3</function>
				<start_addr>116</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40118">
				<function>3</function>
				<start_addr>117</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40119">
				<function>3</function>
				<start_addr>118</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40120">
				<function>3</function>
				<start_addr>119</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40121">
				<function>3</function>
				<start_addr>120</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40122">
				<function>3</function>
				<start_addr>121</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40123">
				<function>3</function>
				<start_addr>122</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40124">
				<function>3</function>
				<start_addr>123</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40125">
				<function>3</function>
				<start_addr>124</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40126">
				<function>3</function>
				<start_addr>125</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40127">
				<function>3</function>
				<start_addr>126</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40128">
				<function>3</function>
				<start_addr>127</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40129">
				<function>3</function>
				<start_addr>128</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40130">
				<function>3</function>
				<start_addr>129</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40131">
				<function>3</function>
				<start_addr>130</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40132">
				<function>3</function>
				<start_addr>131</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40133">
				<function>3</function>
				<start_addr>132</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40134">
				<function>3</function>
				<start_addr>133</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40135">
				<function>3</function>
				<start_addr>134</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40136">
				<function>3</function>
				<start_addr>135</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40137">
				<function>3</function>
				<start_addr>136</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40138">
				<function>3</function>
				<start_addr>137</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40139">
				<function>3</function>
				<start_addr>138</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40140">
				<function>3</function>
				<start_addr>139</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40141">
				<function>3</function>
				<start_addr>140</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40142">
				<function>3</function>
				<start_addr>141</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40143">
				<function>3</function>
				<start_addr>142</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40144">
				<function>3</function>
				<start_addr>143</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40145">
				<function>3</function>
				<start_addr>144</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40146">
				<function>3</function>
				<start_addr>145</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40147">
				<function>3</function>
				<start_addr>146</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40148">
				<function>3</function>
				<start_addr>147</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40149">
				<function>3</function>
				<start_addr>148</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40150">
				<function>3</function>
				<start_addr>149</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>

			<value_ref_id valid="REG_41001">
				<function>3</function>
				<start_addr>1000</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41002">
				<function>3</function>
				<start_addr>1001</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41003">
				<function>3</function>
				<start_addr>1002</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41004">
				<function>3</function>
				<start_addr>1003</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41005">
				<function>3</function>
				<start_addr>1004</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41006">
				<function>3</function>
				<start_addr>1005</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41007">
				<function>3</function>
				<start_addr>1006</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41008">
				<function>3</function>
				<start_addr>1007</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41009">
				<function>3</function>
				<start_addr>1008</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41010">
				<function>3</function>
				<start_addr>1009</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41011">
				<function>3</function>
				<start_addr>1010</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41012">
				<function>3</function>
				<start_addr>1011</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41013">
				<function>3</function>
				<start_addr>1012</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41014">
				<function>3</function>
				<start_addr>1013</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41015">
				<function>3</function>
				<start_addr>1014</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41016">
				<function>3</function>
				<start_addr>1015</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41017">
				<function>3</function>
				<start_addr>1016</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41018">
				<function>3</function>
				<start_addr>1017</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41019">
				<function>3</function>
				<start_addr>1018</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41020">
				<function>3</function>
				<start_addr>1019</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41021">
				<function>3</function>
				<start_addr>1020</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41022">
				<function>3</function>
				<start_addr>1021</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41023">
				<function>3</function>
				<start_addr>1022</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41024">
				<function>3</function>
				<start_addr>1023</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41025">
				<function>3</function>
				<start_addr>1024</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41026">
				<function>3</function>
				<start_addr>1025</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41027">
				<function>3</function>
				<start_addr>1026</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_41028">
				<function>3</function>
				<start_addr>1027</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>

			<value_ref_id valid="REG_42001">
				<function>3</function>
				<start_addr>2000</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_42002">
				<function>3</function>
				<start_addr>2001</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_42003">
				<function>3</function>
				<start_addr>2002</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_42004">
				<function>3</function>
				<start_addr>2003</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_42005">
				<function>3</function>
				<start_addr>2004</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_42006">
				<function>3</function>
				<start_addr>2005</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_42007">
				<function>3</function>
				<start_addr>2006</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_42008">
				<function>3</function>
				<start_addr>2007</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_42009">
				<function>3</function>
				<start_addr>2008</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_42010">
				<function>3</function>
				<start_addr>2009</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>

			<value_ref_id valid="REG_30001">
				<function>4</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30002">
				<function>4</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30003">
				<function>4</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30004">
				<function>4</function>
				<start_addr>3</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30005">
				<function>4</function>
				<start_addr>4</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30006">
				<function>4</function>
				<start_addr>5</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30007">
				<function>4</function>
				<start_addr>6</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30008">
				<function>4</function>
				<start_addr>7</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30009">
				<function>4</function>
				<start_addr>8</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30011">
				<function>4</function>
				<start_addr>10</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30021">
				<function>4</function>
				<start_addr>20</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30022">
				<function>4</function>
				<start_addr>21</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30023">
				<function>4</function>
				<start_addr>22</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30024">
				<function>4</function>
				<start_addr>23</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30025">
				<function>4</function>
				<start_addr>24</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30026">
				<function>4</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30027">
				<function>4</function>
				<start_addr>26</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30028">
				<function>4</function>
				<start_addr>27</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30029">
				<function>4</function>
				<start_addr>28</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30031">
				<function>4</function>
				<start_addr>30</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>

			<value_ref_id valid="REG_30101">
				<function>4</function>
				<start_addr>100</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30102">
				<function>4</function>
				<start_addr>101</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30103">
				<function>4</function>
				<start_addr>102</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30104">
				<function>4</function>
				<start_addr>103</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30105">
				<function>4</function>
				<start_addr>104</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30106">
				<function>4</function>
				<start_addr>105</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30107">
				<function>4</function>
				<start_addr>106</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30108">
				<function>4</function>
				<start_addr>107</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30109">
				<function>4</function>
				<start_addr>108</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30111">
				<function>4</function>
				<start_addr>110</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30113">
				<function>4</function>
				<start_addr>112</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30114">
				<function>4</function>
				<start_addr>113</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30115">
				<function>4</function>
				<start_addr>114</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30116">
				<function>4</function>
				<start_addr>115</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30117">
				<function>4</function>
				<start_addr>116</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30118">
				<function>4</function>
				<start_addr>117</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30119">
				<function>4</function>
				<start_addr>118</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30120">
				<function>4</function>
				<start_addr>119</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30121">
				<function>4</function>
				<start_addr>120</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30123">
				<function>4</function>
				<start_addr>122</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30125">
				<function>4</function>
				<start_addr>124</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30126">
				<function>4</function>
				<start_addr>125</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30127">
				<function>4</function>
				<start_addr>126</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30128">
				<function>4</function>
				<start_addr>127</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30129">
				<function>4</function>
				<start_addr>128</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30130">
				<function>4</function>
				<start_addr>129</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30131">
				<function>4</function>
				<start_addr>130</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30132">
				<function>4</function>
				<start_addr>131</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30133">
				<function>4</function>
				<start_addr>132</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30135">
				<function>4</function>
				<start_addr>134</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30137">
				<function>4</function>
				<start_addr>136</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30138">
				<function>4</function>
				<start_addr>137</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30139">
				<function>4</function>
				<start_addr>138</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30140">
				<function>4</function>
				<start_addr>139</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30141">
				<function>4</function>
				<start_addr>140</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30142">
				<function>4</function>
				<start_addr>141</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30143">
				<function>4</function>
				<start_addr>142</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30144">
				<function>4</function>
				<start_addr>143</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_30145">
				<function>4</function>
				<start_addr>144</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30147">
				<function>4</function>
				<start_addr>146</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>

			<value_ref_id valid="REG_30501">
				<function>4</function>
				<start_addr>500</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30503">
				<function>4</function>
				<start_addr>502</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30505">
				<function>4</function>
				<start_addr>504</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30507">
				<function>4</function>
				<start_addr>506</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30509">
				<function>4</function>
				<start_addr>508</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="REG_30511">
				<function>4</function>
				<start_addr>510</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30521">
				<function>4</function>
				<start_addr>520</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30523">
				<function>4</function>
				<start_addr>522</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30525">
				<function>4</function>
				<start_addr>524</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30527">
				<function>4</function>
				<start_addr>526</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30529">
				<function>4</function>
				<start_addr>528</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="REG_30531">
				<function>4</function>
				<start_addr>530</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30541">
				<function>4</function>
				<start_addr>540</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30543">
				<function>4</function>
				<start_addr>542</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30545">
				<function>4</function>
				<start_addr>544</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30547">
				<function>4</function>
				<start_addr>546</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30549">
				<function>4</function>
				<start_addr>548</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="REG_30551">
				<function>4</function>
				<start_addr>550</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30561">
				<function>4</function>
				<start_addr>560</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30563">
				<function>4</function>
				<start_addr>562</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30565">
				<function>4</function>
				<start_addr>564</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30567">
				<function>4</function>
				<start_addr>566</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_30569">
				<function>4</function>
				<start_addr>568</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="REG_30571">
				<function>4</function>
				<start_addr>570</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>

			<value_ref_id valid="REG_31001">
				<function>4</function>
				<start_addr>1000</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31002">
				<function>4</function>
				<start_addr>1001</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31003">
				<function>4</function>
				<start_addr>1002</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31004">
				<function>4</function>
				<start_addr>1003</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31005">
				<function>4</function>
				<start_addr>1004</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31006">
				<function>4</function>
				<start_addr>1005</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31007">
				<function>4</function>
				<start_addr>1006</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31008">
				<function>4</function>
				<start_addr>1007</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31009">
				<function>4</function>
				<start_addr>1008</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31011">
				<function>4</function>
				<start_addr>1010</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31013">
				<function>4</function>
				<start_addr>1012</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31014">
				<function>4</function>
				<start_addr>1013</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31015">
				<function>4</function>
				<start_addr>1014</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31016">
				<function>4</function>
				<start_addr>1015</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31017">
				<function>4</function>
				<start_addr>1016</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31018">
				<function>4</function>
				<start_addr>1017</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31019">
				<function>4</function>
				<start_addr>1018</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31020">
				<function>4</function>
				<start_addr>1019</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31021">
				<function>4</function>
				<start_addr>1020</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31023">
				<function>4</function>
				<start_addr>1022</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31025">
				<function>4</function>
				<start_addr>1024</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31026">
				<function>4</function>
				<start_addr>1025</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31027">
				<function>4</function>
				<start_addr>1026</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31028">
				<function>4</function>
				<start_addr>1027</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31029">
				<function>4</function>
				<start_addr>1028</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31030">
				<function>4</function>
				<start_addr>1029</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31031">
				<function>4</function>
				<start_addr>1030</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31032">
				<function>4</function>
				<start_addr>1031</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31033">
				<function>4</function>
				<start_addr>1032</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31035">
				<function>4</function>
				<start_addr>1034</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31037">
				<function>4</function>
				<start_addr>1036</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31038">
				<function>4</function>
				<start_addr>1037</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31039">
				<function>4</function>
				<start_addr>1038</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31040">
				<function>4</function>
				<start_addr>1039</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31041">
				<function>4</function>
				<start_addr>1040</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31042">
				<function>4</function>
				<start_addr>1041</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31043">
				<function>4</function>
				<start_addr>1042</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31044">
				<function>4</function>
				<start_addr>1043</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31045">
				<function>4</function>
				<start_addr>1044</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31047">
				<function>4</function>
				<start_addr>1046</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31049">
				<function>4</function>
				<start_addr>1048</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31050">
				<function>4</function>
				<start_addr>1049</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31051">
				<function>4</function>
				<start_addr>1050</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31052">
				<function>4</function>
				<start_addr>1051</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31053">
				<function>4</function>
				<start_addr>1052</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31054">
				<function>4</function>
				<start_addr>1053</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31055">
				<function>4</function>
				<start_addr>1054</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31056">
				<function>4</function>
				<start_addr>1055</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31057">
				<function>4</function>
				<start_addr>1056</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31059">
				<function>4</function>
				<start_addr>1058</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31061">
				<function>4</function>
				<start_addr>1060</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31062">
				<function>4</function>
				<start_addr>1061</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31063">
				<function>4</function>
				<start_addr>1062</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31064">
				<function>4</function>
				<start_addr>1063</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31065">
				<function>4</function>
				<start_addr>1064</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31066">
				<function>4</function>
				<start_addr>1065</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31067">
				<function>4</function>
				<start_addr>1066</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31068">
				<function>4</function>
				<start_addr>1067</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31069">
				<function>4</function>
				<start_addr>1068</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31071">
				<function>4</function>
				<start_addr>1070</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31073">
				<function>4</function>
				<start_addr>1072</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31074">
				<function>4</function>
				<start_addr>1073</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31075">
				<function>4</function>
				<start_addr>1074</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31076">
				<function>4</function>
				<start_addr>1075</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31077">
				<function>4</function>
				<start_addr>1076</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31078">
				<function>4</function>
				<start_addr>1077</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31079">
				<function>4</function>
				<start_addr>1078</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31080">
				<function>4</function>
				<start_addr>1079</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31081">
				<function>4</function>
				<start_addr>1080</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31083">
				<function>4</function>
				<start_addr>1082</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31085">
				<function>4</function>
				<start_addr>1084</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31086">
				<function>4</function>
				<start_addr>1085</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31087">
				<function>4</function>
				<start_addr>1086</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31088">
				<function>4</function>
				<start_addr>1087</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31089">
				<function>4</function>
				<start_addr>1088</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31090">
				<function>4</function>
				<start_addr>1089</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31091">
				<function>4</function>
				<start_addr>1090</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31092">
				<function>4</function>
				<start_addr>1091</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31093">
				<function>4</function>
				<start_addr>1092</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31095">
				<function>4</function>
				<start_addr>1094</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31097">
				<function>4</function>
				<start_addr>1096</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31098">
				<function>4</function>
				<start_addr>1097</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31099">
				<function>4</function>
				<start_addr>1098</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31100">
				<function>4</function>
				<start_addr>1099</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31101">
				<function>4</function>
				<start_addr>1100</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31102">
				<function>4</function>
				<start_addr>1101</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31103">
				<function>4</function>
				<start_addr>1102</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31104">
				<function>4</function>
				<start_addr>1103</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31105">
				<function>4</function>
				<start_addr>1104</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31107">
				<function>4</function>
				<start_addr>1106</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31109">
				<function>4</function>
				<start_addr>1108</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31110">
				<function>4</function>
				<start_addr>1109</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31111">
				<function>4</function>
				<start_addr>1110</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31112">
				<function>4</function>
				<start_addr>1111</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31113">
				<function>4</function>
				<start_addr>1112</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31114">
				<function>4</function>
				<start_addr>1113</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31115">
				<function>4</function>
				<start_addr>1114</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31116">
				<function>4</function>
				<start_addr>1115</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31117">
				<function>4</function>
				<start_addr>1116</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31119">
				<function>4</function>
				<start_addr>1118</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31121">
				<function>4</function>
				<start_addr>1120</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31122">
				<function>4</function>
				<start_addr>1121</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31123">
				<function>4</function>
				<start_addr>1122</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31124">
				<function>4</function>
				<start_addr>1123</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31125">
				<function>4</function>
				<start_addr>1124</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31126">
				<function>4</function>
				<start_addr>1125</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31127">
				<function>4</function>
				<start_addr>1126</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31128">
				<function>4</function>
				<start_addr>1127</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31129">
				<function>4</function>
				<start_addr>1128</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31131">
				<function>4</function>
				<start_addr>1130</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31133">
				<function>4</function>
				<start_addr>1132</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31134">
				<function>4</function>
				<start_addr>1133</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31135">
				<function>4</function>
				<start_addr>1134</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31136">
				<function>4</function>
				<start_addr>1135</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31137">
				<function>4</function>
				<start_addr>1136</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31138">
				<function>4</function>
				<start_addr>1137</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31139">
				<function>4</function>
				<start_addr>1138</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31140">
				<function>4</function>
				<start_addr>1139</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31141">
				<function>4</function>
				<start_addr>1140</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31143">
				<function>4</function>
				<start_addr>1142</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31145">
				<function>4</function>
				<start_addr>1144</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31146">
				<function>4</function>
				<start_addr>1145</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31147">
				<function>4</function>
				<start_addr>1146</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31148">
				<function>4</function>
				<start_addr>1147</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31149">
				<function>4</function>
				<start_addr>1148</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31150">
				<function>4</function>
				<start_addr>1149</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31151">
				<function>4</function>
				<start_addr>1150</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31152">
				<function>4</function>
				<start_addr>1151</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31153">
				<function>4</function>
				<start_addr>1152</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31155">
				<function>4</function>
				<start_addr>1154</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31157">
				<function>4</function>
				<start_addr>1156</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31158">
				<function>4</function>
				<start_addr>1157</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31159">
				<function>4</function>
				<start_addr>1158</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31160">
				<function>4</function>
				<start_addr>1159</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31161">
				<function>4</function>
				<start_addr>1160</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31162">
				<function>4</function>
				<start_addr>1161</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31163">
				<function>4</function>
				<start_addr>1162</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31164">
				<function>4</function>
				<start_addr>1163</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31165">
				<function>4</function>
				<start_addr>1164</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31167">
				<function>4</function>
				<start_addr>1166</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31169">
				<function>4</function>
				<start_addr>1168</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31170">
				<function>4</function>
				<start_addr>1169</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31171">
				<function>4</function>
				<start_addr>1170</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31172">
				<function>4</function>
				<start_addr>1171</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31173">
				<function>4</function>
				<start_addr>1172</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31174">
				<function>4</function>
				<start_addr>1173</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31175">
				<function>4</function>
				<start_addr>1174</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31176">
				<function>4</function>
				<start_addr>1175</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31177">
				<function>4</function>
				<start_addr>1176</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31179">
				<function>4</function>
				<start_addr>1178</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31181">
				<function>4</function>
				<start_addr>1180</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31182">
				<function>4</function>
				<start_addr>1181</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31183">
				<function>4</function>
				<start_addr>1182</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31184">
				<function>4</function>
				<start_addr>1183</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31185">
				<function>4</function>
				<start_addr>1184</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31186">
				<function>4</function>
				<start_addr>1185</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31187">
				<function>4</function>
				<start_addr>1186</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31188">
				<function>4</function>
				<start_addr>1187</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31189">
				<function>4</function>
				<start_addr>1188</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31191">
				<function>4</function>
				<start_addr>1190</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31193">
				<function>4</function>
				<start_addr>1192</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31194">
				<function>4</function>
				<start_addr>1193</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31195">
				<function>4</function>
				<start_addr>1194</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31196">
				<function>4</function>
				<start_addr>1195</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31197">
				<function>4</function>
				<start_addr>1196</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31198">
				<function>4</function>
				<start_addr>1197</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31199">
				<function>4</function>
				<start_addr>1198</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31200">
				<function>4</function>
				<start_addr>1199</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31201">
				<function>4</function>
				<start_addr>1200</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31203">
				<function>4</function>
				<start_addr>1202</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31205">
				<function>4</function>
				<start_addr>1204</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31206">
				<function>4</function>
				<start_addr>1205</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31207">
				<function>4</function>
				<start_addr>1206</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31208">
				<function>4</function>
				<start_addr>1207</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31209">
				<function>4</function>
				<start_addr>1208</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31210">
				<function>4</function>
				<start_addr>1209</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31211">
				<function>4</function>
				<start_addr>1210</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31212">
				<function>4</function>
				<start_addr>1211</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31213">
				<function>4</function>
				<start_addr>1212</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31215">
				<function>4</function>
				<start_addr>1214</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31217">
				<function>4</function>
				<start_addr>1216</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31218">
				<function>4</function>
				<start_addr>1217</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31219">
				<function>4</function>
				<start_addr>1218</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31220">
				<function>4</function>
				<start_addr>1219</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31221">
				<function>4</function>
				<start_addr>1220</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31222">
				<function>4</function>
				<start_addr>1221</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31223">
				<function>4</function>
				<start_addr>1222</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31224">
				<function>4</function>
				<start_addr>1223</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31225">
				<function>4</function>
				<start_addr>1224</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31227">
				<function>4</function>
				<start_addr>1226</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31229">
				<function>4</function>
				<start_addr>1228</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31230">
				<function>4</function>
				<start_addr>1229</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31231">
				<function>4</function>
				<start_addr>1230</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31232">
				<function>4</function>
				<start_addr>1231</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31233">
				<function>4</function>
				<start_addr>1232</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31234">
				<function>4</function>
				<start_addr>1233</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31235">
				<function>4</function>
				<start_addr>1234</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31236">
				<function>4</function>
				<start_addr>1235</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31237">
				<function>4</function>
				<start_addr>1236</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31239">
				<function>4</function>
				<start_addr>1238</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31241">
				<function>4</function>
				<start_addr>1240</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31242">
				<function>4</function>
				<start_addr>1241</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31243">
				<function>4</function>
				<start_addr>1242</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31244">
				<function>4</function>
				<start_addr>1243</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31245">
				<function>4</function>
				<start_addr>1244</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31246">
				<function>4</function>
				<start_addr>1245</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31247">
				<function>4</function>
				<start_addr>1246</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31248">
				<function>4</function>
				<start_addr>1247</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31249">
				<function>4</function>
				<start_addr>1248</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31251">
				<function>4</function>
				<start_addr>1250</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31253">
				<function>4</function>
				<start_addr>1252</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31254">
				<function>4</function>
				<start_addr>1253</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31255">
				<function>4</function>
				<start_addr>1254</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31256">
				<function>4</function>
				<start_addr>1255</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31257">
				<function>4</function>
				<start_addr>1256</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31258">
				<function>4</function>
				<start_addr>1257</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31259">
				<function>4</function>
				<start_addr>1258</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31260">
				<function>4</function>
				<start_addr>1259</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31261">
				<function>4</function>
				<start_addr>1260</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31263">
				<function>4</function>
				<start_addr>1262</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31265">
				<function>4</function>
				<start_addr>1264</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31266">
				<function>4</function>
				<start_addr>1265</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31267">
				<function>4</function>
				<start_addr>1266</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31268">
				<function>4</function>
				<start_addr>1267</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31269">
				<function>4</function>
				<start_addr>1268</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31270">
				<function>4</function>
				<start_addr>1269</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31271">
				<function>4</function>
				<start_addr>1270</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31272">
				<function>4</function>
				<start_addr>1271</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31273">
				<function>4</function>
				<start_addr>1272</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31275">
				<function>4</function>
				<start_addr>1274</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31277">
				<function>4</function>
				<start_addr>1276</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31278">
				<function>4</function>
				<start_addr>1277</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31279">
				<function>4</function>
				<start_addr>1278</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31280">
				<function>4</function>
				<start_addr>1279</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31281">
				<function>4</function>
				<start_addr>1280</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31282">
				<function>4</function>
				<start_addr>1281</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31283">
				<function>4</function>
				<start_addr>1282</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31284">
				<function>4</function>
				<start_addr>1283</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31285">
				<function>4</function>
				<start_addr>1284</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31287">
				<function>4</function>
				<start_addr>1286</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31289">
				<function>4</function>
				<start_addr>1288</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31290">
				<function>4</function>
				<start_addr>1289</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31291">
				<function>4</function>
				<start_addr>1290</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31292">
				<function>4</function>
				<start_addr>1291</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31293">
				<function>4</function>
				<start_addr>1292</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31294">
				<function>4</function>
				<start_addr>1293</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31295">
				<function>4</function>
				<start_addr>1294</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31296">
				<function>4</function>
				<start_addr>1295</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31297">
				<function>4</function>
				<start_addr>1296</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31299">
				<function>4</function>
				<start_addr>1298</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31301">
				<function>4</function>
				<start_addr>1300</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31302">
				<function>4</function>
				<start_addr>1301</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31303">
				<function>4</function>
				<start_addr>1302</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31304">
				<function>4</function>
				<start_addr>1303</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31305">
				<function>4</function>
				<start_addr>1304</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31306">
				<function>4</function>
				<start_addr>1305</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31307">
				<function>4</function>
				<start_addr>1306</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31308">
				<function>4</function>
				<start_addr>1307</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31309">
				<function>4</function>
				<start_addr>1308</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31311">
				<function>4</function>
				<start_addr>1310</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31313">
				<function>4</function>
				<start_addr>1312</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31314">
				<function>4</function>
				<start_addr>1313</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31315">
				<function>4</function>
				<start_addr>1314</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31316">
				<function>4</function>
				<start_addr>1315</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31317">
				<function>4</function>
				<start_addr>1316</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31318">
				<function>4</function>
				<start_addr>1317</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31319">
				<function>4</function>
				<start_addr>1318</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31320">
				<function>4</function>
				<start_addr>1319</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31321">
				<function>4</function>
				<start_addr>1320</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31323">
				<function>4</function>
				<start_addr>1322</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31325">
				<function>4</function>
				<start_addr>1324</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31326">
				<function>4</function>
				<start_addr>1325</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31327">
				<function>4</function>
				<start_addr>1326</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31328">
				<function>4</function>
				<start_addr>1327</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31329">
				<function>4</function>
				<start_addr>1328</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31330">
				<function>4</function>
				<start_addr>1329</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31331">
				<function>4</function>
				<start_addr>1330</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31332">
				<function>4</function>
				<start_addr>1331</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_31333">
				<function>4</function>
				<start_addr>1332</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_31335">
				<function>4</function>
				<start_addr>1334</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>

			<value_ref_id valid="REG_33001">
				<function>4</function>
				<start_addr>3000</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33002">
				<function>4</function>
				<start_addr>3001</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33003">
				<function>4</function>
				<start_addr>3002</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33004">
				<function>4</function>
				<start_addr>3003</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33005">
				<function>4</function>
				<start_addr>3004</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33006">
				<function>4</function>
				<start_addr>3005</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33007">
				<function>4</function>
				<start_addr>3006</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33008">
				<function>4</function>
				<start_addr>3007</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33009">
				<function>4</function>
				<start_addr>3008</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_33011">
				<function>4</function>
				<start_addr>3010</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_33013">
				<function>4</function>
				<start_addr>3012</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33014">
				<function>4</function>
				<start_addr>3013</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33015">
				<function>4</function>
				<start_addr>3014</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33016">
				<function>4</function>
				<start_addr>3015</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33017">
				<function>4</function>
				<start_addr>3016</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33018">
				<function>4</function>
				<start_addr>3017</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33019">
				<function>4</function>
				<start_addr>3018</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33020">
				<function>4</function>
				<start_addr>3019</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33021">
				<function>4</function>
				<start_addr>3020</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_33023">
				<function>4</function>
				<start_addr>3022</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_33025">
				<function>4</function>
				<start_addr>3024</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33026">
				<function>4</function>
				<start_addr>3025</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33027">
				<function>4</function>
				<start_addr>3026</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33028">
				<function>4</function>
				<start_addr>3027</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33029">
				<function>4</function>
				<start_addr>3028</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33030">
				<function>4</function>
				<start_addr>3029</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33031">
				<function>4</function>
				<start_addr>3030</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33032">
				<function>4</function>
				<start_addr>3031</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33033">
				<function>4</function>
				<start_addr>3032</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_33035">
				<function>4</function>
				<start_addr>3034</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_33037">
				<function>4</function>
				<start_addr>3036</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33038">
				<function>4</function>
				<start_addr>3037</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33039">
				<function>4</function>
				<start_addr>3038</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33040">
				<function>4</function>
				<start_addr>3039</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33041">
				<function>4</function>
				<start_addr>3040</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33042">
				<function>4</function>
				<start_addr>3041</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33043">
				<function>4</function>
				<start_addr>3042</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33044">
				<function>4</function>
				<start_addr>3043</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33045">
				<function>4</function>
				<start_addr>3044</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_33047">
				<function>4</function>
				<start_addr>3046</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_33049">
				<function>4</function>
				<start_addr>3048</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33050">
				<function>4</function>
				<start_addr>3049</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33051">
				<function>4</function>
				<start_addr>3050</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33052">
				<function>4</function>
				<start_addr>3051</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33053">
				<function>4</function>
				<start_addr>3052</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33054">
				<function>4</function>
				<start_addr>3053</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33055">
				<function>4</function>
				<start_addr>3054</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33056">
				<function>4</function>
				<start_addr>3055</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_33057">
				<function>4</function>
				<start_addr>3056</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="REG_33059">
				<function>4</function>
				<start_addr>3058</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>

			<packet>
				<function>3</function>
				<start_addr>0</start_addr>
				<quantity>10</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>10</start_addr>
				<quantity>10</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50</start_addr>
				<quantity>5</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>60</start_addr>
				<quantity>5</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>110</start_addr>
				<quantity>40</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>1000</start_addr>
				<quantity>28</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>2000</start_addr>
				<quantity>10</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>0</start_addr>
				<quantity>12</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>20</start_addr>
				<quantity>12</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>100</start_addr>
				<quantity>48</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>500</start_addr>
				<quantity>12</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>520</start_addr>
				<quantity>12</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>540</start_addr>
				<quantity>12</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>560</start_addr>
				<quantity>12</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>1000</start_addr>
				<quantity>84</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>1084</start_addr>
				<quantity>84</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>1168</start_addr>
				<quantity>84</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>1252</start_addr>
				<quantity>84</quantity>
			</packet>
			<packet>
				<function>4</function>
				<start_addr>3000</start_addr>
				<quantity>60</quantity>
			</packet>

		</modbus>
	</protocol>
</APC_DDF>
