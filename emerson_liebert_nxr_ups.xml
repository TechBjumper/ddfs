<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="emerson_liebert_nxr_ups"
	ddfname="Emerson LiebertNXr"
	ddfversion="1"
	canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="Emerson_LiebertNXr">
    <setProductData ruleid="vendordata" field="vendor">Emerson</setProductData>
    <setProductData ruleid="modeldata" field="model">Liebert NXr</setProductData>
    <setProductData ruleid="typedata" field="type">UPS</setProductData>
	
	<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
	
    <numSensor ruleid="output_phase_voltage_r">
      <type>voltage</type>
      <units>volts</units>
      <sensorId>_OUTPUT_PHASE_VOLTAGE_R</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_77</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output phase voltage R</label>
      <sensorSet>Output Phase Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_phase_voltage_s">
      <type>voltage</type>
      <units>volts</units>
      <sensorId>_OUTPUT_PHASE_VOLTAGE_S</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_78</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output phase voltage S</label>
      <sensorSet>Output Phase Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_phase_voltage_t">
      <type>voltage</type>
      <units>volts</units>
      <sensorId>_OUTPUT_PHASE_VOLTAGE_T</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_79</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Output phase voltage T</label>
      <sensorSet>Output Phase Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="ouput_active_power_r">
      <type>num/powerKW</type>
      <units>kilowatts</units>
      <sensorId>_OUPUT_ACTIVE_POWER_R</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_80</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <label>Ouput active power R</label>
      <sensorSet>Ouput Active Power</sensorSet>
    </numSensor>
    <numSensor ruleid="ouput_active_power_s">
      <type>num/powerKW</type>
      <units>kilowatts</units>
      <sensorId>_OUPUT_ACTIVE_POWER_S</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_81</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <label>Ouput active power S</label>
      <sensorSet>Ouput Active Power</sensorSet>
    </numSensor>
    <numSensor ruleid="ouput_active_power_t">
      <type>num/powerKW</type>
      <units>kilowatts</units>
      <sensorId>_OUPUT_ACTIVE_POWER_T</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_82</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <label>Ouput active power T</label>
      <sensorSet>Ouput Active Power</sensorSet>
    </numSensor>
    <numSensor ruleid="input_freq">
      <type>frequency</type>
      <units>hertz</units>
      <sensorId>_INPUT_FREQ</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_83</getOid>
          </op>
          <op>10</op>
        </mult>
      </value>
      <label>Input frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
    <numSensor ruleid="output_freq">
      <type>frequency</type>
      <units>hertz</units>
      <sensorId>_OUTPUT_FREQ</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_84</getOid>
          </op>
          <op>10</op>
        </mult>
      </value>
      <label>Output frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
    <numSensor ruleid="output_load">
      <type>num/powerKVA</type>
      <units>kilovoltamps</units>
      <sensorId>_OUTPUT_LOAD</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_85</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <label>Output load</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="output_power_percent_(va)">
      <type>pctofcapacity</type>
      <units>percent</units>
      <sensorId>_OUTPUT_POWER_PERCENT_(VA)</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_86</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <label>Output power percent(va)</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="current_r">
      <type>amperage</type>
      <units>amps</units>
      <sensorId>_CURRENT_R</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_88</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Current R</label>
      <sensorSet>Current</sensorSet>
    </numSensor>
    <numSensor ruleid="current_s">
      <type>amperage</type>
      <units>amps</units>
      <sensorId>_CURRENT_S</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_89</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Current S</label>
      <sensorSet>Current</sensorSet>
    </numSensor>
    <numSensor ruleid="current_t">
      <type>amperage</type>
      <units>amps</units>
      <sensorId>_CURRENT_T</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_90</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Current T</label>
      <sensorSet>Current</sensorSet>
    </numSensor>
    <numSensor ruleid="ups_kva">
      <type>num/powerKVA</type>
      <units>kilovoltamps</units>
      <sensorId>_UPS_KVA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_98</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <label>Ups KVA</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="ups_kw">
      <type>num/powerKW</type>
      <units>kilowatts</units>
      <sensorId>_UPS_KW</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_99</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <label>UPS KW</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <stateSensor ruleid="general_alarm">
      <type>state</type>
      <sensorId>_GENERAL_ALARM</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <getOid>Function_3_Reg_87</getOid>
        </mapValue>
      </value>
      <label>General alarm</label>
      <enum>true-false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups_comm_alarm">
      <type>state</type>
      <sensorId>_UPS_COMM_ALARM</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <getOid>Function_3_Reg_91</getOid>
        </mapValue>
      </value>
      <label>UPS comm alarm</label>
      <enum>true-false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups_battery_circuit_closed">
      <type>state</type>
      <sensorId>_UPS_BATTERY_CIRCUIT_CLOSED</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <getOid>Function_3_Reg_92</getOid>
        </mapValue>
      </value>
      <label>UPS battery circuit closed</label>
      <enum>true-false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups_battery_discharging">
      <type>state</type>
      <sensorId>_UPS_BATTERY_DISCHARGING</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <getOid>Function_3_Reg_93</getOid>
        </mapValue>
      </value>
      <label>UPS battery discharging</label>
      <enum>true-false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="low_battery_shutdown">
      <type>state</type>
      <sensorId>_LOW_BATTERY_SHUTDOWN</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <getOid>Function_3_Reg_94</getOid>
        </mapValue>
      </value>
      <label>Low battery shutdown</label>
      <enum>true-false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="emergency_off">
      <type>state</type>
      <sensorId>_EMERGENCY_OFF</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <getOid>Function_3_Reg_95</getOid>
        </mapValue>
      </value>
      <label>Emergency off</label>
      <enum>true-false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="operating_on_battery">
      <type>state</type>
      <sensorId>_OPERATING_ON_BATTERY</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <getOid>Function_3_Reg_96</getOid>
        </mapValue>
      </value>
      <label>Operating on battery</label>
      <enum>true-false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="maintenance_bypass">
      <type>state</type>
      <sensorId>_MAINTENANCE_BYPASS</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <getOid>Function_3_Reg_97</getOid>
        </mapValue>
      </value>
      <label>Maintenance bypass</label>
      <enum>true-false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
	
		<valueMap ruleid="true-false_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="true-false_em">
			<label>False</label>
			<label>True</label>
		</enumMap>
	
  </device>


  <protocol>
    <modbus>
      <value_ref_id valid="Function_3_Reg_77">
        <function>3</function>
        <start_addr>76</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_78">
        <function>3</function>
        <start_addr>77</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_79">
        <function>3</function>
        <start_addr>78</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_80">
        <function>3</function>
        <start_addr>79</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_81">
        <function>3</function>
        <start_addr>80</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_82">
        <function>3</function>
        <start_addr>81</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_83">
        <function>3</function>
        <start_addr>82</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_84">
        <function>3</function>
        <start_addr>83</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_85">
        <function>3</function>
        <start_addr>84</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_86">
        <function>3</function>
        <start_addr>85</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_87">
        <function>3</function>
        <start_addr>86</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_88">
        <function>3</function>
        <start_addr>87</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_89">
        <function>3</function>
        <start_addr>88</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_90">
        <function>3</function>
        <start_addr>89</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_91">
        <function>3</function>
        <start_addr>90</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_92">
        <function>3</function>
        <start_addr>91</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_93">
        <function>3</function>
        <start_addr>92</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_94">
        <function>3</function>
        <start_addr>93</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_95">
        <function>3</function>
        <start_addr>94</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_96">
        <function>3</function>
        <start_addr>95</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_97">
        <function>3</function>
        <start_addr>96</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_98">
        <function>3</function>
        <start_addr>97</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_99">
        <function>3</function>
        <start_addr>98</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
