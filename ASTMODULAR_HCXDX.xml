<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="ASTMODULAR_HCXDX" ddfname="ASTMODULAR HCXDX" ddfversion="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="ASTMODULAR_HCXDX">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">AST MODULAR</setProductData>
    <setProductData ruleid="modeldata" field="model">HCX DX</setProductData>
    <setProductData ruleid="typedata" field="type">Cooling Device</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />
      - Slave
      <commSetting field="slaveaddress" />
    </setDefaultLabel>
    <numSensor ruleid="probe_supply_temperature">
      <type>temp</type>
      <units />
      <sensorId>_PROBE_SUPPLY_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Probe supply temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="probe_hot_aisle_rh">
      <type>humidity</type>
      <units />
      <sensorId>_PROBE_HOT_AISLE_RH</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Probe hot aisle rh</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="probe_differential_hot/cold_aisle_pressure">
      <type>pressure</type>
      <units />
      <sensorId>_PROBE_DIFFERENTIAL_HOT/COLD_AISLE_PRESSURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_3</getOid>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <label>Probe differential hot/cold aisle pressure</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="probe_high_pressure_1">
      <type>pressure</type>
      <units />
      <sensorId>_PROBE_HIGH_PRESSURE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_4</getOid>
          </op>
          <op>100</op>
        </mult>
      </value>
      <label>Probe high pressure 1</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="probe_return_temperature">
      <type>temp</type>
      <units />
      <sensorId>_PROBE_RETURN_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_5</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Probe return temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="probe_auxiliar_temperature">
      <type>temp</type>
      <units />
      <sensorId>_PROBE_AUXILIAR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_7</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Probe auxiliar temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="return_minus_supply_temperature">
      <type>temp</type>
      <units />
      <sensorId>_RETURN_MINUS_SUPPLY_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_15</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Return minus supply temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="cold_aisle_regulation_temperature">
      <type>temp</type>
      <units />
      <sensorId>_COLD_AISLE_REGULATION_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_16</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Cold aisle regulation temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="absolute_humidity">
      <type>num</type>
      <units />
      <sensorId>_ABSOLUTE_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_17</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Absolute humidity</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="room_dew_point">
      <type>temp</type>
      <units />
      <sensorId>_ROOM_DEW_POINT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_18</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Room dew point</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="probe:_low_pressure">
      <type>pressure</type>
      <units />
      <sensorId>_PROBE:_LOW_PRESSURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_19</getOid>
          </op>
          <op>100</op>
        </mult>
      </value>
      <label>Probe: low pressure</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="probe:_compressor_suction_temperature">
      <type>temp</type>
      <units />
      <sensorId>_PROBE:_COMPRESSOR_SUCTION_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_20</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Probe: compressor suction temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="superheat_exv1">
      <type>num</type>
      <units />
      <sensorId>_SUPERHEAT_EXV1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_21</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Superheat exv1</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="dx_evaporating_temperature_1">
      <type>temp</type>
      <units />
      <sensorId>_DX_EVAPORATING_TEMPERATURE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_22</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Dx evaporating temperature 1</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="exv1_position">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_EXV1_POSITION</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_23</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Exv1 position</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="condensing_temperature">
      <type>temp</type>
      <units />
      <sensorId>_CONDENSING_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_29</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Condensing temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan_average_supply_temperature">
      <type>temp</type>
      <units />
      <sensorId>_PLAN_AVERAGE_SUPPLY_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_40</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Plan average supply temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan_lowest_supply_temperature">
      <type>temp</type>
      <units />
      <sensorId>_PLAN_LOWEST_SUPPLY_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_41</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Plan lowest supply temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan_highest_supply_temperature">
      <type>temp</type>
      <units />
      <sensorId>_PLAN_HIGHEST_SUPPLY_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_42</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Plan highest supply temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan_average_return_temperature">
      <type>temp</type>
      <units />
      <sensorId>_PLAN_AVERAGE_RETURN_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_43</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Plan average return temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan_lowest_return_temperature">
      <type>temp</type>
      <units />
      <sensorId>_PLAN_LOWEST_RETURN_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_44</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Plan lowest return temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan_highest_return_temperature">
      <type>temp</type>
      <units />
      <sensorId>_PLAN_HIGHEST_RETURN_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_45</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Plan highest return temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan_average_differential_pressure">
      <type>pressure</type>
      <units />
      <sensorId>_PLAN_AVERAGE_DIFFERENTIAL_PRESSURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_46</getOid>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <label>Plan average differential pressure</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan:_lowest_differential_pressure">
      <type>pressure</type>
      <units />
      <sensorId>_PLAN:_LOWEST_DIFFERENTIAL_PRESSURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_47</getOid>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <label>Plan: lowest differential pressure</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan:_highest_differential_pressure">
      <type>pressure</type>
      <units />
      <sensorId>_PLAN:_HIGHEST_DIFFERENTIAL_PRESSURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_48</getOid>
          </op>
          <op>0.001</op>
        </mult>
      </value>
      <label>Plan: highest differential pressure</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan:_average_absolute_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_PLAN:_AVERAGE_ABSOLUTE_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_49</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Plan: average absolute humidity</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan:_lowest_absolute_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_PLAN:_LOWEST_ABSOLUTE_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_50</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Plan: lowest absolute humidity</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="plan:_highest_absolute_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_PLAN:_HIGHEST_ABSOLUTE_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_51</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Plan: highest absolute humidity</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="analog_output_status:_indoor_fan">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_ANALOG_OUTPUT_STATUS:_INDOOR_FAN</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_60</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Analog output status: indoor fan</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="analog_output_status:_condenser_fan">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_ANALOG_OUTPUT_STATUS:_CONDENSER_FAN</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_61</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Analog output status: condenser fan</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="analog_output_status:_humidifier">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_ANALOG_OUTPUT_STATUS:_HUMIDIFIER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_62</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Analog output status: humidifier</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="set_point:_supply_temperature_(compressor)">
      <type>temp</type>
      <units />
      <sensorId>_SET_POINT:_SUPPLY_TEMPERATURE_(COMPRESSOR)</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_100</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Set point: supply temperature (compressor)</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="set_point:_return_temperature_(compressor)">
      <type>temp</type>
      <units />
      <sensorId>_SET_POINT:_RETURN_TEMPERATURE_(COMPRESSOR)</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_105</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Set point: return temperature (compressor)</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="set_point:_rh_maximum">
      <type>humidity</type>
      <units />
      <sensorId>_SET_POINT:_RH_MAXIMUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_110</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Set point: rh maximum</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="set_point:_rh_minimum">
      <type>humidity</type>
      <units />
      <sensorId>_SET_POINT:_RH_MINIMUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_111</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Set point: rh minimum</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="controller_temperature">
      <type>temp</type>
      <units />
      <sensorId>_CONTROLLER_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_200</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Controller temperature</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="controller_electrical_voltage_supply">
      <type>voltage</type>
      <units />
      <sensorId>_CONTROLLER_ELECTRICAL_VOLTAGE_SUPPLY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_201</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Controller electrical voltage supply</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="controller_electrical_current_consumption">
      <type>amperage</type>
      <units>milliamps</units>
      <sensorId>_CONTROLLER_ELECTRICAL_CURRENT_CONSUMPTION</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_202</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Controller electrical current consumption</label>
      <sensorSet>Analog Registers</sensorSet>
    </numSensor>
    <numSensor ruleid="controller_plan_address">
      <type>num</type>
      <units />
      <sensorId>_CONTROLLER_PLAN_ADDRESS</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_200</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Controller plan address</label>
      <sensorSet>Integer Registers</sensorSet>
    </numSensor>
    <stateSensor ruleid="unit_status">
      <type>state</type>
      <sensorId>_UNIT_STATUS</sensorId>
      <value>
        <mapValue mapid="unit_stat_vm">
          <getOid>Function_3_Reg_40</getOid>
        </mapValue>
      </value>
      <label>Unit status</label>
      <enum>unit_stat_em</enum>
      <sensorSet>Integer Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="indoor_fan_regulation">
      <type>state</type>
      <sensorId>_INDOOR_FAN_REGULATION</sensorId>
      <value>
        <mapValue mapid="ind_fan_reg_vm">
          <getOid>Function_3_Reg_50</getOid>
        </mapValue>
      </value>
      <label>Indoor fan regulation</label>
      <enum>ind_fan_reg_em</enum>
      <sensorSet>Integer Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="compressor_regulation">
      <type>state</type>
      <sensorId>_COMPRESSOR_REGULATION</sensorId>
      <value>
        <mapValue mapid="comp_reg_vm">
          <getOid>Function_3_Reg_51</getOid>
        </mapValue>
      </value>
      <label>Compressor regulation</label>
      <enum>comp_reg_em</enum>
      <sensorSet>Integer Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="outdoor_fan_regulation">
      <type>state</type>
      <sensorId>_OUTDOOR_FAN_REGULATION</sensorId>
      <value>
        <mapValue mapid="out_fan_reg_vm">
          <getOid>Function_3_Reg_52</getOid>
        </mapValue>
      </value>
      <label>Outdoor fan regulation</label>
      <enum>out_fan_reg_em</enum>
      <sensorSet>Integer Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dehumidification_regulation">
      <type>state</type>
      <sensorId>_DEHUMIDIFICATION_REGULATION</sensorId>
      <value>
        <mapValue mapid="dehumid_reg_vm">
          <getOid>Function_3_Reg_53</getOid>
        </mapValue>
      </value>
      <label>Dehumidification regulation</label>
      <enum>dehumid_reg_em</enum>
      <sensorSet>Integer Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="request_to_reset/clear_alarm_memories">
      <type>state</type>
      <sensorId>_REQUEST_TO_RESET/CLEAR_ALARM_MEMORIES</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <getOid>Function_1_Reg_1</getOid>
        </mapValue>
      </value>
      <label>Request to reset/clear alarm memories</label>
      <enum>true_false_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_input:_remote_on/off">
      <type>state</type>
      <sensorId>_DIGITAL_INPUT:_REMOTE_ON/OFF</sensorId>
      <value>
        <mapValue mapid="n/a_vm">
          <getOid>Function_1_Reg_3</getOid>
        </mapValue>
      </value>
      <label>Digital input: remote on/off</label>
      <enum>n/a_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_input:_condenser_fan_1">
      <type>state</type>
      <sensorId>_DIGITAL_INPUT:_CONDENSER_FAN_1</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_5</getOid>
        </mapValue>
      </value>
      <label>Digital input: condenser fan 1</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_input:_condenser_fan_2">
      <type>state</type>
      <sensorId>_DIGITAL_INPUT:_CONDENSER_FAN_2</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_6</getOid>
        </mapValue>
      </value>
      <label>Digital input: condenser fan 2</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_input:_hp_switch_1">
      <type>state</type>
      <sensorId>_DIGITAL_INPUT:_HP_SWITCH_1</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_7</getOid>
        </mapValue>
      </value>
      <label>Digital input: hp switch 1</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_input:_lp_switch">
      <type>state</type>
      <sensorId>_DIGITAL_INPUT:_LP_SWITCH</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_11</getOid>
        </mapValue>
      </value>
      <label>Digital input: lp switch</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_input:_dirty_filter">
      <type>state</type>
      <sensorId>_DIGITAL_INPUT:_DIRTY_FILTER</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <getOid>Function_1_Reg_16</getOid>
        </mapValue>
      </value>
      <label>Digital input: dirty filter</label>
      <enum>true_false_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="alarm:_indoor_fan">
      <type>alarm</type>
      <sensorId>_ALARM:_INDOOR_FAN</sensorId>
      <value>
        <mapValue mapid="n/a_vm">
          <getOid>Function_1_Reg_22</getOid>
        </mapValue>
      </value>
      <label>Alarm: indoor fan</label>
      <enum>n/a_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="probe_out_of_range:_supply_temperature">
      <type>state</type>
      <sensorId>_PROBE_OUT_OF_RANGE:_SUPPLY_TEMPERATURE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <getOid>Function_1_Reg_55</getOid>
        </mapValue>
      </value>
      <label>Probe out of range: supply temperature</label>
      <enum>true_false_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="probe_out_of_range:_hot_aisle_rh">
      <type>state</type>
      <sensorId>_PROBE_OUT_OF_RANGE:_HOT_AISLE_RH</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <getOid>Function_1_Reg_56</getOid>
        </mapValue>
      </value>
      <label>Probe out of range: hot aisle rh</label>
      <enum>true_false_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="probe_out_of_range:_differential_hot/cold_aisle_pressure">
      <type>state</type>
      <sensorId>_PROBE_OUT_OF_RANGE:_DIFFERENTIAL_HOT/COLD_AISLE_PRESSURE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <getOid>Function_1_Reg_57</getOid>
        </mapValue>
      </value>
      <label>Probe out of range: differential hot/cold aisle pressure</label>
      <enum>true_false_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="probe_out_of_range:_high_pressure_1">
      <type>state</type>
      <sensorId>_PROBE_OUT_OF_RANGE:_HIGH_PRESSURE_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <getOid>Function_1_Reg_58</getOid>
        </mapValue>
      </value>
      <label>Probe out of range: high pressure 1</label>
      <enum>true_false_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="probe_out_of_range:_return_temperature">
      <type>state</type>
      <sensorId>_PROBE_OUT_OF_RANGE:_RETURN_TEMPERATURE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <getOid>Function_1_Reg_59</getOid>
        </mapValue>
      </value>
      <label>Probe out of range: return temperature</label>
      <enum>true_false_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_output_status:_indoor_fan">
      <type>state</type>
      <sensorId>_DIGITAL_OUTPUT_STATUS:_INDOOR_FAN</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_80</getOid>
        </mapValue>
      </value>
      <label>Digital output status: indoor fan</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_output_status:_compressor_1">
      <type>state</type>
      <sensorId>_DIGITAL_OUTPUT_STATUS:_COMPRESSOR_1</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_81</getOid>
        </mapValue>
      </value>
      <label>Digital output status: compressor 1</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_output_status:_compressor_1_2">
      <type>state</type>
      <sensorId>_DIGITAL_OUTPUT_STATUS:_COMPRESSOR_1_2</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_82</getOid>
        </mapValue>
      </value>
      <label>Digital output status: compressor 1_2</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_output_status:_condenser_fan_1">
      <type>state</type>
      <sensorId>_DIGITAL_OUTPUT_STATUS:_CONDENSER_FAN_1</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_83</getOid>
        </mapValue>
      </value>
      <label>Digital output status: condenser fan 1</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_output_status:_condenser_fan_2">
      <type>state</type>
      <sensorId>_DIGITAL_OUTPUT_STATUS:_CONDENSER_FAN_2</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_84</getOid>
        </mapValue>
      </value>
      <label>Digital output status: condenser fan 2</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_output_status:_humidifier">
      <type>state</type>
      <sensorId>_DIGITAL_OUTPUT_STATUS:_HUMIDIFIER</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_85</getOid>
        </mapValue>
      </value>
      <label>Digital output status: humidifier</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_output_status:_heater_1">
      <type>state</type>
      <sensorId>_DIGITAL_OUTPUT_STATUS:_HEATER_1</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_86</getOid>
        </mapValue>
      </value>
      <label>Digital output status: heater 1</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_output_status:_heater_2">
      <type>state</type>
      <sensorId>_DIGITAL_OUTPUT_STATUS:_HEATER_2</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_87</getOid>
        </mapValue>
      </value>
      <label>Digital output status: heater 2</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="digital_output_status:_warning">
      <type>state</type>
      <sensorId>_DIGITAL_OUTPUT_STATUS:_WARNING</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <getOid>Function_1_Reg_94</getOid>
        </mapValue>
      </value>
      <label>Digital output status: warning</label>
      <enum>true_false_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dehumidifier_mode">
      <type>state</type>
      <sensorId>_DEHUMIDIFIER_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <getOid>Function_1_Reg_98</getOid>
        </mapValue>
      </value>
      <label>Dehumidifier mode</label>
      <enum>true_false_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="on-off_by_bms">
      <type>state</type>
      <sensorId>_ON-OFF_BY_BMS</sensorId>
      <value>
        <mapValue mapid="on_off_vm">
          <getOid>Function_1_Reg_150</getOid>
        </mapValue>
      </value>
      <label>On-off by bms</label>
      <enum>on_off_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="evd_online">
      <type>state</type>
      <sensorId>_EVD_ONLINE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <getOid>Function_1_Reg_200</getOid>
        </mapValue>
      </value>
      <label>Evd online</label>
      <enum>true_false_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
    <stateSensor ruleid="evd_online_and_ready">
      <type>state</type>
      <sensorId>_EVD_ONLINE_AND_READY</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <getOid>Function_1_Reg_201</getOid>
        </mapValue>
      </value>
      <label>Evd online and ready</label>
      <enum>true_false_em</enum>
      <sensorSet>Digital Registers</sensorSet>
    </stateSensor>
	
	
		<valueMap ruleid="true_false_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="true_false_em">
			<label>False</label>
			<label>True</label>
		</enumMap>		
	
		<valueMap ruleid="on_off_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="on_off_em">
			<label>OFF</label>
			<label>ON</label>
		</enumMap>		
		
		<valueMap ruleid="unit_stat_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>4</valueIn><valueOut>4</valueOut>
			<valueIn>5</valueIn><valueOut>5</valueOut>
			<valueIn>6</valueIn><valueOut>6</valueOut>
			<valueIn>7</valueIn><valueOut>7</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="unit_stat_em">
			<label>ON</label>
			<label>OFF main</label>
			<label>OFF BMS</label>
			<label>OFF pLAN</label>
			<label>OFF digital input</label>
			<label>OFF schedule</label>
			<label>OFF holidays</label>
			<label>OFF holidays</label>
		</enumMap>		
		
		
		<valueMap ruleid="ind_fan_reg_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>4</valueIn><valueOut>4</valueOut>
			<valueIn>5</valueIn><valueOut>5</valueOut>
			<valueIn>6</valueIn><valueOut>6</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="ind_fan_reg_em">
			<label>Cool demand</label>
			<label>Reverse cool demand</label>
			<label>Delta T</label>
			<label>Supply temperature</label>
			<label>Local air pressure</label>
			<label>Average air pressure</label>
			<label>Lowest air pressure</label>
		</enumMap>		
		
		<valueMap ruleid="comp_reg_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="comp_reg_em">
			<label>Local supply</label>
			<label>Average supply</label>
			<label>Local return</label>
			<label>Average return</label>
		</enumMap>			

		<valueMap ruleid="out_fan_reg_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="out_fan_reg_em">
			<label>Fixed set</label>
			<label>Upon compressor number</label>
			<label>Compressor demand</label>
		</enumMap>		
		
		<valueMap ruleid="dehumid_reg_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="dehumid_reg_em">
			<label>Disabled</label>
			<label>DX</label>
			<label>external</label>
		</enumMap>
	
    <alarmFlags ruleid="global_(general)_alarm">
      <value>
        <getOid>Function_1_Reg_2</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Global (general) alarm Condition Present</activeText>
          <inactiveText>Global (general) alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Global (general) alarm Condition Present</activeText>
          <inactiveText>Global (general) alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="digital_input:_indoor_fan_alarm">
      <value>
        <getOid>Function_1_Reg_4</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Digital input: Indoor fan alarm Condition Present</activeText>
          <inactiveText>Digital input: Indoor fan alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Digital input: Indoor fan alarm Condition Present</activeText>
          <inactiveText>Digital input: Indoor fan alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="digital_input:_compressor_1_alarm">
      <value>
        <getOid>Function_1_Reg_9</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Digital input: Compressor 1 alarm Condition Present</activeText>
          <inactiveText>Digital input: Compressor 1 alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Digital input: Compressor 1 alarm Condition Present</activeText>
          <inactiveText>Digital input: Compressor 1 alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="digital_input:_compressor_2_alarm">
      <value>
        <getOid>Function_1_Reg_10</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Digital input: Compressor 2 alarm Condition Present</activeText>
          <inactiveText>Digital input: Compressor 2 alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Digital input: Compressor 2 alarm Condition Present</activeText>
          <inactiveText>Digital input: Compressor 2 alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="digital_input:_heater_alarm">
      <value>
        <getOid>Function_1_Reg_13</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Digital input: Heater alarm Condition Present</activeText>
          <inactiveText>Digital input: Heater alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Digital input: Heater alarm Condition Present</activeText>
          <inactiveText>Digital input: Heater alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="digital_input:_humidifier_alarm">
      <value>
        <getOid>Function_1_Reg_15</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Digital input: Humidifier alarm Condition Present</activeText>
          <inactiveText>Digital input: Humidifier alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Digital input: Humidifier alarm Condition Present</activeText>
          <inactiveText>Digital input: Humidifier alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm:_condenser_fan_1">
      <value>
        <getOid>Function_1_Reg_23</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm: condenser fan 1 Condition Present</activeText>
          <inactiveText>Alarm: condenser fan 1 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm: condenser fan 1 Condition Present</activeText>
          <inactiveText>Alarm: condenser fan 1 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm:_condenser_fan_2">
      <value>
        <getOid>Function_1_Reg_24</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm: condenser fan 2 Condition Present</activeText>
          <inactiveText>Alarm: condenser fan 2 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm: condenser fan 2 Condition Present</activeText>
          <inactiveText>Alarm: condenser fan 2 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm:_hp_switch">
      <value>
        <getOid>Function_1_Reg_25</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm: HP switch Condition Present</activeText>
          <inactiveText>Alarm: HP switch Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm: HP switch Condition Present</activeText>
          <inactiveText>Alarm: HP switch Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm:_compressor_1">
      <value>
        <getOid>Function_1_Reg_27</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm: compressor 1 Condition Present</activeText>
          <inactiveText>Alarm: compressor 1 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm: compressor 1 Condition Present</activeText>
          <inactiveText>Alarm: compressor 1 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm:_compressor_2">
      <value>
        <getOid>Function_1_Reg_28</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm: compressor 2 Condition Present</activeText>
          <inactiveText>Alarm: compressor 2 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm: compressor 2 Condition Present</activeText>
          <inactiveText>Alarm: compressor 2 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm:_lp_switch">
      <value>
        <getOid>Function_1_Reg_29</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm: LP switch Condition Present</activeText>
          <inactiveText>Alarm: LP switch Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm: LP switch Condition Present</activeText>
          <inactiveText>Alarm: LP switch Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm:_heater">
      <value>
        <getOid>Function_1_Reg_31</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm: heater Condition Present</activeText>
          <inactiveText>Alarm: heater Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm: heater Condition Present</activeText>
          <inactiveText>Alarm: heater Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm:_humidifier">
      <value>
        <getOid>Function_1_Reg_33</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm: humidifier Condition Present</activeText>
          <inactiveText>Alarm: humidifier Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm: humidifier Condition Present</activeText>
          <inactiveText>Alarm: humidifier Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="alarm:_dirty_filter">
      <value>
        <getOid>Function_1_Reg_34</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Alarm: dirty filter Condition Present</activeText>
          <inactiveText>Alarm: dirty filter Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Alarm: dirty filter Condition Present</activeText>
          <inactiveText>Alarm: dirty filter Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="probe_alarm:_supply_temperature">
      <value>
        <getOid>Function_1_Reg_40</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Probe alarm: Supply temperature Condition Present</activeText>
          <inactiveText>Probe alarm: Supply temperature Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Probe alarm: Supply temperature Condition Present</activeText>
          <inactiveText>Probe alarm: Supply temperature Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="probe_alarm:_hot_aisle_rh">
      <value>
        <getOid>Function_1_Reg_41</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Probe alarm: Hot aisle RH Condition Present</activeText>
          <inactiveText>Probe alarm: Hot aisle RH Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Probe alarm: Hot aisle RH Condition Present</activeText>
          <inactiveText>Probe alarm: Hot aisle RH Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="probe_alarm:_differential_hot/cold_aisle_pressure">
      <value>
        <getOid>Function_1_Reg_42</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Probe alarm: Differential hot/cold aisle pressure Condition Present</activeText>
          <inactiveText>Probe alarm: Differential hot/cold aisle pressure Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Probe alarm: Differential hot/cold aisle pressure Condition Present</activeText>
          <inactiveText>Probe alarm: Differential hot/cold aisle pressure Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="probe_alarm:_high_pressure_1">
      <value>
        <getOid>Function_1_Reg_43</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Probe alarm: High pressure 1 Condition Present</activeText>
          <inactiveText>Probe alarm: High pressure 1 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Probe alarm: High pressure 1 Condition Present</activeText>
          <inactiveText>Probe alarm: High pressure 1 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="probe_alarm:_return_temperature">
      <value>
        <getOid>Function_1_Reg_44</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Probe alarm: Return temperature Condition Present</activeText>
          <inactiveText>Probe alarm: Return temperature Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Probe alarm: Return temperature Condition Present</activeText>
          <inactiveText>Probe alarm: Return temperature Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="evd:_s1_probe_alarm">
      <value>
        <getOid>Function_1_Reg_70</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>EVD: S1 probe alarm Condition Present</activeText>
          <inactiveText>EVD: S1 probe alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>EVD: S1 probe alarm Condition Present</activeText>
          <inactiveText>EVD: S1 probe alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="evd:s2_probe_alarm">
      <value>
        <getOid>Function_1_Reg_71</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>EVD:S2 probe alarm Condition Present</activeText>
          <inactiveText>EVD:S2 probe alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>EVD:S2 probe alarm Condition Present</activeText>
          <inactiveText>EVD:S2 probe alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="evd:s3_probe_alarm">
      <value>
        <getOid>Function_1_Reg_72</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>EVD:S3 probe alarm Condition Present</activeText>
          <inactiveText>EVD:S3 probe alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>EVD:S3 probe alarm Condition Present</activeText>
          <inactiveText>EVD:S3 probe alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="evd:s4_probe_alarm">
      <value>
        <getOid>Function_1_Reg_73</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>EVD:S4 probe alarm Condition Present</activeText>
          <inactiveText>EVD:S4 probe alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>EVD:S4 probe alarm Condition Present</activeText>
          <inactiveText>EVD:S4 probe alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="digital_output_status:_alarm">
      <value>
        <getOid>Function_1_Reg_93</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Digital output status: Alarm Condition Present</activeText>
          <inactiveText>Digital output status: Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Digital output status: Alarm Condition Present</activeText>
          <inactiveText>Digital output status: Alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_indoor_fan">
      <value>
        <getOid>Function_1_Reg_100</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Indoor fan Condition Present</activeText>
          <inactiveText>Time counter alarm: Indoor fan Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Indoor fan Condition Present</activeText>
          <inactiveText>Time counter alarm: Indoor fan Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_compressor_1">
      <value>
        <getOid>Function_1_Reg_101</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Compressor 1 Condition Present</activeText>
          <inactiveText>Time counter alarm: Compressor 1 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Compressor 1 Condition Present</activeText>
          <inactiveText>Time counter alarm: Compressor 1 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_compressor_2">
      <value>
        <getOid>Function_1_Reg_102</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Compressor 2 Condition Present</activeText>
          <inactiveText>Time counter alarm: Compressor 2 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Compressor 2 Condition Present</activeText>
          <inactiveText>Time counter alarm: Compressor 2 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_condenser_fan_1">
      <value>
        <getOid>Function_1_Reg_103</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Condenser fan 1 Condition Present</activeText>
          <inactiveText>Time counter alarm: Condenser fan 1 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Condenser fan 1 Condition Present</activeText>
          <inactiveText>Time counter alarm: Condenser fan 1 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_condenser_fan_2">
      <value>
        <getOid>Function_1_Reg_104</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Condenser fan 2 Condition Present</activeText>
          <inactiveText>Time counter alarm: Condenser fan 2 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Condenser fan 2 Condition Present</activeText>
          <inactiveText>Time counter alarm: Condenser fan 2 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_humidifier">
      <value>
        <getOid>Function_1_Reg_105</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Humidifier Condition Present</activeText>
          <inactiveText>Time counter alarm: Humidifier Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Humidifier Condition Present</activeText>
          <inactiveText>Time counter alarm: Humidifier Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_heater_1">
      <value>
        <getOid>Function_1_Reg_106</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Heater 1 Condition Present</activeText>
          <inactiveText>Time counter alarm: Heater 1 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Heater 1 Condition Present</activeText>
          <inactiveText>Time counter alarm: Heater 1 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_heater_2">
      <value>
        <getOid>Function_1_Reg_107</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Heater 2 Condition Present</activeText>
          <inactiveText>Time counter alarm: Heater 2 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Heater 2 Condition Present</activeText>
          <inactiveText>Time counter alarm: Heater 2 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_bypass_dx_1">
      <value>
        <getOid>Function_1_Reg_110</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Bypass DX 1 Condition Present</activeText>
          <inactiveText>Time counter alarm: Bypass DX 1 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Bypass DX 1 Condition Present</activeText>
          <inactiveText>Time counter alarm: Bypass DX 1 Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_alarm">
      <value>
        <getOid>Function_1_Reg_113</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Alarm Condition Present</activeText>
          <inactiveText>Time counter alarm: Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Alarm Condition Present</activeText>
          <inactiveText>Time counter alarm: Alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_warning">
      <value>
        <getOid>Function_1_Reg_114</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Warning Condition Present</activeText>
          <inactiveText>Time counter alarm: Warning Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Warning Condition Present</activeText>
          <inactiveText>Time counter alarm: Warning Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="time_counter_alarm:_dehumidify">
      <value>
        <getOid>Function_1_Reg_115</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Time counter alarm: Dehumidify Condition Present</activeText>
          <inactiveText>Time counter alarm: Dehumidify Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Time counter alarm: Dehumidify Condition Present</activeText>
          <inactiveText>Time counter alarm: Dehumidify Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="evd_eeprom_alarm">
      <value>
        <getOid>Function_1_Reg_202</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>EVD EEPROM alarm Condition Present</activeText>
          <inactiveText>EVD EEPROM alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>EVD EEPROM alarm Condition Present</activeText>
          <inactiveText>EVD EEPROM alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="expansion_valve_a_motor_alarm">
      <value>
        <getOid>Function_1_Reg_203</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Expansion valve A motor alarm Condition Present</activeText>
          <inactiveText>Expansion valve A motor alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Expansion valve A motor alarm Condition Present</activeText>
          <inactiveText>Expansion valve A motor alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="exv_a_low_sh_alarm">
      <value>
        <getOid>Function_1_Reg_205</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>EXV A low SH alarm Condition Present</activeText>
          <inactiveText>EXV A low SH alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>EXV A low SH alarm Condition Present</activeText>
          <inactiveText>EXV A low SH alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="low_evaporating_temperature_alarm_valve_a">
      <value>
        <getOid>Function_1_Reg_207</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Low evaporating temperature alarm valve A Condition Present</activeText>
          <inactiveText>Low evaporating temperature alarm valve A Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Low evaporating temperature alarm valve A Condition Present</activeText>
          <inactiveText>Low evaporating temperature alarm valve A Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="high_evaporation_pressure_alarm_valve_a">
      <value>
        <getOid>Function_1_Reg_209</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>High evaporation pressure alarm valve A Condition Present</activeText>
          <inactiveText>High evaporation pressure alarm valve A Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>High evaporation pressure alarm valve A Condition Present</activeText>
          <inactiveText>High evaporation pressure alarm valve A Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="compressor_out_of_envelope_alarm">
      <value>
        <getOid>Function_1_Reg_211</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Compressor out of envelope alarm Condition Present</activeText>
          <inactiveText>Compressor out of envelope alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Compressor out of envelope alarm Condition Present</activeText>
          <inactiveText>Compressor out of envelope alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="power_supply_alarm">
      <value>
        <getOid>Function_1_Reg_212</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Power supply alarm Condition Present</activeText>
          <inactiveText>Power supply alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Power supply alarm Condition Present</activeText>
          <inactiveText>Power supply alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="Function_1_Reg_85">
        <function>1</function>
        <start_addr>84</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_22">
        <function>3</function>
        <start_addr>21</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_10">
        <function>1</function>
        <start_addr>9</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_80">
        <function>1</function>
        <start_addr>79</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_110">
        <function>1</function>
        <start_addr>109</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_200">
        <function>1</function>
        <start_addr>199</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_21">
        <function>3</function>
        <start_addr>20</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_20">
        <function>3</function>
        <start_addr>19</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_23">
        <function>3</function>
        <start_addr>22</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_7">
        <function>1</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_94">
        <function>1</function>
        <start_addr>93</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_23">
        <function>1</function>
        <start_addr>22</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_100">
        <function>3</function>
        <start_addr>99</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_103">
        <function>1</function>
        <start_addr>102</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_28">
        <function>1</function>
        <start_addr>27</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_2">
        <function>1</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_44">
        <function>1</function>
        <start_addr>43</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_50">
        <function>3</function>
        <start_addr>49</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_87">
        <function>1</function>
        <start_addr>86</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_60">
        <function>3</function>
        <start_addr>59</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_16">
        <function>1</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_107">
        <function>1</function>
        <start_addr>106</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_51">
        <function>3</function>
        <start_addr>50</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_110">
        <function>3</function>
        <start_addr>109</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_52">
        <function>3</function>
        <start_addr>51</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_50">
        <function>3</function>
        <start_addr>49</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_41">
        <function>1</function>
        <start_addr>40</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_25">
        <function>1</function>
        <start_addr>24</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_114">
        <function>1</function>
        <start_addr>113</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_209">
        <function>1</function>
        <start_addr>208</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_40">
        <function>3</function>
        <start_addr>39</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_205">
        <function>1</function>
        <start_addr>204</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_57">
        <function>1</function>
        <start_addr>56</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_4">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_105">
        <function>3</function>
        <start_addr>104</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_34">
        <function>1</function>
        <start_addr>33</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_102">
        <function>1</function>
        <start_addr>101</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_49">
        <function>3</function>
        <start_addr>48</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_27">
        <function>1</function>
        <start_addr>26</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_5">
        <function>1</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_100">
        <function>1</function>
        <start_addr>99</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_58">
        <function>1</function>
        <start_addr>57</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_82">
        <function>1</function>
        <start_addr>81</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_51">
        <function>3</function>
        <start_addr>50</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_71">
        <function>1</function>
        <start_addr>70</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_45">
        <function>3</function>
        <start_addr>44</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_83">
        <function>1</function>
        <start_addr>82</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_106">
        <function>1</function>
        <start_addr>105</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_5">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_115">
        <function>1</function>
        <start_addr>114</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_33">
        <function>1</function>
        <start_addr>32</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_93">
        <function>1</function>
        <start_addr>92</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_202">
        <function>3</function>
        <start_addr>201</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_43">
        <function>3</function>
        <start_addr>42</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_150">
        <function>1</function>
        <start_addr>149</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_15">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_22">
        <function>1</function>
        <start_addr>21</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_3">
        <function>1</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_101">
        <function>1</function>
        <start_addr>100</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_40">
        <function>1</function>
        <start_addr>39</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_201">
        <function>3</function>
        <start_addr>200</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_105">
        <function>1</function>
        <start_addr>104</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_86">
        <function>1</function>
        <start_addr>85</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_2">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_15">
        <function>1</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_31">
        <function>1</function>
        <start_addr>30</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_211">
        <function>1</function>
        <start_addr>210</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_44">
        <function>3</function>
        <start_addr>43</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_16">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_41">
        <function>3</function>
        <start_addr>40</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_13">
        <function>1</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_3">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_59">
        <function>1</function>
        <start_addr>58</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_17">
        <function>3</function>
        <start_addr>16</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_19">
        <function>3</function>
        <start_addr>18</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_84">
        <function>1</function>
        <start_addr>83</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_72">
        <function>1</function>
        <start_addr>71</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_201">
        <function>1</function>
        <start_addr>200</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_56">
        <function>1</function>
        <start_addr>55</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_70">
        <function>1</function>
        <start_addr>69</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_29">
        <function>3</function>
        <start_addr>28</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_40">
        <function>3</function>
        <start_addr>39</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_6">
        <function>1</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_46">
        <function>3</function>
        <start_addr>45</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1">
        <function>1</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_200">
        <function>3</function>
        <start_addr>199</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_48">
        <function>3</function>
        <start_addr>47</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_11">
        <function>1</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_200">
        <function>3</function>
        <start_addr>199</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_73">
        <function>1</function>
        <start_addr>72</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_81">
        <function>1</function>
        <start_addr>80</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_203">
        <function>1</function>
        <start_addr>202</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_42">
        <function>1</function>
        <start_addr>41</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_47">
        <function>3</function>
        <start_addr>46</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_7">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_43">
        <function>1</function>
        <start_addr>42</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_104">
        <function>1</function>
        <start_addr>103</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_61">
        <function>3</function>
        <start_addr>60</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_212">
        <function>1</function>
        <start_addr>211</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_207">
        <function>1</function>
        <start_addr>206</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_53">
        <function>3</function>
        <start_addr>52</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_18">
        <function>3</function>
        <start_addr>17</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_62">
        <function>3</function>
        <start_addr>61</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_98">
        <function>1</function>
        <start_addr>97</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_4">
        <function>1</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_55">
        <function>1</function>
        <start_addr>54</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_24">
        <function>1</function>
        <start_addr>23</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_111">
        <function>3</function>
        <start_addr>110</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_113">
        <function>1</function>
        <start_addr>112</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_42">
        <function>3</function>
        <start_addr>41</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_9">
        <function>1</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_29">
        <function>1</function>
        <start_addr>28</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_1">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_202">
        <function>1</function>
        <start_addr>201</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
