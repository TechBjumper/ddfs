<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="Advantech_ADAM6060" ddfname="Advantech ADAM6060" ddfversion="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="Advantech_ADAM6060">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">Advantech</setProductData>
    <setProductData ruleid="modeldata" field="model">ADAM 6060</setProductData>
    <setProductData ruleid="typedata" field="type">Generic Device</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />
      - Slave
      <commSetting field="slaveaddress" />
    </setDefaultLabel>
    <stateSensor ruleid="coil1:stage1">
      <type>state</type>
      <sensorId>_COIL1:STAGE1</sensorId>
      <value>
        <mapValue mapid="goodbad_vm">
          <getOid>Function_1_Reg_1</getOid>
        </mapValue>
      </value>
      <label>Coil1:stage1</label>
      <enum>goodbad_em</enum>
      <sensorSet>Stage</sensorSet>
    </stateSensor>
    <stateSensor ruleid="coil2:stage2">
      <type>state</type>
      <sensorId>_COIL2:STAGE2</sensorId>
      <value>
        <mapValue mapid="goodbad_vm">
          <getOid>Function_1_Reg_2</getOid>
        </mapValue>
      </value>
      <label>Coil2:stage2</label>
      <enum>goodbad_em</enum>
      <sensorSet>Stage</sensorSet>
    </stateSensor>
    <stateSensor ruleid="coil3:fire">
      <type>state</type>
      <sensorId>_COIL3:FIRE</sensorId>
      <value>
        <mapValue mapid="goodbad_vm">
          <getOid>Function_1_Reg_3</getOid>
        </mapValue>
      </value>
      <label>Coil3:fire</label>
      <enum>goodbad_em</enum>
      <sensorSet>Fire</sensorSet>
    </stateSensor>
    <stateSensor ruleid="coil4:stage1">
      <type>state</type>
      <sensorId>_COIL4:STAGE1</sensorId>
      <value>
        <mapValue mapid="goodbad_vm">
          <getOid>Function_1_Reg_4</getOid>
        </mapValue>
      </value>
      <label>Coil4:stage1</label>
      <enum>goodbad_em</enum>
      <sensorSet>Stage</sensorSet>
    </stateSensor>
    <stateSensor ruleid="coil5:stage2">
      <type>state</type>
      <sensorId>_COIL5:STAGE2</sensorId>
      <value>
        <mapValue mapid="goodbad_vm">
          <getOid>Function_1_Reg_5</getOid>
        </mapValue>
      </value>
      <label>Coil5:stage2</label>
      <enum>goodbad_em</enum>
      <sensorSet>Stage</sensorSet>
    </stateSensor>
    <stateSensor ruleid="coil6:fire">
      <type>state</type>
      <sensorId>_COIL6:FIRE</sensorId>
      <value>
        <mapValue mapid="goodbad_vm">
          <getOid>Function_1_Reg_6</getOid>
        </mapValue>
      </value>
      <label>Coil6:fire</label>
      <enum>goodbad_em</enum>
      <sensorSet>Fire</sensorSet>
    </stateSensor>
	
	<valueMap ruleid="goodbad_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="goodbad_em">
<label>Good</label>
<label>Bad</label>
</enumMap>


  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="Function_1_Reg_2">
        <function>1</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_5">
        <function>1</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_4">
        <function>1</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_3">
        <function>1</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_6">
        <function>1</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1">
        <function>1</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
