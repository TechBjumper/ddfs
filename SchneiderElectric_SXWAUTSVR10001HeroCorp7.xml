<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="SchneiderElectric_SXWAUTSVR10001HeroCorp7" ddfname="SchneiderElectric SXWAUTSVR10001HeroCorp7" ddfversion="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="SchneiderElectric_SXWAUTSVR10001HeroCorp7">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">Schneider Electric</setProductData>
    <setProductData ruleid="modeldata" field="model">SXWAUTSVR10001HeroCorp 7</setProductData>
    <setProductData ruleid="typedata" field="type">Workstation/Server</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />
      - Slave
      <commSetting field="slaveaddress" />
    </setDefaultLabel>
    <numSensor ruleid="ups2_output_percent_load_l1">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_UPS2_OUTPUT_PERCENT_LOAD_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_330</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output percent load l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_percent_load_l2">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_UPS2_OUTPUT_PERCENT_LOAD_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_331</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output percent load l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_percent_load_l3">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_UPS2_OUTPUT_PERCENT_LOAD_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_332</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output percent load l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_battery_current">
      <type>amperage</type>
      <units />
      <sensorId>_UPS2_BATTERY_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_308</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_battery current</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_input_current_l1">
      <type>amperage</type>
      <units />
      <sensorId>_UPS2_INPUT_CURRENT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_318</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_input current l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_input_current_l2">
      <type>amperage</type>
      <units />
      <sensorId>_UPS2_INPUT_CURRENT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_319</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_input current l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_input_current_l3">
      <type>amperage</type>
      <units />
      <sensorId>_UPS2_INPUT_CURRENT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_320</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_input current l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_current_l1">
      <type>amperage</type>
      <units />
      <sensorId>_UPS2_OUTPUT_CURRENT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_327</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output current l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_current_l2">
      <type>amperage</type>
      <units />
      <sensorId>_UPS2_OUTPUT_CURRENT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_328</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output current l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_current_l3">
      <type>amperage</type>
      <units />
      <sensorId>_UPS2_OUTPUT_CURRENT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_329</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output current l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_input_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_UPS2_INPUT_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_311</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_input frequency</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_UPS2_OUTPUT_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_315</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output frequency</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_input_real_power_l1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS2_INPUT_REAL_POWER_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_321</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_input real power l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_input_real_power_l2">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS2_INPUT_REAL_POWER_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_322</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_input real power l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_input_real_power_l3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS2_INPUT_REAL_POWER_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_323</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_input real power l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_real_power_l1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS2_OUTPUT_REAL_POWER_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_333</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output real power l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_real_power_l2">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS2_OUTPUT_REAL_POWER_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_334</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output real power l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_real_power_l3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_UPS2_OUTPUT_REAL_POWER_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_335</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output real power l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_estimated_charge_remaining">
      <type>timeinmin</type>
      <units />
      <sensorId>_UPS2_ESTIMATED_CHARGE_REMAINING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_310</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_estimated charge remaining</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_battery_volt">
      <type>voltage</type>
      <units />
      <sensorId>_UPS2_BATTERY_VOLT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_309</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_battery volt</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_input_volt_l1">
      <type>voltage</type>
      <units />
      <sensorId>_UPS2_INPUT_VOLT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_324</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_input volt l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_input_volt_l2">
      <type>voltage</type>
      <units />
      <sensorId>_UPS2_INPUT_VOLT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_325</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_input volt l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_input_volt_l3">
      <type>voltage</type>
      <units />
      <sensorId>_UPS2_INPUT_VOLT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_326</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_input volt l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_volt_l1">
      <type>voltage</type>
      <units />
      <sensorId>_UPS2_OUTPUT_VOLT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_336</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output volt l1</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_volt_l2">
      <type>voltage</type>
      <units />
      <sensorId>_UPS2_OUTPUT_VOLT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_337</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output volt l2</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <numSensor ruleid="ups2_output_volt_l3">
      <type>voltage</type>
      <units />
      <sensorId>_UPS2_OUTPUT_VOLT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_338</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ups2_output volt l3</label>
      <sensorSet>Generic</sensorSet>
    </numSensor>
    <stateSensor ruleid="ups2_status">
      <type>state</type>
      <sensorId>_UPS2_STATUS</sensorId>
      <value>
        <mapValue mapid="off_on_vm">
          <getOid>Function_3_Reg_408</getOid>
        </mapValue>
      </value>
      <label>Ups2 status</label>
      <enum>off_on_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups2_invertor_on">
      <type>state</type>
      <sensorId>_UPS2_INVERTOR_ON</sensorId>
      <value>
        <mapValue mapid="off_on_vm">
          <getOid>Function_3_Reg_312</getOid>
        </mapValue>
      </value>
      <label>Ups2_invertor on</label>
      <enum>off_on_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups2_load_on_battery">
      <type>state</type>
      <sensorId>_UPS2_LOAD_ON_BATTERY</sensorId>
      <value>
        <mapValue mapid="off_on_vm">
          <getOid>Function_3_Reg_313</getOid>
        </mapValue>
      </value>
      <label>Ups2_load on battery</label>
      <enum>off_on_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups2_low_battery">
      <type>state</type>
      <sensorId>_UPS2_LOW_BATTERY</sensorId>
      <value>
        <mapValue mapid="off_on_vm">
          <getOid>Function_3_Reg_314</getOid>
        </mapValue>
      </value>
      <label>Ups2_low battery</label>
      <enum>off_on_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups2_output_overload">
      <type>state</type>
      <sensorId>_UPS2_OUTPUT_OVERLOAD</sensorId>
      <value>
        <mapValue mapid="off_on_vm">
          <getOid>Function_3_Reg_316</getOid>
        </mapValue>
      </value>
      <label>Ups2_output overload</label>
      <enum>off_on_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
	
		<valueMap ruleid="off_on_vm">
			<valueIn>0</valueIn>
			<valueOut>0</valueOut>
			<valueIn>1</valueIn>
			<valueOut>1</valueOut>
			<valueIn>*</valueIn>
			<valueOut>0</valueOut>
		</valueMap>

		<enumMap ruleid="off_on_em">
			<label>Off</label>
			<label>On</label>
		</enumMap>
	
  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="Function_3_Reg_334">
        <function>3</function>
        <start_addr>333</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_315">
        <function>3</function>
        <start_addr>314</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_331">
        <function>3</function>
        <start_addr>330</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_328">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_326">
        <function>3</function>
        <start_addr>325</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_309">
        <function>3</function>
        <start_addr>308</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_312">
        <function>3</function>
        <start_addr>311</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_337">
        <function>3</function>
        <start_addr>336</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_323">
        <function>3</function>
        <start_addr>322</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_329">
        <function>3</function>
        <start_addr>328</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_325">
        <function>3</function>
        <start_addr>324</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_336">
        <function>3</function>
        <start_addr>335</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_314">
        <function>3</function>
        <start_addr>313</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_318">
        <function>3</function>
        <start_addr>317</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_310">
        <function>3</function>
        <start_addr>309</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_322">
        <function>3</function>
        <start_addr>321</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_333">
        <function>3</function>
        <start_addr>332</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_327">
        <function>3</function>
        <start_addr>326</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_308">
        <function>3</function>
        <start_addr>307</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_319">
        <function>3</function>
        <start_addr>318</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_338">
        <function>3</function>
        <start_addr>337</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_320">
        <function>3</function>
        <start_addr>319</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_311">
        <function>3</function>
        <start_addr>310</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_335">
        <function>3</function>
        <start_addr>334</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_332">
        <function>3</function>
        <start_addr>331</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_330">
        <function>3</function>
        <start_addr>329</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_321">
        <function>3</function>
        <start_addr>320</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_324">
        <function>3</function>
        <start_addr>323</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_408">
        <function>3</function>
        <start_addr>407</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_313">
        <function>3</function>
        <start_addr>312</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_316">
        <function>3</function>
        <start_addr>315</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
