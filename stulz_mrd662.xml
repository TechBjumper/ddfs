<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="stulz_mrd662"
	ddfname="Stulz MRD662"
	ddfversion="1"
	canremove="yes">
		 
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="stulz_mrd662">

		<setProductData ruleid="vendordata" field="vendor">Stulz</setProductData>
		<setProductData ruleid="modeldata" field="model">MRD662</setProductData>
		<setProductData ruleid="typedata" field="type">Generic Device</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		
		<!-- Not Needed
		<numSensor ruleid="WATER_TEMPERATURE_INPUT_SENSOR">
            <type>num</type>
            <sensorId>water_temperature_input</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>watertemperatureinput</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Water Temperature Input</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="RETURN_AIR_TEMPERATURE_INPUT_SENSOR">
            <type>temp</type>
            <sensorId>return_air_temperature_input</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>returnairtemperatureinput</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Return Air Temperature Input</label>
            <sensorSet>Input</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="SUPPLY_AIR_TEMPERATURE_INPUT_SENSOR">
            <type>num</type>
            <sensorId>supply_air_temperature_input</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>supplyairtemperatureinput</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Supply Air Temperature Input</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="RETURN_AIR_HUMIDITY_INPUT_SENSOR">
            <type>humidity</type>
            <sensorId>return_air_humidity_input</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>returnairhumidityinput</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Return Air Humidity Input</label>
            <sensorSet>Input</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="SUPPLY_AIR_HUMIDITY_INPUT_SENSOR">
            <type>num</type>
            <sensorId>supply_air_humidity_input</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>supplyairhumidityinput</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Supply Air Humidity Input</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTSIDE_AIR_TEMPERATURE_INPUT_SENSOR">
            <type>num</type>
            <sensorId>outside_air_temperature_input</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outsideairtemperatureinput</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Outside Air Temperature Input</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTSIDE_AIR_HUMIDITY_INPUT_SENSOR">
            <type>num</type>
            <sensorId>outside_air_humidity_input</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outsideairhumidityinput</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Outside Air Humidity Input</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="TEMPERATURE_SETPOINT_SHIFT_SENSOR">
            <type>num</type>
            <sensorId>temperature_setpoint_shift</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>temperaturesetpointshift</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Temperature Setpoint Shift</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="HUMIDITY_SETPOINT_SHIFT_SENSOR">
            <type>num</type>
            <sensorId>humidity_setpoint_shift</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humiditysetpointshift</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidity Setpoint Shift</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="ANALOGUE_OUT_GECW_VALVE_(MODULE_1)_SENSOR">
            <type>num</type>
            <sensorId>analogue_out_gecw_valve_(module_1)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>analogueoutgecwvalvemodule1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Analogue Out GECW Valve (Module 1)</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="ANALOGUE_OUT_PWW_HEATING_(MODULE_1)_SENSOR">
            <type>num</type>
            <sensorId>analogue_out_pww_heating_(module_1)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>analogueoutpwwheatingmodule1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Analogue Out PWW Heating (Module 1)</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="ANALOGUE_OUT_HUMIDIFIER_(MODULE_1)_SENSOR">
            <type>num</type>
            <sensorId>analogue_out_humidifier_(module_1)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>analogueouthumidifiermodule1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Analogue Out Humidifier (Module 1)</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="ANALOGUE_OUT_SUCTION_VALVE_MODULE_1_SENSOR">
            <type>num</type>
            <sensorId>analogue_out_suction_valve_module_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>analogueoutsuctionvalvemodule1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Analogue Out Suction Valve Module 1</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="ANALOGUE_OUT_SUCTION_VALVE_MODULE_2_SENSOR">
            <type>num</type>
            <sensorId>analogue_out_suction_valve_module_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>analogueoutsuctionvalvemodule2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Analogue Out Suction Valve Module 2</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="ANALOGUE_OUT_SUCTION_VALVE_MODULE_3_SENSOR">
            <type>num</type>
            <sensorId>analogue_out_suction_valve_module_3</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>analogueoutsuctionvalvemodule3</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Analogue Out Suction Valve Module 3</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="ANALOGUE_OUT_SUCTION_VALVE_MODULE_4_SENSOR">
            <type>num</type>
            <sensorId>analogue_out_suction_valve_module_4</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>analogueoutsuctionvalvemodule4</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Analogue Out Suction Valve Module 4</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="SETPOINT_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>setpoint_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>setpointtemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Setpoint Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SETPOINT_HUMIDITY_SENSOR">
            <type>humidity</type>
            <sensorId>setpoint_humidity</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>setpointhumidity</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Setpoint Humidity</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="YEAR_SENSOR">
            <type>num</type>
            <sensorId>year</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>year</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Year</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="MONTH_SENSOR">
            <type>num</type>
            <sensorId>month</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>month</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Month</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DAY_SENSOR">
            <type>num</type>
            <sensorId>day</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>day</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Day</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HOUR_SENSOR">
            <type>num</type>
            <sensorId>hour</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>hour</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Hour</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="MINUTE_SENSOR">
            <type>num</type>
            <sensorId>minute</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>minute</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Minute</label>
            <sensorSet>General</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="RETURN_AIR_TEMPERATURE_TOO_HIGH_ALARM_SENSOR">
            <type>num</type>
            <sensorId>return_air_temperature_too_high_alarm</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>returnairtemperaturetoohighalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Return Air Temperature Too High Alarm</label>
            <sensorSet>Alarms</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="SUPPLY_AIR_TEMPERATURE_TOO_HIGH_ALARM_SENSOR">
            <type>num</type>
            <sensorId>supply_air_temperature_too_high_alarm</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>supplyairtemperaturetoohighalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Supply Air Temperature Too High Alarm</label>
            <sensorSet>Alarms</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="RETURN_AIR_TEMPERATURE_TOO_LOW_ALARM_SENSOR">
            <type>num</type>
            <sensorId>return_air_temperature_too_low_alarm</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>returnairtemperaturetoolowalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Return Air Temperature Too Low Alarm</label>
            <sensorSet>Alarms</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="SUPPLY_AIR_TEMPERATURE_TOO_LOW_ALARM_SENSOR">
            <type>num</type>
            <sensorId>supply_air_temperature_too_low_alarm</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>supplyairtemperaturetoolowalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Supply Air Temperature Too Low Alarm</label>
            <sensorSet>Alarms</sensorSet>
        </numSensor>
        <numSensor ruleid="WATER_TEMPERATURE_TOO_HIGH_ALARM_SENSOR">
            <type>num</type>
            <sensorId>water_temperature_too_high_alarm</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>watertemperaturetoohighalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Water Temperature Too High Alarm</label>
            <sensorSet>Alarms</sensorSet>
        </numSensor>
        <numSensor ruleid="WATER_TEMPERATURE_TOO_LOW_ALARM_SENSOR">
            <type>num</type>
            <sensorId>water_temperature_too_low_alarm</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>watertemperaturetoolowalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Water Temperature Too Low Alarm</label>
            <sensorSet>Alarms</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="RETURN_AIR_HUMIDITY_TOO_HIGH_ALARM_SENSOR">
            <type>num</type>
            <sensorId>return_air_humidity_too_high_alarm</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>returnairhumiditytoohighalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Return Air Humidity Too High Alarm</label>
            <sensorSet>Alarms</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="SUPPLY_AIR_HUMIDITY_TOO_HIGH_ALARM_SENSOR">
            <type>num</type>
            <sensorId>supply_air_humidity_too_high_alarm</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>supplyairhumiditytoohighalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Supply Air Humidity Too High Alarm</label>
            <sensorSet>Alarms</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="RETURN_AIR_HUMIDITY_TOO_LOW_ALARM_SENSOR">
            <type>num</type>
            <sensorId>return_air_humidity_too_low_alarm</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>returnairhumiditytoolowalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Return Air Humidity Too Low Alarm</label>
            <sensorSet>Alarms</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="SUPPLY_AIR_HUMIDITY_TOO_LOW_ALARM_SENSOR">
            <type>num</type>
            <sensorId>supply_air_humidity_too_low_alarm</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>supplyairhumiditytoolowalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Supply Air Humidity Too Low Alarm</label>
            <sensorSet>Alarms</sensorSet>
        </numSensor>
        <numSensor ruleid="COMPRESSOR_START_(SETPOINT_AND_VAL)_SENSOR">
            <type>num</type>
            <sensorId>compressor_start_(setpoint_and_val)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>compressorstartsetpointandval</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Compressor Start (Setpoint and Val)</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="COMPRESSOR_HYSTERESIS_SENSOR">
            <type>num</type>
            <sensorId>compressor_hysteresis</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>compressorhysteresis</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Compressor Hysteresis</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SUCTION_VALVE_START_SENSOR">
            <type>num</type>
            <sensorId>suction_valve_start</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>suctionvalvestart</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Suction Valve Start</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SUCTION_VALVE_PROPORTIONAL_BAND_SENSOR">
            <type>num</type>
            <sensorId>suction_valve_proportional_band</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>suctionvalveproportionalband</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Suction Valve Proportional Band</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DRYCOOLER_START_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>drycooler_start_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>drycoolerstarttemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Drycooler Start Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DRYCOOLER_ENABLE_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>drycooler_enable_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>drycoolerenabletemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Drycooler Enable Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="GLYCOL_PUMP_START_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>glycol_pump_start_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>glycolpumpstarttemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Glycol Pump Start Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="GECW_VALVE_OFF_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>gecw_valve_off_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>gecwvalveofftemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>GECW Valve Off Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="GECW_VALVE_START_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>gecw_valve_start_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>gecwvalvestarttemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>GECW Valve Start Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="GECW_VALVE_PROPORTIONAL_BAND_SENSOR">
            <type>num</type>
            <sensorId>gecw_valve_proportional_band</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>gecwvalveproportionalband</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>GECW Valve Proportional Band</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REHEAT_1_START_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>reheat_1_start_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>reheat1starttemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Reheat 1 Start Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REHEAT_1_HYSTERESIS_SENSOR">
            <type>num</type>
            <sensorId>reheat_1_hysteresis</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>reheat1hysteresis</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Reheat 1 Hysteresis</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REHEAT_2_START_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>reheat_2_start_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>reheat2starttemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Reheat 2 Start Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REHEAT_2_HYSTERESIS_SENSOR">
            <type>num</type>
            <sensorId>reheat_2_hysteresis</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>reheat2hysteresis</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Reheat 2 Hysteresis</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REHEAT_3_START_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>reheat_3_start_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>reheat3starttemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Reheat 3 Start Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REHEAT_3_HYSTERESIS_SENSOR">
            <type>num</type>
            <sensorId>reheat_3_hysteresis</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>reheat3hysteresis</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Reheat 3 Hysteresis</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="PWW_VALVE_START_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>pww_valve_start_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>pwwvalvestarttemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>PWW Valve Start Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="PWW_VALVE_PROPORTIONAL_BAND_SENSOR">
            <type>num</type>
            <sensorId>pww_valve_proportional_band</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>pwwvalveproportionalband</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>PWW Valve Proportional Band</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DEHUMIDIFICATION_START_SENSOR">
            <type>num</type>
            <sensorId>dehumidification_start</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>dehumidificationstart</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Dehumidification Start</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DEHUMIDIFICATION_HYSTERESIS_SENSOR">
            <type>num</type>
            <sensorId>dehumidification_hysteresis</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>dehumidificationhysteresis</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Dehumidification Hysteresis</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HUMIDIFICATION_START_SENSOR">
            <type>num</type>
            <sensorId>humidification_start</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidificationstart</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidification Start</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HUMIDIFICATION_HYSTERESIS_SENSOR">
            <type>num</type>
            <sensorId>humidification_hysteresis</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidificationhysteresis</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidification Hysteresis</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HUMIDIFICATION_START_(ANALOGUE)_SENSOR">
            <type>num</type>
            <sensorId>humidification_start_(analogue)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidificationstartanalogue</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidification Start (Analogue)</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HUMIDIFICATION_PROPORTIONAL_BAND_(ANALOGUE)_SENSOR">
            <type>num</type>
            <sensorId>humidification_proportional_band_(analogue)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidificationproportionalbandanalogue</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidification Proportional Band (Analogue)</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="COMPRESSOR_START_(SETPOINT_AND_VAL)_SENSOR">
            <type>num</type>
            <sensorId>compressor_start_(setpoint_and_val)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>compressorstartsetpointandval</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Compressor Start (Setpoint and Val)</label>
            <sensorSet>General</sensorSet>
        </numSensor>
		-->


<!-- BITMAP SENSORS-->

		<enumMap ruleid="online_offline_em">
			<label>Online</label>
			<label>Offline</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="run_stop_em">
			<label>Run</label>
			<label>Stop</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="on_off_em">
			<label>On</label>
			<label>Off</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="normal_alarm_em">
			<label>Normal</label>
			<label>Alarm</label>
			<label>Unknown</label>
		</enumMap>

		<stateSensor ruleid="REGISTER_0_BIT_0">
            <type>state</type>
            <sensorId>register_0_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>communication status</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="REGISTER_0_BIT_1">
            <type>state</type>
            <sensorId>register_0_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>0 = PC-STOP (monitoring)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_2">
            <type>state</type>
            <sensorId>register_0_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>0 = REMOTE STOP (contact)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="REGISTER_0_BIT_3">
            <type>state</type>
            <sensorId>register_0_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>0 = LOCAL STOP (key)</label>
			<enum>run_stop_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="REGISTER_0_BIT_4">
            <type>state</type>
            <sensorId>register_0_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>0 = TIMER-STOP (weekly oper.)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_5">
            <type>state</type>
            <sensorId>register_0_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 1 compressor 2
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_6">
            <type>state</type>
            <sensorId>register_0_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 2 compressor 2
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_7">
            <type>state</type>
            <sensorId>register_0_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 3 compressor 2
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_8">
            <type>state</type>
            <sensorId>register_0_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 4 compressor 2
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="REGISTER_0_BIT_9">
            <type>state</type>
            <sensorId>register_0_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_reheat 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_10">
            <type>state</type>
            <sensorId>register_0_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_compressor 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_11">
            <type>state</type>
            <sensorId>register_0_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_humidification 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_12">
            <type>state</type>
            <sensorId>register_0_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_dehumidification 1 (auch CW)</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_13">
            <type>state</type>
            <sensorId>register_0_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_fan 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!--
		<stateSensor ruleid="REGISTER_0_BIT_14">
            <type>state</type>
            <sensorId>register_0_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>drycooler
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_15">
            <type>state</type>
            <sensorId>register_0_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #1; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_0">
            <type>state</type>
            <sensorId>register_1_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>hot gas reheat / reheat 3 / PWW
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_1_BIT_1">
            <type>state</type>
            <sensorId>register_1_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_reheat 2</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!--
		<stateSensor ruleid="register_1_BIT_2">
            <type>state</type>
            <sensorId>register_1_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_3">
            <type>state</type>
            <sensorId>register_1_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>louver (0=closed
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_4">
            <type>state</type>
            <sensorId>register_1_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #2; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_5">
            <type>state</type>
            <sensorId>register_1_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #3; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_6">
            <type>state</type>
            <sensorId>register_1_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #34 (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_7">
            <type>state</type>
            <sensorId>register_1_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #5; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_8">
            <type>state</type>
            <sensorId>register_1_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 1 / 2 select
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_1_BIT_9">
            <type>state</type>
            <sensorId>register_1_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_reheat 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_10">
            <type>state</type>
            <sensorId>register_1_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_compressor 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_11">
            <type>state</type>
            <sensorId>register_1_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_humidification 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_12">
            <type>state</type>
            <sensorId>register_1_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_dehumidification 1 (auch CW)</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_13">
            <type>state</type>
            <sensorId>register_1_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_fan 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!--
		<stateSensor ruleid="register_1_BIT_14">
            <type>state</type>
            <sensorId>register_1_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>drycooler
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_15">
            <type>state</type>
            <sensorId>register_1_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #1; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_0">
            <type>state</type>
            <sensorId>register_2_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>hot gas reheat / reheat 3 / PWW
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_2_BIT_1">
            <type>state</type>
            <sensorId>register_2_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_reheat 2</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_2_BIT_2">
            <type>state</type>
            <sensorId>register_2_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_3">
            <type>state</type>
            <sensorId>register_2_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>louver (0=closed
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_4">
            <type>state</type>
            <sensorId>register_2_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #2; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_5">
            <type>state</type>
            <sensorId>register_2_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #3; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_6">
            <type>state</type>
            <sensorId>register_2_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #4; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_7">
            <type>state</type>
            <sensorId>register_2_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #5; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_8">
            <type>state</type>
            <sensorId>register_2_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 1 / 2 select
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_2_BIT_9">
            <type>state</type>
            <sensorId>register_2_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_reheat 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_10">
            <type>state</type>
            <sensorId>register_2_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_compressor 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_11">
            <type>state</type>
            <sensorId>register_2_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_humidification 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_12">
            <type>state</type>
            <sensorId>register_2_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_dehumidification 1 (auch CW)</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_13">
            <type>state</type>
            <sensorId>register_2_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_fan 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!--
		<stateSensor ruleid="register_2_BIT_14">
            <type>state</type>
            <sensorId>register_2_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>drycooler
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_15">
            <type>state</type>
            <sensorId>register_2_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #1; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_0">
            <type>state</type>
            <sensorId>register_3_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>hot gas reheat / reheat 3 / PWW
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_3_BIT_1">
            <type>state</type>
            <sensorId>register_3_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_reheat 2</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="register_3_BIT_2">
            <type>state</type>
            <sensorId>register_3_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_3">
            <type>state</type>
            <sensorId>register_3_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>louver (0=closed
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_4">
            <type>state</type>
            <sensorId>register_3_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #2; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_5">
            <type>state</type>
            <sensorId>register_3_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #3; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_6">
            <type>state</type>
            <sensorId>register_3_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #4; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_7">
            <type>state</type>
            <sensorId>register_3_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #5; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_8">
            <type>state</type>
            <sensorId>register_3_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 1 / 2 select
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_3_BIT_9">
            <type>state</type>
            <sensorId>register_3_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_reheat 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_10">
            <type>state</type>
            <sensorId>register_3_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_compressor 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_11">
            <type>state</type>
            <sensorId>register_3_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_humidification 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_12">
            <type>state</type>
            <sensorId>register_3_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_dehumidification 1 (auch CW)</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_13">
            <type>state</type>
            <sensorId>register_3_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_fan 1</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="register_3_BIT_14">
            <type>state</type>
            <sensorId>register_3_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>drycooler
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_15">
            <type>state</type>
            <sensorId>register_3_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #1; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_0">
            <type>state</type>
            <sensorId>register_4_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>hot gas reheat / reheat 3 / PWW
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_4_BIT_1">
            <type>state</type>
            <sensorId>register_4_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_reheat 2</label>
			<enum>on_off_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!--
		<stateSensor ruleid="register_4_BIT_2">
            <type>state</type>
            <sensorId>register_4_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_3">
            <type>state</type>
            <sensorId>register_4_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>louver (0=closed
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_4">
            <type>state</type>
            <sensorId>register_4_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #2; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_5">
            <type>state</type>
            <sensorId>register_4_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #3; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_6">
            <type>state</type>
            <sensorId>register_4_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #4; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_7">
            <type>state</type>
            <sensorId>register_4_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>alarm relays #5; (1 = no alarm)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_8">
            <type>state</type>
            <sensorId>register_4_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 1 / 2 select
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_9">
            <type>state</type>
            <sensorId>register_4_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 1 compressor 2 low pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_10">
            <type>state</type>
            <sensorId>register_4_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 1 compressor 2 high pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_11">
            <type>state</type>
            <sensorId>register_4_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 2 compressor 2 low pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_12">
            <type>state</type>
            <sensorId>register_4_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 2 compressor 2 high pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_13">
            <type>state</type>
            <sensorId>register_4_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 3 compressor 2 low pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_14">
            <type>state</type>
            <sensorId>register_4_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 3 compressor 2 high pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_15">
            <type>state</type>
            <sensorId>register_4_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 4 compressor 2 low pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_0">
            <type>state</type>
            <sensorId>register_5_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>modul 4 compressor 2 high pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_5_BIT_1">
            <type>state</type>
            <sensorId>register_5_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_compressor low pressure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_2">
            <type>state</type>
            <sensorId>register_5_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_compressor high pressure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_3">
            <type>state</type>
            <sensorId>register_5_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_reheat 1 failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_4">
            <type>state</type>
            <sensorId>register_5_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_humidification failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_5">
            <type>state</type>
            <sensorId>register_5_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_air flow failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_6">
            <type>state</type>
            <sensorId>register_5_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_filter clogged</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_5_BIT_7">
            <type>state</type>
            <sensorId>register_5_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #1
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_5_BIT_8">
            <type>state</type>
            <sensorId>register_5_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_reheat 2 failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="register_5_BIT_9">
            <type>state</type>
            <sensorId>register_5_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>conductivity too high ( LT 5uS)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_10">
            <type>state</type>
            <sensorId>register_5_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>ultrasonic failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_11">
            <type>state</type>
            <sensorId>register_5_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 1 failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_12">
            <type>state</type>
            <sensorId>register_5_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 2 failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_13">
            <type>state</type>
            <sensorId>register_5_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>drycooler failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_5_BIT_14">
            <type>state</type>
            <sensorId>register_5_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M1_water detector</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_5_BIT_15">
            <type>state</type>
            <sensorId>register_5_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #2
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_6_BIT_0">
            <type>state</type>
            <sensorId>register_6_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #3
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_6_BIT_1">
            <type>state</type>
            <sensorId>register_6_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_compressor low pressure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_6_BIT_2">
            <type>state</type>
            <sensorId>register_6_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_compressor high pressure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_6_BIT_3">
            <type>state</type>
            <sensorId>register_6_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_reheat 1 failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_6_BIT_4">
            <type>state</type>
            <sensorId>register_6_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_humidification failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_6_BIT_5">
            <type>state</type>
            <sensorId>register_6_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_air flow failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_6_BIT_6">
            <type>state</type>
            <sensorId>register_6_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_filter clogged</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_6_BIT_7">
            <type>state</type>
            <sensorId>register_6_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #1</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_6_BIT_8">
            <type>state</type>
            <sensorId>register_6_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_reheat 2 failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_6_BIT_9">
            <type>state</type>
            <sensorId>register_6_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>conductivity too high (LT 5uS)</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_6_BIT_10">
            <type>state</type>
            <sensorId>register_6_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>ultrasonic failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_6_BIT_11">
            <type>state</type>
            <sensorId>register_6_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 1 failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_6_BIT_12">
            <type>state</type>
            <sensorId>register_6_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 2 failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_6_BIT_13">
            <type>state</type>
            <sensorId>register_6_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>drycooler failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_6_BIT_14">
            <type>state</type>
            <sensorId>register_6_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M2_water detector</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="register_6_BIT_15">
            <type>state</type>
            <sensorId>register_6_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister6</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #2
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_7_BIT_0">
            <type>state</type>
            <sensorId>register_7_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #3
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_7_BIT_1">
            <type>state</type>
            <sensorId>register_7_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_compressor low pressure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_7_BIT_2">
            <type>state</type>
            <sensorId>register_7_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_compressor high pressure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_7_BIT_3">
            <type>state</type>
            <sensorId>register_7_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_reheat 1 failure</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_7_BIT_4">
            <type>state</type>
            <sensorId>register_7_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_humidification failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_7_BIT_5">
            <type>state</type>
            <sensorId>register_7_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_air flow failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_7_BIT_6">
            <type>state</type>
            <sensorId>register_7_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_filter clogged</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_7_BIT_7">
            <type>state</type>
            <sensorId>register_7_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #1
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_7_BIT_8">
            <type>state</type>
            <sensorId>register_7_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_reheat 2 failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_7_BIT_9">
            <type>state</type>
            <sensorId>register_7_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>conductivity too high (LT 5uS)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_7_BIT_10">
            <type>state</type>
            <sensorId>register_7_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>ultrasonic failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_7_BIT_11">
            <type>state</type>
            <sensorId>register_7_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 1 failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_7_BIT_12">
            <type>state</type>
            <sensorId>register_7_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 2 failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_7_BIT_13">
            <type>state</type>
            <sensorId>register_7_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>drycooler failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_7_BIT_14">
            <type>state</type>
            <sensorId>register_7_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M3_water detector</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_7_BIT_15">
            <type>state</type>
            <sensorId>register_7_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister7</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #2
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_8_BIT_0">
            <type>state</type>
            <sensorId>register_8_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #3
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_8_BIT_1">
            <type>state</type>
            <sensorId>register_8_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_compressor low pressure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_8_BIT_2">
            <type>state</type>
            <sensorId>register_8_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_compressor high pressure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_8_BIT_3">
            <type>state</type>
            <sensorId>register_8_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_reheat 1 failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_8_BIT_4">
            <type>state</type>
            <sensorId>register_8_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_humidification failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_8_BIT_5">
            <type>state</type>
            <sensorId>register_8_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_air flow failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_8_BIT_6">
            <type>state</type>
            <sensorId>register_8_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_filter clogged</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_8_BIT_7">
            <type>state</type>
            <sensorId>register_8_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #1
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_8_BIT_8">
            <type>state</type>
            <sensorId>register_8_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_reheat 2 failure</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_8_BIT_9">
            <type>state</type>
            <sensorId>register_8_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>conductivity too high (LT 5uS)
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_8_BIT_10">
            <type>state</type>
            <sensorId>register_8_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>ultrasonic failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_8_BIT_11">
            <type>state</type>
            <sensorId>register_8_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 1 failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_8_BIT_12">
            <type>state</type>
            <sensorId>register_8_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>glycol pump 2 failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_8_BIT_13">
            <type>state</type>
            <sensorId>register_8_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>drycooler failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_8_BIT_14">
            <type>state</type>
            <sensorId>register_8_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>M4_water detector</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="register_8_BIT_15">
            <type>state</type>
            <sensorId>register_8_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister8</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #2
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_0">
            <type>state</type>
            <sensorId>register_9_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>aux. alarm #3
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_9_BIT_1">
            <type>state</type>
            <sensorId>register_9_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>return air temp. too high alarm</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_2">
            <type>state</type>
            <sensorId>register_9_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>return air humid. too high alarm</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_9_BIT_3">
            <type>state</type>
            <sensorId>register_9_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>supply air temp. too high alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_4">
            <type>state</type>
            <sensorId>register_9_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>supply air humid. too high alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_5">
            <type>state</type>
            <sensorId>register_9_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>water temp. too high alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->

		<stateSensor ruleid="register_9_BIT_6">
            <type>state</type>
            <sensorId>register_9_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>return air temp. too low alarm</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_7">
            <type>state</type>
            <sensorId>register_9_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>return air humid. too low alarm</label>
			<enum>normal_alarm_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="register_9_BIT_8">
            <type>state</type>
            <sensorId>register_9_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>supply air temp. too low alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_9">
            <type>state</type>
            <sensorId>register_9_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>supply air humid. too low alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_10">
            <type>state</type>
            <sensorId>register_9_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>water temp. too low alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_11">
            <type>state</type>
            <sensorId>register_9_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>supervisor failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_12">
            <type>state</type>
            <sensorId>register_9_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>freeze alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_13">
            <type>state</type>
            <sensorId>register_9_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>fire / smoke detector
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_14">
            <type>state</type>
            <sensorId>register_9_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>sensor failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_9_BIT_15">
            <type>state</type>
            <sensorId>register_9_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister9</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>controller failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_10_BIT_0">
            <type>state</type>
            <sensorId>register_10_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister10</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>IO-board transmission failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->



<!-- END OF BITMAP SENSORS -->



    </device>
    <protocol>
        <modbus>
            <value_ref_id valid="watertemperatureinput">
                <function>3</function>
                <start_addr>0</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="returnairtemperatureinput">
                <function>3</function>
                <start_addr>2</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="supplyairtemperatureinput">
                <function>3</function>
                <start_addr>4</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="returnairhumidityinput">
                <function>3</function>
                <start_addr>6</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="supplyairhumidityinput">
                <function>3</function>
                <start_addr>8</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="outsideairtemperatureinput">
                <function>3</function>
                <start_addr>10</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="outsideairhumidityinput">
                <function>3</function>
                <start_addr>12</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="temperaturesetpointshift">
                <function>3</function>
                <start_addr>14</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="humiditysetpointshift">
                <function>3</function>
                <start_addr>16</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="analogueoutgecwvalvemodule1">
                <function>3</function>
                <start_addr>18</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="analogueoutpwwheatingmodule1">
                <function>3</function>
                <start_addr>20</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="analogueouthumidifiermodule1">
                <function>3</function>
                <start_addr>22</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="analogueoutsuctionvalvemodule1">
                <function>3</function>
                <start_addr>24</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="analogueoutsuctionvalvemodule2">
                <function>3</function>
                <start_addr>26</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="analogueoutsuctionvalvemodule3">
                <function>3</function>
                <start_addr>28</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="analogueoutsuctionvalvemodule4">
                <function>3</function>
                <start_addr>30</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="setpointtemperature">
                <function>3</function>
                <start_addr>32</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="setpointhumidity">
                <function>3</function>
                <start_addr>34</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="year">
                <function>3</function>
                <start_addr>36</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="month">
                <function>3</function>
                <start_addr>38</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="day">
                <function>3</function>
                <start_addr>40</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="hour">
                <function>3</function>
                <start_addr>42</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="minute">
                <function>3</function>
                <start_addr>44</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="returnairtemperaturetoohighalarm">
                <function>3</function>
                <start_addr>46</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="supplyairtemperaturetoohighalarm">
                <function>3</function>
                <start_addr>48</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="returnairtemperaturetoolowalarm">
                <function>3</function>
                <start_addr>50</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="supplyairtemperaturetoolowalarm">
                <function>3</function>
                <start_addr>52</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="watertemperaturetoohighalarm">
                <function>3</function>
                <start_addr>54</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="watertemperaturetoolowalarm">
                <function>3</function>
                <start_addr>56</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="returnairhumiditytoohighalarm">
                <function>3</function>
                <start_addr>58</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="supplyairhumiditytoohighalarm">
                <function>3</function>
                <start_addr>60</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="returnairhumiditytoolowalarm">
                <function>3</function>
                <start_addr>62</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="supplyairhumiditytoolowalarm">
                <function>3</function>
                <start_addr>64</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="compressorstartsetpointandval">
                <function>3</function>
                <start_addr>66</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="compressorhysteresis">
                <function>3</function>
                <start_addr>68</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="suctionvalvestart">
                <function>3</function>
                <start_addr>70</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="suctionvalveproportionalband">
                <function>3</function>
                <start_addr>72</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="drycoolerstarttemperature">
                <function>3</function>
                <start_addr>74</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="drycoolerenabletemperature">
                <function>3</function>
                <start_addr>76</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="glycolpumpstarttemperature">
                <function>3</function>
                <start_addr>78</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="gecwvalveofftemperature">
                <function>3</function>
                <start_addr>80</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="gecwvalvestarttemperature">
                <function>3</function>
                <start_addr>82</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="gecwvalveproportionalband">
                <function>3</function>
                <start_addr>84</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="reheat1starttemperature">
                <function>3</function>
                <start_addr>86</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="reheat1hysteresis">
                <function>3</function>
                <start_addr>88</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="reheat2starttemperature">
                <function>3</function>
                <start_addr>90</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="reheat2hysteresis">
                <function>3</function>
                <start_addr>92</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="reheat3starttemperature">
                <function>3</function>
                <start_addr>94</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="reheat3hysteresis">
                <function>3</function>
                <start_addr>96</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="pwwvalvestarttemperature">
                <function>3</function>
                <start_addr>98</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="pwwvalveproportionalband">
                <function>3</function>
                <start_addr>10</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="dehumidificationstart">
                <function>3</function>
                <start_addr>102</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="dehumidificationhysteresis">
                <function>3</function>
                <start_addr>104</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="humidificationstart">
                <function>3</function>
                <start_addr>106</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="humidificationhysteresis">
                <function>3</function>
                <start_addr>108</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="humidificationstartanalogue">
                <function>3</function>
                <start_addr>110</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="humidificationproportionalbandanalogue">
                <function>3</function>
                <start_addr>112</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>

			<!-- STATUS REGISTERS -->

            <value_ref_id valid="statusregister0">
                <function>3</function>
                <start_addr>1000</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister1">
                <function>3</function>
                <start_addr>1001</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister2">
                <function>3</function>
                <start_addr>1002</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister3">
                <function>3</function>
                <start_addr>1003</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister4">
                <function>3</function>
                <start_addr>1004</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister5">
                <function>3</function>
                <start_addr>1005</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister6">
                <function>3</function>
                <start_addr>1006</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister7">
                <function>3</function>
                <start_addr>1007</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister8">
                <function>3</function>
                <start_addr>1008</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister9">
                <function>3</function>
                <start_addr>1009</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister10">
                <function>3</function>
                <start_addr>1010</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>


		</modbus>
	</protocol>
</APC_DDF>