<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="tecsystem_nt935"
	ddfname="TecSystem NT935"
	ddfversion="2"
	canremove="yes">
		 
	<schemaVersion>1.6</schemaVersion>

	<device deviceid="tecsystem_nt935">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		
        <suppressRule ruleid="suppresscorevendordata" suppressid="core/mib2data/vendordata"/>
        <suppressRule ruleid="suppresscoremodeldata" suppressid="core/mib2data/modeldata"/>
        <suppressRule ruleid="suppresscoretypedata" suppressid="core/mib2data/typedata"/>

		<setProductData ruleid="vendordata" field="vendor">TecSystem</setProductData>
		<setProductData ruleid="modeldata" field="model">NT935</setProductData>
		<setProductData ruleid="typedata" field="type">Generic Device</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

		<numSensor ruleid="ch_1_temperature">
            <type>temp</type>
            <sensorId>CH_1_TEMPERATURE</sensorId>
            <value>
                <getOid>CH_1_TEMPERATURE</getOid>
            </value>
            <label>Ch 1 Temperature</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		<numSensor ruleid="ch_1_max_temperature">
            <type>temp</type>
            <sensorId>CH_1_MAX_TEMPERATURE</sensorId>
            <value>
                <getOid>CH_1_MAX_TEMPERATURE</getOid>
            </value>
            <label>Ch 1 Max Temperature</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		<numSensor ruleid="ch_2_temperature">
            <type>temp</type>
            <sensorId>CH_2_TEMPERATURE</sensorId>
            <value>
                <getOid>CH_2_TEMPERATURE</getOid>
            </value>
            <label>Ch 2 Temperature</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		<numSensor ruleid="ch_2_max_temperature">
            <type>temp</type>
            <sensorId>CH_2_MAX_TEMPERATURE</sensorId>
            <value>
                <getOid>CH_2_MAX_TEMPERATURE</getOid>
            </value>
            <label>Ch 2 Max Temperature</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		<numSensor ruleid="ch_3_temperature">
            <type>temp</type>
            <sensorId>CH_3_TEMPERATURE</sensorId>
            <value>
                <getOid>CH_3_TEMPERATURE</getOid>
            </value>
            <label>Ch 3 Temperature</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		<numSensor ruleid="ch_3_max_temperature">
            <type>temp</type>
            <sensorId>CH_3_MAX_TEMPERATURE</sensorId>
            <value>
                <getOid>CH_3_MAX_TEMPERATURE</getOid>
            </value>
            <label>Ch 3 Max Temperature</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		<numSensor ruleid="ch_4_temperature">
            <type>temp</type>
            <sensorId>CH_4_TEMPERATURE</sensorId>
            <value>
                <getOid>CH_4_TEMPERATURE</getOid>
            </value>
            <label>Ch 4 Temperature</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		<numSensor ruleid="ch_4_max_temperature">
            <type>temp</type>
            <sensorId>CH_4_MAX_TEMPERATURE</sensorId>
            <value>
                <getOid>CH_4_MAX_TEMPERATURE</getOid>
            </value>
            <label>Ch 4 Max Temperature</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>

		<stateSensor ruleid="fan_1_relay_status">
            <type>state</type>
            <sensorId>FAN_1_RELAY_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 0 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>RELAY_STATUS</getOid>
						  </op>
						  <op>0</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Fan 1 Relay Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="fan_2_relay_status">
            <type>state</type>
            <sensorId>FAN_2_RELAY_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 1 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>RELAY_STATUS</getOid>
						  </op>
						  <op>1</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Fan 2 Relay Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="alarm_relay_status">
            <type>state</type>
            <sensorId>ALARM_RELAY_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 2 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>RELAY_STATUS</getOid>
						  </op>
						  <op>2</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Alarm Relay Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="trip_relay_status">
            <type>state</type>
            <sensorId>TRIP_RELAY_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 3 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>RELAY_STATUS</getOid>
						  </op>
						  <op>3</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Trip Relay Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="fault_relay_status">
            <type>state</type>
            <sensorId>FAULT_RELAY_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 4 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>RELAY_STATUS</getOid>
						  </op>
						  <op>4</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Fault Relay Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="modbus_baud_rate">
            <type>state</type>
            <sensorId>MODBUS_BAUD_RATE</sensorId>
            <value>
				<mapValue mapid="baud_rate-vm">
					<getOid>MODBUS_BAUD_RATE</getOid>
				</mapValue>
            </value>
            <label>Modbus Baud Rate</label>
            <enum>baud_rate-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="modbus_parity_bit">
            <type>state</type>
            <sensorId>MODBUS_PARITY_BIT</sensorId>
            <value>
				<mapValue mapid="parity-vm">
					<getOid>MODBUS_PARITY_BIT</getOid>
				</mapValue>
            </value>
            <label>Modbus Parity Bit</label>
            <enum>parity-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		
		<!-- Ch 1 Status -->
		<stateSensor ruleid="ch_1_fcc_status">
            <type>state</type>
            <sensorId>CH_1_FCC_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 0 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_1_STATUS</getOid>
						  </op>
						  <op>0</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 1 - FCC Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_1_foc_status">
            <type>state</type>
            <sensorId>CH_1_FOC_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 1 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_1_STATUS</getOid>
						  </op>
						  <op>1</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 1 - FOC Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_1_fcd_status">
            <type>state</type>
            <sensorId>CH_1_FCD_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 2 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_1_STATUS</getOid>
						  </op>
						  <op>2</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 1 - FCD Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_1_fan_1_status">
            <type>state</type>
            <sensorId>CH_1_FAN_1_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 3 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_1_STATUS</getOid>
						  </op>
						  <op>3</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 1 - Fan 1 Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_1_fan_2_status">
            <type>state</type>
            <sensorId>CH_1_FAN_2_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 4 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_1_STATUS</getOid>
						  </op>
						  <op>4</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 1 - Fan 2 Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_1_alarm_status">
            <type>state</type>
            <sensorId>CH_1_ALARM_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 5 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_1_STATUS</getOid>
						  </op>
						  <op>5</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 1 - Alarm Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_1_trip_status">
            <type>state</type>
            <sensorId>CH_1_TRIP_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 6 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_1_STATUS</getOid>
						  </op>
						  <op>6</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 1 - Trip Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		
		<!-- Ch1 Story -->
		<stateSensor ruleid="ch_1_fcc_story">
            <type>state</type>
            <sensorId>CH_1_FCC_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 8 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_1_STATUS</getOid>
						  </op>
						  <op>8</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 1 - FCC Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_1_foc_story">
            <type>state</type>
            <sensorId>CH_1_FOC_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 9 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_1_STATUS</getOid>
						  </op>
						  <op>9</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 1 - FOC Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_1_alarm_story">
            <type>state</type>
            <sensorId>CH_1_ALARM_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 13 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_1_STATUS</getOid>
						  </op>
						  <op>13</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 1 - Alarm Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_1_trip_story">
            <type>state</type>
            <sensorId>CH_1_TRIP_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 14 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_1_STATUS</getOid>
						  </op>
						  <op>14</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 1 - Trip Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<!-- Ch 2 Status -->
		<stateSensor ruleid="ch_2_fcc_status">
            <type>state</type>
            <sensorId>CH_2_FCC_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 0 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_2_STATUS</getOid>
						  </op>
						  <op>0</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 2 - FCC Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_2_foc_status">
            <type>state</type>
            <sensorId>CH_2_FOC_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 1 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_2_STATUS</getOid>
						  </op>
						  <op>1</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 2 - FOC Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_2_fcd_status">
            <type>state</type>
            <sensorId>CH_2_FCD_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 2 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_2_STATUS</getOid>
						  </op>
						  <op>2</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 2 - FCD Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_2_fan_2_status">
            <type>state</type>
            <sensorId>CH_2_FAN_2_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 3 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_2_STATUS</getOid>
						  </op>
						  <op>3</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 2 - Fan 1 Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_2_fan_2_status">
            <type>state</type>
            <sensorId>CH_2_FAN_2_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 4 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_2_STATUS</getOid>
						  </op>
						  <op>4</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 2 - Fan 2 Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_2_alarm_status">
            <type>state</type>
            <sensorId>CH_2_ALARM_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 5 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_2_STATUS</getOid>
						  </op>
						  <op>5</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 2 - Alarm Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_2_trip_status">
            <type>state</type>
            <sensorId>CH_2_TRIP_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 6 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_2_STATUS</getOid>
						  </op>
						  <op>6</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 2 - Trip Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		
		<!-- Ch2 Story -->
		<stateSensor ruleid="ch_2_fcc_story">
            <type>state</type>
            <sensorId>CH_2_FCC_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 8 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_2_STATUS</getOid>
						  </op>
						  <op>8</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 2 - FCC Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_2_foc_story">
            <type>state</type>
            <sensorId>CH_2_FOC_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 9 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_2_STATUS</getOid>
						  </op>
						  <op>9</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 2 - FOC Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_2_alarm_story">
            <type>state</type>
            <sensorId>CH_2_ALARM_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 13 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_2_STATUS</getOid>
						  </op>
						  <op>13</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 2 - Alarm Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_2_trip_story">
            <type>state</type>
            <sensorId>CH_2_TRIP_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 14 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_2_STATUS</getOid>
						  </op>
						  <op>14</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 2 - Trip Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<!-- Ch 3 Status -->
		<stateSensor ruleid="ch_3_fcc_status">
            <type>state</type>
            <sensorId>CH_3_FCC_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 0 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_3_STATUS</getOid>
						  </op>
						  <op>0</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 3 - FCC Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_3_foc_status">
            <type>state</type>
            <sensorId>CH_3_FOC_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 1 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_3_STATUS</getOid>
						  </op>
						  <op>1</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 3 - FOC Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_3_fcd_status">
            <type>state</type>
            <sensorId>CH_3_FCD_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 2 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_3_STATUS</getOid>
						  </op>
						  <op>2</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 3 - FCD Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_3_fan_3_status">
            <type>state</type>
            <sensorId>CH_3_FAN_3_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 3 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_3_STATUS</getOid>
						  </op>
						  <op>3</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 3 - Fan 1 Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_3_fan_3_status">
            <type>state</type>
            <sensorId>CH_3_FAN_3_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 4 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_3_STATUS</getOid>
						  </op>
						  <op>4</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 3 - Fan 2 Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_3_alarm_status">
            <type>state</type>
            <sensorId>CH_3_ALARM_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 5 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_3_STATUS</getOid>
						  </op>
						  <op>5</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 3 - Alarm Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_3_trip_status">
            <type>state</type>
            <sensorId>CH_3_TRIP_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 6 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_3_STATUS</getOid>
						  </op>
						  <op>6</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 3 - Trip Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		
		<!-- Ch3 Story -->
		<stateSensor ruleid="ch_3_fcc_story">
            <type>state</type>
            <sensorId>CH_3_FCC_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 8 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_3_STATUS</getOid>
						  </op>
						  <op>8</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 3 - FCC Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_3_foc_story">
            <type>state</type>
            <sensorId>CH_3_FOC_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 9 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_3_STATUS</getOid>
						  </op>
						  <op>9</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 3 - FOC Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_3_alarm_story">
            <type>state</type>
            <sensorId>CH_3_ALARM_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 13 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_3_STATUS</getOid>
						  </op>
						  <op>13</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 3 - Alarm Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_3_trip_story">
            <type>state</type>
            <sensorId>CH_3_TRIP_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 14 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_3_STATUS</getOid>
						  </op>
						  <op>14</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 3 - Trip Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<!-- Ch 4 Status -->
		<stateSensor ruleid="ch_4_fcc_status">
            <type>state</type>
            <sensorId>CH_4_FCC_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 0 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_4_STATUS</getOid>
						  </op>
						  <op>0</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 4 - FCC Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_4_foc_status">
            <type>state</type>
            <sensorId>CH_4_FOC_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 1 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_4_STATUS</getOid>
						  </op>
						  <op>1</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 4 - FOC Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_4_fcd_status">
            <type>state</type>
            <sensorId>CH_4_FCD_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 2 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_4_STATUS</getOid>
						  </op>
						  <op>2</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 4 - FCD Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_4_fan_4_status">
            <type>state</type>
            <sensorId>CH_4_FAN_4_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 3 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_4_STATUS</getOid>
						  </op>
						  <op>3</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 4 - Fan 1 Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_4_fan_4_status">
            <type>state</type>
            <sensorId>CH_4_FAN_4_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 4 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_4_STATUS</getOid>
						  </op>
						  <op>4</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 4 - Fan 2 Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_4_alarm_status">
            <type>state</type>
            <sensorId>CH_4_ALARM_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 5 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_4_STATUS</getOid>
						  </op>
						  <op>5</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 4 - Alarm Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_4_trip_status">
            <type>state</type>
            <sensorId>CH_4_TRIP_STATUS</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 6 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_4_STATUS</getOid>
						  </op>
						  <op>6</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 4 - Trip Status</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		
		<!-- Ch4 Story -->
		<stateSensor ruleid="ch_4_fcc_story">
            <type>state</type>
            <sensorId>CH_4_FCC_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 8 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_4_STATUS</getOid>
						  </op>
						  <op>8</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 4 - FCC Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_4_foc_story">
            <type>state</type>
            <sensorId>CH_4_FOC_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 9 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_4_STATUS</getOid>
						  </op>
						  <op>9</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 4 - FOC Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_4_alarm_story">
            <type>state</type>
            <sensorId>CH_4_ALARM_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 13 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_4_STATUS</getOid>
						  </op>
						  <op>13</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 4 - Alarm Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="ch_4_trip_story">
            <type>state</type>
            <sensorId>CH_4_TRIP_STORY</sensorId>
            <value>
				<mapValue mapid="status-vm">
				<!-- Bit 14 -->
				<formatNumber>
					<bitwise_and>
					  <op>
						<right_shift>
						  <op>
							<getOid>CH_4_STATUS</getOid>
						  </op>
						  <op>14</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				 </formatNumber>
				</mapValue>
            </value>
            <label>Ch 4 - Trip Story</label>
            <enum>status-em</enum>
            <sensorSet>System Status</sensorSet>
        </stateSensor>
		
		<valueMap ruleid="status-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>
		<enumMap ruleid="status-em">
			<label>Off</label>
			<label>On</label>
			<label>Unknown</label>
		</enumMap>
		
		<valueMap ruleid="baud_rate-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>4</valueIn><valueOut>4</valueOut>
			<valueIn>*</valueIn><valueOut>5</valueOut>
		</valueMap>
		<enumMap ruleid="baud_rate-em">
			<label>2400</label>
			<label>4800</label>
			<label>9600</label>
			<label>19200</label>
			<label>38400</label>
			<label>Unknown</label>
		</enumMap>
		
		<valueMap ruleid="parity-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>*</valueIn><valueOut>4</valueOut>
		</valueMap>
		<enumMap ruleid="parity-em">
			<label>N-1 None (1 stop)</label>
			<label>Even</label>
			<label>Odd</label>
			<label>N-2 None (2 stop)</label>
			<label>Unknown</label>
		</enumMap>

		<alarmFlags ruleid="cpu_error">
			<value><getOid>CPU_ERROR</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>ECH Alarm</activeText>
					<inactiveText>ECH Alarm Cleared</inactiveText>
				</name>
				<severity>error</severity>
				<category>System</category>
				<description>
					<activeText>ECH Alarm condition exists.</activeText>
					<inactiveText>ECH Alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2">
				<name>
					<activeText>FCD Fault</activeText>
					<inactiveText>FCD Fault Cleared</inactiveText>
				</name>
				<severity>error</severity>
				<category>System</category>
				<description>
					<activeText>FCD Fault condition exists.</activeText>
					<inactiveText>FCD Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4">
				<name>
					<activeText>CAL Alarm</activeText>
					<inactiveText>CAL Alarm Cleared</inactiveText>
				</name>
				<severity>error</severity>
				<category>System</category>
				<description>
					<activeText>CAL Alarm condition exists.</activeText>
					<inactiveText>CAL Alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8">
				<name>
					<activeText>PT Error</activeText>
					<inactiveText>PT Error Cleared</inactiveText>
				</name>
				<severity>error</severity>
				<category>System</category>
				<description>
					<activeText>PT Error condition exists.</activeText>
					<inactiveText>PT Error condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags> 

	</device>
	<protocol>
		<modbus>    
			<value_ref_id valid="CPU_ERROR">
				<function>3</function>
				<start_addr>13</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="RELAY_STATUS">
				<function>3</function>
				<start_addr>14</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MODBUS_BAUD_RATE">
				<function>3</function>
				<start_addr>17</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MODBUS_PARITY_BIT">
				<function>3</function>
				<start_addr>18</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_1_TEMPERATURE">
				<function>3</function>
				<start_addr>24</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_1_MAX_TEMPERATURE">
				<function>3</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_2_TEMPERATURE">
				<function>3</function>
				<start_addr>28</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_2_MAX_TEMPERATURE">
				<function>3</function>
				<start_addr>29</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_3_TEMPERATURE">
				<function>3</function>
				<start_addr>32</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_3_MAX_TEMPERATURE">
				<function>3</function>
				<start_addr>33</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_4_TEMPERATURE">
				<function>3</function>
				<start_addr>36</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_4_MAX_TEMPERATURE">
				<function>3</function>
				<start_addr>37</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_1_STATUS">
				<function>3</function>
				<start_addr>64</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_2_STATUS">
				<function>3</function>
				<start_addr>65</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_3_STATUS">
				<function>3</function>
				<start_addr>66</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CH_4_STATUS">
				<function>3</function>
				<start_addr>67</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>