<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="asco_g5_group_controller"
	ddfname="ASCO G5 Group Controller"
	ddfversion="4"
	canremove="yes">
	
	<schemaVersion>1.6</schemaVersion>
	
	<device deviceid="asco_g5_group_controller">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		
		<setProductData ruleid="vendordata" field="vendor">ASCO</setProductData>
		<setProductData ruleid="modeldata" field="model">G5 Group Controller</setProductData>
		<setProductData ruleid="typedata" field="type">Power Meter</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

		<setProductData ruleid="software_version" field="appversion">
			<getOid>CONTROL_PANEL_SOFTWARE_VERSION</getOid>
		</setProductData>

		<stateSensor ruleid="main-on-normal">
			<type>state</type>
			<sensorId>MAIN_ON_NORMAL</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40015</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Main on Normal</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="main-on-emergency">
			<type>state</type>
			<sensorId>MAIN_ON_EMERGENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40015</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Main on Emergency</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="auxiliary-on-normal">
			<type>state</type>
			<sensorId>AUXILIARY_ON_NORMAL</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40015</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Auxiliary on Normal</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="auxiliary-on-emergency">
			<type>state</type>
			<sensorId>AUXILIARY_ON_EMERGENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40015</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Auxiliary on Emergency</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="normal-source-available">
			<type>state</type>
			<sensorId>NORMAL_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40015</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Normal Source Available</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="emergency-source-available">
			<type>state</type>
			<sensorId>EMERGENCY_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40015</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Emergency Source Available</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<numSensor ruleid="normal-voltage-phase-ab">
			<type>voltage</type>
			<sensorId>NORMAL_VOLTAGE_PHASE_AB</sensorId>
			<value>
				<mult>
				<op><getOid>NORMAL_VOLTAGE_PHASE_AB</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Normal Voltage Phase AB</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>
		<numSensor ruleid="normal-voltage-phase-bc">
			<type>voltage</type>
			<sensorId>NORMAL_VOLTAGE_PHASE_BC</sensorId>
			<value>
				<mult>
				<op><getOid>NORMAL_VOLTAGE_PHASE_BC</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Normal Voltage Phase BC</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>
		<numSensor ruleid="normal-voltage-phase-ca">
			<type>voltage</type>
			<sensorId>NORMAL_VOLTAGE_PHASE_CA</sensorId>
			<value>
				<mult>
				<op><getOid>NORMAL_VOLTAGE_PHASE_CA</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Normal Voltage Phase CA</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>
		<stateSensor ruleid="transfer-switch-locked-out">
			<type>state</type>
			<sensorId>TRANSFER_SWITCH_LOCKED_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40040</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Transfer Switch Locked Out</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="test-mode-(feature-6b)">
			<type>state</type>
			<sensorId>TEST_MODE_(FEATURE_6B)</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40043</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Test Mode (Feature 6B)</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<numSensor ruleid="phase-shift-between-normal-and-emergency">
			<type>num</type>
			<units>degreesAngle</units>
			<sensorId>PHASE_SHIFT_BETWEEN_NORMAL_AND_EMERGENCY</sensorId>
			<value>
				<mult>
				<op><getOid>PHASE_SHIFT_BETWEEN_NORMAL_AND_EMERGENCY</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>Phase Shift between Normal and Emergency</label>
			<sensorSet>Phase</sensorSet>
		</numSensor>
		<numSensor ruleid="normal-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>NORMAL_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>NORMAL_FREQUENCY</getOid></op>
				<op>0.01</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Normal Frequency</label>
			<sensorSet>Frequency</sensorSet>
		</numSensor>
		<numSensor ruleid="emergency-frequency">
			<type>frequency</type>
			<units></units>
			<sensorId>EMERGENCY_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>EMERGENCY_FREQUENCY</getOid></op>
				<op>0.01</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Emergency Frequency</label>
			<sensorSet>Frequency</sensorSet>
		</numSensor>

		<stateSensor ruleid="normal-phase-rotation">
			<type>state</type>
			<sensorId>NORMAL_PHASE_ROTATION</sensorId>
			<value>
				<mapValue mapid="2bit-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40016</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>3</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Normal Phase Rotation</label>
			<enum>rotation-em</enum>
			<sensorSet>Phase</sensorSet>
		</stateSensor>
		<stateSensor ruleid="emergency-phase-rotation">
			<type>state</type>
			<sensorId>EMERGENCY_PHASE_ROTATION</sensorId>
			<value>
				<mapValue mapid="2bit-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40016</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>3</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Emergency Phase Rotation</label>
			<enum>rotation-em</enum>
			<sensorSet>Phase</sensorSet>
		</stateSensor>
		<enumMap ruleid="rotation-em">
			<label>Unknown</label>
			<label>A to B to C</label>
			<label>C to B to A</label>
			<label>Unknown</label>
		</enumMap>

		<stateSensor ruleid="engine-exerciser-with-load-active">
			<type>state</type>
			<sensorId>ENGINE_EXERCISER_WITH_LOAD_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40016</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Engine Exerciser with Load Active</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="external-f17-is-active">
			<type>state</type>
			<sensorId>EXTERNAL_F17_IS_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40016</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>External F17 is Active</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<numSensor ruleid="normal-voltage-unbalance">
			<type>num</type>
			<units>percent</units>
			<sensorId>NORMAL_VOLTAGE_UNBALANCE</sensorId>
			<value>
				<mult>
				<op><getOid>NORMAL_VOLTAGE_UNBALANCE</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Normal Voltage Unbalance</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>
		<numSensor ruleid="emergency-voltage-phase-ab">
			<type>voltage</type>
			<units></units>
			<sensorId>EMERGENCY_VOLTAGE_PHASE_AB</sensorId>
			<value>
				<mult>
				<op><getOid>EMERGENCY_VOLTAGE_PHASE_AB</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Emergency Voltage Phase AB</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>
		<numSensor ruleid="emergency-voltage-phase-bc">
			<type>voltage</type>
			<units></units>
			<sensorId>EMERGENCY_VOLTAGE_PHASE_BC</sensorId>
			<value>
				<mult>
				<op><getOid>EMERGENCY_VOLTAGE_PHASE_BC</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Emergency Voltage Phase BC</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>
		<numSensor ruleid="emergency-voltage-phase-ca">
			<type>voltage</type>
			<units></units>
			<sensorId>EMERGENCY_VOLTAGE_PHASE_CA</sensorId>
			<value>
				<mult>
				<op><getOid>EMERGENCY_VOLTAGE_PHASE_CA</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Emergency Voltage Phase CA</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>
		<numSensor ruleid="emergency-voltage-unbalance">
			<type>num</type>
			<units>percent</units>
			<sensorId>EMERGENCY_VOLTAGE_UNBALANCE</sensorId>
			<value>
				<mult>
				<op><getOid>EMERGENCY_VOLTAGE_UNBALANCE</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Emergency Voltage Unbalance</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>

		<stateSensor ruleid="nominal-voltage">
			<type>state</type>
			<sensorId>NOMINAL_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="4bit-vm">
				<getOid>NOMINAL_VOLTAGE</getOid>
				</mapValue>
			</value>
			<label>Nominal Voltage</label>
			<enum>nomvolt-em</enum>
			<sensorSet>Voltage</sensorSet>
		</stateSensor>
		<enumMap ruleid="nomvolt-em">
			<label>115 V</label>
			<label>120 V</label>
			<label>208 V</label>
			<label>220 V</label>
			<label>230 V</label>
			<label>240 V</label>
			<label>277 V</label>
			<label>380 V</label>
			<label>400 V</label>
			<label>415 V</label>
			<label>440 V</label>
			<label>460 V</label>
			<label>480 V</label>
			<label>550 V</label>
			<label>575 V</label>
			<label>600 V</label>
			<label>Unknown</label>
		</enumMap>

		<stateSensor ruleid="nominal-frequency">
			<type>state</type>
			<sensorId>NOMINAL_FREQUENCY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40026</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Nominal Frequency</label>
			<enum>nomFreq-em</enum>
			<sensorSet>Frequency</sensorSet>
		</stateSensor>
		<enumMap ruleid="nomFreq-em">
			<label>50 Hz</label>
			<label>60 Hz</label>
		</enumMap>

		<stateSensor ruleid="normal-source-3-phase-sensing">
			<type>state</type>
			<sensorId>NORMAL_SOURCE_3_PHASE_SENSING</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40026</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Normal Source 3 Phase Sensing</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Phase</sensorSet>
		</stateSensor>
		<stateSensor ruleid="emergency-source-3-phase-sensing">
			<type>state</type>
			<sensorId>EMERGENCY_SOURCE_3_PHASE_SENSING</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40026</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Emergency Source 3 Phase Sensing</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Phase</sensorSet>
		</stateSensor>

		<stateSensor ruleid="transfer-switch-type">
			<type>state</type>
			<sensorId>TRANSFER_SWITCH_TYPE</sensorId>
			<value>
				<mapValue mapid="2bit-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40026</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>3</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Transfer Switch Type</label>
			<enum>xferSwitchType-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<enumMap ruleid="xferSwitchType-em">
			<label>OTTS</label>
			<label>DTTS</label>
			<label>CTTS</label>
			<label>OTTS</label>
		</enumMap>

		<stateSensor ruleid="transfer-switch-bypass">
			<type>state</type>
			<sensorId>TRANSFER_SWITCH_BYPASS</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40026</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Transfer Switch Bypass</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="transfer-switch-or-dual-breaker">
			<type>state</type>
			<sensorId>TRANSFER_SWITCH_OR_DUAL_BREAKER</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40026</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Transfer Switch or Dual Breaker</label>
			<enum>xferSwitchOrDualBreaker-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<enumMap ruleid="xferSwitchOrDualBreaker-em">
			<label>Transfer Switch</label>
			<label>Dual Breaker</label>
		</enumMap>

		<stateSensor ruleid="transfer-switch-amp-rating">
			<type>state</type>
			<sensorId>TRANSFER_SWITCH_AMP_RATING</sensorId>
			<value>
				<mapValue mapid="4bit-vm">
				<getOid>TRANSFER_SWITCH_AMP_RATING</getOid>
				</mapValue>
			</value>
			<label>Transfer Switch Amp Rating</label>
			<enum>amprating-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<enumMap ruleid="amprating-em">
			<label>Other</label>
			<label>30 A</label>
			<label>70 A</label>
			<label>100 A</label>
			<label>150 A</label>
			<label>260 A</label>
			<label>400 A</label>
			<label>600 A</label>
			<label>800 A</label>
			<label>1000 A</label>
			<label>1200 A</label>
			<label>1600 A</label>
			<label>2000 A</label>
			<label>3000 A</label>
			<label>4000 A</label>
			<label>Other</label>
			<label>Unknown</label>
		</enumMap>

		<stateSensor ruleid="transfer-switch-locked-out">
			<type>state</type>
			<sensorId>TRANSFER_SWITCH_LOCKED_OUT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40040</getOid></op>
						<op>0</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Transfer Switch Locked Out</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ctts-extended-parallel-alarm">
			<type>state</type>
			<sensorId>CTTS_EXTENDED_PARALLEL_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40040</getOid></op>
						<op>1</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>CTTS Extended Parallel Alarm</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ctts-failure-to-synch-alarm">
			<type>state</type>
			<sensorId>CTTS_FAILURE_TO_SYNCH_ALARM</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40040</getOid></op>
						<op>2</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>CTTS Failure to Synch Alarm</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="dtts-load-disconnect">
			<type>state</type>
			<sensorId>DTTS_LOAD_DISCONNECT</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40040</getOid></op>
						<op>3</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>DTTS Load Disconnect</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="external-parameter-lock-is-active">
			<type>state</type>
			<sensorId>EXTERNAL_PARAMETER_LOCK_IS_ACTIVE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40040</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>External Parameter Lock is Active</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="engine-running">
			<type>state</type>
			<sensorId>ENGINE_RUNNING</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40040</getOid></op>
						<op>5</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Engine Running</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="normal-breaker-tripped">
			<type>state</type>
			<sensorId>NORMAL_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40040</getOid></op>
						<op>6</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Normal Breaker Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="emergency-breaker-tripped">
			<type>state</type>
			<sensorId>EMERGENCY_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40040</getOid></op>
						<op>7</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Emergency Breaker Tripped</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="control-panel-state">
			<type>state</type>
			<sensorId>CONTROL_PANEL_STATE</sensorId>
			<value>
				<mapValue mapid="cps-vm">
				<getOid>CONTROL_PANEL_STATE</getOid>
				</mapValue>
			</value>
			<label>Control Panel State</label>
			<enum>cps-em</enum>
			<sensorSet>Control Panel</sensorSet>
		</stateSensor>
		<numSensor ruleid="control-panel-data">
			<type>num</type>
			<units>
				<mapValue mapid="cpdUnits-vm">
				<formatNumber printffmt="%1.0f">
				<getOid>CONTROL_PANEL_STATE</getOid>
				</formatNumber>
				</mapValue>
			</units>
			<sensorId>CONTROL_PANEL_DATA</sensorId>
			<value>
				<mult>
				<op><getOid>CONTROL_PANEL_DATA</getOid></op>
				<op>
					<mapValue mapid="cpdScale-vm">
					<getOid>CONTROL_PANEL_STATE</getOid>
					</mapValue>
				</op>
				</mult>
			</value>
			<valueInc>
				<mapValue mapid="cpdScale-vm">
				<getOid>CONTROL_PANEL_STATE</getOid>
				</mapValue>
			</valueInc>
			<label>Control Panel Data</label>
			<sensorSet>Control Panel</sensorSet>
		</numSensor>
		<valueMap ruleid="cps-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>4</valueIn><valueOut>4</valueOut>
			<valueIn>5</valueIn><valueOut>5</valueOut>
			<valueIn>6</valueIn><valueOut>6</valueOut>
			<valueIn>7</valueIn><valueOut>7</valueOut>
			<valueIn>8</valueIn><valueOut>8</valueOut>
			<valueIn>9</valueIn><valueOut>9</valueOut>
			<valueIn>10</valueIn><valueOut>10</valueOut>
			<valueIn>11</valueIn><valueOut>11</valueOut>
			<valueIn>12</valueIn><valueOut>12</valueOut>
			<valueIn>13</valueIn><valueOut>13</valueOut>
			<valueIn>14</valueIn><valueOut>14</valueOut>
			<valueIn>15</valueIn><valueOut>15</valueOut>
			<valueIn>16</valueIn><valueOut>16</valueOut>
			<valueIn>17</valueIn><valueOut>17</valueOut>
			<valueIn>18</valueIn><valueOut>18</valueOut>
			<valueIn>19</valueIn><valueOut>19</valueOut>
			<valueIn>20</valueIn><valueOut>20</valueOut>
			<valueIn>21</valueIn><valueOut>21</valueOut>
			<valueIn>22</valueIn><valueOut>22</valueOut>
			<valueIn>23</valueIn><valueOut>23</valueOut>
			<valueIn>24</valueIn><valueOut>24</valueOut>
			<valueIn>25</valueIn><valueOut>25</valueOut>
			<valueIn>26</valueIn><valueOut>26</valueOut>
			<valueIn>27</valueIn><valueOut>27</valueOut>
			<valueIn>28</valueIn><valueOut>28</valueOut>
			<valueIn>29</valueIn><valueOut>29</valueOut>
			<valueIn>30</valueIn><valueOut>30</valueOut>
			<valueIn>31</valueIn><valueOut>31</valueOut>
			<valueIn>32</valueIn><valueOut>32</valueOut>
			<valueIn>33</valueIn><valueOut>33</valueOut>
			<valueIn>34</valueIn><valueOut>34</valueOut>
			<valueIn>35</valueIn><valueOut>35</valueOut>
			<valueIn>36</valueIn><valueOut>36</valueOut>
			<valueIn>*</valueIn><valueOut>37</valueOut>
		</valueMap>
		<enumMap ruleid="cps-em">
			<label>Load on N, N Ok</label>
			<label>Timer 1C (TDES) Running</label>
			<label>Waiting for E Acceptable</label>
			<label>Transfer to E Inhibited by F6Z</label>
			<label>Transfer to E Inhibited by F34B</label>
			<label>Timer 2B (TDNE) Running</label>
			<label>Timer 31F (N to E Pretransfer Signal) Running</label>
			<label>In Phase Monitor Time Delay (OTTS N to E Transfer)</label>
			<label>Waiting for In Phase (OTTS N to E Transfer)</label>
			<label>In Phase Monitor Time Delay with Load Shed (OTTS N to E Transfer)</label>
			<label>Waiting for In Phase with Load Shed (OTTS N to E Transfer)</label>
			<label>In Sync Monitor Time Delay (CTTS N to E Transfer)</label>
			<label>Waiting for In Sync (CTTS N to E Transfer)</label>
			<label>Sources Paralleled (CTTS N to E Transfer)</label>
			<label>Load Disconnected CT Bypass (CTTS N to E Transfer)</label>
			<label>Load Disconnected (DTTS N to E Transfer)</label>
			<label>N to E Load Shed is Active</label>
			<label>Timer 31M (N to E Post Transfer Signal)</label>
			<label>Load on E Waiting for Removal of Transfer Requests</label>
			<label>Timer 3A (TDEN) Running</label>
			<label>Transfer to N Inhibited by G6C</label>
			<label>Transfer to N Inhibited by F34A</label>
			<label>Timer 31G (E to N Post Transfer Signal)</label>
			<label>In Phase Monitor Time Delay (OTTS E to N Transfer)</label>
			<label>Waiting for In Phase (OTTS E to N Transfer)</label>
			<label>In Phase Monitor Time Delay with Load Shed (OTTS E to N Transfer)</label>
			<label>Waiting for In Phase with Load Shed (OTTS E to N Transfer)</label>
			<label>In Sync Monitor Time Delay (CTTS E to N Transfer)</label>
			<label>Waiting for In Sync (CTTS E to N Transfer)</label>
			<label>Sources Paralleled (CTTS E to N Transfer)</label>
			<label>Load Disconnected CT Bypass (CTTS E to N Transfer)</label>
			<label>Load Disconnected (DTTS E to N Transfer)</label>
			<label>E to N Load Shed is Active</label>
			<label>Timer 31N (E to N Post Transfer Signal) Running</label>
			<label>Timer 2E (TDEC) Running</label>
			<label>Timer 1C (TDES) while Timer 2E (TDEC) Running</label>
			<label>Power Up Inhibit</label>
			<label>Unknown</label>
		</enumMap>

		<!-- <numSensor ruleid="current-phase-a">
			<type>amperage</type>
			<sensorId>CURRENT_PHASE_A</sensorId>
			<value>
				<getOid>CURRENT_PHASE_A</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Current Phase A</label>
			<sensorSet>Current</sensorSet>
		</numSensor>
		<numSensor ruleid="current-phase-b">
			<type>amperage</type>
			<sensorId>CURRENT_PHASE_B</sensorId>
			<value>
				<getOid>CURRENT_PHASE_B</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Current Phase B</label>
			<sensorSet>Current</sensorSet>
		</numSensor>
		<numSensor ruleid="current-phase-c">
			<type>amperage</type>
			<sensorId>CURRENT_PHASE_C</sensorId>
			<value>
				<getOid>CURRENT_PHASE_C</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Current Phase C</label>
			<sensorSet>Current</sensorSet>
		</numSensor>

		<stateSensor ruleid="manual-transfer-only">
			<type>state</type>
			<sensorId>MANUAL_TRANSFER_ONLY</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
					<bitwise_and>
					<op>
						<right_shift>
						<op><getOid>REG_40079</getOid></op>
						<op>4</op>
						</right_shift>
					</op>
					<op>1</op>
					</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<label>Manual Transfer Only Enabled</label>
			<enum>trueFalse-em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor> -->
		
		<valueMap ruleid="cpdUnits-vm">
			<valueIn>0</valueIn><valueOut>min</valueOut>
			<valueIn>1</valueIn><valueOut>sec</valueOut>
			<valueIn>5</valueIn><valueOut>sec</valueOut>
			<valueIn>6</valueIn><valueOut>sec</valueOut>
			<valueIn>7</valueIn><valueOut>sec</valueOut>
			<valueIn>9</valueIn><valueOut>sec</valueOut>
			<valueIn>11</valueIn><valueOut>sec</valueOut>
			<valueIn>14</valueIn><valueOut>sec</valueOut>
			<valueIn>15</valueIn><valueOut>sec</valueOut>
			<valueIn>17</valueIn><valueOut>sec</valueOut>
			<valueIn>18</valueIn><valueOut>sec</valueOut>
			<valueIn>19</valueIn><valueOut>sec</valueOut>
			<valueIn>22</valueIn><valueOut>sec</valueOut>
			<valueIn>23</valueIn><valueOut>sec</valueOut>
			<valueIn>25</valueIn><valueOut>sec</valueOut>
			<valueIn>27</valueIn><valueOut>sec</valueOut>
			<valueIn>30</valueIn><valueOut>sec</valueOut>
			<valueIn>31</valueIn><valueOut>sec</valueOut>
			<valueIn>33</valueIn><valueOut>sec</valueOut>
			<valueIn>34</valueIn><valueOut>sec</valueOut>
			<valueIn>35</valueIn><valueOut>sec</valueOut>
			<valueIn>8</valueIn><valueOut>degreesAngle</valueOut>
			<valueIn>10</valueIn><valueOut>degreesAngle</valueOut>
			<valueIn>12</valueIn><valueOut>degreesAngle</valueOut>
			<valueIn>24</valueIn><valueOut>degreesAngle</valueOut>
			<valueIn>26</valueIn><valueOut>degreesAngle</valueOut>
			<valueIn>28</valueIn><valueOut>degreesAngle</valueOut>
			<valueIn>*</valueIn><valueOut>num</valueOut>
		</valueMap>

		<valueMap ruleid="cpdScale-vm">
			<valueIn>8</valueIn><valueOut>0.1</valueOut>
			<valueIn>10</valueIn><valueOut>0.1</valueOut>
			<valueIn>12</valueIn><valueOut>0.1</valueOut>
			<valueIn>24</valueIn><valueOut>0.1</valueOut>
			<valueIn>26</valueIn><valueOut>0.1</valueOut>
			<valueIn>28</valueIn><valueOut>0.1</valueOut>
			<valueIn>*</valueIn><valueOut>1</valueOut>
		</valueMap>

		<valueMap ruleid="binaryDefaultZero-vm">
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<valueMap ruleid="2bit-vm">
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<valueMap ruleid="4bit-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>2</valueIn><valueOut>2</valueOut>
			<valueIn>3</valueIn><valueOut>3</valueOut>
			<valueIn>4</valueIn><valueOut>4</valueOut>
			<valueIn>5</valueIn><valueOut>5</valueOut>
			<valueIn>6</valueIn><valueOut>6</valueOut>
			<valueIn>7</valueIn><valueOut>7</valueOut>
			<valueIn>8</valueIn><valueOut>8</valueOut>
			<valueIn>9</valueIn><valueOut>9</valueOut>
			<valueIn>10</valueIn><valueOut>10</valueOut>
			<valueIn>11</valueIn><valueOut>11</valueOut>
			<valueIn>12</valueIn><valueOut>12</valueOut>
			<valueIn>13</valueIn><valueOut>13</valueOut>
			<valueIn>14</valueIn><valueOut>14</valueOut>
			<valueIn>15</valueIn><valueOut>15</valueOut>
			<valueIn>*</valueIn><valueOut>16</valueOut>
		</valueMap>

		<enumMap ruleid="onOff-em">
			<label>Off</label>
			<label>On</label>
		</enumMap>
		<enumMap ruleid="trueFalse-em">
			<label>False</label>
			<label>True</label>
		</enumMap>

	</device>
	<protocol>
		<modbus>
			<value_ref_id valid="PHASE_SHIFT_BETWEEN_NORMAL_AND_EMERGENCY">
				<function>3</function>
				<start_addr>11</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="NORMAL_FREQUENCY">
				<function>3</function>
				<start_addr>12</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="EMERGENCY_FREQUENCY">
				<function>3</function>
				<start_addr>13</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40015">
				<function>3</function>
				<start_addr>14</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40016">
				<function>3</function>
				<start_addr>15</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="NORMAL_VOLTAGE_PHASE_AB">
				<function>3</function>
				<start_addr>16</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="NORMAL_VOLTAGE_PHASE_BC">
				<function>3</function>
				<start_addr>17</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="NORMAL_VOLTAGE_PHASE_CA">
				<function>3</function>
				<start_addr>18</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="NORMAL_VOLTAGE_UNBALANCE">
				<function>3</function>
				<start_addr>19</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="EMERGENCY_VOLTAGE_PHASE_AB">
				<function>3</function>
				<start_addr>20</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="EMERGENCY_VOLTAGE_PHASE_BC">
				<function>3</function>
				<start_addr>21</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="EMERGENCY_VOLTAGE_PHASE_CA">
				<function>3</function>
				<start_addr>22</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="EMERGENCY_VOLTAGE_UNBALANCE">
				<function>3</function>
				<start_addr>23</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="NOMINAL_VOLTAGE">
				<function>3</function>
				<start_addr>24</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40026">
				<function>3</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="TRANSFER_SWITCH_AMP_RATING">
				<function>3</function>
				<start_addr>26</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CONTROL_PANEL_SOFTWARE_VERSION">
				<function>3</function>
				<start_addr>27</start_addr>
				<quantity>10</quantity>
				<type>ascii</type>
			</value_ref_id>
			<value_ref_id valid="CONTROL_PANEL_SOFTWARE_DATE">
				<function>3</function>
				<start_addr>33</start_addr>
				<quantity>10</quantity>
				<type>ascii</type>
			</value_ref_id>
			<value_ref_id valid="REG_40040">
				<function>3</function>
				<start_addr>39</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CONTROL_PANEL_STATE">
				<function>3</function>
				<start_addr>40</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CONTROL_PANEL_DATA">
				<function>3</function>
				<start_addr>41</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40043">
				<function>3</function>
				<start_addr>42</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<!-- <value_ref_id valid="CURRENT_PHASE_A">
				<function>3</function>
				<start_addr>58</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CURRENT_PHASE_B">
				<function>3</function>
				<start_addr>59</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CURRENT_PHASE_C">
				<function>3</function>
				<start_addr>60</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_40079">
				<function>3</function>
				<start_addr>78</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> -->
		</modbus>
	</protocol>
</APC_DDF>
