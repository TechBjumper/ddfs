<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="liebert_hirolink_i"
	ddfname="Liebert Hirolink-i"
	ddfversion="1"
	canremove="yes">
		 
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="liebert_hirolink_i">

		<setProductData ruleid="vendordata" field="vendor">Liebert</setProductData>
		<setProductData ruleid="modeldata" field="model">Hirolink-i</setProductData>
		<setProductData ruleid="typedata" field="type">Network Device</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		

	   	<numSensor ruleid="EVENT-ID_SENSOR">
            <type>num</type>
            <sensorId>event-id</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>eventid</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Event-ID</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="CONTROLLER-ID_SENSOR">
            <type>num</type>
            <sensorId>controller-id</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>controllerid</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Controller-ID</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="EVENT-MINUTE_SENSOR">
            <type>num</type>
            <sensorId>event-minute</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>eventminute</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Event-Minute</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="EVENT-HOUR_SENSOR">
            <type>num</type>
            <sensorId>event-hour</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>eventhour</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Event-Hour</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="EVENT-DATE_SENSOR">
            <type>num</type>
            <sensorId>event-date</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>eventdate</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Event-Date</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>


		<enumMap ruleid="status_em">
				<label>Message</label>
				<label>Warning</label>
				<label>Unkown</label>
		</enumMap>


		<enumMap ruleid="off_on_em">
				<label>Off</label>
				<label>On</label>
				<label>Unkown</label>
		</enumMap>

		<valueMap ruleid="alarm_status_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>9</valueIn><valueOut>1</valueOut>
			<valueIn>11</valueIn><valueOut>2</valueOut>
			<valueIn>13</valueIn><valueOut>3</valueOut>
			<valueIn>15</valueIn><valueOut>4</valueOut>
			<valueIn>17</valueIn><valueOut>5</valueOut>
			<valueIn>19</valueIn><valueOut>6</valueOut>
			<valueIn>21</valueIn><valueOut>7</valueOut>
			<valueIn>23</valueIn><valueOut>8</valueOut>
			<valueIn>25</valueIn><valueOut>9</valueOut>
			<valueIn>27</valueIn><valueOut>10</valueOut>
			<valueIn>29</valueIn><valueOut>11</valueOut>
			<valueIn>31</valueIn><valueOut>12</valueOut>
		</valueMap>	

		<enumMap ruleid="alarm_status_em">
				<label>No alarm present</label>
				<label>Warning acknowledged (inactive)</label>
				<label>Warning acknowledged (active)</label>
				<label>Warning not acknowledged (inactive)</label>
				<label>Warning not acknowledged (active)</label>
				<label>Alarm acknowledged (inactive)</label>
				<label>Alarm acknowledged (active)</label>
				<label>Alarm not acknowledged (inactive)</label>
				<label>Alarm not acknowledged (active)</label>
				<label>Alarm and warning acknowledged (inactive)</label>
				<label>Alarm and warning acknowledged (active)</label>
				<label>Alarm and warning not acknowledged (inactive)</label>
				<label>Alarm and warning not acknowledged (active)</label>
		</enumMap>

		<enumMap ruleid="alarm_status_em">
				<label>Alarm Off</label>
				<label>Manual Mode</label>
				<label>Local Off (Unit stopped with local On/Off switch)</label>
				<label>System Off (Unit stopped through Bus)</label>
				<label>Standby Alarm</label>
				<label>Standby Mode</label>
				<label>Sleep Mode / Fan Off</label>
				<label>Unit On</label>
				<label>Unit On, with active Warning</label>
				<label>Unit On, with active Alarm</label>
				<label>Sleep Mode / Fan On</label>
		</enumMap>

        <stateSensor ruleid="EVENT-TYPE_SENSOR">
            <type>state</type>
            <sensorId>event-type</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>eventtype</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Event-Type</label>
			<enum>status_em</enum>
            <sensorSet>Input Registers</sensorSet>
        </stateSensor>


        <stateSensor ruleid="ALARM_INPUT_STATUS_SENSOR">
            <type>state</type>
            <sensorId>alarm_input_status</sensorId>
			<value>
				<mapValue mapid="alarm_status_vm">
                        <getOid>alarminputstatus</getOid>
				</mapValue>
            </value>
            <label>Input Register Alarm Status</label>
			<enum>alarm_status_em</enum>
            <sensorSet>Input Registers</sensorSet>
        </stateSensor>

		<alarmFlags ruleid="alarm_input_status_flag">
			<value><getOid>alarminputstatus</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Input Register Alarm</activeText>
					<inactiveText>Input Register Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Input Register Alarm condition exists.</activeText>
					<inactiveText>Input Register Alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>



        <stateSensor ruleid="UNIT_STATUS_SENSOR">
            <type>state</type>
            <sensorId>unit_status</sensorId>
            <value>
				<mapValue mapid="unit_status_vm">            
		            <getOid>unitstatus</getOid>
				</mapValue>
             </value>
            <label>Unit Status</label>
			<enum>unit_status_em</enum>
            <sensorSet>Input Registers</sensorSet>
        </stateSensor>

        <numSensor ruleid="COOLING_RAMP_SENSOR">
            <type>num</type>
			<units>percent</units>
            <sensorId>cooling_ramp</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>coolingramp</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Cooling Ramp</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>

        <stateSensor ruleid="STATUS_DEHUMIDIFICATION_SENSOR">
            <type>state</type>
            <sensorId>status_dehumidification</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>statusdehumidification</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Status Dehumidification</label>
			<enum>off_on_em</enum>
            <sensorSet>Input Registers</sensorSet>
        </stateSensor>
        <stateSensor ruleid="STATUS_ELECTRICAL_HEATER_02_SENSOR">
            <type>state</type>
            <sensorId>status_electrical_heater_02</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>statuselectricalheater02</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Status Electrical Heater 02</label>
			<enum>off_on_em</enum>
            <sensorSet>Input Registers</sensorSet>
        </stateSensor>
        <stateSensor ruleid="STATUS_ELECTRICAL_HEATER_01_SENSOR">
            <type>state</type>
            <sensorId>status_electrical_heater_01</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>statuselectricalheater01</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Status Electrical Heater 01</label>
			<enum>off_on_em</enum>
            <sensorSet>Input Registers</sensorSet>
        </stateSensor>
        <stateSensor ruleid="STATUS_COMPRESSOR_01_SENSOR">
            <type>state</type>
            <sensorId>status_compressor_01</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>statuscompressor01</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Status Compressor 01</label>
			<enum>off_on_em</enum>
            <sensorSet>Input Registers</sensorSet>
        </stateSensor>
        <stateSensor ruleid="STATUS_FAN_SENSOR">
            <type>state</type>
            <sensorId>status_fan</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>statusfan</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Status Fan</label>
			<enum>off_on_em</enum>
            <sensorSet>Input Registers</sensorSet>
        </stateSensor>


        <numSensor ruleid="ROOM_HUMIDITY_SENSOR">
            <type>humidity</type>
            <sensorId>room_humidity</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>roomhumidity</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Room Humidity</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="ROOM_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>room_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>roomtemperature</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Room Temperature</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>


        <numSensor ruleid="SUPPLY_AIR_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>supply_air_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>supplyairtemperature</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Supply Air Temperature</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>

        <numSensor ruleid="HUMIDIFIER_CURRENT_SENSOR">
            <type>amperage</type>
            <sensorId>humidifier_current</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidifiercurrent</getOid>
                    </op>
                    <op>0.01</op>
                </mult>
            </value>
            <label>Humidifier Current</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>

        <numSensor ruleid="HIROTEMP_1_VALUE_02_SENSOR">
            <type>temp</type>
            <sensorId>hirotemp_1_value_02</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>hirotemp1value02</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Hirotemp 1 Value 02</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="HIROTEMP_1_VALUE_01_SENSOR">
            <type>temp</type>
            <sensorId>hirotemp_1_value_01</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>hirotemp1value01</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Hirotemp 1 Value 01</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="ACTUAL_TEMPERATURE_SETPOINT_SENSOR">
            <type>temp</type>
            <sensorId>actual_temperature_setpoint</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>actualtemperaturesetpoint</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Actual Temperature Setpoint</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>

        <stateSensor ruleid="STATUS_COMPRESSOR_02_SENSOR">
            <type>state</type>
            <sensorId>status_compressor_02</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>statuscompressor02</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Status Compressor 02</label>
			<enum>off_on_enum</enum>
            <sensorSet>Input Registers</sensorSet>
        </stateSensor>

        <numSensor ruleid="GLYCOL_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>glycol_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>glycoltemperature</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Glycol Temperature</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTDOOR_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>outdoor_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outdoortemperature</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Outdoor Temperature</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>

        <stateSensor ruleid="FREECOOLING_STATUS_SENSOR">
            <type>state</type>
            <sensorId>freecooling_status</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>freecoolingstatus</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Freecooling Status</label>
			<enum>off_on_em</enum>
            <sensorSet>Input Registers</sensorSet>
        </stateSensor>
 
       <numSensor ruleid="RADCOOLER_RAMP_/_FANSPEED/_ANALOG_OUTPUT_SENSOR">
            <type>num</type>
			<units>percent</units>
            <sensorId>radcooler_ramp_/_fanspeed/_analog_output</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>radcoolerrampfanspeedanalogoutput</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Radcooler Ramp / Fanspeed/ Analog Output</label>
            <sensorSet>Input Registers</sensorSet>
        </numSensor>


		<stateSensor ruleid="ALARM_HOLDING_STATUS_SENSOR">
            <type>state</type>
            <sensorId>alarm_holding_status</sensorId>
			<value>
				<mapValue mapid="alarm_status_vm">
                        <getOid>alarmholdingstatus</getOid>
				</mapValue>
            </value>
            <label>Holding Register Alarm Status</label>
			<enum>alarm_status_em</enum>
            <sensorSet>Holding Registers</sensorSet>
        </stateSensor>


		<alarmFlags ruleid="alarm_holding_status_flag">
			<value><getOid>alarmholdingstatus</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Holding Register Alarm</activeText>
					<inactiveText>Holding Register Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Holding Register Alarm condition exists.</activeText>
					<inactiveText>Holding Register Alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>

		<enumMap ruleid="unit_system_em">
			<label>Unit System Off</label>
			<label>On</label>
		</enumMap>

        <stateSensor ruleid="UNIT_SYSTEM_ON/OFF_SENSOR">
            <type>state</type>
            <sensorId>unit_system_on/off</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>unitsystemonoff</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Unit System On/Off</label>
			<enum>unit_system_em</enum>
            <sensorSet>Holding Registers</sensorSet>
        </stateSensor>

        <numSensor ruleid="HEATER_WORKING_HOURS_SENSOR">
            <type>timeinhrs</type>
            <sensorId>heater_working_hours</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>heaterworkinghours</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Heater Working Hours</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="HUMIDIFIER_WORKING_HOURS_SENSOR">
            <type>timeinhrs</type>
            <sensorId>humidifier_working_hours</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidifierworkinghours</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidifier Working Hours</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="COMPRESSOR_1_WORKING_HOURS_SENSOR">
            <type>timeinhrs</type>
            <sensorId>compressor_1_working_hours</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>compressor1workinghours</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Compressor 1 Working Hours</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="CONDITIONER_WORKING_HOURS_SENSOR">
            <type>timeinhrs</type>
            <sensorId>conditioner_working_hours</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>conditionerworkinghours</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Conditioner Working Hours</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>

		<enumMap ruleid="sleep_mode_em">
			<label>No</label>
			<label>Yes</label>
			<label>Auto</label>
		</enumMap>

        <stateSensor ruleid="SLEEP_MODE_RESET_SENSOR">
            <type>state</type>
            <sensorId>sleep_mode_reset</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepmodereset</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep Mode Reset</label>
			<enum>sleep_mode_em</enum>
            <sensorSet>Holding Registers</sensorSet>
        </stateSensor>



        <numSensor ruleid="SLEEP_MODE_SECOND_INTERVAL_TO_MINUTES_SENSOR">
            <type>timeinmin</type>
            <sensorId>sleep_mode_second_interval_to_minutes</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepmodesecondintervaltominutes</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep Mode Second Interval TO Minutes</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="SLEEP_MODE_SECOND_INTERVAL_TO_HOURS_SENSOR">
            <type>timeinhrs</type>
            <sensorId>sleep_mode_second_interval_to_hours</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepmodesecondintervaltohours</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep Mode Second Interval TO Hours</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="SLEEP_MODE_SECOND_INTERVAL_FROM_MINUTES_SENSOR">
            <type>timeinmin</type>
            <sensorId>sleep_mode_second_interval_from_minutes</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepmodesecondintervalfromminutes</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep Mode Second Interval FROM Minutes</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="SLEEP_MODE_SECOND_INTERVAL_FROM_HOURS_SENSOR">
            <type>timeinhrs</type>
            <sensorId>sleep_mode_second_interval_from_hours</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepmodesecondintervalfromhours</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep Mode Second Interval FROM Hours</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="SLEEP_MODE_FIRST_INTERVAL_TO_MINUTES_SENSOR">
            <type>timeinmin</type>
            <sensorId>sleep_mode_first_interval_to_minutes</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepmodefirstintervaltominutes</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep Mode First Interval TO Minutes</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="SLEEP_MODE_FIRST_INTERVAL_TO_HOURS_SENSOR">
            <type>timeinhrs</type>
            <sensorId>sleep_mode_first_interval_to_hours</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepmodefirstintervaltohours</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep Mode First Interval TO Hours</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="SLEEP_MODE_FIRST_INTERVAL_FROM_MINUTES_SENSOR">
            <type>timeinmin</type>
            <sensorId>sleep_mode_first_interval_from_minutes</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepmodefirstintervalfromminutes</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep Mode First Interval FROM Minutes</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="SLEEP_MODE_FIRST_INTERVAL_FROM_HOURS_SENSOR">
            <type>timeinhrs</type>
            <sensorId>sleep_mode_first_interval_from_hours</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepmodefirstintervalfromhours</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep Mode First Interval FROM Hours</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="LOW_PRESSURE_DELAY_TIME_SENSOR">
            <type>timeinmin</type>
            <sensorId>low_pressure_delay_time</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>lowpressuredelaytime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Low Pressure Delay Time</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="LOW_HUMIDITY_WARNING_SENSOR">
            <type>humidity</type>
            <sensorId>low_humidity_warning</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>lowhumiditywarning</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Low Humidity Warning</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="HIGH_HUMIDITY_WARNING_SENSOR">
            <type>humidity</type>
            <sensorId>high_humidity_warning</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>highhumiditywarning</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>High Humidity Warning</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="LOW_TEMPERATURE_WARNING_SENSOR">
            <type>temp</type>
            <sensorId>low_temperature_warning</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>lowtemperaturewarning</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Low Temperature Warning</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="HIGH_TEMPERATURE_WARNING_SENSOR">
            <type>temp</type>
            <sensorId>high_temperature_warning</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>hightemperaturewarning</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>High Temperature Warning</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="NUMBER_OF_STANDBY_UNITS_SENSOR">
            <type>num</type>
            <sensorId>number_of_standby_units</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>numberofstandbyunits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Number of Standby Units</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="HUMIDITY_INTEGRAL_FACTOR_SENSOR">
            <type>timeinmin</type>
            <sensorId>humidity_integral_factor</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidityintegralfactor</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidity Integral Factor</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="TEMPERATURE_INTEGRAL_FACTOR_SENSOR">
            <type>timeinmin</type>
            <sensorId>temperature_integral_factor</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>temperatureintegralfactor</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Temperature Integral Factor</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="HUMIDITY_PROPORTIONAL_BAND_SENSOR">
            <type>humidity</type>
            <sensorId>humidity_proportional_band</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidityproportionalband</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidity Proportional Band</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="TEMPERATURE_PROPORTIONAL_BAND_SENSOR">
            <type>temp</type>
            <sensorId>temperature_proportional_band</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>temperatureproportionalband</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Temperature Proportional Band</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="TEAMWORK_ENABLED_SENSOR">
            <type>num</type>
            <sensorId>teamwork_enabled</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>teamworkenabled</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Teamwork Enabled</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="FANSPEED_STANDARD_SENSOR">
            <type>num</type>
            <sensorId>fanspeed_standard</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>fanspeedstandard</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Fanspeed Standard</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="SUPPLY_AIR_SETPOINT_SENSOR">
            <type>temp</type>
            <sensorId>supply_air_setpoint</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>supplyairsetpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Supply Air Setpoint</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="ROOM_HUMIDITY_SETPOINT_SENSOR">
            <type>humidity</type>
            <sensorId>room_humidity_setpoint</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>roomhumiditysetpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Room Humidity Setpoint</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="ROOM_TEMPERATURE_SETPOINT_01_SENSOR">
            <type>temp</type>
            <sensorId>room_temperature_setpoint_01</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>roomtemperaturesetpoint01</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Room Temperature Setpoint 01</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="ROOM_TEMPERATURE_SETPOINT_02_SENSOR">
            <type>temp</type>
            <sensorId>room_temperature_setpoint_02</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>roomtemperaturesetpoint02</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Room Temperature Setpoint 02</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="COMPRESSOR_2_WORKING_HOURS_SENSOR">
            <type>timeinhrs</type>
            <sensorId>compressor_2_working_hours</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>compressor2workinghours</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Compressor 2 Working Hours</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="FREECOOLING_WORKING_HOURS_SENSOR">
            <type>timeinhrs</type>
            <sensorId>freecooling_working_hours</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>freecoolingworkinghours</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Freecooling Working Hours</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="STOP_FREECOOLING_AT_SENSOR">
            <type>num</type>
            <sensorId>stop_freecooling_at</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>stopfreecoolingat</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Stop Freecooling at</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="FREECOOLING_DIFFERENCE_BETWEEN_ROOM_AND_GLYCOL_TEMPERATURE_SENSOR">
            <type>num</type>
            <sensorId>freecooling_difference_between_room_and_glycol_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>freecoolingdifferencebetweenroomandglycoltemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Freecooling Difference between room and glycol temperature</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>
        <numSensor ruleid="FREECOOLING_DIFFERENCE_BETWEEN_ROOM_AND_AMBIENT_TEMPERATURE_SENSOR">
            <type>num</type>
            <sensorId>freecooling_difference_between_room_and_ambient_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>freecoolingdifferencebetweenroomandambienttemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Freecooling Difference between room and ambient temperature</label>
            <sensorSet>Holding Registers</sensorSet>
        </numSensor>


	</device>
	<protocol>
		<modbus>


	       <value_ref_id valid="eventid">
                <function>4</function>
                <start_addr>0</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="controllerid">
                <function>4</function>
                <start_addr>1</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="eventminute">
                <function>4</function>
                <start_addr>2</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="eventhour">
                <function>4</function>
                <start_addr>3</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="eventdate">
                <function>4</function>
                <start_addr>4</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="eventtype">
                <function>4</function>
                <start_addr>5</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="alarmstatus">
                <function>4</function>
                <start_addr>6</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="unitstatus">
                <function>4</function>
                <start_addr>7</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="coolingramp">
                <function>4</function>
                <start_addr>8</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="statusdehumidification">
                <function>4</function>
                <start_addr>9</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="statuselectricalheater02">
                <function>4</function>
                <start_addr>10</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="statuselectricalheater01">
                <function>4</function>
                <start_addr>11</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="statuscompressor01">
                <function>4</function>
                <start_addr>12</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="statusfan">
                <function>4</function>
                <start_addr>13</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="roomhumidity">
                <function>4</function>
                <start_addr>14</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="roomtemperature">
                <function>4</function>
                <start_addr>15</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="supplyairtemperature">
                <function>4</function>
                <start_addr>16</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="humidifiercurrent">
                <function>4</function>
                <start_addr>17</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="hirotemp1value02">
                <function>4</function>
                <start_addr>18</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="hirotemp1value01">
                <function>4</function>
                <start_addr>19</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="actualtemperaturesetpoint">
                <function>4</function>
                <start_addr>20</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="statuscompressor02">
                <function>4</function>
                <start_addr>21</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="glycoltemperature">
                <function>4</function>
                <start_addr>22</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="outdoortemperature">
                <function>4</function>
                <start_addr>23</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="freecoolingstatus">
                <function>4</function>
                <start_addr>24</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="radcoolerrampfanspeedanalogoutput">
                <function>4</function>
                <start_addr>25</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
		    <value_ref_id valid="unitsystemonoff">
                <function>3</function>
                <start_addr>3</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="heaterworkinghours">
                <function>3</function>
                <start_addr>4</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="humidifierworkinghours">
                <function>3</function>
                <start_addr>5</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="compressor1workinghours">
                <function>3</function>
                <start_addr>6</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="conditionerworkinghours">
                <function>3</function>
                <start_addr>7</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="sleepmodereset">
                <function>3</function>
                <start_addr>8</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="sleepmodesecondintervaltominutes">
                <function>3</function>
                <start_addr>9</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="sleepmodesecondintervaltohours">
                <function>3</function>
                <start_addr>10</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="sleepmodesecondintervalfromminutes">
                <function>3</function>
                <start_addr>11</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="sleepmodesecondintervalfromhours">
                <function>3</function>
                <start_addr>12</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="sleepmodefirstintervaltominutes">
                <function>3</function>
                <start_addr>13</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="sleepmodefirstintervaltohours">
                <function>3</function>
                <start_addr>14</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="sleepmodefirstintervalfromminutes">
                <function>3</function>
                <start_addr>15</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="sleepmodefirstintervalfromhours">
                <function>3</function>
                <start_addr>16</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="lowpressuredelaytime">
                <function>3</function>
                <start_addr>17</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="lowhumiditywarning">
                <function>3</function>
                <start_addr>18</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="highhumiditywarning">
                <function>3</function>
                <start_addr>19</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="lowtemperaturewarning">
                <function>3</function>
                <start_addr>20</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="hightemperaturewarning">
                <function>3</function>
                <start_addr>21</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="numberofstandbyunits">
                <function>3</function>
                <start_addr>22</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="humidityintegralfactor">
                <function>3</function>
                <start_addr>23</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="temperatureintegralfactor">
                <function>3</function>
                <start_addr>24</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="humidityproportionalband">
                <function>3</function>
                <start_addr>25</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="temperatureproportionalband">
                <function>3</function>
                <start_addr>26</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="teamworkenabled">
                <function>3</function>
                <start_addr>27</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="fanspeedstandard">
                <function>3</function>
                <start_addr>28</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="supplyairsetpoint">
                <function>3</function>
                <start_addr>29</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="roomhumiditysetpoint">
                <function>3</function>
                <start_addr>30</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="roomtemperaturesetpoint01">
                <function>3</function>
                <start_addr>31</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="roomtemperaturesetpoint02">
                <function>3</function>
                <start_addr>32</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="compressor2workinghours">
                <function>3</function>
                <start_addr>33</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="freecoolingworkinghours">
                <function>3</function>
                <start_addr>34</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="stopfreecoolingat">
                <function>3</function>
                <start_addr>35</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="freecoolingdifferencebetweenroomandglycoltemperature">
                <function>3</function>
                <start_addr>36</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="freecoolingdifferencebetweenroomandambienttemperature">
                <function>3</function>
                <start_addr>37</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>

		</modbus>
	</protocol>
</APC_DDF>