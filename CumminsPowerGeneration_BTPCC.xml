<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="CumminsPowerGeneration_BTPCC" ddfname="CumminsPowerGeneration BTPCC" ddfversion="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="CumminsPowerGeneration_BTPCC">
    <setProductData ruleid="vendordata" field="vendor">Cummins Power Generation</setProductData>
    <setProductData ruleid="modeldata" field="model">BTPCC</setProductData>
    <setProductData ruleid="typedata" field="type">Transfer Switch</setProductData>
	<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
	
    <numSensor ruleid="frequency">
      <type>frequency</type>
      <units>hertz</units>
      <sensorId>_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_18</getOid>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
	
    <numSensor ruleid="total_pf">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_TOTAL_PF</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_19</getOid>
          </op>
          <op>0.00005</op>
        </mult>
      </value>
      <label>Total pf</label>
      <sensorSet>Total</sensorSet>
    </numSensor>
    <numSensor ruleid="total_kva">
      <type>num/powerKVA</type>
      <units />
      <sensorId>_TOTAL_KVA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_20</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Total kva</label>
      <sensorSet>Total</sensorSet>
    </numSensor>
    <numSensor ruleid="total_kw">
      <type>num/powerKW</type>
      <units>kilowatts</units>
      <sensorId>_TOTAL_KW</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_21</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Total kw</label>
      <sensorSet>Total</sensorSet>
    </numSensor>
    <numSensor ruleid="total_kvar">
      <type>num/powerKVAR</type>
      <units />
      <sensorId>_TOTAL_KVAR</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_22</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Total kvar</label>
      <sensorSet>Total</sensorSet>
    </numSensor>
    <numSensor ruleid="volts_ab">
      <type>voltage</type>
      <units>volts</units>
      <sensorId>_VOLTS_AB</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_23</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Volts ab</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="volts_bc">
      <type>voltage</type>
      <units>volts</units>
      <sensorId>_VOLTS_BC</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_24</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Volts bc</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="volts_ca">
      <type>voltage</type>
      <units>volts</units>
      <sensorId>_VOLTS_CA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_25</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Volts ca</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="volts_a">
      <type>voltage</type>
      <units>volts</units>
      <sensorId>_VOLTS_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_26</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Volts a</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="volts_b">
      <type>voltage</type>
      <units>volts</units>
      <sensorId>_VOLTS_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_27</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Volts b</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="volts_c">
      <type>voltage</type>
      <units>volts</units>
      <sensorId>_VOLTS_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_28</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Volts c</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="amps_a">
      <type>amperage</type>
      <units>amps</units>
      <sensorId>_AMPS_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_29</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Amps a</label>
      <sensorSet>Amps</sensorSet>
    </numSensor>
    <numSensor ruleid="amps_b">
      <type>amperage</type>
      <units>amps</units>
      <sensorId>_AMPS_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_30</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Amps b</label>
      <sensorSet>Amps</sensorSet>
    </numSensor>
    <numSensor ruleid="amps_c">
      <type>amperage</type>
      <units>amps</units>
      <sensorId>_AMPS_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_31</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Amps c</label>
      <sensorSet>Amps</sensorSet>
    </numSensor>
    <numSensor ruleid="percent_amps_a">
      <type>pctofcapacity</type>
      <units>percent</units>
      <sensorId>_PERCENT_AMPS_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_32</getOid>
          </op>
          <op>0.5</op>
        </mult>
      </value>
      <label>Percent amps a</label>
      <sensorSet>Percent Amps</sensorSet>
    </numSensor>
    <numSensor ruleid="percent_amps_b">
      <type>pctofcapacity</type>
      <units>percent</units>
      <sensorId>_PERCENT_AMPS_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_33</getOid>
          </op>
          <op>0.5</op>
        </mult>
      </value>
      <label>Percent amps b</label>
      <sensorSet>Percent Amps</sensorSet>
    </numSensor>
    <numSensor ruleid="percent_amps_c">
      <type>pctofcapacity</type>
      <units>percent</units>
      <sensorId>_PERCENT_AMPS_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_34</getOid>
          </op>
          <op>0.5</op>
        </mult>
      </value>
      <label>Percent amps c</label>
      <sensorSet>Percent Amps</sensorSet>
    </numSensor>
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <stateSensor ruleid="source_1_available">
      <type>state</type>
      <sensorId>_SOURCE_1_AVAILABLE</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Source 1 available</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="source_2_available">
      <type>state</type>
      <sensorId>_SOURCE_2_AVAILABLE</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Source 2 available</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="source_1_connected">
      <type>state</type>
      <sensorId>_SOURCE_1_CONNECTED</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Source 1 connected</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="source_2_connected">
      <type>state</type>
      <sensorId>_SOURCE_2_CONNECTED</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Source 2 connected</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ats_common_alarm">
      <type>state</type>
      <sensorId>_ATS_COMMON_ALARM</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Ats common alarm</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="not_in_auto">
      <type>state</type>
      <sensorId>_NOT_IN_AUTO</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Not in auto</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="test_/_exercise_in_progress">
      <type>state</type>
      <sensorId>_TEST_/_EXERCISE_IN_PROGRESS</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Test / exercise in progress</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="low_battery_voltage">
      <type>state</type>
      <sensorId>_LOW_BATTERY_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low battery voltage</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="load_shed">
      <type>state</type>
      <sensorId>_LOAD_SHED</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Load shed</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="transfer_inhibit">
      <type>state</type>
      <sensorId>_TRANSFER_INHIBIT</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Transfer inhibit</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="retransfer_inhibit">
      <type>state</type>
      <sensorId>_RETRANSFER_INHIBIT</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Retransfer inhibit</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fail_to_close">
      <type>state</type>
      <sensorId>_FAIL_TO_CLOSE</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fail to close</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fail_to_disconnect">
      <type>state</type>
      <sensorId>_FAIL_TO_DISCONNECT</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fail to disconnect</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fail_to_synchronize">
      <type>state</type>
      <sensorId>_FAIL_TO_SYNCHRONIZE</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Fail to synchronize</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_to_source_1">
      <type>state</type>
      <sensorId>_BYPASS_TO_SOURCE_1</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Bypass to source 1</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_to_source_2">
      <type>state</type>
      <sensorId>_BYPASS_TO_SOURCE_2</sensorId>
      <value>
        <mapValue mapid="true-false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_17</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Bypass to source 2</label>
      <enum>true-false_em</enum>
      <sensorSet>Extended</sensorSet>
    </stateSensor>
	
		<valueMap ruleid="true-false_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="true-false_em">
			<label>False</label>
			<label>True</label>
		</enumMap>
	
  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="Function_3_Reg_17">
        <function>3</function>
        <start_addr>16</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      
      <value_ref_id valid="Function_3_Reg_18">
        <function>3</function>
        <start_addr>17</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      
	  <value_ref_id valid="Function_3_Reg_19">
        <function>3</function>
        <start_addr>18</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      
	  <value_ref_id valid="Function_3_Reg_20">
        <function>3</function>
        <start_addr>19</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_21">
        <function>3</function>
        <start_addr>20</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_22">
        <function>3</function>
        <start_addr>21</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_23">
        <function>3</function>
        <start_addr>22</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_24">
        <function>3</function>
        <start_addr>23</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_25">
        <function>3</function>
        <start_addr>24</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_26">
        <function>3</function>
        <start_addr>25</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_27">
        <function>3</function>
        <start_addr>26</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_28">
        <function>3</function>
        <start_addr>27</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_29">
        <function>3</function>
        <start_addr>28</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_30">
        <function>3</function>
        <start_addr>29</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_31">
        <function>3</function>
        <start_addr>30</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_32">
        <function>3</function>
        <start_addr>31</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_33">
        <function>3</function>
        <start_addr>32</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_34">
        <function>3</function>
        <start_addr>33</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
