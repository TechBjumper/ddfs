<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="Legacy_PLCHMI" ddfname="Legacy PLCHMI" ddfversion="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="Legacy_PLCHMI">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">Legacy</setProductData>
    <setProductData ruleid="modeldata" field="model">PLC HMI</setProductData>
    <setProductData ruleid="typedata" field="type">Cooling Device</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />
      - Slave
      <commSetting field="slaveaddress" />
    </setDefaultLabel>
    <numSensor ruleid="cp_1_temperature_setpoint">
      <type>temp</type>
      <units />
      <sensorId>_CP_1_TEMPERATURE_SETPOINT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_1201</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Cp_1 temperature setpoint</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="cp_1_diï¬€eren_al_temperature_setpoint">
      <type>temp</type>
      <units />
      <sensorId>_CP_1_DIFFERENTIAL_TEMPERATURE_SETPOINT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_1205</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Cp_1 differential temperature setpoint</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="cp_2_temperature_setpoint">
      <type>temp</type>
      <units />
      <sensorId>_CP_2_TEMPERATURE_SETPOINT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_1203</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Cp_2 temperature setpoint</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="cp_2_differen_al_temperature_setpoint">
      <type>temp</type>
      <units />
      <sensorId>_CP_2_DIffEREN_AL_TEMPERATURE_SETPOINT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_1207</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Cp_2 differential temperature setpoint</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="ambient_temp_(f)">
      <type>temp</type>
      <units />
      <sensorId>_AMBIENT_TEMP_(F)</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_1047</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ambient temp (f)</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="to_process_temperature_(f)">
      <type>temp</type>
      <units />
      <sensorId>_TO_PROCESS_TEMPERATURE_(F)</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_1051</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>To process temperature (f)</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <numSensor ruleid="from_process_temperature_(f)">
      <type>temp</type>
      <units />
      <sensorId>_FROM_PROCESS_TEMPERATURE_(F)</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_1049</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>From process temperature (f)</label>
      <sensorSet>Temperature</sensorSet>
    </numSensor>
    <stateSensor ruleid="compressor_one_run_status">
      <type>state</type>
      <sensorId>_COMPRESSOR_ONE_RUN_STATUS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_1_Reg_3</getOid>
        </mapValue>
      </value>
      <label>Compressor one run status</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="compressor_two_run_status">
      <type>state</type>
      <sensorId>_COMPRESSOR_TWO_RUN_STATUS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_1_Reg_27</getOid>
        </mapValue>
      </value>
      <label>Compressor two run status</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="system_pump_one_run_status">
      <type>state</type>
      <sensorId>_SYSTEM_PUMP_ONE_RUN_STATUS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_1_Reg_2</getOid>
        </mapValue>
      </value>
      <label>System pump one run status</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="system_pump_two_run_status">
      <type>state</type>
      <sensorId>_SYSTEM_PUMP_TWO_RUN_STATUS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_1_Reg_36</getOid>
        </mapValue>
      </value>
      <label>System pump two run status</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="recirc_pump_run_status">
      <type>state</type>
      <sensorId>_RECIRC_PUMP_RUN_STATUS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_1_Reg_25</getOid>
        </mapValue>
      </value>
      <label>Recirc pump run status</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="chiller_run_status_master_switch">
      <type>state</type>
      <sensorId>_CHILLER_RUN_STATUS_MASTER_SWITCH</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>Function_1_Reg_1003</getOid>
        </mapValue>
      </value>
      <label>Chiller run status master switch</label>
      <enum>offon_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <alarmFlags ruleid="cp_1_high_pressure_alarm">
      <value>
        <getOid>Function_1_Reg_1009</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>CP_1 High Pressure Alarm Condition Present</activeText>
          <inactiveText>CP_1 High Pressure Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>CP_1 High Pressure Alarm Condition Present</activeText>
          <inactiveText>CP_1 High Pressure Alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="cp_1_low_pressure_alarm">
      <value>
        <getOid>Function_1_Reg_1011</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>CP_1 Low Pressure Alarm Condition Present</activeText>
          <inactiveText>CP_1 Low Pressure Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>CP_1 Low Pressure Alarm Condition Present</activeText>
          <inactiveText>CP_1 Low Pressure Alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="cp_2_high_pressure_alarm">
      <value>
        <getOid>Function_1_Reg_1010</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>CP_2 High Pressure Alarm Condition Present</activeText>
          <inactiveText>CP_2 High Pressure Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>CP_2 High Pressure Alarm Condition Present</activeText>
          <inactiveText>CP_2 High Pressure Alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="cp_2_low_pressure_alarm">
      <value>
        <getOid>Function_1_Reg_1012</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>CP_2 Low Pressure Alarm Condition Present</activeText>
          <inactiveText>CP_2 Low Pressure Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>CP_2 Low Pressure Alarm Condition Present</activeText>
          <inactiveText>CP_2 Low Pressure Alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="cp__1_protec_on_module">
      <value>
        <getOid>Function_1_Reg_1119</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>CP_ 1 Protec on module Condition Present</activeText>
          <inactiveText>CP_ 1 Protec on module Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>CP_ 1 Protec on module Condition Present</activeText>
          <inactiveText>CP_ 1 Protec on module Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="cp__2_protec_on_module">
      <value>
        <getOid>Function_1_Reg_1120</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>CP_ 2 Protec on module Condition Present</activeText>
          <inactiveText>CP_ 2 Protec on module Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>CP_ 2 Protec on module Condition Present</activeText>
          <inactiveText>CP_ 2 Protec on module Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="system_pump_1_flow_alarm">
      <value>
        <getOid>Function_1_Reg_1069</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>System Pump 1 Flow Alarm Condition Present</activeText>
          <inactiveText>System Pump 1 Flow Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>System Pump 1 Flow Alarm Condition Present</activeText>
          <inactiveText>System Pump 1 Flow Alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="system_pump_2_flow_alarm">
      <value>
        <getOid>Function_1_Reg_1070</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>System Pump 2 Flow Alarm Condition Present</activeText>
          <inactiveText>System Pump 2 Flow Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>System Pump 2 Flow Alarm Condition Present</activeText>
          <inactiveText>System Pump 2 Flow Alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="recirc_pump_flow_alarm">
      <value>
        <getOid>Function_1_Reg_1015</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Recirc Pump Flow Alarm Condition Present</activeText>
          <inactiveText>Recirc Pump Flow Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Recirc Pump Flow Alarm Condition Present</activeText>
          <inactiveText>Recirc Pump Flow Alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="tank_low_level_indicator">
      <value>
        <getOid>Function_1_Reg_1016</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Tank Low Level Indicator Condition Present</activeText>
          <inactiveText>Tank Low Level Indicator Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Tank Low Level Indicator Condition Present</activeText>
          <inactiveText>Tank Low Level Indicator Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="fluid_high_temp_alarm">
      <value>
        <getOid>Function_1_Reg_1017</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Fluid High Temp Alarm Condition Present</activeText>
          <inactiveText>Fluid High Temp Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Fluid High Temp Alarm Condition Present</activeText>
          <inactiveText>Fluid High Temp Alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="fluid_low_temp_alarm">
      <value>
        <getOid>Function_1_Reg_1018</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Fluid Low Temp Alarm Condition Present</activeText>
          <inactiveText>Fluid Low Temp Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Fluid Low Temp Alarm Condition Present</activeText>
          <inactiveText>Fluid Low Temp Alarm Condition Cleared</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
	
	<valueMap ruleid="offon_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="offon_em">
<label>off</label>
<label>on</label>
</enumMap>


  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="Function_3_Reg_1207">
        <function>3</function>
        <start_addr>1206</start_addr>
        <quantity>1</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1119">
        <function>1</function>
        <start_addr>1118</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_3">
        <function>1</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1015">
        <function>1</function>
        <start_addr>1014</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_1049">
        <function>3</function>
        <start_addr>1048</start_addr>
        <quantity>1</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_27">
        <function>1</function>
        <start_addr>26</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1012">
        <function>1</function>
        <start_addr>1011</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1010">
        <function>1</function>
        <start_addr>1009</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_1051">
        <function>3</function>
        <start_addr>1050</start_addr>
        <quantity>1</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1009">
        <function>1</function>
        <start_addr>1008</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_1203">
        <function>3</function>
        <start_addr>1202</start_addr>
        <quantity>1</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1018">
        <function>1</function>
        <start_addr>1017</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1016">
        <function>1</function>
        <start_addr>1015</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1017">
        <function>1</function>
        <start_addr>1016</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_36">
        <function>1</function>
        <start_addr>35</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_2">
        <function>1</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_1205">
        <function>3</function>
        <start_addr>1204</start_addr>
        <quantity>1</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1003">
        <function>1</function>
        <start_addr>1002</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1011">
        <function>1</function>
        <start_addr>1010</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1120">
        <function>1</function>
        <start_addr>1119</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1069">
        <function>1</function>
        <start_addr>1068</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_1047">
        <function>3</function>
        <start_addr>1046</start_addr>
        <quantity>1</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_1201">
        <function>3</function>
        <start_addr>1200</start_addr>
        <quantity>1</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_1070">
        <function>1</function>
        <start_addr>1069</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="Function_1_Reg_25">
        <function>1</function>
        <start_addr>24</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
