<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="ves_air_handling_unit_controller"
	ddfname="VES Air Handling Unit Controller"
	ddfversion="1"
	canremove="yes">
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="ves_air handling unit controller">
		<setProductData ruleid="vendordata" field="vendor">VES</setProductData>
		<setProductData ruleid="modeldata" field="model">Air Handling Unit Controller</setProductData>
		<setProductData ruleid="typedata" field="type">Environmental Monitor</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<numSensor ruleid="temperature-supply">
			<type>temp</type>
			<units>degreeC</units>
			<sensorId>TEMPERATURE_SUPPLY</sensorId>
			<value>
				<mult>
				<op><getOid>TEMPERATURE_SUPPLY</getOid></op>
				<op>0.01</op>
				</mult>
			</value>
			<label>Temperature Supply</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="temperature-return">
			<type>temp</type>
			<units>degreeC</units>
			<sensorId>TEMPERATURE_RETURN</sensorId>
			<value>
				<mult>
				<op><getOid>TEMPERATURE_RETURN</getOid></op>
				<op>0.01</op>
				</mult>
			</value>
			<label>Temperature Return</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="temperature-fresh">
			<type>temp</type>
			<units>degreeC</units>
			<sensorId>TEMPERATURE_FRESH</sensorId>
			<value>
				<mult>
				<op><getOid>TEMPERATURE_FRESH</getOid></op>
				<op>0.01</op>
				</mult>
			</value>
			<label>Temperature Fresh</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="pressure-supply-main-filter">
			<type>pressure</type>
			<units>kilopascals</units>
			<sensorId>PRESSURE_SUPPLY_MAIN_FILTER</sensorId>
			<value>
				<mult>
				<op><getOid>PRESSURE_SUPPLY_MAIN_FILTER</getOid></op>
				<op>0.0001</op><!-- 0.1 internal representation * 0.001 conversion from pascal -->
				</mult>
			</value>
			<label>Pressure Supply Main Filter</label>
			<sensorSet>Pressure Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="pressure-supply-pre-filter">
			<type>pressure</type>
			<units>kilopascals</units>
			<sensorId>PRESSURE_SUPPLY_PRE_FILTER</sensorId>
			<value>
				<mult>
				<op><getOid>PRESSURE_SUPPLY_PRE_FILTER</getOid></op>
				<op>0.0001</op><!-- 0.1 internal representation * 0.001 conversion from pascal -->
				</mult>
			</value>
			<label>Pressure Supply Pre Filter</label>
			<sensorSet>Pressure Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="pressure-extract-main-filter">
			<type>pressure</type>
			<units>kilopascals</units>
			<sensorId>PRESSURE_EXTRACT_MAIN_FILTER</sensorId>
			<value>
				<mult>
				<op><getOid>PRESSURE_EXTRACT_MAIN_FILTER</getOid></op>
				<op>0.0001</op><!-- 0.1 internal representation * 0.001 conversion from pascal -->
				</mult>
			</value>
			<label>Pressure Extract Main Filter</label>
			<sensorSet>Pressure Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="pressure-extract-pre-filter">
			<type>pressure</type>
			<units>kilopascals</units>
			<sensorId>PRESSURE_EXTRACT_PRE_FILTER</sensorId>
			<value>
				<mult>
				<op><getOid>PRESSURE_EXTRACT_PRE_FILTER</getOid></op>
				<op>0.0001</op><!-- 0.1 internal representation * 0.001 conversion from pascal -->
				</mult>
			</value>
			<label>Pressure Extract Pre Filter</label>
			<sensorSet>Pressure Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="speed-supply-fan-1">
			<type>num</type>
			<units>percent</units>
			<sensorId>SPEED_SUPPLY_FAN_1</sensorId>
			<value>
				<mult>
				<op><getOid>SPEED_SUPPLY_FAN_1</getOid></op>
				<op>0.01</op>
				</mult>
			</value>
			<label>Speed Supply Fan 1</label>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</numSensor>
		<numSensor ruleid="speed-extract-fan-1">
			<type>num</type>
			<units>percent</units>
			<sensorId>SPEED_EXTRACT_FAN_1</sensorId>
			<value>
				<mult>
				<op><getOid>SPEED_EXTRACT_FAN_1</getOid></op>
				<op>0.01</op>
				</mult>
			</value>
			<label>Speed Extract Fan 1</label>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</numSensor>
		<numSensor ruleid="supply-fan-1-operating-hours">
			<type>runhours</type>
			<units>runhours</units>
			<sensorId>SUPPLY_FAN_1_OPERATING_HOURS</sensorId>
			<value>
				<getOid>SUPPLY_FAN_1_OPERATING_HOURS</getOid>
			</value>
			<label>Supply Fan 1 Operating Hours</label>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</numSensor>
		<stateSensor ruleid="supply-fan-1-block-enable">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_BLOCK_ENABLE</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
                    <bitwise_and><!-- bit 0 -->
                        <op><getOid>SUPPLY_FAN_1_STATES</getOid></op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 Block Enable</label>
			<enum>onOff-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="supply-fan-1-fan-run">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_FAN_RUN</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 1 -->
						<op>
							<right_shift>
							<op>
								<getOid>SUPPLY_FAN_1_STATES</getOid>
							</op>
							<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 Fan Run</label>
			<enum>onOff-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="supply-fan-1-fan-alarm">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_FAN_ALARM</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 2 -->
						<op>
							<right_shift>
							<op>
								<getOid>SUPPLY_FAN_1_STATES</getOid>
							</op>
							<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 Fan Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="supply-fan-1-flow-indication">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_FLOW_INDICATION</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 3 -->
						<op>
							<right_shift>
							<op>
								<getOid>SUPPLY_FAN_1_STATES</getOid>
							</op>
							<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 Flow Indication</label>
			<enum>onOff-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="supply-fan-1-inverter-trip-signal-invert">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_INVERTER_TRIP_SIGNAL_INVERT</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 4 -->
						<op>
							<right_shift>
							<op>
								<getOid>SUPPLY_FAN_1_STATES</getOid>
							</op>
							<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 Inverter Trip Signal Invert</label>
			<enum>invert-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="supply-fan-1-inverter-trip">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_INVERTER_TRIP</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 5 -->
						<op>
							<right_shift>
							<op>
								<getOid>SUPPLY_FAN_1_STATES</getOid>
							</op>
							<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 Inverter Trip</label>
			<enum>onOff-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="supply-fan-1-damper-enabled">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_DAMPER_ENABLED</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 6 -->
						<op>
							<right_shift>
							<op>
								<getOid>SUPPLY_FAN_1_STATES</getOid>
							</op>
							<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 Damper Enabled</label>
			<enum>onOff-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="supply-fan-1-frost-fan-stop-enable">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_FROST_FAN_STOP_ENABLE</sensorId>
			<value>
				<mapValue mapid="booleanDefaultOne-vm">
                <formatNumber>
					<bitwise_and><!-- bit 7 -->
						<op>
							<right_shift>
							<op>
								<getOid>SUPPLY_FAN_1_STATES</getOid>
							</op>
							<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 Frost Fan Stop Enable</label>
			<enum>onOff-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="supply-fan-1-frost-alarm-activated">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_FROST_ALARM_ACTIVATED</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 8 -->
						<op>
							<right_shift>
							<op>
								<getOid>SUPPLY_FAN_1_STATES</getOid>
							</op>
							<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 Frost Alarm Activated</label>
			<enum>onOff-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="supply-fan-1-oph-reset">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_OPH_RESET</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 9 -->
						<op>
							<right_shift>
							<op>
								<getOid>SUPPLY_FAN_1_STATES</getOid>
							</op>
							<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 OpH Reset</label>
			<enum>reset-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="supply-fan-1-ehb-run-input">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_EHB_RUN_INPUT</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 10 -->
						<op>
							<right_shift>
							<op>
								<getOid>SUPPLY_FAN_1_STATES</getOid>
							</op>
							<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 EHB Run Input</label>
			<enum>onOff-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="supply-fan-1-pressure-alarm-enable">
			<type>state</type>
			<sensorId>SUPPLY_FAN_1_PRESSURE_ALARM_ENABLE</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 11 -->
						<op>
							<right_shift>
							<op>
								<getOid>SUPPLY_FAN_1_STATES</getOid>
							</op>
							<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Supply Fan 1 Pressure Alarm Enable</label>
			<enum>onOff-em</enum>
			<sensorSet>Supply Fan 1 Status</sensorSet>
		</stateSensor>
		<alarmFlags ruleid="supply-fan-1-service-alarm">
			<value><getOid>SUPPLY_FAN_1_SERVICE_ALARM</getOid></value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>Supply Fan 1 Service Alarm</activeText>
					<inactiveText>Supply Fan 1 Service Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Supply Fan 1 Service Alarm condition exists.</activeText>
					<inactiveText>A Supply Fan 1 Service Alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<numSensor ruleid="extract-fan-1-operating-hours">
			<type>runhours</type>
			<units>runhours</units>
			<sensorId>EXTRACT_FAN_1_OPERATING_HOURS</sensorId>
			<value>
				<getOid>EXTRACT_FAN_1_OPERATING_HOURS</getOid>
			</value>
			<label>Extract Fan 1 Operating Hours</label>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</numSensor>
		<stateSensor ruleid="extract-fan-1-block-enable">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_BLOCK_ENABLE</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
                    <bitwise_and><!-- bit 0 -->
                        <op><getOid>EXTRACT_FAN_1_STATES</getOid></op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 Block Enable</label>
			<enum>onOff-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="extract-fan-1-fan-run">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_FAN_RUN</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 1 -->
						<op>
							<right_shift>
							<op>
								<getOid>EXTRACT_FAN_1_STATES</getOid>
							</op>
							<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 Fan Run</label>
			<enum>onOff-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="extract-fan-1-fan-alarm">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_FAN_ALARM</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 2 -->
						<op>
							<right_shift>
							<op>
								<getOid>EXTRACT_FAN_1_STATES</getOid>
							</op>
							<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 Fan Alarm</label>
			<enum>onOff-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="extract-fan-1-flow-indication">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_FLOW_INDICATION</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 3 -->
						<op>
							<right_shift>
							<op>
								<getOid>EXTRACT_FAN_1_STATES</getOid>
							</op>
							<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 Flow Indication</label>
			<enum>onOff-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="extract-fan-1-inverter-trip-signal-invert">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_INVERTER_TRIP_SIGNAL_INVERT</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 4 -->
						<op>
							<right_shift>
							<op>
								<getOid>EXTRACT_FAN_1_STATES</getOid>
							</op>
							<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 Inverter Trip Signal Invert</label>
			<enum>invert-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="extract-fan-1-inverter-trip">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_INVERTER_TRIP</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 5 -->
						<op>
							<right_shift>
							<op>
								<getOid>EXTRACT_FAN_1_STATES</getOid>
							</op>
							<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 Inverter Trip</label>
			<enum>onOff-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="extract-fan-1-damper-enabled">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_DAMPER_ENABLED</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 6 -->
						<op>
							<right_shift>
							<op>
								<getOid>EXTRACT_FAN_1_STATES</getOid>
							</op>
							<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 Damper Enabled</label>
			<enum>onOff-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="extract-fan-1-frost-fan-stop-enable">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_FROST_FAN_STOP_ENABLE</sensorId>
			<value>
				<mapValue mapid="booleanDefaultOne-vm">
                <formatNumber>
					<bitwise_and><!-- bit 7 -->
						<op>
							<right_shift>
							<op>
								<getOid>EXTRACT_FAN_1_STATES</getOid>
							</op>
							<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 Frost Fan Stop Enable</label>
			<enum>onOff-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="extract-fan-1-frost-alarm-activated">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_FROST_ALARM_ACTIVATED</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 8 -->
						<op>
							<right_shift>
							<op>
								<getOid>EXTRACT_FAN_1_STATES</getOid>
							</op>
							<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 Frost Alarm Activated</label>
			<enum>onOff-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="extract-fan-1-oph-reset">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_OPH_RESET</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 9 -->
						<op>
							<right_shift>
							<op>
								<getOid>EXTRACT_FAN_1_STATES</getOid>
							</op>
							<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 OpH Reset</label>
			<enum>reset-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="extract-fan-1-ehb-run-input">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_EHB_RUN_INPUT</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 10 -->
						<op>
							<right_shift>
							<op>
								<getOid>EXTRACT_FAN_1_STATES</getOid>
							</op>
							<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 EHB Run Input</label>
			<enum>onOff-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="extract-fan-1-pressure-alarm-enabled">
			<type>state</type>
			<sensorId>EXTRACT_FAN_1_PRESSURE_ALARM_ENABLED</sensorId>
			<value>
				<mapValue mapid="booleanDefaultZero-vm">
                <formatNumber>
					<bitwise_and><!-- bit 11 -->
						<op>
							<right_shift>
							<op>
								<getOid>EXTRACT_FAN_1_STATES</getOid>
							</op>
							<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
                </formatNumber>            
	            </mapValue>
			</value>
			<label>Extract Fan 1 Pressure Alarm Enabled</label>
			<enum>onOff-em</enum>
			<sensorSet>Extract Fan 1 Status</sensorSet>
		</stateSensor>
		<alarmFlags ruleid="extract-fan-1-service-alarm">
			<value><getOid>EXTRACT_FAN_1_SERVICE_ALARM</getOid></value>
			<alarmFlagsTest match="1">
				<name>
					<activeText>Extract Fan 1 Service Alarm</activeText>
					<inactiveText>Extract Fan 1 Service Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Extract Fan 1 Service Alarm condition exists.</activeText>
					<inactiveText>A Extract Fan 1 Service Alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>

		<valueMap ruleid="booleanDefaultZero-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<valueMap ruleid="booleanDefaultOne-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>1</valueOut>
		</valueMap>

		<enumMap ruleid="onOff-em">
			<label>Off</label>
			<label>On</label>
		</enumMap>
		<enumMap ruleid="invert-em">
			<label>Normal</label>
			<label>Inverted</label>
		</enumMap>
		<enumMap ruleid="reset-em">
			<label>Off</label>
			<label>Reset</label>
		</enumMap>

	</device>
	<protocol>
		<modbus>
			<value_ref_id valid="TEMPERATURE_SUPPLY">
				<function>3</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="TEMPERATURE_RETURN">
				<function>3</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="TEMPERATURE_FRESH">
				<function>3</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="PRESSURE_SUPPLY_MAIN_FILTER">
				<function>3</function>
				<start_addr>32</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="PRESSURE_SUPPLY_PRE_FILTER">
				<function>3</function>
				<start_addr>33</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="PRESSURE_EXTRACT_MAIN_FILTER">
				<function>3</function>
				<start_addr>36</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="PRESSURE_EXTRACT_PRE_FILTER">
				<function>3</function>
				<start_addr>37</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="SPEED_SUPPLY_FAN_1">
				<function>3</function>
				<start_addr>40</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="SPEED_EXTRACT_FAN_1">
				<function>3</function>
				<start_addr>44</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="FRESH_AIR_DAMPER">
				<function>3</function>
				<start_addr>61</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="RETURN_AIR_DAMPER">
				<function>3</function>
				<start_addr>62</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="SUPPLY_FAN_1_OPERATING_HOURS">
				<function>3</function>
				<start_addr>75</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SUPPLY_FAN_1_STATES">
				<function>3</function>
				<start_addr>76</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SUPPLY_FAN_1_SERVICE_ALARM">
				<function>3</function>
				<start_addr>78</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="EXTRACT_FAN_1_OPERATING_HOURS">
				<function>3</function>
				<start_addr>105</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="EXTRACT_FAN_1_STATES">
				<function>3</function>
				<start_addr>106</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="EXTRACT_FAN_1_SERVICE_ALARM">
				<function>3</function>
				<start_addr>108</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>
