<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="Emerson_NX" ddfname="Emerson NX" ddfversion="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="Emerson_NX">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">Emerson</setProductData>
    <setProductData ruleid="modeldata" field="model">NX</setProductData>
    <setProductData ruleid="typedata" field="type">UPS</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />
      - Slave
      <commSetting field="slaveaddress" />
    </setDefaultLabel>
    <numSensor ruleid="input_voltage_a">
      <type>voltage</type>
      <units />
      <sensorId>_INPUT_VOLTAGE_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Input voltage a</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="input_voltage_b">
      <type>voltage</type>
      <units />
      <sensorId>_INPUT_VOLTAGE_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Input voltage b</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="input_voltage_c">
      <type>voltage</type>
      <units />
      <sensorId>_INPUT_VOLTAGE_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_5</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Input voltage c</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_voltage_a">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_VOLTAGE_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_7</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output voltage a</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_voltage_b">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_VOLTAGE_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_9</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output voltage b</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_voltage_c">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_VOLTAGE_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_11</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output voltage c</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_current_a">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_CURRENT_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_13</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output current a</label>
      <sensorSet>Ampere</sensorSet>
    </numSensor>
    <numSensor ruleid="output_current_b">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_CURRENT_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_15</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output current b</label>
      <sensorSet>Ampere</sensorSet>
    </numSensor>
    <numSensor ruleid="output_current_c">
      <type>voltage</type>
      <units />
      <sensorId>_OUTPUT_CURRENT_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_17</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output current c</label>
      <sensorSet>Ampere</sensorSet>
    </numSensor>
    <numSensor ruleid="dc_input_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_DC_INPUT_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_19</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Dc input voltage</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="output_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_OUTPUT_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_21</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
    <numSensor ruleid="ac_input_voltage_ab">
      <type>voltage</type>
      <units />
      <sensorId>_AC_INPUT_VOLTAGE_AB</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_23</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ac input voltage ab</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="ac_input_voltage_bc">
      <type>voltage</type>
      <units />
      <sensorId>_AC_INPUT_VOLTAGE_BC</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_25</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ac input voltage bc</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="ac_input_voltage_ca">
      <type>voltage</type>
      <units />
      <sensorId>_AC_INPUT_VOLTAGE_CA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_27</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Ac input voltage ca</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="input_current_a">
      <type>amperage</type>
      <units />
      <sensorId>_INPUT_CURRENT_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_29</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Input current a</label>
      <sensorSet>Ampere</sensorSet>
    </numSensor>
    <numSensor ruleid="input_current_b">
      <type>amperage</type>
      <units />
      <sensorId>_INPUT_CURRENT_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_31</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Input current b</label>
      <sensorSet>Ampere</sensorSet>
    </numSensor>
    <numSensor ruleid="input_current_c">
      <type>amperage</type>
      <units />
      <sensorId>_INPUT_CURRENT_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_33</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Input current c</label>
      <sensorSet>Ampere</sensorSet>
    </numSensor>
    <numSensor ruleid="input_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_INPUT_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_35</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Input frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
    <numSensor ruleid="input_pf_a">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_INPUT_PF_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_37</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Input pf a</label>
      <sensorSet>Power Factor</sensorSet>
    </numSensor>
    <numSensor ruleid="input_pf_b">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_INPUT_PF_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_39</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Input pf b</label>
      <sensorSet>Power Factor</sensorSet>
    </numSensor>
    <numSensor ruleid="input_pf_c">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_INPUT_PF_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_41</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Input pf c</label>
      <sensorSet>Power Factor</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_voltage_a">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_VOLTAGE_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_43</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Bypass voltage a</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_voltage_b">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_VOLTAGE_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_45</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Bypass voltage b</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_voltage_c">
      <type>voltage</type>
      <units />
      <sensorId>_BYPASS_VOLTAGE_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_47</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Bypass voltage c</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="bypass_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_BYPASS_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_49</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Bypass frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
    <numSensor ruleid="output_pf_a">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_OUTPUT_PF_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_51</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output pf a</label>
      <sensorSet>Power Factor</sensorSet>
    </numSensor>
    <numSensor ruleid="output_pf_b">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_OUTPUT_PF_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_53</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output pf b</label>
      <sensorSet>Power Factor</sensorSet>
    </numSensor>
    <numSensor ruleid="output_pf_c">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_OUTPUT_PF_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_55</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output pf c</label>
      <sensorSet>Power Factor</sensorSet>
    </numSensor>
    <numSensor ruleid="proportion_a">
      <type>num</type>
      <units />
      <sensorId>_PROPORTION_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_57</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Proportion a</label>
      <sensorSet>Proportion</sensorSet>
    </numSensor>
    <numSensor ruleid="proportion_b">
      <type>num</type>
      <units />
      <sensorId>_PROPORTION_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_59</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Proportion b</label>
      <sensorSet>Proportion</sensorSet>
    </numSensor>
    <numSensor ruleid="proportion_c">
      <type>num</type>
      <units />
      <sensorId>_PROPORTION_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_61</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Proportion c</label>
      <sensorSet>Proportion</sensorSet>
    </numSensor>
    <numSensor ruleid="output_pa">
      <type>num/powerKW</type>
      <units />
      <sensorId>_OUTPUT_PA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_63</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output pa</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="output_pb">
      <type>num/powerKW</type>
      <units />
      <sensorId>_OUTPUT_PB</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_65</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output pb</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="output_pc">
      <type>num/powerKW</type>
      <units />
      <sensorId>_OUTPUT_PC</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_67</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output pc</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="output_qa">
      <type>num/powerKVAR</type>
      <units />
      <sensorId>_OUTPUT_QA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_69</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output qa</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="output_qb">
      <type>num/powerKVAR</type>
      <units />
      <sensorId>_OUTPUT_QB</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_71</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output qb</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="output_qc">
      <type>num/powerKVAR</type>
      <units />
      <sensorId>_OUTPUT_QC</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_73</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output qc</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="output_sa">
      <type>num/powerKVA</type>
      <units />
      <sensorId>_OUTPUT_SA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_75</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output sa</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="output_sb">
      <type>num/powerKVA</type>
      <units />
      <sensorId>_OUTPUT_SB</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_77</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output sb</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="output_sc">
      <type>num/powerKVA</type>
      <units />
      <sensorId>_OUTPUT_SC</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_79</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output sc</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="output_load_a">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_OUTPUT_LOAD_A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_81</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output load a</label>
      <sensorSet>Load</sensorSet>
    </numSensor>
    <numSensor ruleid="output_load_b">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_OUTPUT_LOAD_B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_83</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output load b</label>
      <sensorSet>Load</sensorSet>
    </numSensor>
    <numSensor ruleid="output_load_c">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_OUTPUT_LOAD_C</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_85</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Output load c</label>
      <sensorSet>Load</sensorSet>
    </numSensor>
    <numSensor ruleid="sys_output_pa">
      <type>num/powerKW</type>
      <units />
      <sensorId>_SYS_OUTPUT_PA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_87</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Sys output pa</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="sys_output_pb">
      <type>num/powerKW</type>
      <units />
      <sensorId>_SYS_OUTPUT_PB</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_89</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Sys output pb</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="sys_output_pc">
      <type>num/powerKW</type>
      <units />
      <sensorId>_SYS_OUTPUT_PC</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_91</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Sys output pc</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="sys_output_sa">
      <type>num/powerKVAR</type>
      <units />
      <sensorId>_SYS_OUTPUT_SA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_93</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Sys output sa</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="sys_output_sb">
      <type>num/powerKVAR</type>
      <units />
      <sensorId>_SYS_OUTPUT_SB</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_95</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Sys output sb</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="sys_output_sc">
      <type>num/powerKVAR</type>
      <units />
      <sensorId>_SYS_OUTPUT_SC</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_97</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Sys output sc</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="sys_output_qa">
      <type>num/powerKVA</type>
      <units />
      <sensorId>_SYS_OUTPUT_QA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_99</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Sys output qa</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="sys_output_qb">
      <type>num/powerKVA</type>
      <units />
      <sensorId>_SYS_OUTPUT_QB</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_101</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Sys output qb</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="sys_output_qc">
      <type>num/powerKVA</type>
      <units />
      <sensorId>_SYS_OUTPUT_QC</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_103</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Sys output qc</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <stateSensor ruleid="power_supply_status">
      <type>state</type>
      <sensorId>_POWER_SUPPLY_STATUS</sensorId>
      <value>
        <mapValue mapid="invertermodebypassmodecheckupsouput_vm">
          <getOid>Function_3_Reg_105</getOid>
        </mapValue>
      </value>
      <label>Power supply status</label>
      <enum>invertermodebypassmodecheckupsouput_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="self_test_status">
      <type>state</type>
      <sensorId>_SELF_TEST_STATUS</sensorId>
      <value>
        <mapValue mapid="selftestingnotselftesting_vm">
          <getOid>Function_3_Reg_106</getOid>
        </mapValue>
      </value>
      <label>Self test status</label>
      <enum>selftestingnotselftesting_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="charge_status">
      <type>state</type>
      <sensorId>_CHARGE_STATUS</sensorId>
      <value>
        <mapValue mapid="floatchargingboostchargingnotcharging_vm">
          <getOid>Function_3_Reg_107</getOid>
        </mapValue>
      </value>
      <label>Charge status</label>
      <enum>floatchargingboostchargingnotcharging_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="inverter_on/off_status">
      <type>state</type>
      <sensorId>_INVERTER_ON/OFF_STATUS</sensorId>
      <value>
        <mapValue mapid="onoff_vm">
          <getOid>Function_3_Reg_108</getOid>
        </mapValue>
      </value>
      <label>Inverter on/off status</label>
      <enum>onoff_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="rectifier_power_supply&#xA;status">
      <type>state</type>
      <sensorId>_RECTIFIER_POWER_SUPPLY
STATUS</sensorId>
      <value>
        <mapValue mapid="normalmodebatterymodecheckupsoutput_vm">
          <getOid>Function_3_Reg_109</getOid>
        </mapValue>
      </value>
      <label>Rectifier power supply
status</label>
      <enum>normalmodebatterymodecheckupsoutput_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="generator_status">
      <type>state</type>
      <sensorId>_GENERATOR_STATUS</sensorId>
      <value>
        <mapValue mapid="disconnectconnect_vm">
          <getOid>Function_3_Reg_110</getOid>
        </mapValue>
      </value>
      <label>Generator status</label>
      <enum>disconnectconnect_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="input_switch_status">
      <type>state</type>
      <sensorId>_INPUT_SWITCH_STATUS</sensorId>
      <value>
        <mapValue mapid="openclosed_vm">
          <getOid>Function_3_Reg_111</getOid>
        </mapValue>
      </value>
      <label>Input switch status</label>
      <enum>openclosed_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="maintance_switch_status">
      <type>state</type>
      <sensorId>_MAINTANCE_SWITCH_STATUS</sensorId>
      <value>
        <mapValue mapid="openclosed_vm">
          <getOid>Function_3_Reg_112</getOid>
        </mapValue>
      </value>
      <label>Maintance switch status</label>
      <enum>openclosed_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_switch_status">
      <type>state</type>
      <sensorId>_BYPASS_SWITCH_STATUS</sensorId>
      <value>
        <mapValue mapid="openclosed_vm">
          <getOid>Function_3_Reg_113</getOid>
        </mapValue>
      </value>
      <label>Bypass switch status</label>
      <enum>openclosed_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="output_switch_status">
      <type>state</type>
      <sensorId>_OUTPUT_SWITCH_STATUS</sensorId>
      <value>
        <mapValue mapid="openclosed_vm">
          <getOid>Function_3_Reg_114</getOid>
        </mapValue>
      </value>
      <label>Output switch status</label>
      <enum>openclosed_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="parallel_system_power&#xA;supply_status">
      <type>state</type>
      <sensorId>_PARALLEL_SYSTEM_POWER
SUPPLY_STATUS</sensorId>
      <value>
        <mapValue mapid="checkupsoutputbypassmodenormalmodebatterymodeoutputdisabled_vm">
          <getOid>Function_3_Reg_115</getOid>
        </mapValue>
      </value>
      <label>Parallel system power
supply status</label>
      <enum>checkupsoutputbypassmodenormalmodebatterymodeoutputdisabled_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bcb_status">
      <type>state</type>
      <sensorId>_BCB_STATUS</sensorId>
      <value>
        <mapValue mapid="disconnectclosedopen_vm">
          <getOid>Function_3_Reg_116</getOid>
        </mapValue>
      </value>
      <label>Bcb status</label>
      <enum>disconnectclosedopen_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="inverter_synchronous/_asynchronous">
      <type>state</type>
      <sensorId>_INVERTER_SYNCHRONOUS/_ASYNCHRONOUS</sensorId>
      <value>
        <mapValue mapid="synchronousasynchronous_vm">
          <getOid>Function_3_Reg_117</getOid>
        </mapValue>
      </value>
      <label>Inverter synchronous/ asynchronous</label>
      <enum>synchronousasynchronous_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mains_voltage">
      <type>state</type>
      <sensorId>_MAINS_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_118</getOid>
        </mapValue>
      </value>
      <label>Mains voltage</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="rectifier">
      <type>state</type>
      <sensorId>_RECTIFIER</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_119</getOid>
        </mapValue>
      </value>
      <label>Rectifier</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="inverter">
      <type>state</type>
      <sensorId>_INVERTER</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_120</getOid>
        </mapValue>
      </value>
      <label>Inverter</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass">
      <type>state</type>
      <sensorId>_BYPASS</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_121</getOid>
        </mapValue>
      </value>
      <label>Bypass</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="battery">
      <type>state</type>
      <sensorId>_BATTERY</sensorId>
      <value>
        <mapValue mapid="normalnolowpre-warningreverse_vm">
          <getOid>Function_3_Reg_122</getOid>
        </mapValue>
      </value>
      <label>Battery</label>
      <enum>normalnolowpre-warningreverse_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="lbs_abnormal">
      <type>state</type>
      <sensorId>_LBS_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_123</getOid>
        </mapValue>
      </value>
      <label>Lbs abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_scr_fan_abnormal">
      <type>state</type>
      <sensorId>_BYPASS_SCR_FAN_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_124</getOid>
        </mapValue>
      </value>
      <label>Bypass scr fan abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="epo">
      <type>state</type>
      <sensorId>_EPO</sensorId>
      <value>
        <mapValue mapid="normalemergencyshutdown_vm">
          <getOid>Function_3_Reg_125</getOid>
        </mapValue>
      </value>
      <label>Epo</label>
      <enum>normalemergencyshutdown_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_sts_fail">
      <type>state</type>
      <sensorId>_BYPASS_STS_FAIL</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_126</getOid>
        </mapValue>
      </value>
      <label>Bypass sts fail</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_phase_reverse">
      <type>state</type>
      <sensorId>_BYPASS_PHASE_REVERSE</sensorId>
      <value>
        <mapValue mapid="normalphasereverse_vm">
          <getOid>Function_3_Reg_127</getOid>
        </mapValue>
      </value>
      <label>Bypass phase reverse</label>
      <enum>normalphasereverse_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_overcurrent">
      <type>state</type>
      <sensorId>_BYPASS_OVERCURRENT</sensorId>
      <value>
        <mapValue mapid="normalovercurrent_vm">
          <getOid>Function_3_Reg_128</getOid>
        </mapValue>
      </value>
      <label>Bypass overcurrent</label>
      <enum>normalovercurrent_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_abnormal_shutdown">
      <type>state</type>
      <sensorId>_BYPASS_ABNORMAL_SHUTDOWN</sensorId>
      <value>
        <mapValue mapid="normalabnormalshutdown_vm">
          <getOid>Function_3_Reg_129</getOid>
        </mapValue>
      </value>
      <label>Bypass abnormal shutdown</label>
      <enum>normalabnormalshutdown_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="transfer_time-out">
      <type>state</type>
      <sensorId>_TRANSFER_TIME-OUT</sensorId>
      <value>
        <mapValue mapid="normaltime-out_vm">
          <getOid>Function_3_Reg_130</getOid>
        </mapValue>
      </value>
      <label>Transfer time-out</label>
      <enum>normaltime-out_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="block_parallel_cable_abnormal">
      <type>state</type>
      <sensorId>_BLOCK_PARALLEL_CABLE_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_131</getOid>
        </mapValue>
      </value>
      <label>Block parallel cable abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="parallel_communication_fail">
      <type>state</type>
      <sensorId>_PARALLEL_COMMUNICATION_FAIL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_132</getOid>
        </mapValue>
      </value>
      <label>Parallel communication fail</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="discharge_current_limit">
      <type>state</type>
      <sensorId>_DISCHARGE_CURRENT_LIMIT</sensorId>
      <value>
        <mapValue mapid="normallimit_vm">
          <getOid>Function_3_Reg_133</getOid>
        </mapValue>
      </value>
      <label>Discharge current limit</label>
      <enum>normallimit_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fan_power_abnormal">
      <type>state</type>
      <sensorId>_FAN_POWER_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_134</getOid>
        </mapValue>
      </value>
      <label>Fan power abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="battery_converter_fault">
      <type>state</type>
      <sensorId>_BATTERY_CONVERTER_FAULT</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_135</getOid>
        </mapValue>
      </value>
      <label>Battery converter fault</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="charger_fault">
      <type>state</type>
      <sensorId>_CHARGER_FAULT</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_136</getOid>
        </mapValue>
      </value>
      <label>Charger fault</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="replace_battery">
      <type>state</type>
      <sensorId>_REPLACE_BATTERY</sensorId>
      <value>
        <mapValue mapid="normalreplace_vm">
          <getOid>Function_3_Reg_137</getOid>
        </mapValue>
      </value>
      <label>Replace battery</label>
      <enum>normalreplace_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="battery_overtemperature">
      <type>state</type>
      <sensorId>_BATTERY_OVERTEMPERATURE</sensorId>
      <value>
        <mapValue mapid="normalovertemperature_vm">
          <getOid>Function_3_Reg_138</getOid>
        </mapValue>
      </value>
      <label>Battery overtemperature</label>
      <enum>normalovertemperature_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="battery_ground_fault">
      <type>state</type>
      <sensorId>_BATTERY_GROUND_FAULT</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_139</getOid>
        </mapValue>
      </value>
      <label>Battery ground fault</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mains_freqency_abnormal">
      <type>state</type>
      <sensorId>_MAINS_FREQENCY_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_140</getOid>
        </mapValue>
      </value>
      <label>Mains freqency abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="high_freqency_inductor&#xA;overtemperature">
      <type>state</type>
      <sensorId>_HIGH_FREQENCY_INDUCTOR
OVERTEMPERATURE</sensorId>
      <value>
        <mapValue mapid="normalovertemperature_vm">
          <getOid>Function_3_Reg_141</getOid>
        </mapValue>
      </value>
      <label>High freqency inductor
overtemperature</label>
      <enum>normalovertemperature_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="input_inductor_overtemperature">
      <type>state</type>
      <sensorId>_INPUT_INDUCTOR_OVERTEMPERATURE</sensorId>
      <value>
        <mapValue mapid="normalovertemperature_vm">
          <getOid>Function_3_Reg_142</getOid>
        </mapValue>
      </value>
      <label>Input inductor overtemperature</label>
      <enum>normalovertemperature_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="input_fuse_fail">
      <type>state</type>
      <sensorId>_INPUT_FUSE_FAIL</sensorId>
      <value>
        <mapValue mapid="normalfail_vm">
          <getOid>Function_3_Reg_143</getOid>
        </mapValue>
      </value>
      <label>Input fuse fail</label>
      <enum>normalfail_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="control_power_fail">
      <type>state</type>
      <sensorId>_CONTROL_POWER_FAIL</sensorId>
      <value>
        <mapValue mapid="normalfail_vm">
          <getOid>Function_3_Reg_144</getOid>
        </mapValue>
      </value>
      <label>Control power fail</label>
      <enum>normalfail_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mains_phase_reversed">
      <type>state</type>
      <sensorId>_MAINS_PHASE_REVERSED</sensorId>
      <value>
        <mapValue mapid="normalfail_vm">
          <getOid>Function_3_Reg_145</getOid>
        </mapValue>
      </value>
      <label>Mains phase reversed</label>
      <enum>normalfail_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="soft_start_fail">
      <type>state</type>
      <sensorId>_SOFT_START_FAIL</sensorId>
      <value>
        <mapValue mapid="normalfail_vm">
          <getOid>Function_3_Reg_146</getOid>
        </mapValue>
      </value>
      <label>Soft start fail</label>
      <enum>normalfail_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="operation_invalid">
      <type>state</type>
      <sensorId>_OPERATION_INVALID</sensorId>
      <value>
        <mapValue mapid="normalinvalid_vm">
          <getOid>Function_3_Reg_147</getOid>
        </mapValue>
      </value>
      <label>Operation invalid</label>
      <enum>normalinvalid_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="output_fuse_fail">
      <type>state</type>
      <sensorId>_OUTPUT_FUSE_FAIL</sensorId>
      <value>
        <mapValue mapid="normalfail_vm">
          <getOid>Function_3_Reg_148</getOid>
        </mapValue>
      </value>
      <label>Output fuse fail</label>
      <enum>normalfail_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="block_overload">
      <type>state</type>
      <sensorId>_BLOCK_OVERLOAD</sensorId>
      <value>
        <mapValue mapid="normaloverload_vm">
          <getOid>Function_3_Reg_149</getOid>
        </mapValue>
      </value>
      <label>Block overload</label>
      <enum>normaloverload_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="system_overload">
      <type>state</type>
      <sensorId>_SYSTEM_OVERLOAD</sensorId>
      <value>
        <mapValue mapid="normaloverload_vm">
          <getOid>Function_3_Reg_150</getOid>
        </mapValue>
      </value>
      <label>System overload</label>
      <enum>normaloverload_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="block_overload_timeout">
      <type>state</type>
      <sensorId>_BLOCK_OVERLOAD_TIMEOUT</sensorId>
      <value>
        <mapValue mapid="normaloverloadtimeout_vm">
          <getOid>Function_3_Reg_151</getOid>
        </mapValue>
      </value>
      <label>Block overload timeout</label>
      <enum>normaloverloadtimeout_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="load_impact_transfer">
      <type>state</type>
      <sensorId>_LOAD_IMPACT_TRANSFER</sensorId>
      <value>
        <mapValue mapid="normaltransfer_vm">
          <getOid>Function_3_Reg_152</getOid>
        </mapValue>
      </value>
      <label>Load impact transfer</label>
      <enum>normaltransfer_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="load_sharing_abnormal">
      <type>state</type>
      <sensorId>_LOAD_SHARING_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_153</getOid>
        </mapValue>
      </value>
      <label>Load sharing abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dc_bus_abnormal">
      <type>state</type>
      <sensorId>_DC_BUS_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_154</getOid>
        </mapValue>
      </value>
      <label>Dc bus abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="system_transfer">
      <type>state</type>
      <sensorId>_SYSTEM_TRANSFER</sensorId>
      <value>
        <mapValue mapid="normaltransfer_vm">
          <getOid>Function_3_Reg_155</getOid>
        </mapValue>
      </value>
      <label>System transfer</label>
      <enum>normaltransfer_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dc_bus_over_voltage">
      <type>state</type>
      <sensorId>_DC_BUS_OVER_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="normalovervoltage_vm">
          <getOid>Function_3_Reg_156</getOid>
        </mapValue>
      </value>
      <label>Dc bus over voltage</label>
      <enum>normalovervoltage_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="communication_fail">
      <type>state</type>
      <sensorId>_COMMUNICATION_FAIL</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_157</getOid>
        </mapValue>
      </value>
      <label>Communication fail</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mains_neutral_lost">
      <type>state</type>
      <sensorId>_MAINS_NEUTRAL_LOST</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_158</getOid>
        </mapValue>
      </value>
      <label>Mains neutral lost</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="inverter_contactor_fail">
      <type>state</type>
      <sensorId>_INVERTER_CONTACTOR_FAIL</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_159</getOid>
        </mapValue>
      </value>
      <label>Inverter contactor fail</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="input_feedback">
      <type>state</type>
      <sensorId>_INPUT_FEEDBACK</sensorId>
      <value>
        <mapValue mapid="normalfeedback_vm">
          <getOid>Function_3_Reg_160</getOid>
        </mapValue>
      </value>
      <label>Input feedback</label>
      <enum>normalfeedback_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="input_current_abnormal">
      <type>state</type>
      <sensorId>_INPUT_CURRENT_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_161</getOid>
        </mapValue>
      </value>
      <label>Input current abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="output_voltage_abnormal">
      <type>state</type>
      <sensorId>_OUTPUT_VOLTAGE_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_162</getOid>
        </mapValue>
      </value>
      <label>Output voltage abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="input_current_over_limit">
      <type>state</type>
      <sensorId>_INPUT_CURRENT_OVER_LIMIT</sensorId>
      <value>
        <mapValue mapid="normaloverlimit_vm">
          <getOid>Function_3_Reg_163</getOid>
        </mapValue>
      </value>
      <label>Input current over limit</label>
      <enum>normaloverlimit_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_overtemperature">
      <type>state</type>
      <sensorId>_BYPASS_OVERTEMPERATURE</sensorId>
      <value>
        <mapValue mapid="normalovertemperature_vm">
          <getOid>Function_3_Reg_164</getOid>
        </mapValue>
      </value>
      <label>Bypass overtemperature</label>
      <enum>normalovertemperature_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="system_bypass_sts_fail">
      <type>state</type>
      <sensorId>_SYSTEM_BYPASS_STS_FAIL</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_165</getOid>
        </mapValue>
      </value>
      <label>System bypass sts fail</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="igbt_driver_cable_fault">
      <type>state</type>
      <sensorId>_IGBT_DRIVER_CABLE_FAULT</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_166</getOid>
        </mapValue>
      </value>
      <label>Igbt driver cable fault</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="scr_fan_abnormal">
      <type>state</type>
      <sensorId>_SCR_FAN_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_167</getOid>
        </mapValue>
      </value>
      <label>Scr fan abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="charger_fan_abnormal">
      <type>state</type>
      <sensorId>_CHARGER_FAN_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_168</getOid>
        </mapValue>
      </value>
      <label>Charger fan abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="subblock1_fan_abnormal">
      <type>state</type>
      <sensorId>_SUBBLOCK1_FAN_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_169</getOid>
        </mapValue>
      </value>
      <label>Subblock1 fan abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="subblock2_fan_abnormal">
      <type>state</type>
      <sensorId>_SUBBLOCK2_FAN_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_170</getOid>
        </mapValue>
      </value>
      <label>Subblock2 fan abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="subblock3_fan_abnormal">
      <type>state</type>
      <sensorId>_SUBBLOCK3_FAN_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_171</getOid>
        </mapValue>
      </value>
      <label>Subblock3 fan abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="auxpower_fan_abnormal">
      <type>state</type>
      <sensorId>_AUXPOWER_FAN_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_172</getOid>
        </mapValue>
      </value>
      <label>Auxpower fan abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="rectifier_inductor_fan_abnormal">
      <type>state</type>
      <sensorId>_RECTIFIER_INDUCTOR_FAN_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_173</getOid>
        </mapValue>
      </value>
      <label>Rectifier inductor fan abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="inverter_contactor_power_fai">
      <type>state</type>
      <sensorId>_INVERTER_CONTACTOR_POWER_FAI</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_174</getOid>
        </mapValue>
      </value>
      <label>Inverter contactor power fai</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="subblock1_overcurrent">
      <type>state</type>
      <sensorId>_SUBBLOCK1_OVERCURRENT</sensorId>
      <value>
        <mapValue mapid="normalovercurrent_vm">
          <getOid>Function_3_Reg_175</getOid>
        </mapValue>
      </value>
      <label>Subblock1 overcurrent</label>
      <enum>normalovercurrent_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="subblock2_overcurrent">
      <type>state</type>
      <sensorId>_SUBBLOCK2_OVERCURRENT</sensorId>
      <value>
        <mapValue mapid="normalovercurrent_vm">
          <getOid>Function_3_Reg_176</getOid>
        </mapValue>
      </value>
      <label>Subblock2 overcurrent</label>
      <enum>normalovercurrent_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="subblock3_overcurrent">
      <type>state</type>
      <sensorId>_SUBBLOCK3_OVERCURRENT</sensorId>
      <value>
        <mapValue mapid="normalovercurrent_vm">
          <getOid>Function_3_Reg_177</getOid>
        </mapValue>
      </value>
      <label>Subblock3 overcurrent</label>
      <enum>normalovercurrent_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="parallel_connector_abnormal">
      <type>state</type>
      <sensorId>_PARALLEL_CONNECTOR_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_178</getOid>
        </mapValue>
      </value>
      <label>Parallel connector abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_fan_power_abnormal">
      <type>state</type>
      <sensorId>_BYPASS_FAN_POWER_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_179</getOid>
        </mapValue>
      </value>
      <label>Bypass fan power abnormal</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_driver_cable_fault">
      <type>state</type>
      <sensorId>_BYPASS_DRIVER_CABLE_FAULT</sensorId>
      <value>
        <mapValue mapid="normalovertemperature_vm">
          <getOid>Function_3_Reg_180</getOid>
        </mapValue>
      </value>
      <label>Bypass driver cable fault</label>
      <enum>normalovertemperature_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="subblock1_overtemperature">
      <type>state</type>
      <sensorId>_SUBBLOCK1_OVERTEMPERATURE</sensorId>
      <value>
        <mapValue mapid="normalovertemperature_vm">
          <getOid>Function_3_Reg_181</getOid>
        </mapValue>
      </value>
      <label>Subblock1 overtemperature</label>
      <enum>normalovertemperature_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="subblock2_overtemperature">
      <type>state</type>
      <sensorId>_SUBBLOCK2_OVERTEMPERATURE</sensorId>
      <value>
        <mapValue mapid="normalovertemperature_vm">
          <getOid>Function_3_Reg_182</getOid>
        </mapValue>
      </value>
      <label>Subblock2 overtemperature</label>
      <enum>normalovertemperature_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="subblock3_overtemperature">
      <type>state</type>
      <sensorId>_SUBBLOCK3_OVERTEMPERATURE</sensorId>
      <value>
        <mapValue mapid="normalovertemperature_vm">
          <getOid>Function_3_Reg_183</getOid>
        </mapValue>
      </value>
      <label>Subblock3 overtemperature</label>
      <enum>normalovertemperature_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="scr_overtemperature">
      <type>state</type>
      <sensorId>_SCR_OVERTEMPERATURE</sensorId>
      <value>
        <mapValue mapid="normalovertemperature_vm">
          <getOid>Function_3_Reg_184</getOid>
        </mapValue>
      </value>
      <label>Scr overtemperature</label>
      <enum>normalovertemperature_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="charger_overtemperature">
      <type>state</type>
      <sensorId>_CHARGER_OVERTEMPERATURE</sensorId>
      <value>
        <mapValue mapid="normalovertemperature_vm">
          <getOid>Function_3_Reg_185</getOid>
        </mapValue>
      </value>
      <label>Charger overtemperature</label>
      <enum>normalovertemperature_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="battery_port_short">
      <type>state</type>
      <sensorId>_BATTERY_PORT_SHORT</sensorId>
      <value>
        <mapValue mapid="normalshort_vm">
          <getOid>Function_3_Reg_186</getOid>
        </mapValue>
      </value>
      <label>Battery port short</label>
      <enum>normalshort_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_auxpower_fan_abnormal">
      <type>state</type>
      <sensorId>_BYPASS_AUXPOWER_FAN_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_187</getOid>
        </mapValue>
      </value>
      <label>Bypass auxpower fan abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="inverter_aux_contactor_1_abnormal">
      <type>state</type>
      <sensorId>_INVERTER_AUX_CONTACTOR_1_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_188</getOid>
        </mapValue>
      </value>
      <label>Inverter aux contactor 1 abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="inverter_aux_contactor_2_abnormal">
      <type>state</type>
      <sensorId>_INVERTER_AUX_CONTACTOR_2_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_189</getOid>
        </mapValue>
      </value>
      <label>Inverter aux contactor 2 abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="battery_room_alarm">
      <type>state</type>
      <sensorId>_BATTERY_ROOM_ALARM</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_190</getOid>
        </mapValue>
      </value>
      <label>Battery room alarm</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bcb_status_abnormal">
      <type>state</type>
      <sensorId>_BCB_STATUS_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_191</getOid>
        </mapValue>
      </value>
      <label>Bcb status abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_neutral_lost">
      <type>state</type>
      <sensorId>_BYPASS_NEUTRAL_LOST</sensorId>
      <value>
        <mapValue mapid="normalfault_vm">
          <getOid>Function_3_Reg_192</getOid>
        </mapValue>
      </value>
      <label>Bypass neutral lost</label>
      <enum>normalfault_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bypass_in_charge">
      <type>state</type>
      <sensorId>_BYPASS_IN_CHARGE</sensorId>
      <value>
        <mapValue mapid="nochargecharge_vm">
          <getOid>Function_3_Reg_193</getOid>
        </mapValue>
      </value>
      <label>Bypass in charge</label>
      <enum>nochargecharge_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bcb1_status_abnormal">
      <type>state</type>
      <sensorId>_BCB1_STATUS_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_194</getOid>
        </mapValue>
      </value>
      <label>Bcb1 status abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bcb2_status_abnormal">
      <type>state</type>
      <sensorId>_BCB2_STATUS_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_195</getOid>
        </mapValue>
      </value>
      <label>Bcb2 status abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bcb3_status_abnormal">
      <type>state</type>
      <sensorId>_BCB3_STATUS_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_196</getOid>
        </mapValue>
      </value>
      <label>Bcb3 status abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
    <stateSensor ruleid="bcb4_status_abnormal">
      <type>state</type>
      <sensorId>_BCB4_STATUS_ABNORMAL</sensorId>
      <value>
        <mapValue mapid="normalabnormal_vm">
          <getOid>Function_3_Reg_197</getOid>
        </mapValue>
      </value>
      <label>Bcb4 status abnormal</label>
      <enum>normalabnormal_em</enum>
      <sensorSet>Generic</sensorSet>
    </stateSensor>
	
<valueMap ruleid="invertermodebypassmodecheckupsouput_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>233</valueIn>
			<valueOut>2</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="invertermodebypassmodecheckupsouput_em">
<label>Invertermode</label>
<label>Bypassmode</label>
<label>CheckUPSOuput</label>
</enumMap>

<valueMap ruleid="selftestingnotselftesting_vm">
<valueIn>224</valueIn>
			<valueOut>0</valueOut>
<valueIn>225</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="selftestingnotselftesting_em">
<label>Selftesting</label>
<label>Notselftesting</label>
</enumMap>

<valueMap ruleid="floatchargingboostchargingnotcharging_vm">
<valueIn>224</valueIn>
			<valueOut>0</valueOut>
<valueIn>225</valueIn>
			<valueOut>1</valueOut>
<valueIn>226</valueIn>
			<valueOut>2</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="floatchargingboostchargingnotcharging_em">
<label>floatcharging</label>
<label>boostcharging</label>
<label>Notcharging</label>
</enumMap>

<valueMap ruleid="onoff_vm">
<valueIn>224</valueIn>
			<valueOut>0</valueOut>
<valueIn>225</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="onoff_em">
<label>on</label>
<label>off</label>
</enumMap>

<valueMap ruleid="normalmodebatterymodecheckupsoutput_vm">
<valueIn>224</valueIn>
			<valueOut>0</valueOut>
<valueIn>225</valueIn>
			<valueOut>1</valueOut>
<valueIn>227</valueIn>
			<valueOut>2</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalmodebatterymodecheckupsoutput_em">
<label>Normalmode</label>
<label>Batterymode</label>
<label>CheckUPSOutput</label>
</enumMap>

<valueMap ruleid="disconnectconnect_vm">
<valueIn>224</valueIn>
			<valueOut>0</valueOut>
<valueIn>225</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="disconnectconnect_em">
<label>Disconnect</label>
<label>Connect</label>
</enumMap>

<valueMap ruleid="checkupsoutputbypassmodenormalmodebatterymodeoutputdisabled_vm">
<valueIn>224</valueIn>
			<valueOut>0</valueOut>
<valueIn>225</valueIn>
			<valueOut>1</valueOut>
<valueIn>226</valueIn>
			<valueOut>2</valueOut>
<valueIn>227</valueIn>
			<valueOut>3</valueOut>
<valueIn>229</valueIn>
			<valueOut>4</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="checkupsoutputbypassmodenormalmodebatterymodeoutputdisabled_em">
<label>CheckUPSoutput</label>
<label>Bypassmode</label>
<label>Normalmode</label>
<label>Batterymode</label>
<label>Outputdisabled</label>
</enumMap>

<valueMap ruleid="disconnectclosedopen_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>224</valueIn>
			<valueOut>1</valueOut>
<valueIn>225</valueIn>
			<valueOut>2</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="disconnectclosedopen_em">
<label>disconnect</label>
<label>close</label>
<label>dopen</label>
</enumMap>

<valueMap ruleid="synchronousasynchronous_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>3</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="synchronousasynchronous_em">
<label>Synchronous</label>
<label>asynchronous</label>
</enumMap>

<valueMap ruleid="normalabnormal_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalabnormal_em">
<label>Normal</label>
<label>abnormal</label>
</enumMap>

<valueMap ruleid="normalfault_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalfault_em">
<label>Normal</label>
<label>fault</label>
</enumMap>

<valueMap ruleid="normalovercurrent_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalovercurrent_em">
<label>Normal</label>
<label>overcurrent</label>
</enumMap>

<valueMap ruleid="normalshort_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalshort_em">
<label>Normal</label>
<label>short</label>
</enumMap>

<valueMap ruleid="nochargecharge_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="nochargecharge_em">
<label>Nocharge</label>
<label>Charge</label>
</enumMap>

<valueMap ruleid="normalnolowpre-warningreverse_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>242</valueIn>
			<valueOut>1</valueOut>
<valueIn>243</valueIn>
			<valueOut>2</valueOut>
<valueIn>244</valueIn>
			<valueOut>3</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalnolowpre-warningreverse_em">
<label>Normal</label>
<label>no</label>
<label>lowpre-warning</label>
<label>reverse</label>
</enumMap>

<valueMap ruleid="normalemergencyshutdown_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalemergencyshutdown_em">
<label>Normal</label>
<label>Emergencyshutdown</label>
</enumMap>

<valueMap ruleid="normalphasereverse_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalphasereverse_em">
<label>Normal</label>
<label>phasereverse</label>
</enumMap>

<valueMap ruleid="normalabnormalshutdown_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalabnormalshutdown_em">
<label>Normal</label>
<label>abnormalshutdown</label>
</enumMap>

<valueMap ruleid="normaltime-out_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normaltime-out_em">
<label>Normal</label>
<label>time-out</label>
</enumMap>

<valueMap ruleid="normallimit_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normallimit_em">
<label>Normal</label>
<label>Limit</label>
</enumMap>

<valueMap ruleid="normalreplace_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalreplace_em">
<label>Normal</label>
<label>Replace</label>
</enumMap>

<valueMap ruleid="normalfail_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalfail_em">
<label>Normal</label>
<label>fail</label>
</enumMap>

<valueMap ruleid="normalinvalid_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalinvalid_em">
<label>Normal</label>
<label>Invalid</label>
</enumMap>

<valueMap ruleid="normaloverload_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normaloverload_em">
<label>Normal</label>
<label>overload</label>
</enumMap>

<valueMap ruleid="normaloverloadtimeout_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normaloverloadtimeout_em">
<label>Normal</label>
<label>overloadtimeout</label>
</enumMap>

<valueMap ruleid="normaltransfer_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normaltransfer_em">
<label>Normal</label>
<label>Transfer</label>
</enumMap>

<valueMap ruleid="normalovervoltage_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalovervoltage_em">
<label>Normal</label>
<label>OverVoltage</label>
</enumMap>

<valueMap ruleid="normalfeedback_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normalfeedback_em">
<label>Normal</label>
<label>Feedback</label>
</enumMap>

<valueMap ruleid="normaloverlimit_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>240</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="normaloverlimit_em">
<label>Normal</label>
<label>overlimit</label>
</enumMap>


  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="Function_3_Reg_192">
        <function>3</function>
        <start_addr>191</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_109">
        <function>3</function>
        <start_addr>108</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_7">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_137">
        <function>3</function>
        <start_addr>136</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_3">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_122">
        <function>3</function>
        <start_addr>121</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_165">
        <function>3</function>
        <start_addr>164</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_193">
        <function>3</function>
        <start_addr>192</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_138">
        <function>3</function>
        <start_addr>137</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_160">
        <function>3</function>
        <start_addr>159</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_11">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_123">
        <function>3</function>
        <start_addr>122</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_13">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_166">
        <function>3</function>
        <start_addr>165</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_194">
        <function>3</function>
        <start_addr>193</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_15">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_151">
        <function>3</function>
        <start_addr>150</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_17">
        <function>3</function>
        <start_addr>16</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_25">
        <function>3</function>
        <start_addr>24</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_162">
        <function>3</function>
        <start_addr>161</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_27">
        <function>3</function>
        <start_addr>26</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_51">
        <function>3</function>
        <start_addr>50</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_19">
        <function>3</function>
        <start_addr>18</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_167">
        <function>3</function>
        <start_addr>166</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_135">
        <function>3</function>
        <start_addr>134</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_53">
        <function>3</function>
        <start_addr>52</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_61">
        <function>3</function>
        <start_addr>60</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_29">
        <function>3</function>
        <start_addr>28</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_152">
        <function>3</function>
        <start_addr>151</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_55">
        <function>3</function>
        <start_addr>54</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_63">
        <function>3</function>
        <start_addr>62</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_57">
        <function>3</function>
        <start_addr>56</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_65">
        <function>3</function>
        <start_addr>64</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_125">
        <function>3</function>
        <start_addr>124</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_108">
        <function>3</function>
        <start_addr>107</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_190">
        <function>3</function>
        <start_addr>189</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_191">
        <function>3</function>
        <start_addr>190</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_91">
        <function>3</function>
        <start_addr>90</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_59">
        <function>3</function>
        <start_addr>58</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_67">
        <function>3</function>
        <start_addr>66</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_196">
        <function>3</function>
        <start_addr>195</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_179">
        <function>3</function>
        <start_addr>178</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_69">
        <function>3</function>
        <start_addr>68</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_93">
        <function>3</function>
        <start_addr>92</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_181">
        <function>3</function>
        <start_addr>180</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_164">
        <function>3</function>
        <start_addr>163</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_95">
        <function>3</function>
        <start_addr>94</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_126">
        <function>3</function>
        <start_addr>125</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_175">
        <function>3</function>
        <start_addr>174</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_97">
        <function>3</function>
        <start_addr>96</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_111">
        <function>3</function>
        <start_addr>110</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_101">
        <function>3</function>
        <start_addr>100</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_127">
        <function>3</function>
        <start_addr>126</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_176">
        <function>3</function>
        <start_addr>175</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_161">
        <function>3</function>
        <start_addr>160</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_112">
        <function>3</function>
        <start_addr>111</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_155">
        <function>3</function>
        <start_addr>154</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_106">
        <function>3</function>
        <start_addr>105</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_150">
        <function>3</function>
        <start_addr>149</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_23">
        <function>3</function>
        <start_addr>22</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_110">
        <function>3</function>
        <start_addr>109</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_156">
        <function>3</function>
        <start_addr>155</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_107">
        <function>3</function>
        <start_addr>106</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_141">
        <function>3</function>
        <start_addr>140</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_195">
        <function>3</function>
        <start_addr>194</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_146">
        <function>3</function>
        <start_addr>145</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_131">
        <function>3</function>
        <start_addr>130</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_185">
        <function>3</function>
        <start_addr>184</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_130">
        <function>3</function>
        <start_addr>129</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_136">
        <function>3</function>
        <start_addr>135</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_121">
        <function>3</function>
        <start_addr>120</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_120">
        <function>3</function>
        <start_addr>119</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_9">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_186">
        <function>3</function>
        <start_addr>185</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_89">
        <function>3</function>
        <start_addr>88</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_143">
        <function>3</function>
        <start_addr>142</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_171">
        <function>3</function>
        <start_addr>170</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_5">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_159">
        <function>3</function>
        <start_addr>158</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_116">
        <function>3</function>
        <start_addr>115</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_140">
        <function>3</function>
        <start_addr>139</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_103">
        <function>3</function>
        <start_addr>102</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_187">
        <function>3</function>
        <start_addr>186</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_144">
        <function>3</function>
        <start_addr>143</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_172">
        <function>3</function>
        <start_addr>171</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_1">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_117">
        <function>3</function>
        <start_addr>116</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_31">
        <function>3</function>
        <start_addr>30</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_145">
        <function>3</function>
        <start_addr>144</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_113">
        <function>3</function>
        <start_addr>112</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_33">
        <function>3</function>
        <start_addr>32</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_41">
        <function>3</function>
        <start_addr>40</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_35">
        <function>3</function>
        <start_addr>34</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_43">
        <function>3</function>
        <start_addr>42</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_184">
        <function>3</function>
        <start_addr>183</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_45">
        <function>3</function>
        <start_addr>44</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_118">
        <function>3</function>
        <start_addr>117</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_37">
        <function>3</function>
        <start_addr>36</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_71">
        <function>3</function>
        <start_addr>70</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_39">
        <function>3</function>
        <start_addr>38</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_47">
        <function>3</function>
        <start_addr>46</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_170">
        <function>3</function>
        <start_addr>169</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_189">
        <function>3</function>
        <start_addr>188</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_174">
        <function>3</function>
        <start_addr>173</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_73">
        <function>3</function>
        <start_addr>72</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_81">
        <function>3</function>
        <start_addr>80</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_157">
        <function>3</function>
        <start_addr>156</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_49">
        <function>3</function>
        <start_addr>48</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_83">
        <function>3</function>
        <start_addr>82</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_142">
        <function>3</function>
        <start_addr>141</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_75">
        <function>3</function>
        <start_addr>74</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_180">
        <function>3</function>
        <start_addr>179</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_77">
        <function>3</function>
        <start_addr>76</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_85">
        <function>3</function>
        <start_addr>84</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_147">
        <function>3</function>
        <start_addr>146</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_79">
        <function>3</function>
        <start_addr>78</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_87">
        <function>3</function>
        <start_addr>86</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_132">
        <function>3</function>
        <start_addr>131</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_115">
        <function>3</function>
        <start_addr>114</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_169">
        <function>3</function>
        <start_addr>168</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_197">
        <function>3</function>
        <start_addr>196</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_99">
        <function>3</function>
        <start_addr>98</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_154">
        <function>3</function>
        <start_addr>153</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_148">
        <function>3</function>
        <start_addr>147</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_105">
        <function>3</function>
        <start_addr>104</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_182">
        <function>3</function>
        <start_addr>181</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_133">
        <function>3</function>
        <start_addr>132</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_149">
        <function>3</function>
        <start_addr>148</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_21">
        <function>3</function>
        <start_addr>20</start_addr>
        <quantity>1</quantity>
        <type>float</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_183">
        <function>3</function>
        <start_addr>182</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_134">
        <function>3</function>
        <start_addr>133</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_177">
        <function>3</function>
        <start_addr>176</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_128">
        <function>3</function>
        <start_addr>127</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_139">
        <function>3</function>
        <start_addr>138</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_188">
        <function>3</function>
        <start_addr>187</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_173">
        <function>3</function>
        <start_addr>172</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_124">
        <function>3</function>
        <start_addr>123</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_178">
        <function>3</function>
        <start_addr>177</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_129">
        <function>3</function>
        <start_addr>128</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_114">
        <function>3</function>
        <start_addr>113</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_163">
        <function>3</function>
        <start_addr>162</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_168">
        <function>3</function>
        <start_addr>167</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_119">
        <function>3</function>
        <start_addr>118</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_153">
        <function>3</function>
        <start_addr>152</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Function_3_Reg_158">
        <function>3</function>
        <start_addr>157</start_addr>
        <type>uint_16</type>
        <quantity>1</quantity>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
