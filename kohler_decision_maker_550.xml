<?xml version="1.0"?>
<!-- Test Modbus related information -->
<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="kohler_decision_maker_550"
	ddfname="Kohler Decision Maker 550 Generator"
	ddfversion="8"
	canremove="yes">
  <schemaVersion>1.6</schemaVersion>

  <!-- Kohler controllers have different models that support different register maps.
       Even within the same model, there may be 2 register maps (based on firmware version).
       This DDF is specific to the Decision Maker 550, with CODE VERSION 2.10 and above.

       The kohler_ddfid_check device needs to exist before any device definition
       that checks for a particular oid to exist or match.
     -->
  <device deviceid="kohler_ddfid_check">
      <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

      <setProductData ruleid="vendordata" field="vendor">Kohler</setProductData>
      <setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
  </device>

  <device deviceid="koeler_generator">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
    <oidMustMatch ruleid="kohler_generator_device_id" oid="device_id">
      <valueList>
        <value>20</value> <!-- Decision Maker 550 -->
      </valueList>
    </oidMustMatch>

    <setProductData ruleid="typedata" field="type">Generator</setProductData>

    <!-- Decision-Maker 550 Generator Set Controller used to monitor generators -->
    <setProductData ruleid="modeldata" field="model">Decision-Maker 550 Controller</setProductData>

    <setProductData ruleid="fwdata" field="appversion"><getOid>CODE_VERSION</getOid></setProductData>


    <numSensor ruleid="system_voltage">
      <type>voltage</type>
      <sensorId>SYSTEM_VOLTAGE</sensorId>
      <value>
        <getOid>SYSTEM_VOLTAGE</getOid>
      </value>
      <label>System Voltage</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="system_frequency">
      <type>frequency</type>
      <sensorId>SYSTEM_FREQUENCY</sensorId>
      <value>
        <getOid>SYSTEM_FREQUENCY</getOid>
      </value>
      <label>System Frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>

    <numSensor ruleid="battery_voltage">
      <type>voltage</type>
      <sensorId>BATTERY_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <mapValue mapid="value_available-vm">
                <getOid>BATTERY_VOLTAGE</getOid>
            </mapValue>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Battery Voltage</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_l1-l2">
      <type>voltage</type>
      <sensorId>VOLTAGE_L1_L2</sensorId>
      <value>
        <getOid>VOLTAGE_L1_L2</getOid>
      </value>
      <label>Voltage L1-L2</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_l2-l3">
      <type>voltage</type>
      <sensorId>VOLTAGE_L2_L3</sensorId>
      <value>
        <getOid>VOLTAGE_L2_L3</getOid>
      </value>
      <label>Voltage L2-L3</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_l3-l1">
      <type>voltage</type>
      <sensorId>VOLTAGE_L3_L1</sensorId>
      <value>
        <getOid>VOLTAGE_L3_L1</getOid>
      </value>
      <label>Voltage L3-L1</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="frequency">
      <type>frequency</type>
      <sensorId>FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>FREQUENCY</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_l1-l0">
      <type>voltage</type>
      <sensorId>VOLTAGE_L1_L0</sensorId>
      <value>
        <getOid>VOLTAGE_L1_L0</getOid>
      </value>
      <label>Voltage L1-L0</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_l2-l0">
      <type>voltage</type>
      <sensorId>VOLTAGE_L2_L0</sensorId>
      <value>
        <getOid>VOLTAGE_L2_L0</getOid>
      </value>
      <label>Voltage L2-L0</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_l3-l0">
      <type>voltage</type>
      <sensorId>VOLTAGE_L3_L0</sensorId>
      <value>
        <getOid>VOLTAGE_L3_L0</getOid>
      </value>
      <label>Voltage L3-L0</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="current_l1">
      <type>amperage</type>
      <sensorId>CURRENT_L1</sensorId>
      <value>
        <getOid>CURRENT_L1</getOid>
      </value>
      <label>Current L1</label>
      <sensorSet>Current</sensorSet>
    </numSensor>

    <numSensor ruleid="current_l2">
      <type>amperage</type>
      <sensorId>CURRENT_L2</sensorId>
      <value>
        <getOid>CURRENT_L2</getOid>
      </value>
      <label>Current L2</label>
      <sensorSet>Current</sensorSet>
    </numSensor>

    <numSensor ruleid="current_l3">
      <type>amperage</type>
      <sensorId>CURRENT_L3</sensorId>
      <value>
        <getOid>CURRENT_L3</getOid>
      </value>
      <label>Current L3</label>
      <sensorSet>Current</sensorSet>
    </numSensor>

    <numSensor ruleid="power_factor_total">
      <type>num/powerfactor</type>
      <sensorId>POWER_FACTOR_TOTAL</sensorId>
      <value>
        <mult>
          <op><getOid>POWER_FACTOR_TOTAL</getOid></op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Power Factor Total</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="total_real_power">
      <type>num/powerKW</type>
      <sensorId>TOTAL_REAL_POWER</sensorId>
      <value>
        <getOid>TOTAL_REAL_POWER</getOid>
      </value>
      <label>Total Real Power</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="power_factor_L1">
      <type>num/powerfactor</type>
      <sensorId>POWER_FACTOR_L1</sensorId>
      <value>
        <mult>
          <op><getOid>POWER_FACTOR_L1</getOid></op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Power Factor L1</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="real_power_L1">
      <type>num/powerKW</type>
      <sensorId>REAL_POWER_L1</sensorId>
      <value>
        <getOid>REAL_POWER_L1</getOid>
      </value>
      <label>Real Power L1</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="power_factor_L2">
      <type>num/powerfactor</type>
      <sensorId>POWER_FACTOR_L2</sensorId>
      <value>
        <mult>
          <op><getOid>POWER_FACTOR_L2</getOid></op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Power Factor L2</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="real_power_L2">
      <type>num/powerKW</type>
      <sensorId>REAL_POWER_L2</sensorId>
      <value>
        <getOid>REAL_POWER_L2</getOid>
      </value>
      <label>Real Power L2</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="power_factor_L3">
      <type>num/powerfactor</type>
      <sensorId>POWER_FACTOR_L3</sensorId>
      <value>
        <mult>
          <op><getOid>POWER_FACTOR_L3</getOid></op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Power Factor L3</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="real_power_L3">
      <type>num/powerKW</type>
      <sensorId>REAL_POWER_L3</sensorId>
      <value>
        <getOid>REAL_POWER_L3</getOid>
      </value>
      <label>Real Power L3</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="max_power_percent">
      <type>pctofcapacity</type>
      <sensorId>MAX_POWER_PERCENT</sensorId>
      <value>
        <getOid>MAX_POWER_PERCENT</getOid>
      </value>
      <label>Percent of Max Power</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="reactive_power_total">
      <type>num/powerKVAR</type>
      <sensorId>REACTIVE_POWER_TOTAL</sensorId>
      <value>
        <getOid>REACTIVE_POWER_TOTAL</getOid>
      </value>
      <label>Total Reactive Power</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="reactive_power_L1">
      <type>num/powerKVAR</type>
      <sensorId>REACTIVE_POWER_L1</sensorId>
      <value>
        <getOid>REACTIVE_POWER_L1</getOid>
      </value>
      <label>Reactive Power L1</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="reactive_power_L2">
      <type>num/powerKVAR</type>
      <sensorId>REACTIVE_POWER_L2</sensorId>
      <value>
        <getOid>REACTIVE_POWER_L2</getOid>
      </value>
      <label>Reactive Power L2</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="reactive_power_L3">
      <type>num/powerKVAR</type>
      <sensorId>REACTIVE_POWER_L3</sensorId>
      <value>
        <getOid>REACTIVE_POWER_L3</getOid>
      </value>
      <label>Reactive Power L3</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="apparent_power_total">
      <type>num/powerKVA</type>
      <sensorId>APPARENT_POWER_TOTAL</sensorId>
      <value>
        <getOid>APPARENT_POWER_TOTAL</getOid>
      </value>
      <label>Total Apparent Power</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="apparent_power_L1">
      <type>num/powerKVA</type>
      <sensorId>APPARENT_POWER_L1</sensorId>
      <value>
        <getOid>APPARENT_POWER_L1</getOid>
      </value>
      <label>Apparent Power L1</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="apparent_power_L2">
      <type>num/powerKVA</type>
      <sensorId>APPARENT_POWER_L2</sensorId>
      <value>
        <getOid>APPARENT_POWER_L2</getOid>
      </value>
      <label>Apparent Power L2</label>
      <sensorSet>Power</sensorSet>
    </numSensor>
    <numSensor ruleid="apparent_power_L3">
      <type>num/powerKVA</type>
      <sensorId>APPARENT_POWER_L3</sensorId>
      <value>
        <getOid>APPARENT_POWER_L3</getOid>
      </value>
      <label>Apparent Power L3</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <stateSensor ruleid="current_lead+lag_total">
      <type>state</type>
      <sensorId>CURRENT_LEADLAG_TOTAL</sensorId>
      <value>
		<mapValue mapid="leadLag-vm">
			<formatNumber printffmt="%1.0f">
			<bitwise_and>
			<op>
				<right_shift>
		        <op><getOid>CURRENT_LEADLAG</getOid></op>
				<op>0</op>
				</right_shift>
			</op>
			<op>3</op>
			</bitwise_and>
			</formatNumber>
		</mapValue>
      </value>
      <label>Total Current Lead/Lag</label>
		<enum>leadLag-em</enum>
      <sensorSet>Current</sensorSet>
    </stateSensor>
    <stateSensor ruleid="current_lead+lag_L1">
      <type>state</type>
      <sensorId>CURRENT_LEADLAG_L1</sensorId>
      <value>
		<mapValue mapid="leadLag-vm">
			<formatNumber printffmt="%1.0f">
			<bitwise_and>
			<op>
				<right_shift>
		        <op><getOid>CURRENT_LEADLAG</getOid></op>
				<op>2</op>
				</right_shift>
			</op>
			<op>3</op>
			</bitwise_and>
			</formatNumber>
		</mapValue>
      </value>
      <label>Current Lead/Lag L1</label>
		<enum>leadLag-em</enum>
      <sensorSet>Current</sensorSet>
    </stateSensor>
    <stateSensor ruleid="current_lead+lag_L2">
      <type>state</type>
      <sensorId>CURRENT_LEADLAG_L2</sensorId>
      <value>
		<mapValue mapid="leadLag-vm">
			<formatNumber printffmt="%1.0f">
			<bitwise_and>
			<op>
				<right_shift>
		        <op><getOid>CURRENT_LEADLAG</getOid></op>
				<op>4</op>
				</right_shift>
			</op>
			<op>3</op>
			</bitwise_and>
			</formatNumber>
		</mapValue>
      </value>
      <label>Current Lead/Lag L2</label>
		<enum>leadLag-em</enum>
      <sensorSet>Current</sensorSet>
    </stateSensor>
    <stateSensor ruleid="current_lead+lag_L3">
      <type>state</type>
      <sensorId>CURRENT_LEADLAG_L3</sensorId>
      <value>
		<mapValue mapid="leadLag-vm">
			<formatNumber printffmt="%1.0f">
			<bitwise_and>
			<op>
				<right_shift>
		        <op><getOid>CURRENT_LEADLAG</getOid></op>
				<op>6</op>
				</right_shift>
			</op>
			<op>3</op>
			</bitwise_and>
			</formatNumber>
		</mapValue>
      </value>
      <label>Current Lead/Lag L3</label>
		<enum>leadLag-em</enum>
      <sensorSet>Current</sensorSet>
    </stateSensor>
	<valueMap ruleid="leadLag-vm">
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>2</valueIn><valueOut>2</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>
	<enumMap ruleid="leadLag-em">
		<label>Unknown</label>
		<label>Lagging</label>
		<label>Leading</label>
	</enumMap>


    <numSensor ruleid="engine_speed">
      <type>fanspeed</type>
      <sensorId>ENGINE_SPEED</sensorId>
      <value>
        <mapValue mapid="value_available-vm">
          <getOid>ENGINE_SPEED</getOid>
        </mapValue>
      </value>
      <valueInc>1.0</valueInc>
      <label>Engine Speed</label>
      <sensorSet>Engine</sensorSet>
    </numSensor>

    <numSensor ruleid="coolant_temp">
      <type>temp</type>
      <sensorId>COOLANT_TEMP</sensorId>
      <value>
        <if>
          <op>
            <mapValue mapid="metric_units-vm">
              <getOid>metric_english</getOid>
            </mapValue>
          </op>
          <op>
            <mapValue mapid="value_available-vm">
              <getOid>COOLANT_TEMP</getOid>
            </mapValue>
          </op>
          <op>
            <!-- Need to convert -->
            <div>
              <op>
                <sub>
                  <op>
                    <mapValue mapid="value_available-vm">
                      <getOid>COOLANT_TEMP</getOid>
                    </mapValue>
                  </op>
                  <op>32</op>
                </sub>
              </op>
              <op>1.8</op>
            </div>
          </op>
        </if>
      </value>
      <label>Coolant Temperature</label>
      <sensorSet>Engine</sensorSet>
    </numSensor>

    <numSensor ruleid="oil_pressure">
      <type>pressure</type>
      <sensorId>OIL_PRESSURE</sensorId>
      <value>
        <if>
          <op>
            <mapValue mapid="metric_units-vm">
              <getOid>metric_english</getOid>
            </mapValue>
          </op>
          <op>
            <mapValue mapid="value_available-vm">
              <getOid>OIL_PRESSURE</getOid>
            </mapValue>
          </op>
          <op>
            <!-- Need to convert -->
            <mult>
              <op>
                <mapValue mapid="value_available-vm">
                  <getOid>OIL_PRESSURE</getOid>
                </mapValue>
              </op>
              <op>6.89475</op>
            </mult>
          </op>
        </if>
      </value>
      <label>Oil Pressure</label>
      <sensorSet>Engine</sensorSet>
    </numSensor>

    <numSensor ruleid="fuel_pressureSensor">
      <type>pressure</type>
      <sensorId>FUEL_PRESSURE</sensorId>
      <value>
        <if>
          <op>
            <mapValue mapid="metric_units-vm">
              <getOid>metric_english</getOid>
            </mapValue>
          </op>
          <op>
            <mapValue mapid="value_available-vm">
              <getOid>fuel_pressure</getOid>
            </mapValue>
          </op>
          <op>
            <!-- Need to convert -->
            <mult>
              <op>
                <mapValue mapid="value_available-vm">
                  <getOid>fuel_pressure</getOid>
                </mapValue>
              </op>
              <op>6.89475</op>
            </mult>
          </op>
        </if>
      </value>
      <label>Fuel Pressure</label>
      <sensorSet>Engine</sensorSet>
    </numSensor>

    <numSensor ruleid="lube_oil_temperatureSensor">
      <type>temp</type>
      <sensorId>LUBE_OIL_TEMP</sensorId>
      <value>
        <if>
          <op>
            <mapValue mapid="metric_units-vm">
              <getOid>metric_english</getOid>
            </mapValue>
          </op>
          <op>
            <mapValue mapid="value_available-vm">
              <getOid>lube_oil_temp</getOid>
            </mapValue>
          </op>
          <op>
            <!-- Need to convert -->
            <div>
              <op>
                <sub>
                  <op>
                    <mapValue mapid="value_available-vm">
                      <getOid>lube_oil_temp</getOid>
                    </mapValue>
                  </op>
                  <op>32</op>
                </sub>
              </op>
              <op>1.8</op>
            </div>
          </op>
        </if>
      </value>
      <label>Lube Oil Temp</label>
      <sensorSet>Engine</sensorSet>
    </numSensor>

    <numSensor ruleid="oil_levelSensor">
      <type>pctofcapacity</type>
      <sensorId>OIL_LEVEL_PCT</sensorId>
      <value>
        <mult>
          <op>
        <mapValue mapid="value_available-vm">
          <getOid>oil_level</getOid>
        </mapValue>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Oil Level</label>
      <sensorSet>Engine</sensorSet>
    </numSensor>

    <numSensor ruleid="total_num_startsSensor">
      <type>num</type>
      <sensorId>TOTAL_NUM_OF_STARTS</sensorId>
      <value>
        <getOid>total_num_starts</getOid>
      </value>
      <valueInc>1.0</valueInc>
      <label>Total Number of Starts</label>
      <sensorSet>Engine</sensorSet>
    </numSensor>

    <numSensor ruleid="days_since_last_start">
      <type>timeindays</type>
      <sensorId>DAYS_SINCE_LAST_START</sensorId>
      <value>
          <!--  The value is made up of 2 registers, the first 2
          bytes in the first register are day of the month.
          The second 2 bytes are the month.
          The second register is the full 4 digit year.
          Build up a date in form MM-DD-YYYY.
          Parse that value as a date.  Subtract current time,
          and divide by 86400 - the number of seconds in a day.
          -->
        <div>
          <op>
            <sub>
              <op>
                <curUTCTime/>
              </op>
              <op>
                <parseDate>
                  <formatNumber> <!-- Month -->
                    <bitwise_and>
                      <op>
                        <right_shift>
                          <op>
                            <getOid>last_start_days</getOid>
                          </op>
                          <op>16</op> <!-- Need to bit shift 2 bytes, or 16 bits -->
                        </right_shift>
                      </op>
                      <op>255</op>
                    </bitwise_and>
                  </formatNumber>/
                  <formatNumber> <!-- Day  -->
                    <right_shift>
                      <op><getOid>last_start_days</getOid></op>
                      <op>24</op> <!-- Need to bit shift 3 bytes, or 24 bits -->
                    </right_shift>
                  </formatNumber>/
                  <formatNumber> <!-- Year -->
                    <bitwise_and>
                      <op><getOid>last_start_days</getOid></op>
                      <op>65535</op> <!-- 0x0000FFFF  -->
                    </bitwise_and>
                  </formatNumber>
                </parseDate>
              </op>
            </sub>
          </op>
          <op>86400</op>
        </div>
      </value>
      <valueInc>1.0</valueInc>
      <label>Days Since Last Start</label>
      <sensorSet>Engine</sensorSet>
    </numSensor>

    <numSensor ruleid="total-runtime">
      <type>runhours</type>
      <sensorId>TOTAL_RUNTIME</sensorId>
      <value>
		<mult>
        <op>
			<add>
			<op><getOid>TOTAL_RUNTIME_LSW</getOid></op>
			<op>
				<mult>
				<op><getOid>TOTAL_RUNTIME_MSW</getOid></op>
				<op>65536</op>
				</mult>
			</op>
			</add>
		</op>
		<op>0.01</op>
		</mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Total Runtime</label>
      <sensorSet>Engine</sensorSet>
    </numSensor>
    <numSensor ruleid="last-run-length">
      <type>timeinhrs</type>
      <sensorId>LAST_RUN_LENGTH</sensorId>
      <value>
		<mult>
		<op><getOid>LAST_RUN_LENGTH</getOid></op>
		<op>0.01</op>
		</mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Last Run Length</label>
      <sensorSet>Engine</sensorSet>
    </numSensor>
    <stateSensor ruleid="last-run-loaded">
      <type>state</type>
      <sensorId>LAST_RUN_LOADED</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op><getOid>LAST_RUN_LOADED</getOid></op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Last Run Loaded</label>
      <enum>loaded-em</enum>
      <sensorSet>Engine</sensorSet>
    </stateSensor>
	<enumMap ruleid="loaded-em">
      <label>Unloaded</label>
      <label>Loaded</label>
      <label>Unknown</label>
    </enumMap>
    <stateSensor ruleid="operating-mode">
      <type>state</type>
      <sensorId>OPERATING_MODE</sensorId>
      <value>
		<mapValue mapid="leadLag-vm">
			<formatNumber printffmt="%1.0f">
			<bitwise_and>
			<op>
				<right_shift>
		        <op><getOid>OPERATING_MODE</getOid></op>
				<op>0</op>
				</right_shift>
			</op>
			<op>3</op>
			</bitwise_and>
			</formatNumber>
		</mapValue>
      </value>
      <label>Operating Mode</label>
		<enum>opMode-em</enum>
      <sensorSet>Engine</sensorSet>
    </stateSensor>
	<enumMap ruleid="opMode-em">
      <label>Unknown</label>
      <label>Standby</label>
      <label>Prime Power</label>
    </enumMap>
    <stateSensor ruleid="dsc-mode">
      <type>state</type>
      <sensorId>DSC_MODE</sensorId>
      <value>
		<mapValue mapid="normal-alarm-vm">
			<formatNumber printffmt="%1.0f">
			<bitwise_and>
			<op>
				<right_shift>
		        <op><getOid>OPERATING_MODE</getOid></op>
				<op>3</op>
				</right_shift>
			</op>
			<op>1</op>
			</bitwise_and>
			</formatNumber>
		</mapValue>
      </value>
      <label>MDEC/ADEC DSC Mode</label>
		<enum>enabled-em</enum>
      <sensorSet>Engine</sensorSet>
    </stateSensor>
    <stateSensor ruleid="vsg-mode">
      <type>state</type>
      <sensorId>VSG_MODE</sensorId>
      <value>
		<mapValue mapid="normal-alarm-vm">
			<formatNumber printffmt="%1.0f">
			<bitwise_and>
			<op>
				<right_shift>
		        <op><getOid>OPERATING_MODE</getOid></op>
				<op>4</op>
				</right_shift>
			</op>
			<op>1</op>
			</bitwise_and>
			</formatNumber>
		</mapValue>
      </value>
      <label>MDEC/ADEC VSG Mode</label>
		<enum>enabled-em</enum>
      <sensorSet>Engine</sensorSet>
    </stateSensor>
	<enumMap ruleid="enabled-em">
      <label>Disabled</label>
      <label>Enabled</label>
      <label>Unknown</label>
    </enumMap>

    <valueMap ruleid="metric_units-vm">
      <valueIn>0</valueIn>  <valueOut>[false]</valueOut>
      <valueIn>1</valueIn>  <valueOut>[true]</valueOut>
    </valueMap>

    <valueMap ruleid="value_available-vm">
      <valueIn>32726</valueIn><valueOut>0</valueOut>
      <valueIn>32727</valueIn><valueOut>0</valueOut>
      <valueIn>*</valueIn><valueOut>*</valueOut>
    </valueMap>

    <valueMap ruleid="normal-alarm-vm">
      <valueIn>0</valueIn><valueOut>0</valueOut>
      <valueIn>1</valueIn><valueOut>1</valueOut>
      <valueIn>*</valueIn><valueOut>2</valueOut>
    </valueMap>

    <valueMap ruleid="sensor_exists-vm">
      <valueIn>32726</valueIn><valueOut>[false]</valueOut>
      <valueIn>32727</valueIn><valueOut>[false]</valueOut>
      <valueIn>*</valueIn><valueOut>[true]</valueOut>
    </valueMap>

    <enumMap ruleid="event_code-em">
      <label>Normal</label>
      <label>Active</label>
      <label>Unknown</label>
    </enumMap>

    <stateSensor ruleid="emergency_stop">
      <type>state</type>
      <sensorId>EMERGENCY_STOP</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op><getOid>event_code_reg_1500</getOid></op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Emergency Stop</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="overspeed">
      <type>state</type>
      <sensorId>OVERSPEED</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Overspeed</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="overcrank">
      <type>state</type>
      <sensorId>OVERCRANK</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Overcrank</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="high_coolant_temperature_shutdown">
      <type>state</type>
      <sensorId>HIGH_COOLANT_TEMPERATURE_SHUTDOWN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High Coolant Temperature Shutdown</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="oil_pressure_shutdown">
      <type>state</type>
      <sensorId>OIL_PRESSURE_SHUTDOWN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil Pressure Shutdown</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="low_coolant_temperature_warn">
      <type>state</type>
      <sensorId>LOW_COOLANT_TEMPERATURE_WARN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Coolant Temperature Warn.</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="low_fuel">
      <type>state</type>
      <sensorId>LOW_FUEL</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Fuel</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="high_coolant_temperature_warning">
      <type>state</type>
      <sensorId>HIGH_COOLANT_TEMPERATURE_WARNING</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High Coolant Temperature Warning</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="oil_pressure_warning">
      <type>state</type>
      <sensorId>OIL_PRESSURE_WARNING</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil Pressure Warning</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="master_not_in_auto">
      <type>state</type>
      <sensorId>MASTER_NOT_IN_AUTO</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Master Not In Auto</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="nfpa_110_fault">
      <type>state</type>
      <sensorId>NFPA_110_FAULT</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NFPA 110 Fault</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="low_battery_voltage">
      <type>state</type>
      <sensorId>LOW_BATTERY_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Battery Voltage</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="high_battery_voltage">
      <type>state</type>
      <sensorId>HIGH_BATTERY_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High Battery Voltage</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="battery_charger_fault">
      <type>state</type>
      <sensorId>BATTERY_CHARGER_FAULT</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Battery Charger Fault</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="system_ready">
      <type>state</type>
      <sensorId>SYSTEM_READY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>System Ready</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="loss_of_ecm_comm">
      <type>state</type>
      <sensorId>LOSS_OF_ECM_COMM</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Loss of ECM Comm</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="no_oil_pressure_signal">
      <type>state</type>
      <sensorId>NO_OIL_PRESSURE_SIGNAL</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op><getOid>event_code_reg_1501</getOid></op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>No Oil Pressure Signal</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="high_oil_temperature_shutdown">
      <type>state</type>
      <sensorId>HIGH_OIL_TEMPERATURE_SHUTDOWN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High Oil Temperature Shutdown</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="no_coolant_temperature_signal">
      <type>state</type>
      <sensorId>NO_COOLANT_TEMPERATURE_SIGNAL</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>No Coolant Temperature Signal</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="low_coolant_level">
      <type>state</type>
      <sensorId>LOW_COOLANT_LEVEL</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Coolant Level</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="speed_sensor_fault">
      <type>state</type>
      <sensorId>SPEED_SENSOR_FAULT</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Speed Sensor Fault</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="locked_rotor">
      <type>state</type>
      <sensorId>LOCKED_ROTOR</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Locked Rotor</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="master_switch_error">
      <type>state</type>
      <sensorId>MASTER_SWITCH_ERROR</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Master Switch Error</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="master_switch_open">
      <type>state</type>
      <sensorId>MASTER_SWITCH_OPEN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Master Switch Open</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="master_switch_off">
      <type>state</type>
      <sensorId>MASTER_SWITCH_OFF</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Master Switch Off</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="ac_sensing_loss">
      <type>state</type>
      <sensorId>AC_SENSING_LOSS</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>AC Sensing Loss</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="over_voltage">
      <type>state</type>
      <sensorId>OVER_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Over Voltage</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="under_voltage">
      <type>state</type>
      <sensorId>UNDER_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Under Voltage</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="weak_battery">
      <type>state</type>
      <sensorId>WEAK_BATTERY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Weak Battery</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="over_frequency">
      <type>state</type>
      <sensorId>OVER_FREQUENCY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Over Frequency</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="under_frequency">
      <type>state</type>
      <sensorId>UNDER_FREQUENCY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Under Frequency</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="load_shed_kw_overload">
      <type>state</type>
      <sensorId>LOAD_SHED_KW_OVERLOAD</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Load Shed kW Overload</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="load_shed_kw_under_frequency">
      <type>state</type>
      <sensorId>LOAD_SHED_KW_UNDER_FREQUENCY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op><getOid>event_code_reg_1502</getOid></op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Load Shed kW Under Frequency</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="over_current_warning">
      <type>state</type>
      <sensorId>OVER_CURRENT_WARNING</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Over Current Warning</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="eps_supplying_load">
      <type>state</type>
      <sensorId>EPS_SUPPLYING_LOAD</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Generator Powering Load</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="internal_fault">
      <type>state</type>
      <sensorId>INTERNAL_FAULT</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Internal Fault</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="engine_cooldown_oelay">
      <type>state</type>
      <sensorId>ENGINE_COOLDOWN_OELAY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Engine Cooling Down</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="engine_start_delay">
      <type>state</type>
      <sensorId>ENGINE_START_DELAY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Engine Start Delay</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="starting_aid">
      <type>state</type>
      <sensorId>STARTING_AID</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Starting Aid</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="generator_running">
      <type>state</type>
      <sensorId>GENERATOR_RUNNING</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Generator Running</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="air_damper_control">
      <type>state</type>
      <sensorId>AIR_DAMPER_CONTROL</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Air Damper Control</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="ground_fault">
      <type>state</type>
      <sensorId>GROUND_FAULT</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Ground Fault</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="eeprom_write_failure">
      <type>state</type>
      <sensorId>EEPROM_WRITE_FAILURE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>EEPROM Write Failure</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="critical_overvoltage">
      <type>state</type>
      <sensorId>CRITICAL_OVERVOLTAGE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Critical Overvoltage</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="alternator_protect_shutdown">
      <type>state</type>
      <sensorId>ALTERNATOR_PROTECT_SHUTDOWN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Alternator Protect Shutdown</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

    <stateSensor ruleid="air_damper_indicator">
      <type>state</type>
      <sensorId>AIR_DAMPER_INDICATOR</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Air Damper Indicator</label>
      <enum>event_code-em</enum>
      <sensorSet>System Events</sensorSet>
    </stateSensor>

		<alarmFlags ruleid="reg-1500-alarms">
			<value><getOid>event_code_reg_1500</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Emergency Stop</activeText>
					<inactiveText>Emergency Stop Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Emergency Stop condition exists.</activeText>
					<inactiveText>Emergency Stop condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2">
				<name>
					<activeText>Overspeed</activeText>
					<inactiveText>Overspeed Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Overspeed condition exists.</activeText>
					<inactiveText>Overspeed condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4">
				<name>
					<activeText>Overcrank</activeText>
					<inactiveText>Overcrank Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Overcrank condition exists.</activeText>
					<inactiveText>Overcrank condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8">
				<name>
					<activeText>High Coolant Temp Shutdown</activeText>
					<inactiveText>High Coolant Temp Shutdown Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A High Coolant Temp Shutdown condition exists.</activeText>
					<inactiveText>High Coolant Temp Shutdown condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10">
				<name>
					<activeText>Oil Pressure Shutdown</activeText>
					<inactiveText>Oil Pressure Shutdown Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Oil Pressure Shutdown condition exists.</activeText>
					<inactiveText>Oil Pressure Shutdown condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20">
				<name>
					<activeText>Low Water Temperature</activeText>
					<inactiveText>Low Water Temperature Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Low Water Temperature condition exists.</activeText>
					<inactiveText>Low Water Temperature condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40">
				<name>
					<activeText>Low Fuel Warning</activeText>
					<inactiveText>Low Fuel Warning Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Low Fuel Warning condition exists.</activeText>
					<inactiveText>Low Fuel Warning condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80">
				<name>
					<activeText>High Coolant Temperature Warning</activeText>
					<inactiveText>High Coolant Temperature Warning Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A High Coolant Temperature Warning condition exists.</activeText>
					<inactiveText>High Coolant Temperature Warning condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100">
				<name>
					<activeText>Oil Pressure Warning</activeText>
					<inactiveText>Oil Pressure Warning Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Oil Pressure Warning condition exists.</activeText>
					<inactiveText>Oil Pressure Warning condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200">
				<name>
					<activeText>Master Not In Auto</activeText>
					<inactiveText>Master Not In Auto Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Master Not In Auto condition exists.</activeText>
					<inactiveText>Master Not In Auto condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400">
				<name>
					<activeText>NFPA110 Fault</activeText>
					<inactiveText>NFPA110 Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An NFPA110 Fault condition exists.</activeText>
					<inactiveText>NFPA110 Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800">
				<name>
					<activeText>Low Battery Voltage</activeText>
					<inactiveText>Low Battery Voltage Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Low Battery Voltage condition exists.</activeText>
					<inactiveText>Low Battery Voltage condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000">
				<name>
					<activeText>High Battery Voltage</activeText>
					<inactiveText>High Battery Voltage Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A High Battery Voltage condition exists.</activeText>
					<inactiveText>High Battery Voltage condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000">
				<name>
					<activeText>Battery Charger Fault</activeText>
					<inactiveText>Battery Charger Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Charger Fault condition exists.</activeText>
					<inactiveText>Battery Charger Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="0">
				<name>
					<activeText>System Not Ready</activeText>
					<inactiveText>System Ready</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>The System is not ready.</activeText>
					<inactiveText>The System is ready.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000">
				<name>
					<activeText>Loss of ECM Comm</activeText>
					<inactiveText>Loss of ECM Comm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Loss of ECM Comm condition exists.</activeText>
					<inactiveText>Loss of ECM Comm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="reg-1501-alarms">
			<value><getOid>event_code_reg_1501</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>No Oil Pressure Signal</activeText>
					<inactiveText>No Oil Pressure Signal Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A No Oil Pressure Signal condition exists.</activeText>
					<inactiveText>No Oil Pressure Signal condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2">
				<name>
					<activeText>High Oil Temperature Shutdown</activeText>
					<inactiveText>High Oil Temperature Shutdown Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A High Oil Temperature Shutdown condition exists.</activeText>
					<inactiveText>High Oil Temperature Shutdown condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4">
				<name>
					<activeText>No Coolant Temperature Signal</activeText>
					<inactiveText>No Coolant Temperature Signal Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A No Coolant Temperature Signal condition exists.</activeText>
					<inactiveText>No Coolant Temperature Signal condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8">
				<name>
					<activeText>Low Coolant Level</activeText>
					<inactiveText>Low Coolant Level Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Low Coolant Level condition exists.</activeText>
					<inactiveText>Low Coolant Level condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10">
				<name>
					<activeText>Speed Sensor Fault</activeText>
					<inactiveText>Speed Sensor Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Speed Sensor Fault condition exists.</activeText>
					<inactiveText>Speed Sensor Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20">
				<name>
					<activeText>Locked Rotor</activeText>
					<inactiveText>Locked Rotor Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Locked Rotor condition exists.</activeText>
					<inactiveText>Locked Rotor condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40">
				<name>
					<activeText>Master Switch Error</activeText>
					<inactiveText>Master Switch Error Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Master Switch Error condition exists.</activeText>
					<inactiveText>Master Switch Error condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80">
				<name>
					<activeText>Master Switch Open</activeText>
					<inactiveText>Master Switch Open Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Master Switch Open condition exists.</activeText>
					<inactiveText>Master Switch Open condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100">
				<name>
					<activeText>Master Switch Off</activeText>
					<inactiveText>Master Switch Off Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Master Switch Off condition exists.</activeText>
					<inactiveText>Master Switch Off condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200">
				<name>
					<activeText>AC Sensing Loss</activeText>
					<inactiveText>AC Sensing Loss Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An AC Sensing Loss condition exists.</activeText>
					<inactiveText>AC Sensing Loss condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400">
				<name>
					<activeText>Over Voltage</activeText>
					<inactiveText>Over Voltage Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Over Voltage condition exists.</activeText>
					<inactiveText>Over Voltage condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800">
				<name>
					<activeText>Under Voltage</activeText>
					<inactiveText>Under Voltage Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Under Voltage condition exists.</activeText>
					<inactiveText>Under Voltage condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000">
				<name>
					<activeText>Weak Battery</activeText>
					<inactiveText>Weak Battery Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Weak Battery condition exists.</activeText>
					<inactiveText>Weak Battery condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000">
				<name>
					<activeText>Over Frequency</activeText>
					<inactiveText>Over Frequency Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Over Frequency condition exists.</activeText>
					<inactiveText>Over Frequency condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000">
				<name>
					<activeText>Under Frequency</activeText>
					<inactiveText>Under Frequency Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Under Frequency condition exists.</activeText>
					<inactiveText>Under Frequency condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000">
				<name>
					<activeText>Load Shed kW Overload</activeText>
					<inactiveText>Load Shed kW Overload Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Load Shed kW Overload condition exists.</activeText>
					<inactiveText>Load Shed kW Overload condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="reg-1502-alarms">
			<value><getOid>event_code_reg_1502</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Load Shed kW Under Frequency</activeText>
					<inactiveText>Load Shed kW Under Frequency Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Load Shed kW Under Frequency condition exists.</activeText>
					<inactiveText>Load Shed kW Under Frequency condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2">
				<name>
					<activeText>Over Current</activeText>
					<inactiveText>Over Current Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Over Current condition exists.</activeText>
					<inactiveText>Over Current condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4">
				<name>
					<activeText>EPS Supplying Load</activeText>
					<inactiveText>EPS Supplying Load Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An EPS Supplying Load condition exists.</activeText>
					<inactiveText>EPS Supplying Load condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8">
				<name>
					<activeText>Internal Fault</activeText>
					<inactiveText>Internal Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Internal Fault condition exists.</activeText>
					<inactiveText>Internal Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10">
				<name>
					<activeText>Engine Cooldown Delay</activeText>
					<inactiveText>Engine Cooldown Delay Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Engine Cooldown Delay condition exists.</activeText>
					<inactiveText>Engine Cooldown Delay condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20">
				<name>
					<activeText>Engine Start Delay</activeText>
					<inactiveText>Engine Start Delay Cleared</inactiveText>
				</name>
				<severity>information</severity>
				<category>System</category>
				<description>
					<activeText>An Engine Start Delay condition exists.</activeText>
					<inactiveText>Engine Start Delay condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40">
				<name>
					<activeText>Starting Aid</activeText>
					<inactiveText>Starting Aid Cleared</inactiveText>
				</name>
				<severity>information</severity>
				<category>System</category>
				<description>
					<activeText>A Starting Aid condition exists.</activeText>
					<inactiveText>Starting Aid condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80">
				<name>
					<activeText>Generator Running</activeText>
					<inactiveText>Generator Running Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Generator Running condition exists.</activeText>
					<inactiveText>Generator Running condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100">
				<name>
					<activeText>Air Damper Control</activeText>
					<inactiveText>Air Damper Control Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Air Damper Control condition exists.</activeText>
					<inactiveText>Air Damper Control condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200">
				<name>
					<activeText>Ground Fault</activeText>
					<inactiveText>Ground Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Ground Fault condition exists.</activeText>
					<inactiveText>Ground Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400">
				<name>
					<activeText>EEPROM Write Failure</activeText>
					<inactiveText>EEPROM Write Failure Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An EEPROM Write Failure condition exists.</activeText>
					<inactiveText>EEPROM Write Failure condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800">
				<name>
					<activeText>Critical Overvoltage</activeText>
					<inactiveText>Critical Overvoltage Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Critical Overvoltage condition exists.</activeText>
					<inactiveText>Critical Overvoltage condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000">
				<name>
					<activeText>Alternator Protect Shutdown</activeText>
					<inactiveText>Alternator Protect Shutdown Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Alternator Protect Shutdown condition exists.</activeText>
					<inactiveText>Alternator Protect Shutdown condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000">
				<name>
					<activeText>Air Damper Indicator</activeText>
					<inactiveText>Air Damper Indicator Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Air Damper Indicator condition exists.</activeText>
					<inactiveText>Air Damper Indicator condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>

  </device>

  <protocol>
    <modbus>
      <value_ref_id valid="VOLTAGE_L1_L2">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOLTAGE_L2_L3">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOLTAGE_L3_L1">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FREQUENCY">
        <function>3</function>
        <start_addr>9</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOLTAGE_L1_L0">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOLTAGE_L2_L0">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOLTAGE_L3_L0">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="CURRENT_L1">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CURRENT_L2">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CURRENT_L3">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="ENGINE_SPEED">
        <function>3</function>
        <start_addr>34</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="COOLANT_TEMP">
        <function>3</function>
        <start_addr>33</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="OIL_PRESSURE">
        <function>3</function>
        <start_addr>32</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="POWER_FACTOR">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="TOTAL_REAL_POWER">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAX_POWER_PERCENT">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="REAL_POWER_L1">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="POWER_FACTOR_L1">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="REAL_POWER_L2">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="POWER_FACTOR_L2">
        <function>3</function>
        <start_addr>16</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="REAL_POWER_L3">
        <function>3</function>
        <start_addr>17</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="POWER_FACTOR_L3">
        <function>3</function>
        <start_addr>18</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>

      <value_ref_id valid="REACTIVE_POWER_TOTAL">
        <function>3</function>
        <start_addr>19</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="REACTIVE_POWER_L1">
        <function>3</function>
        <start_addr>20</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="REACTIVE_POWER_L2">
        <function>3</function>
        <start_addr>21</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="REACTIVE_POWER_L3">
        <function>3</function>
        <start_addr>22</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>

      <value_ref_id valid="APPARENT_POWER_TOTAL">
        <function>3</function>
        <start_addr>23</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="APPARENT_POWER_L1">
        <function>3</function>
        <start_addr>24</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="APPARENT_POWER_L2">
        <function>3</function>
        <start_addr>25</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="APPARENT_POWER_L3">
        <function>3</function>
        <start_addr>26</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="CURRENT_LEADLAG">
        <function>3</function>
        <start_addr>27</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="fuel_pressure">
        <function>3</function>
        <start_addr>36</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="lube_oil_temp">
        <function>3</function>
        <start_addr>42</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>

      <value_ref_id valid="oil_level">
        <function>3</function>
        <start_addr>43</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="total_num_starts">
        <function>3</function>
        <start_addr>83</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="last_start_days">
        <function>3</function>
        <start_addr>104</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>

      <value_ref_id valid="TOTAL_RUNTIME_LSW">
        <function>3</function>
        <start_addr>84</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TOTAL_RUNTIME_MSW">
        <function>3</function>
        <start_addr>85</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LAST_RUN_LENGTH">
        <function>3</function>
        <start_addr>107</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LAST_RUN_LOADED">
        <function>3</function>
        <start_addr>108</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="OPERATING_MODE">
        <function>3</function>
        <start_addr>124</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="SYSTEM_VOLTAGE">
        <function>3</function>
        <start_addr>125</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
        <value_ref_id valid="SYSTEM_FREQUENCY">
        <function>3</function>
        <start_addr>126</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
        </value_ref_id>
      <value_ref_id valid="BATTERY_VOLTAGE">
        <function>3</function>
        <start_addr>135</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="metric_english">
        <function>3</function>
        <start_addr>138</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CODE_VERSION">
        <function>3</function>
        <start_addr>204</start_addr>
        <quantity>3</quantity>
        <type>ascii</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1500">
        <function>3</function>
        <start_addr>1499</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1501">
        <function>3</function>
        <start_addr>1500</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1502">
        <function>3</function>
        <start_addr>1501</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1503">
        <function>3</function>
        <start_addr>1502</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1504">
        <function>3</function>
        <start_addr>1503</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1505">
        <function>3</function>
        <start_addr>1504</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1506">
        <function>3</function>
        <start_addr>1505</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1507">
        <function>3</function>
        <start_addr>1506</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1508">
        <function>3</function>
        <start_addr>1507</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1509">
        <function>3</function>
        <start_addr>1508</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1510">
        <function>3</function>
        <start_addr>1509</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1511">
        <function>3</function>
        <start_addr>1510</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1512">
        <function>3</function>
        <start_addr>1511</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1513">
        <function>3</function>
        <start_addr>1512</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1514">
        <function>3</function>
        <start_addr>1513</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1515">
        <function>3</function>
        <start_addr>1514</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="device_id">
        <function>3</function>
        <start_addr>9998</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <!-- Bulk read for performance. -->
      <!-- Kohler documents say no more than 50 at a time -->
      <packet>
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>13</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>32</start_addr>
        <quantity>5</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>42</start_addr>
        <quantity>1</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>104</start_addr>
        <quantity>1</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>125</start_addr>
        <quantity>2</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>135</start_addr>
        <quantity>1</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>138</start_addr>
        <quantity>1</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>204</start_addr>
        <quantity>1</quantity>
      </packet>

      <packet>
        <function>3</function>
        <start_addr>1499</start_addr>
        <quantity>16</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>9998</start_addr>
        <quantity>1</quantity>
      </packet>
    </modbus>
  </protocol>
</APC_DDF>
