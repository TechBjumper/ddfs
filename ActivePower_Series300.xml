<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="ActivePower_Series300"
	ddfname="ActivePower Series300"
	ddfversion="4"
	canremove="yes">
	<schemaVersion>1.6</schemaVersion>
	
	<device deviceid="ActivePower_Series300">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
		
		<setProductData ruleid="vendordata" field="vendor">Active Power</setProductData>
		<setProductData ruleid="modeldata" field="model">Series 300</setProductData>
		<setProductData ruleid="typedata" field="type">UPS</setProductData>
		
		<numSensor ruleid="output_frequency">
			<type>frequency</type>
			<sensorId>_OUTPUT_FREQUENCY</sensorId>
			<value>
				<getOid>OUTPUT_FREQUENCY</getOid>
			</value>
			<label>Output Frequency</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="input_frequency">
			<type>frequency</type>
			<sensorId>_INPUT_FREQUENCY</sensorId>
			<value>
				<getOid>INPUT_FREQUENCY</getOid>
			</value>
			<label>Input Frequency</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="output_power_factor">
			<type>num</type>
			<sensorId>_OUTPUT_POWER_FACTOR</sensorId>
			<value>
				<getOid>OUTPUT_POWER_FACTOR</getOid>
			</value>
			<label>Output Power Factor</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="input_power_factor">
			<type>num</type>
			<sensorId>_INPUT_POWER_FACTOR</sensorId>
			<value>
				<getOid>INPUT_POWER_FACTOR</getOid>
			</value>
			<label>Input Power Factor</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="percent_energy">
			<type>pctofcapacity</type>
			<sensorId>_PERCENT_ENERGY</sensorId>
			<value>
				<getOid>PERCENT_ENERGY</getOid>
			</value>
			<label>Percent Energy</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="percent_load">
			<type>pctofcapacity</type>
			<sensorId>_PERCENT_LOAD</sensorId>
			<value>
				<getOid>PERCENT_LOAD</getOid>
			</value>
			<label>Percent Load</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="output_power">
			<type>num/powerKW</type>
			<sensorId>_OUTPUT_POWER</sensorId>
			<value>
				<getOid>OUTPUT_POWER</getOid>
			</value>
			<label>Output Power</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="output_kva">
			<type>num/powerKVA</type>
			<sensorId>_OUTPUT_KVA</sensorId>
			<value>
				<getOid>OUTPUT_KVA</getOid>
			</value>
			<label>Output kVA</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="input_power">
			<type>num/powerKW</type>
			<sensorId>_INPUT_POWER</sensorId>
			<value>
				<getOid>INPUT_POWER</getOid>
			</value>
			<label>Input Power</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="input_kva">
			<type>num/powerKVA</type>
			<sensorId>_INPUT_KVA</sensorId>
			<value>
				<getOid>INPUT_KVA</getOid>
			</value>
			<label>Input kVA</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="input_line_volt_ab">
			<type>voltageAC</type>
			<sensorId>_INPUT_LINE_VOLT_AB</sensorId>
			<value>
				<getOid>INPUT_LINE_VOLT_AB</getOid>
			</value>
			<label>Input Line Voltage A-B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="input_line_volt_bc">
			<type>voltageAC</type>
			<sensorId>_INPUT_LINE_VOLT_BC</sensorId>
			<value>
				<getOid>INPUT_LINE_VOLT_BC</getOid>
			</value>
			<label>Input Line Voltage B-C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="input_line_volt_ca">
			<type>voltageAC</type>
			<sensorId>_INPUT_LINE_VOLT_CA</sensorId>
			<value>
				<getOid>INPUT_LINE_VOLT_CA</getOid>
			</value>
			<label>Input Line Voltage C-A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="bypass_line_volt_ab">
			<type>voltageAC</type>
			<sensorId>_BYPASS_LINE_VOLT_AB</sensorId>
			<value>
				<getOid>BYPASS_LINE_VOLT_AB</getOid>
			</value>
			<label>Bypass Line Voltage A-B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="bypass_line_volt_bc">
			<type>voltageAC</type>
			<sensorId>_BYPASS_LINE_VOLT_BC</sensorId>
			<value>
				<getOid>BYPASS_LINE_VOLT_BC</getOid>
			</value>
			<label>Bypass Line Voltage B-C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="bypass_line_volt_ca">
			<type>voltageAC</type>
			<sensorId>_BYPASS_LINE_VOLT_CA</sensorId>
			<value>
				<getOid>BYPASS_LINE_VOLT_CA</getOid>
			</value>
			<label>Bypass Line Voltage C-A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="output_line_volt_ab">
			<type>voltageAC</type>
			<sensorId>_OUTPUT_LINE_VOLT_AB</sensorId>
			<value>
				<getOid>OUTPUT_LINE_VOLT_AB</getOid>
			</value>
			<label>Output Line Voltage A-B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="output_line_volt_bc">
			<type>voltageAC</type>
			<sensorId>_OUTPUT_LINE_VOLT_BC</sensorId>
			<value>
				<getOid>OUTPUT_LINE_VOLT_BC</getOid>
			</value>
			<label>Output Line Voltage B-C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="output_line_volt_ca">
			<type>voltageAC</type>
			<sensorId>_OUTPUT_LINE_VOLT_CA</sensorId>
			<value>
				<getOid>OUTPUT_LINE_VOLT_CA</getOid>
			</value>
			<label>Output Line Voltage C-A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="input_current_phase_a">
			<type>amperage</type>
			<sensorId>_INPUT_CURRENT_PHASE_A</sensorId>
			<value>
				<getOid>INPUT_CURRENT_PHASE_A</getOid>
			</value>
			<label>Input Current Phase A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="input_current_phase_b">
			<type>amperage</type>
			<sensorId>_INPUT_CURRENT_PHASE_B</sensorId>
			<value>
				<getOid>INPUT_CURRENT_PHASE_B</getOid>
			</value>
			<label>Input Current Phase B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="input_current_phase_c">
			<type>amperage</type>
			<sensorId>_INPUT_CURRENT_PHASE_C</sensorId>
			<value>
				<getOid>INPUT_CURRENT_PHASE_C</getOid>
			</value>
			<label>Input Current Phase C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="output_current_phase_a">
			<type>amperage</type>
			<sensorId>_OUTPUT_CURRENT_PHASE_A</sensorId>
			<value>
				<getOid>OUTPUT_CURRENT_PHASE_A</getOid>
			</value>
			<label>Output Current Phase A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="output_current_phase_b">
			<type>amperage</type>
			<sensorId>_OUTPUT_CURRENT_PHASE_B</sensorId>
			<value>
				<getOid>OUTPUT_CURRENT_PHASE_B</getOid>
			</value>
			<label>Output Current Phase B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="output_current_phase_c">
			<type>amperage</type>
			<sensorId>_OUTPUT_CURRENT_PHASE_C</sensorId>
			<value>
				<getOid>OUTPUT_CURRENT_PHASE_C</getOid>
			</value>
			<label>Output Current Phase C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_input_volts_ab">
			<type>voltageAC</type>
			<sensorId>_MMU1_INPUT_VOLTS_AB</sensorId>
			<value>
				<getOid>MMU1_INPUT_VOLTS_AB</getOid>
			</value>
			<label>MMU1 Input Voltage A-B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_input_volts_bc">
			<type>voltageAC</type>
			<sensorId>_MMU1_INPUT_VOLTS_BC</sensorId>
			<value>
				<getOid>MMU1_INPUT_VOLTS_BC</getOid>
			</value>
			<label>MMU1 Input Voltage B-C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_input_volts_ca">
			<type>voltageAC</type>
			<sensorId>_MMU1_INPUT_VOLTS_CA</sensorId>
			<value>
				<getOid>MMU1_INPUT_VOLTS_CA</getOid>
			</value>
			<label>MMU1 Input Voltage C-A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_output_volts_ab">
			<type>voltageAC</type>
			<sensorId>_MMU1_OUTPUT_VOLTS_AB</sensorId>
			<value>
				<getOid>MMU1_OUTPUT_VOLTS_AB</getOid>
			</value>
			<label>MMU1 Output Voltage A-B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_output_volts_bc">
			<type>voltageAC</type>
			<sensorId>_MMU1_OUTPUT_VOLTS_BC</sensorId>
			<value>
				<getOid>MMU1_OUTPUT_VOLTS_BC</getOid>
			</value>
			<label>MMU1 Output Voltage B-C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_output_volts_ca">
			<type>voltageAC</type>
			<sensorId>_MMU1_OUTPUT_VOLTS_CA</sensorId>
			<value>
				<getOid>MMU1_OUTPUT_VOLTS_CA</getOid>
			</value>
			<label>MMU1 Output Voltage C-A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_inverter_current_a">
			<type>amperage</type>
			<sensorId>_MMU1_INVERTER_CURRENT_A</sensorId>
			<value>
				<getOid>MMU1_INVERTER_CURRENT_A</getOid>
			</value>
			<label>MMU1 Inverter Current A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_inverter_current_b">
			<type>amperage</type>
			<sensorId>_MMU1_INVERTER_CURRENT_B</sensorId>
			<value>
				<getOid>MMU1_INVERTER_CURRENT_B</getOid>
			</value>
			<label>MMU1 Inverter Current B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_inverter_current_c">
			<type>amperage</type>
			<sensorId>_MMU1_INVERTER_CURRENT_C</sensorId>
			<value>
				<getOid>MMU1_INVERTER_CURRENT_C</getOid>
			</value>
			<label>MMU1 Inverter Current C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_input_current_a">
			<type>amperage</type>
			<sensorId>_MMU1_INPUT_CURRENT_A</sensorId>
			<value>
				<getOid>MMU1_INPUT_CURRENT_A</getOid>
			</value>
			<label>MMU1 Input Current A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_input_current_b">
			<type>amperage</type>
			<sensorId>_MMU1_INPUT_CURRENT_B</sensorId>
			<value>
				<getOid>MMU1_INPUT_CURRENT_B</getOid>
			</value>
			<label>MMU1 Input Current B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_input_current_c">
			<type>amperage</type>
			<sensorId>_MMU1_INPUT_CURRENT_C</sensorId>
			<value>
				<getOid>MMU1_INPUT_CURRENT_C</getOid>
			</value>
			<label>MMU1 Input Current C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_output_current_a">
			<type>amperage</type>
			<sensorId>_MMU1_OUTPUT_CURRENT_A</sensorId>
			<value>
				<getOid>MMU1_OUTPUT_CURRENT_A</getOid>
			</value>
			<label>MMU1 Output Current A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_output_current_b">
			<type>amperage</type>
			<sensorId>_MMU1_OUTPUT_CURRENT_B</sensorId>
			<value>
				<getOid>MMU1_OUTPUT_CURRENT_B</getOid>
			</value>
			<label>MMU1 Output Current B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_output_current_c">
			<type>amperage</type>
			<sensorId>_MMU1_OUTPUT_CURRENT_C</sensorId>
			<value>
				<getOid>MMU1_OUTPUT_CURRENT_C</getOid>
			</value>
			<label>MMU1 Output Current C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_output_power">
			<type>num/powerKW</type>
			<sensorId>_MMU1_OUTPUT_POWER</sensorId>
			<value>
				<getOid>MMU1_OUTPUT_POWER</getOid>
			</value>
			<label>MMU1 Output Power</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_output_kva">
			<type>num/powerKVA</type>
			<sensorId>_MMU1_OUTPUT_KVA</sensorId>
			<value>
				<getOid>MMU1_OUTPUT_KVA</getOid>
			</value>
			<label>MMU1 Output kVA</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_input_power">
			<type>num/powerKW</type>
			<sensorId>_MMU1_INPUT_POWER</sensorId>
			<value>
				<getOid>MMU1_INPUT_POWER</getOid>
			</value>
			<label>MMU1 Input Power</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_input_kva">
			<type>num/powerKVA</type>
			<sensorId>_MMU1_INPUT_KVA</sensorId>
			<value>
				<getOid>MMU1_INPUT_KVA</getOid>
			</value>
			<label>MMU1 Input kVA</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_cabinet_temp">
			<type>temp</type>
			<sensorId>_MMU1_CABINET_TEMP</sensorId>
			<value>
				<getOid>MMU1_CABINET_TEMP</getOid>
			</value>
			<label>MMU1 Cabinet Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_air_inlet_temp">
			<type>temp</type>
			<sensorId>_MMU1_AIR_INLET_TEMP</sensorId>
			<value>
				<getOid>MMU1_AIR_INLET_TEMP</getOid>
			</value>
			<label>MMU1 Air Inlet Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_positive_dc_bus_voltage">
			<type>voltageDC</type>
			<sensorId>_MMU1_POSITIVE_DC_BUS_VOLTAGE</sensorId>
			<value>
				<getOid>MMU1_POSITIVE_DC_BUS_VOLTAGE</getOid>
			</value>
			<label>MMU1 Positive DC Bus Voltage</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_negative_dc_bus_voltage">
			<type>voltageDC</type>
			<sensorId>_MMU1_NEGATIVE_DC_BUS_VOLTAGE</sensorId>
			<value>
				<getOid>MMU1_NEGATIVE_DC_BUS_VOLTAGE</getOid>
			</value>
			<label>MMU1 Negative DC Bus Voltage</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_tachometer">
			<type>num</type>
			<sensorId>_MMU1_TACHOMETER</sensorId>
			<value>
				<getOid>MMU1_TACHOMETER</getOid>
			</value>
			<label>MMU1 Tachometer</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_percent_energy">
			<type>pctofcapacity</type>
			<sensorId>_MMU1_PERCENT_ENERGY</sensorId>
			<value>
				<getOid>MMU1_PERCENT_ENERGY</getOid>
			</value>
			<label>MMU1 Percent Energy</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_vacuum_gauge">
			<type>num</type>
			<sensorId>_MMU1_VACUUM_GAUGE</sensorId>
			<value>
				<getOid>MMU1_VACUUM_GAUGE</getOid>
			</value>
			<label>MMU1 Vacuum Gauge</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_top_field_coil_current">
			<type>amperage</type>
			<sensorId>_MMU1_TOP_FIELD_COIL_CURRENT</sensorId>
			<value>
				<getOid>MMU1_TOP_FIELD_COIL_CURRENT</getOid>
			</value>
			<label>MMU1 Top Field Coil Current</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_bottom_field_coil_current">
			<type>amperage</type>
			<sensorId>_MMU1_BOTTOM_FIELD_COIL_CURRENT</sensorId>
			<value>
				<getOid>MMU1_BOTTOM_FIELD_COIL_CURRENT</getOid>
			</value>
			<label>MMU1 Bottom Field Coil Current</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_bottom_bearing_force">
			<type>num</type>
			<sensorId>_MMU1_BOTTOM_BEARING_FORCE</sensorId>
			<value>
				<getOid>MMU1_BOTTOM_BEARING_FORCE</getOid>
			</value>
			<label>MMU1 Bottom Bearing Force</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_lateral_vibration">
			<type>num</type>
			<sensorId>_MMU1_LATERAL_VIBRATION</sensorId>
			<value>
				<getOid>MMU1_LATERAL_VIBRATION</getOid>
			</value>
			<label>MMU1 Lateral Vibration</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_axial_vibration">
			<type>temp</type>
			<sensorId>_MMU1_AXIAL_VIBRATION</sensorId>
			<value>
				<getOid>MMU1_AXIAL_VIBRATION</getOid>
			</value>
			<label>MMU1 Axial Vibration</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_top_field_coil_temp">
			<type>temp</type>
			<sensorId>_MMU1_TOP_FIELD_COIL_TEMP</sensorId>
			<value>
				<getOid>MMU1_TOP_FIELD_COIL_TEMP</getOid>
			</value>
			<label>MMU1 Top Field Coil Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_bottom_field_coil_temp">
			<type>temp</type>
			<sensorId>_MMU1_BOTTOM_FIELD_COIL_TEMP</sensorId>
			<value>
				<getOid>MMU1_BOTTOM_FIELD_COIL_TEMP</getOid>
			</value>
			<label>MMU1 Bottom Field Coil Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_armature_temp">
			<type>temp</type>
			<sensorId>_MMU1_ARMATURE_TEMP</sensorId>
			<value>
				<getOid>MMU1_ARMATURE_TEMP</getOid>
			</value>
			<label>MMU1 Armature Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_top_field_coil_igbt_temp">
			<type>temp</type>
			<sensorId>_MMU1_TOP_FIELD_COIL_IGBT_TEMP</sensorId>
			<value>
				<getOid>MMU1_TOP_FIELD_COIL_IGBT_TEMP</getOid>
			</value>
			<label>MMU1 Top Field Coil IGBT Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_bottom_field_coil_igbt_temp">
			<type>temp</type>
			<sensorId>_MMU1_BOTTOM_FIELD_COIL_IGBT_TEMP</sensorId>
			<value>
				<getOid>MMU1_BOTTOM_FIELD_COIL_IGBT_TEMP</getOid>
			</value>
			<label>MMU1 Bottom Field Coil IGBT Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_top_bearing_temp">
			<type>temp</type>
			<sensorId>_MMU1_TOP_BEARING_TEMP</sensorId>
			<value>
				<getOid>MMU1_TOP_BEARING_TEMP</getOid>
			</value>
			<label>MMU1 Top Bearing Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu1_bottom_bearing_temp">
			<type>temp</type>
			<sensorId>_MMU1_BOTTOM_BEARING_TEMP</sensorId>
			<value>
				<getOid>MMU1_BOTTOM_BEARING_TEMP</getOid>
			</value>
			<label>MMU1 Bottom Bearing Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_input_volts_ab">
			<type>voltageAC</type>
			<sensorId>_MMU2_INPUT_VOLTS_AB</sensorId>
			<value>
				<getOid>MMU2_INPUT_VOLTS_AB</getOid>
			</value>
			<label>MMU2 Input Voltage A-B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_input_volts_bc">
			<type>voltageAC</type>
			<sensorId>_MMU2_INPUT_VOLTS_BC</sensorId>
			<value>
				<getOid>MMU2_INPUT_VOLTS_BC</getOid>
			</value>
			<label>MMU2 Input Voltage B-C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_input_volts_ca">
			<type>voltageAC</type>
			<sensorId>_MMU2_INPUT_VOLTS_CA</sensorId>
			<value>
				<getOid>MMU2_INPUT_VOLTS_CA</getOid>
			</value>
			<label>MMU2 Input Voltage C-A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_output_volts_ab">
			<type>voltageAC</type>
			<sensorId>_MMU2_OUTPUT_VOLTS_AB</sensorId>
			<value>
				<getOid>MMU2_OUTPUT_VOLTS_AB</getOid>
			</value>
			<label>MMU2 Output Voltage A-B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_output_volts_bc">
			<type>voltageAC</type>
			<sensorId>_MMU2_OUTPUT_VOLTS_BC</sensorId>
			<value>
				<getOid>MMU2_OUTPUT_VOLTS_BC</getOid>
			</value>
			<label>MMU2 Output Voltage B-C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_output_volts_ca">
			<type>voltageAC</type>
			<sensorId>_MMU2_OUTPUT_VOLTS_CA</sensorId>
			<value>
				<getOid>MMU2_OUTPUT_VOLTS_CA</getOid>
			</value>
			<label>MMU2 Output Voltage C-A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_inverter_current_a">
			<type>amperage</type>
			<sensorId>_MMU2_INVERTER_CURRENT_A</sensorId>
			<value>
				<getOid>MMU2_INVERTER_CURRENT_A</getOid>
			</value>
			<label>MMU2 Inverter Current A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_inverter_current_b">
			<type>amperage</type>
			<sensorId>_MMU2_INVERTER_CURRENT_B</sensorId>
			<value>
				<getOid>MMU2_INVERTER_CURRENT_B</getOid>
			</value>
			<label>MMU2 Inverter Current B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_inverter_current_c">
			<type>amperage</type>
			<sensorId>_MMU2_INVERTER_CURRENT_C</sensorId>
			<value>
				<getOid>MMU2_INVERTER_CURRENT_C</getOid>
			</value>
			<label>MMU2 Inverter Current C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_input_current_a">
			<type>amperage</type>
			<sensorId>_MMU2_INPUT_CURRENT_A</sensorId>
			<value>
				<getOid>MMU2_INPUT_CURRENT_A</getOid>
			</value>
			<label>MMU2 Input Current A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_input_current_b">
			<type>amperage</type>
			<sensorId>_MMU2_INPUT_CURRENT_B</sensorId>
			<value>
				<getOid>MMU2_INPUT_CURRENT_B</getOid>
			</value>
			<label>MMU2 Input Current B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_input_current_c">
			<type>amperage</type>
			<sensorId>_MMU2_INPUT_CURRENT_C</sensorId>
			<value>
				<getOid>MMU2_INPUT_CURRENT_C</getOid>
			</value>
			<label>MMU2 Input Current C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_output_current_a">
			<type>amperage</type>
			<sensorId>_MMU2_OUTPUT_CURRENT_A</sensorId>
			<value>
				<getOid>MMU2_OUTPUT_CURRENT_A</getOid>
			</value>
			<label>MMU2 Output Current A</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_output_current_b">
			<type>amperage</type>
			<sensorId>_MMU2_OUTPUT_CURRENT_B</sensorId>
			<value>
				<getOid>MMU2_OUTPUT_CURRENT_B</getOid>
			</value>
			<label>MMU2 Output Current B</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_output_current_c">
			<type>amperage</type>
			<sensorId>_MMU2_OUTPUT_CURRENT_C</sensorId>
			<value>
				<getOid>MMU2_OUTPUT_CURRENT_C</getOid>
			</value>
			<label>MMU2 Output Current C</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_output_power">
			<type>num/powerKW</type>
			<sensorId>_MMU2_OUTPUT_POWER</sensorId>
			<value>
				<getOid>MMU2_OUTPUT_POWER</getOid>
			</value>
			<label>MMU2 Output Power</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_output_kva">
			<type>num/powerKVA</type>
			<sensorId>_MMU2_OUTPUT_KVA</sensorId>
			<value>
				<getOid>MMU2_OUTPUT_KVA</getOid>
			</value>
			<label>MMU2 Output kVA</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_input_power">
			<type>num/powerKW</type>
			<sensorId>_MMU2_INPUT_POWER</sensorId>
			<value>
				<getOid>MMU2_INPUT_POWER</getOid>
			</value>
			<label>MMU2 Input Power</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_input_kva">
			<type>num/powerKVA</type>
			<sensorId>_MMU2_INPUT_KVA</sensorId>
			<value>
				<getOid>MMU2_INPUT_KVA</getOid>
			</value>
			<label>MMU2 Input kVA</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_cabinet_temp">
			<type>temp</type>
			<sensorId>_MMU2_CABINET_TEMP</sensorId>
			<value>
				<getOid>MMU2_CABINET_TEMP</getOid>
			</value>
			<label>MMU2 Cabinet Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_air_inlet_temp">
			<type>temp</type>
			<sensorId>_MMU2_AIR_INLET_TEMP</sensorId>
			<value>
				<getOid>MMU2_AIR_INLET_TEMP</getOid>
			</value>
			<label>MMU2 Air Inlet Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_positive_dc_bus_voltage">
			<type>voltageDC</type>
			<sensorId>_MMU2_POSITIVE_DC_BUS_VOLTAGE</sensorId>
			<value>
				<getOid>MMU2_POSITIVE_DC_BUS_VOLTAGE</getOid>
			</value>
			<label>MMU2 Positive DC Bus Voltage</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_negative_dc_bus_voltage">
			<type>voltageDC</type>
			<sensorId>_MMU2_NEGATIVE_DC_BUS_VOLTAGE</sensorId>
			<value>
				<getOid>MMU2_NEGATIVE_DC_BUS_VOLTAGE</getOid>
			</value>
			<label>MMU2 Negative DC Bus Voltage</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_tachometer">
			<type>num</type>
			<sensorId>_MMU2_TACHOMETER</sensorId>
			<value>
				<getOid>MMU2_TACHOMETER</getOid>
			</value>
			<label>MMU2 Tachometer</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_percent_energy">
			<type>pctofcapacity</type>
			<sensorId>_MMU2_PERCENT_ENERGY</sensorId>
			<value>
				<getOid>MMU2_PERCENT_ENERGY</getOid>
			</value>
			<label>MMU2 Percent Energy</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_vacuum_gauge">
			<type>num</type>
			<sensorId>_MMU2_VACUUM_GAUGE</sensorId>
			<value>
				<getOid>MMU2_VACUUM_GAUGE</getOid>
			</value>
			<label>MMU2 Vacuum Gauge</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_top_field_coil_current">
			<type>amperage</type>
			<sensorId>_MMU2_TOP_FIELD_COIL_CURRENT</sensorId>
			<value>
				<getOid>MMU2_TOP_FIELD_COIL_CURRENT</getOid>
			</value>
			<label>MMU2 Top Field Coil Current</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_bottom_field_coil_current">
			<type>amperage</type>
			<sensorId>_MMU2_BOTTOM_FIELD_COIL_CURRENT</sensorId>
			<value>
				<getOid>MMU2_BOTTOM_FIELD_COIL_CURRENT</getOid>
			</value>
			<label>MMU2 Bottom Field Coil Current</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_bottom_bearing_force">
			<type>num</type>
			<sensorId>_MMU2_BOTTOM_BEARING_FORCE</sensorId>
			<value>
				<getOid>MMU2_BOTTOM_BEARING_FORCE</getOid>
			</value>
			<label>MMU2 Bottom Bearing Force</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_lateral_vibration">
			<type>num</type>
			<sensorId>_MMU2_LATERAL_VIBRATION</sensorId>
			<value>
				<getOid>MMU2_LATERAL_VIBRATION</getOid>
			</value>
			<label>MMU2 Lateral Vibration</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_axial_vibration">
			<type>num</type>
			<sensorId>_MMU2_AXIAL_VIBRATION</sensorId>
			<value>
				<getOid>MMU2_AXIAL_VIBRATION</getOid>
			</value>
			<label>MMU2 Axial Vibration</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_top_field_coil_temp">
			<type>temp</type>
			<sensorId>_MMU2_TOP_FIELD_COIL_TEMP</sensorId>
			<value>
				<getOid>MMU2_TOP_FIELD_COIL_TEMP</getOid>
			</value>
			<label>MMU2 Top Field Coil Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_bottom_field_coil_temp">
			<type>temp</type>
			<sensorId>_MMU2_BOTTOM_FIELD_COIL_TEMP</sensorId>
			<value>
				<getOid>MMU2_BOTTOM_FIELD_COIL_TEMP</getOid>
			</value>
			<label>MMU2 Bottom Field Coil Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_armature_temp">
			<type>temp</type>
			<sensorId>_MMU2_ARMATURE_TEMP</sensorId>
			<value>
				<getOid>MMU2_ARMATURE_TEMP</getOid>
			</value>
			<label>MMU2 Armature Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_top_field_coil_igbt_temp">
			<type>temp</type>
			<sensorId>_MMU2_TOP_FIELD_COIL_IGBT_TEMP</sensorId>
			<value>
				<getOid>MMU2_TOP_FIELD_COIL_IGBT_TEMP</getOid>
			</value>
			<label>MMU2 Top Field Coil IGBT Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_bottom_field_coil_igbt_temp">
			<type>temp</type>
			<sensorId>_MMU2_BOTTOM_FIELD_COIL_IGBT_TEMP</sensorId>
			<value>
				<getOid>MMU2_BOTTOM_FIELD_COIL_IGBT_TEMP</getOid>
			</value>
			<label>MMU2 Bottom Field Coil IGBT Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_top_bearing_temp">
			<type>temp</type>
			<sensorId>_MMU2_TOP_BEARING_TEMP</sensorId>
			<value>
				<getOid>MMU2_TOP_BEARING_TEMP</getOid>
			</value>
			<label>MMU2 Top Bearing Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		<numSensor ruleid="mmu2_bottom_bearing_temp">
			<type>temp</type>
			<sensorId>_MMU2_BOTTOM_BEARING_TEMP</sensorId>
			<value>
				<getOid>MMU2_BOTTOM_BEARING_TEMP</getOid>
			</value>
			<label>MMU2 Bottom Bearing Temperature</label>
			<sensorSet>General</sensorSet>
		</numSensor>
		
		<stateSensor ruleid="online">
			<type>state</type>
			<sensorId>_ONLINE</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS1</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Online</label>
			<enum>failure_normal_em</enum>
			<sensorSet>System Mode</sensorSet>
		</stateSensor>
		<stateSensor ruleid="regulating">
			<type>state</type>
			<sensorId>_REGULATING</sensorId>
			<value>
				<mapValue mapid="normal_failure_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS1</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Regulating</label>
			<enum>normal_failure_em</enum>
			<sensorSet>System Mode</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bypassed">
			<type>state</type>
			<sensorId>_BYPASSED</sensorId>
			<value>
				<mapValue mapid="normal_failure_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS1</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Bypassed</label>
			<enum>normal_failure_em</enum>
			<sensorSet>System Mode</sensorSet>
		</stateSensor>
		<stateSensor ruleid="shutdown">
			<type>state</type>
			<sensorId>_SHUTDOWN</sensorId>
			<value>
				<mapValue mapid="normal_failure_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS1</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Shutdown</label>
			<enum>normal_failure_em</enum>
			<sensorSet>System Mode</sensorSet>
		</stateSensor>
		<stateSensor ruleid="system_discharging">
			<type>state</type>
			<sensorId>_SYSTEM_DISCHARGING</sensorId>
			<value>
				<mapValue mapid="normal_failure_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS1</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>System Discharging</label>
			<enum>normal_failure_em</enum>
			<sensorSet>System Mode</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_user_board_comm">
			<type>state</type>
			<sensorId>_SYS_CAB_USER_BOARD_COMM</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab User Board Comm</label>
			<enum>failure_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_i/o_board_comm">
			<type>state</type>
			<sensorId>_SYS_CAB_I/O_BOARD_COMM</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab I/O Board Comm</label>
			<enum>failure_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_fan_board_comm">
			<type>state</type>
			<sensorId>_SYS_CAB_FAN_BOARD_COMM</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab Fan Board Comm</label>
			<enum>failure_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_ac_board_comm">
			<type>state</type>
			<sensorId>_SYS_CAB_AC_BOARD_COMM</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab AC Board Comm</label>
			<enum>failure_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_xfmr_fuse_t3">
			<type>state</type>
			<sensorId>_SYS_CAB_XFMR_FUSE_T3</sensorId>
			<value>
				<mapValue mapid="error_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab XFMR Fuse T3</label>
			<enum>error_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_xfmr_fuse_t2">
			<type>state</type>
			<sensorId>_SYS_CAB_XFMR_FUSE_T2</sensorId>
			<value>
				<mapValue mapid="error_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab XFMR Fuse T2</label>
			<enum>error_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_xfmr_fuse_t1">
			<type>state</type>
			<sensorId>_SYS_CAB_XFMR_FUSE_T1</sensorId>
			<value>
				<mapValue mapid="error_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab XFMR Fuse T1</label>
			<enum>error_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_24v_pwr_supply_2">
			<type>state</type>
			<sensorId>_SYS_CAB_24V_PWR_SUPPLY_2</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab 24v Power Supply 2</label>
			<enum>failure_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_24v_pwr_supply_1">
			<type>state</type>
			<sensorId>_SYS_CAB_24V_PWR_SUPPLY_1</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab 24v Power Supply 1</label>
			<enum>failure_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_fan_3">
			<type>state</type>
			<sensorId>_SYS_CAB_FAN_3</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab Fan 3</label>
			<enum>failure_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_fan_2">
			<type>state</type>
			<sensorId>_SYS_CAB_FAN_2</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab Fan 2</label>
			<enum>failure_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_fan_1">
			<type>state</type>
			<sensorId>_SYS_CAB_FAN_1</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS2</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab Fan 1</label>
			<enum>failure_normal_em</enum>
			<sensorSet>System Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_bypass_static_switch_fuse">
			<type>state</type>
			<sensorId>_SYS_CAB_BYPASS_STATIC_SWITCH_FUSE</sensorId>
			<value>
				<mapValue mapid="open_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS3</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab Bypass Static Switch Fuse</label>
			<enum>open_normal_em</enum>
			<sensorSet>System Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_bypass_rotation_cw">
			<type>state</type>
			<sensorId>_SYS_CAB_BYPASS_ROTATION_CW</sensorId>
			<value>
				<mapValue mapid="cw_stat_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS4</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab Bypass Rotation CW</label>
			<enum>cw_stat_em</enum>
			<sensorSet>System Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_bypass_rotation_ccw">
			<type>state</type>
			<sensorId>_SYS_CAB_BYPASS_ROTATION_CCW</sensorId>
			<value>
				<mapValue mapid="cw_stat_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS4</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab Bypass Rotation CCW</label>
			<enum>cw_stat_em</enum>
			<sensorSet>System Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_frequency_lock">
			<type>state</type>
			<sensorId>_SYS_CAB_FREQUENCY_LOCK</sensorId>
			<value>
				<mapValue mapid="failure_locked_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS4</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab Frequency Lock</label>
			<enum>failure_locked_em</enum>
			<sensorSet>System Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_bypass_contactor">
			<type>state</type>
			<sensorId>_SYS_CAB_BYPASS_CONTACTOR</sensorId>
			<value>
				<mapValue mapid="open_close_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS4</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab Bypass Contactor</label>
			<enum>open_close_em</enum>
			<sensorSet>System Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_communications_ok">
			<type>state</type>
			<sensorId>_SYS_CAB_COMMUNICATIONS_OK</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS4</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab Communications OK</label>
			<enum>failure_normal_vm</enum>
			<sensorSet>System Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_k3_cb_overload_trip">
			<type>state</type>
			<sensorId>_SYS_CAB_K3_CB_OVERLOAD_TRIP</sensorId>
			<value>
				<mapValue mapid="closed_open_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS4</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab K3 CB Overload Trip</label>
			<enum>closed_open_em</enum>
			<sensorSet>System Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_xfmr_overload_relay_tripped">
			<type>state</type>
			<sensorId>_SYS_CAB_XFMR_OVERLOAD_RELAY_TRIPPED</sensorId>
			<value>
				<mapValue mapid="closed_open_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS4</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab XFMR Overload Relay Tripped</label>
			<enum>closed_open_em</enum>
			<sensorSet>System Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sys_cab_xfmr_breaker_relay_tripped">
			<type>state</type>
			<sensorId>_SYS_CAB_XFMR_BREAKER_RELAY_TRIPPED</sensorId>
			<value>
				<mapValue mapid="closed_open_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS4</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>Sys_cab XFMR Breaker Relay Tripped</label>
			<enum>closed_open_em</enum>
			<sensorSet>System Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_user_if_board_comm_okay">
			<type>state</type>
			<sensorId>_MMU1_USER_IF_BOARD_COMM_OKAY</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS5</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 User Board Comm OK</label>
			<enum>failure_normal_em</enum>
			<sensorSet>MMU1 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_i/o_board_comm_okay">
			<type>state</type>
			<sensorId>_MMU1_I/O_BOARD_COMM_OKAY</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS5</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 I/O Board Comm OK</label>
			<enum>failure_normal_em</enum>
			<sensorSet>MMU1 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_fan_if_board_comm_okay">
			<type>state</type>
			<sensorId>_MMU1_FAN_IF_BOARD_COMM_OKAY</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS5</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Fan Board Comm OK</label>
			<enum>failure_normal_em</enum>
			<sensorSet>MMU1 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_ac_if_board_comm_okay">
			<type>state</type>
			<sensorId>_MMU1_AC_IF_BOARD_COMM_OKAY</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS5</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 AC Board Comm OK</label>
			<enum>failure_normal_em</enum>
			<sensorSet>MMU1 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="unloading_controller_timeout_mmu1">
			<type>state</type>
			<sensorId>_UNLOADING_CONTROLLER_TIMEOUT_MMU1</sensorId>
			<value>
				<mapValue mapid="normal_timeout_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS5</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Unloading Controller Timeout</label>
			<enum>normal_timeout_em</enum>
			<sensorSet>MMU1 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="low_speed_shutdown_mmu1">
			<type>state</type>
			<sensorId>_LOW_SPEED_SHUTDOWN_MMU1</sensorId>
			<value>
				<mapValue mapid="normal_shutdown_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS5</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Low Speed Shutdown</label>
			<enum>normal_shutdown_em</enum>
			<sensorSet>MMU1 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_flywheel_master_controller">
			<type>state</type>
			<sensorId>_MMU1_FLYWHEEL_MASTER_CONTROLLER</sensorId>
			<value>
				<mapValue mapid="notenabled_enabled_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS5</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Flywheel Master Controller</label>
			<enum>notenabled_enabled_em</enum>
			<sensorSet>MMU1 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_discharge_status">
			<type>state</type>
			<sensorId>_MMU1_DISCHARGE_STATUS</sensorId>
			<value>
				<mapValue mapid="normal_dischargin_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS6</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Discharge Status</label>
			<enum>normal_dischargin_em</enum>
			<sensorSet>MMU1 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_pwr_supply_2_xfmr_fuse_">
			<type>state</type>
			<sensorId>_MMU1_PWR_SUPPLY_2_XFMR_FUSE_</sensorId>
			<value>
				<mapValue mapid="open_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS6</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Power Supply 2 XFMR Fuse</label>
			<enum>open_normal_em</enum>
			<sensorSet>MMU1 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_pwr_supply_1_xfmr_fuse_">
			<type>state</type>
			<sensorId>_MMU1_PWR_SUPPLY_1_XFMR_FUSE_</sensorId>
			<value>
				<mapValue mapid="fault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS6</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Power Supply 1 XFMR Fuse</label>
			<enum>fault_normal_em</enum>
			<sensorSet>MMU1 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_24v_dc_supply_2">
			<type>state</type>
			<sensorId>_MMU1_24V_DC_SUPPLY_2</sensorId>
			<value>
				<mapValue mapid="fault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS6</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 24v DC Supply 2</label>
			<enum>fault_normal_em</enum>
			<sensorSet>MMU1 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_24v_dc_supply_1">
			<type>state</type>
			<sensorId>_MMU1_24V_DC_SUPPLY_1</sensorId>
			<value>
				<mapValue mapid="fault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS6</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 24v DC Supply 1</label>
			<enum>fault_normal_em</enum>
			<sensorSet>MMU1 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_fan_6">
			<type>state</type>
			<sensorId>_MMU1_FAN_6</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS6</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Fan 6</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU1 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_fan_5">
			<type>state</type>
			<sensorId>_MMU1_FAN_5</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS6</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Fan 5</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU1 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_fan_4">
			<type>state</type>
			<sensorId>_MMU1_FAN_4</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS6</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Fan 4</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU1 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_fan_3">
			<type>state</type>
			<sensorId>_MMU1_FAN_3</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS6</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Fan 3</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU1 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_fan_2">
			<type>state</type>
			<sensorId>_MMU1_FAN_2</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS6</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Fan 2</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU1 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_fan_1">
			<type>state</type>
			<sensorId>_MMU1_FAN_1</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS6</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Fan 1</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU1 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_input_ph_rotation_ccw">
			<type>state</type>
			<sensorId>_MMU1_INPUT_PH_ROTATION_CCW</sensorId>
			<value>
				<mapValue mapid="cw_stat_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Input Phase Rotation CCW</label>
			<enum>cw_stat_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_input_ph_rotation_cw">
			<type>state</type>
			<sensorId>_MMU1_INPUT_PH_ROTATION_CW</sensorId>
			<value>
				<mapValue mapid="cw_stat_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Input Phase Rotation CW</label>
			<enum>cw_stat_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_static_switch_timeout">
			<type>state</type>
			<sensorId>_MMU1_STATIC_SWITCH_TIMEOUT</sensorId>
			<value>
				<mapValue mapid="normal_timeout_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Static Switch Timeout</label>
			<enum>normal_timeout_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_flywheel_overspeed_shutdown">
			<type>state</type>
			<sensorId>_MMU1_FLYWHEEL_OVERSPEED_SHUTDOWN</sensorId>
			<value>
				<mapValue mapid="normal_shutdown_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Flywheel Overspeed Shutdown</label>
			<enum>normal_shutdown_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_rotor_position_sensor_error">
			<type>state</type>
			<sensorId>_MMU1_ROTOR_POSITION_SENSOR_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Rotor Position Sensor Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_flywheel_igbt_3_error">
			<type>state</type>
			<sensorId>_MMU1_FLYWHEEL_IGBT_3_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Flywheel IGBT 3 Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_flywheel_igbt_2_error">
			<type>state</type>
			<sensorId>_MMU1_FLYWHEEL_IGBT_2_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Flywheel IGBT 2 Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_flywheel_igbt_1_error">
			<type>state</type>
			<sensorId>_MMU1_FLYWHEEL_IGBT_1_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Flywheel IGBT 1 Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_inverter_ph_c_igbt_error">
			<type>state</type>
			<sensorId>_MMU1_INVERTER_PH_C_IGBT_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Inverter Phase C IGBT Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_inverter_ph_b_igbt_error">
			<type>state</type>
			<sensorId>_MMU1_INVERTER_PH_B_IGBT_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Inverter Phase B IGBT Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_inverter_ph_a_igbt_error">
			<type>state</type>
			<sensorId>_MMU1_INVERTER_PH_A_IGBT_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Inverter Phase A IGBT Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_flywheel_if_board_comm">
			<type>state</type>
			<sensorId>_MMU1_FLYWHEEL_IF_BOARD_COMM</sensorId>
			<value>
				<mapValue mapid="normal_failure_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Flywheel Board Comm</label>
			<enum>normal_failure_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_dc_bus_low_voltage">
			<type>state</type>
			<sensorId>_MMU1_DC_BUS_LOW_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="normal_failure_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 DC Bus Low Voltage</label>
			<enum>normal_failure_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_dc_bus_high_voltage">
			<type>state</type>
			<sensorId>_MMU1_DC_BUS_HIGH_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="normal_failure_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS7</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 DC Bus High Voltage</label>
			<enum>normal_failure_em</enum>
			<sensorSet>MMU1 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_bypass_available">
			<type>state</type>
			<sensorId>_MMU1_BYPASS_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS8</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Bypass Available</label>
			<enum>failure_normal_em</enum>
			<sensorSet>MMU1 Status Register 4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_input_breaker_status">
			<type>state</type>
			<sensorId>_MMU1_INPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="open_close_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS9</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Input Breaker Status</label>
			<enum>open_close_vm</enum>
			<sensorSet>MMU1 Status Register 5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_output_breaker_status">
			<type>state</type>
			<sensorId>_MMU1_OUTPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="open_close_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS9</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 Output Breaker Status</label>
			<enum>open_close_vm</enum>
			<sensorSet>MMU1 Status Register 5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_system_input_breaker_status">
			<type>state</type>
			<sensorId>_MMU1_SYSTEM_INPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="open_close_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS9</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 System Input Breaker Status</label>
			<enum>open_close_vm</enum>
			<sensorSet>MMU1 Status Register 5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu1_system_output_breaker_status">
			<type>state</type>
			<sensorId>_MMU1_SYSTEM_OUTPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="open_close_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS9</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU1 System Output Breaker Status</label>
			<enum>open_close_vm</enum>
			<sensorSet>MMU1 Status Register 5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_user_if_board_comm_okay">
			<type>state</type>
			<sensorId>_MMU2_USER_IF_BOARD_COMM_OKAY</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS10</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 User Board Comm OK</label>
			<enum>failure_normal_em</enum>
			<sensorSet>MMU2 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_i/o_board_comm_okay">
			<type>state</type>
			<sensorId>_MMU2_I/O_BOARD_COMM_OKAY</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS10</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 I/O Board Comm OK</label>
			<enum>failure_normal_em</enum>
			<sensorSet>MMU2 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_fan_if_board_comm_okay">
			<type>state</type>
			<sensorId>_MMU2_FAN_IF_BOARD_COMM_OKAY</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS10</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Fan Board Comm OK</label>
			<enum>failure_normal_em</enum>
			<sensorSet>MMU2 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_ac_if_board_comm_okay">
			<type>state</type>
			<sensorId>_MMU2_AC_IF_BOARD_COMM_OKAY</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS10</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 AC Board Comm OK</label>
			<enum>failure_normal_em</enum>
			<sensorSet>MMU2 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="unloading_controller_timeout_mmu2">
			<type>state</type>
			<sensorId>_UNLOADING_CONTROLLER_TIMEOUT_MMU2</sensorId>
			<value>
				<mapValue mapid="normal_timeout_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS10</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Unloading Controller Timeout</label>
			<enum>normal_timeout_em</enum>
			<sensorSet>MMU2 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="low_speed_shutdown_mmu2">
			<type>state</type>
			<sensorId>_LOW_SPEED_SHUTDOWN_MMU2</sensorId>
			<value>
				<mapValue mapid="normal_shutdown_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS10</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Low speed Shutdown</label>
			<enum>normal_shutdown_em</enum>
			<sensorSet>MMU2 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_flywheel_master_controller">
			<type>state</type>
			<sensorId>_MMU2_FLYWHEEL_MASTER_CONTROLLER</sensorId>
			<value>
				<mapValue mapid="notenabled_enabled_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS10</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Flywheel Master Controller</label>
			<enum>notenabled_enabled_em</enum>
			<sensorSet>MMU2 Status Register 1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_discharge_status">
			<type>state</type>
			<sensorId>_MMU2_DISCHARGE_STATUS</sensorId>
			<value>
				<mapValue mapid="normal_dischargin_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS11</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Discharge Status</label>
			<enum>normal_dischargin_em</enum>
			<sensorSet>MMU2 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_pwr_supply_2_xfmr_fuse_">
			<type>state</type>
			<sensorId>_MMU2_PWR_SUPPLY_2_XFMR_FUSE_</sensorId>
			<value>
				<mapValue mapid="open_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS11</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Power Supply 2 XFMR Fuse</label>
			<enum>open_normal_em</enum>
			<sensorSet>MMU2 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_pwr_supply_1_xfmr_fuse_">
			<type>state</type>
			<sensorId>_MMU2_PWR_SUPPLY_1_XFMR_FUSE_</sensorId>
			<value>
				<mapValue mapid="open_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS11</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Power Supply 1 XFMR Fuse</label>
			<enum>open_normal_em</enum>
			<sensorSet>MMU2 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_24v_dc_supply_2">
			<type>state</type>
			<sensorId>_MMU2_24V_DC_SUPPLY_2</sensorId>
			<value>
				<mapValue mapid="fault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS11</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 24v DC Supply 2</label>
			<enum>fault_normal_em</enum>
			<sensorSet>MMU2 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_24v_dc_supply_1">
			<type>state</type>
			<sensorId>_MMU2_24V_DC_SUPPLY_1</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS11</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 24v DC Supply 1</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU2 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_fan_6">
			<type>state</type>
			<sensorId>_MMU2_FAN_6</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS11</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Fan 6</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU2 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_fan_5">
			<type>state</type>
			<sensorId>_MMU2_FAN_5</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS11</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Fan 5</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU2 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_fan_4">
			<type>state</type>
			<sensorId>_MMU2_FAN_4</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS11</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Fan 4</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU2 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_fan_3">
			<type>state</type>
			<sensorId>_MMU2_FAN_3</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS11</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Fan 3</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU2 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_fan_2">
			<type>state</type>
			<sensorId>_MMU2_FAN_2</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS11</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Fan 2</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU2 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_fan_1">
			<type>state</type>
			<sensorId>_MMU2_FAN_1</sensorId>
			<value>
				<mapValue mapid="fanfault_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS11</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Fan 1</label>
			<enum>fanfault_normal_em</enum>
			<sensorSet>MMU2 Status Register 2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_input_ph_rotation_ccw">
			<type>state</type>
			<sensorId>_MMU2_INPUT_PH_ROTATION_CCW</sensorId>
			<value>
				<mapValue mapid="cw_stat_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Input Phase Rotation CCW</label>
			<enum>cw_stat_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_input_ph_rotation_cw">
			<type>state</type>
			<sensorId>_MMU2_INPUT_PH_ROTATION_CW</sensorId>
			<value>
				<mapValue mapid="cw_stat_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Input Phase Rotation CW</label>
			<enum>cw_stat_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_static_switch_timeout">
			<type>state</type>
			<sensorId>_MMU2_STATIC_SWITCH_TIMEOUT</sensorId>
			<value>
				<mapValue mapid="normal_timeout_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Static Switch Timeout</label>
			<enum>normal_timeout_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_flywheel_overspeed_shutdown">
			<type>state</type>
			<sensorId>_MMU2_FLYWHEEL_OVERSPEED_SHUTDOWN</sensorId>
			<value>
				<mapValue mapid="normal_shutdown_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Flywheel Overspeed Shutdown</label>
			<enum>normal_shutdown_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_rotor_position_sensor_error">
			<type>state</type>
			<sensorId>_MMU2_ROTOR_POSITION_SENSOR_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Rotor Position Sensor Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_flywheel_igbt_3_error">
			<type>state</type>
			<sensorId>_MMU2_FLYWHEEL_IGBT_3_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Flywheel IGBT 3 Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_flywheel_igbt_2_error">
			<type>state</type>
			<sensorId>_MMU2_FLYWHEEL_IGBT_2_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Flywheel IGBT 2 Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_flywheel_igbt_1_error">
			<type>state</type>
			<sensorId>_MMU2_FLYWHEEL_IGBT_1_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Flywheel IGBT 1 Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_inverter_ph_c_igbt_error">
			<type>state</type>
			<sensorId>_MMU2_INVERTER_PH_C_IGBT_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Inverter Phase C IGBT Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_inverter_ph_b_igbt_error">
			<type>state</type>
			<sensorId>_MMU2_INVERTER_PH_B_IGBT_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Inverter Phase B IGBT Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_inverter_ph_a_igbt_error">
			<type>state</type>
			<sensorId>_MMU2_INVERTER_PH_A_IGBT_ERROR</sensorId>
			<value>
				<mapValue mapid="normal_error_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Inverter Phase A IGBT Error</label>
			<enum>normal_error_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_flywheel_if_board_comm">
			<type>state</type>
			<sensorId>_MMU2_FLYWHEEL_IF_BOARD_COMM</sensorId>
			<value>
				<mapValue mapid="normal_failure_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Flywheel Board Comm</label>
			<enum>normal_failure_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_dc_bus_low_voltage">
			<type>state</type>
			<sensorId>_MMU2_DC_BUS_LOW_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="normal_failure_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 DC Bus Low Voltage</label>
			<enum>normal_failure_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_dc_bus_high_voltage">
			<type>state</type>
			<sensorId>_MMU2_DC_BUS_HIGH_VOLTAGE</sensorId>
			<value>
				<mapValue mapid="normal_failure_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS12</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 DC Bus High Voltage</label>
			<enum>normal_failure_em</enum>
			<sensorSet>MMU2 Status Register 3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_bypass_available">
			<type>state</type>
			<sensorId>_MMU2_BYPASS_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="failure_normal_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS13</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Bypass Available</label>
			<enum>failure_normal_em</enum>
			<sensorSet>MMU2 Status Register 4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_input_breaker_status">
			<type>state</type>
			<sensorId>_MMU2_INPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="open_close_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS14</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Input Breaker Status</label>
			<enum>open_close_vm</enum>
			<sensorSet>MMU2 Status Register 5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_output_breaker_status">
			<type>state</type>
			<sensorId>_MMU2_OUTPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="open_close_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS14</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 Output Breaker Status</label>
			<enum>open_close_vm</enum>
			<sensorSet>MMU2 Status Register 5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_system_input_breaker_status">
			<type>state</type>
			<sensorId>_MMU2_SYSTEM_INPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="open_close_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS14</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 System Input Breaker Status</label>
			<enum>open_close_vm</enum>
			<sensorSet>MMU2 Status Register 5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mmu2_system_output_breaker_status">
			<type>state</type>
			<sensorId>_MMU2_SYSTEM_OUTPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="open_close_vm">
					<formatNumber printffmt="%1.0f">
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>STATUS14</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<label>MMU2 System Output Breaker Status</label>
			<enum>open_close_vm</enum>
			<sensorSet>MMU2 Status Register 5</sensorSet>
		</stateSensor>
		
		<valueMap ruleid="failure_normal_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="failure_normal_em">
			<label>Failure</label>
			<label>Normal</label>
		</enumMap>
		
		<valueMap ruleid="normal_failure_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="normal_failure_em">
			<label>Normal</label>
			<label>Failure</label>
		</enumMap>
		
		<valueMap ruleid="error_normal_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="error_normal_em">
			<label>Error</label>
			<label>Normal</label>
		</enumMap>
		
		<valueMap ruleid="open_normal_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="open_normal_em">
			<label>Open</label>
			<label>Normal</label>
		</enumMap>
		
		<valueMap ruleid="cw_stat_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="cw_stat_em">
			<label>Not CW</label>
			<label>CW</label>
		</enumMap>
		
		<valueMap ruleid="failure_locked_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="failure_locked_em">
			<label>Failure</label>
			<label>Locked</label>
		</enumMap>
		
		<valueMap ruleid="open_close_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="open_close_em">
			<label>Open</label>
			<label>Closed</label>
		</enumMap>
		
		<valueMap ruleid="closed_open_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="closed_open_em">
			<label>Closed</label>
			<label>Open</label>
		</enumMap>
		
		<valueMap ruleid="normal_timeout_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="normal_timeout_em">
			<label>Normal</label>
			<label>Timeout</label>
		</enumMap>
		
		<valueMap ruleid="normal_shutdown_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="normal_shutdown_em">
			<label>Normal</label>
			<label>Shutdown</label>
		</enumMap>
		
		<valueMap ruleid="notenabled_enabled_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="notenabled_enabled_em">
			<label>Not Enabled</label>
			<label>Enabled</label>
		</enumMap>
		
		<valueMap ruleid="normal_dischargin_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="normal_dischargin_em">
			<label>Normal</label>
			<label>Discharging</label>
		</enumMap>
		
		<valueMap ruleid="fault_normal_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="fault_normal_em">
			<label>Fault</label>
			<label>Normal</label>
		</enumMap>
		
		<valueMap ruleid="fanfault_normal_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="fanfault_normal_em">
			<label>Fan Fault</label>
			<label>Normal</label>
		</enumMap>
		
		<valueMap ruleid="normal_error_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		
		<enumMap ruleid="normal_error_em">
			<label>Normal</label>
			<label>Error</label>
		</enumMap>
		
	</device>
	<protocol>
		<modbus>
			<value_ref_id valid="STATUS1">
				<function>3</function>
				<start_addr>12349</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATUS2">
				<function>3</function>
				<start_addr>12350</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATUS3">
				<function>3</function>
				<start_addr>12351</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATUS4">
				<function>3</function>
				<start_addr>12352</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_FREQUENCY">
				<function>3</function>
				<start_addr>12353</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_FREQUENCY">
				<function>3</function>
				<start_addr>12355</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_POWER_FACTOR">
				<function>3</function>
				<start_addr>12357</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_POWER_FACTOR">
				<function>3</function>
				<start_addr>12359</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="PERCENT_ENERGY">
				<function>3</function>
				<start_addr>12361</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="PERCENT_LOAD">
				<function>3</function>
				<start_addr>12363</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_POWER">
				<function>3</function>
				<start_addr>12365</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_KVA">
				<function>3</function>
				<start_addr>12367</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_POWER">
				<function>3</function>
				<start_addr>12369</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_KVA">
				<function>3</function>
				<start_addr>12371</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_LINE_VOLT_AB">
				<function>3</function>
				<start_addr>12373</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_LINE_VOLT_BC">
				<function>3</function>
				<start_addr>12375</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_LINE_VOLT_CA">
				<function>3</function>
				<start_addr>12377</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_LINE_VOLT_AB">
				<function>3</function>
				<start_addr>12379</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_LINE_VOLT_BC">
				<function>3</function>
				<start_addr>12381</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_LINE_VOLT_CA">
				<function>3</function>
				<start_addr>12383</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_LINE_VOLT_AB">
				<function>3</function>
				<start_addr>12385</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_LINE_VOLT_BC">
				<function>3</function>
				<start_addr>12387</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_LINE_VOLT_CA">
				<function>3</function>
				<start_addr>12389</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_CURRENT_PHASE_A">
				<function>3</function>
				<start_addr>12391</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_CURRENT_PHASE_B">
				<function>3</function>
				<start_addr>12393</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_CURRENT_PHASE_C">
				<function>3</function>
				<start_addr>12395</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_CURRENT_PHASE_A">
				<function>3</function>
				<start_addr>12397</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_CURRENT_PHASE_B">
				<function>3</function>
				<start_addr>12399</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_CURRENT_PHASE_C">
				<function>3</function>
				<start_addr>12401</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="STATUS5">
				<function>3</function>
				<start_addr>12448</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATUS6">
				<function>3</function>
				<start_addr>12449</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATUS7">
				<function>3</function>
				<start_addr>12450</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATUS8">
				<function>3</function>
				<start_addr>12451</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATUS9">
				<function>3</function>
				<start_addr>12452</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_INPUT_VOLTS_AB">
				<function>3</function>
				<start_addr>12453</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_INPUT_VOLTS_BC">
				<function>3</function>
				<start_addr>12455</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_INPUT_VOLTS_CA">
				<function>3</function>
				<start_addr>12457</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_OUTPUT_VOLTS_AB">
				<function>3</function>
				<start_addr>12459</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_OUTPUT_VOLTS_BC">
				<function>3</function>
				<start_addr>12461</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_OUTPUT_VOLTS_CA">
				<function>3</function>
				<start_addr>12463</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_INVERTER_CURRENT_A">
				<function>3</function>
				<start_addr>12465</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_INVERTER_CURRENT_B">
				<function>3</function>
				<start_addr>12467</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_INVERTER_CURRENT_C">
				<function>3</function>
				<start_addr>12469</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_INPUT_CURRENT_A">
				<function>3</function>
				<start_addr>12471</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_INPUT_CURRENT_B">
				<function>3</function>
				<start_addr>12473</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_INPUT_CURRENT_C">
				<function>3</function>
				<start_addr>12475</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_OUTPUT_CURRENT_A">
				<function>3</function>
				<start_addr>12477</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_OUTPUT_CURRENT_B">
				<function>3</function>
				<start_addr>12479</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_OUTPUT_CURRENT_C">
				<function>3</function>
				<start_addr>12481</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_OUTPUT_POWER">
				<function>3</function>
				<start_addr>12483</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_OUTPUT_KVA">
				<function>3</function>
				<start_addr>12485</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_INPUT_POWER">
				<function>3</function>
				<start_addr>12487</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_INPUT_KVA">
				<function>3</function>
				<start_addr>12489</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_CABINET_TEMP">
				<function>3</function>
				<start_addr>12491</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_AIR_INLET_TEMP">
				<function>3</function>
				<start_addr>12493</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_POSITIVE_DC_BUS_VOLTAGE">
				<function>3</function>
				<start_addr>12495</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_NEGATIVE_DC_BUS_VOLTAGE">
				<function>3</function>
				<start_addr>12497</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_TACHOMETER">
				<function>3</function>
				<start_addr>12499</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_PERCENT_ENERGY">
				<function>3</function>
				<start_addr>12501</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_VACUUM_GAUGE">
				<function>3</function>
				<start_addr>12503</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_TOP_FIELD_COIL_CURRENT">
				<function>3</function>
				<start_addr>12505</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_BOTTOM_FIELD_COIL_CURRENT">
				<function>3</function>
				<start_addr>12507</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_BOTTOM_BEARING_FORCE">
				<function>3</function>
				<start_addr>12509</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_LATERAL_VIBRATION">
				<function>3</function>
				<start_addr>12511</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_AXIAL_VIBRATION">
				<function>3</function>
				<start_addr>12513</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_TOP_FIELD_COIL_TEMP">
				<function>3</function>
				<start_addr>12515</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_BOTTOM_FIELD_COIL_TEMP">
				<function>3</function>
				<start_addr>12517</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_ARMATURE_TEMP">
				<function>3</function>
				<start_addr>12519</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_TOP_FIELD_COIL_IGBT_TEMP">
				<function>3</function>
				<start_addr>12521</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_BOTTOM_FIELD_COIL_IGBT_TEMP">
				<function>3</function>
				<start_addr>12523</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_TOP_BEARING_TEMP">
				<function>3</function>
				<start_addr>12525</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU1_BOTTOM_BEARING_TEMP">
				<function>3</function>
				<start_addr>12527</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="STATUS10">
				<function>3</function>
				<start_addr>12548</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATUS11">
				<function>3</function>
				<start_addr>12549</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATUS12">
				<function>3</function>
				<start_addr>12550</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATUS13">
				<function>3</function>
				<start_addr>12551</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="STATUS14">
				<function>3</function>
				<start_addr>12552</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_INPUT_VOLTS_AB">
				<function>3</function>
				<start_addr>12553</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_INPUT_VOLTS_BC">
				<function>3</function>
				<start_addr>12555</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_INPUT_VOLTS_CA">
				<function>3</function>
				<start_addr>12557</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_OUTPUT_VOLTS_AB">
				<function>3</function>
				<start_addr>12559</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_OUTPUT_VOLTS_BC">
				<function>3</function>
				<start_addr>12561</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_OUTPUT_VOLTS_CA">
				<function>3</function>
				<start_addr>12563</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_INVERTER_CURRENT_A">
				<function>3</function>
				<start_addr>12565</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_INVERTER_CURRENT_B">
				<function>3</function>
				<start_addr>12567</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_INVERTER_CURRENT_C">
				<function>3</function>
				<start_addr>12569</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_INPUT_CURRENT_A">
				<function>3</function>
				<start_addr>12571</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_INPUT_CURRENT_B">
				<function>3</function>
				<start_addr>12573</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_INPUT_CURRENT_C">
				<function>3</function>
				<start_addr>12575</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_OUTPUT_CURRENT_A">
				<function>3</function>
				<start_addr>12577</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_OUTPUT_CURRENT_B">
				<function>3</function>
				<start_addr>12579</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_OUTPUT_CURRENT_C">
				<function>3</function>
				<start_addr>12581</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_OUTPUT_POWER">
				<function>3</function>
				<start_addr>12583</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_OUTPUT_KVA">
				<function>3</function>
				<start_addr>12585</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_INPUT_POWER">
				<function>3</function>
				<start_addr>12587</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_INPUT_KVA">
				<function>3</function>
				<start_addr>12589</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_CABINET_TEMP">
				<function>3</function>
				<start_addr>12591</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_AIR_INLET_TEMP">
				<function>3</function>
				<start_addr>12593</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_POSITIVE_DC_BUS_VOLTAGE">
				<function>3</function>
				<start_addr>12595</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_NEGATIVE_DC_BUS_VOLTAGE">
				<function>3</function>
				<start_addr>12597</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_TACHOMETER">
				<function>3</function>
				<start_addr>12599</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_PERCENT_ENERGY">
				<function>3</function>
				<start_addr>12601</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_VACUUM_GAUGE">
				<function>3</function>
				<start_addr>12603</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_TOP_FIELD_COIL_CURRENT">
				<function>3</function>
				<start_addr>12605</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_BOTTOM_FIELD_COIL_CURRENT">
				<function>3</function>
				<start_addr>12607</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_BOTTOM_BEARING_FORCE">
				<function>3</function>
				<start_addr>12609</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_LATERAL_VIBRATION">
				<function>3</function>
				<start_addr>12611</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_AXIAL_VIBRATION">
				<function>3</function>
				<start_addr>12613</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_TOP_FIELD_COIL_TEMP">
				<function>3</function>
				<start_addr>12615</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_BOTTOM_FIELD_COIL_TEMP">
				<function>3</function>
				<start_addr>12617</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_ARMATURE_TEMP">
				<function>3</function>
				<start_addr>12619</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_TOP_FIELD_COIL_IGBT_TEMP">
				<function>3</function>
				<start_addr>12621</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_BOTTOM_FIELD_COIL_IGBT_TEMP">
				<function>3</function>
				<start_addr>12623</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_TOP_BEARING_TEMP">
				<function>3</function>
				<start_addr>12625</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
			<value_ref_id valid="MMU2_BOTTOM_BEARING_TEMP">
				<function>3</function>
				<start_addr>12627</start_addr>
				<quantity>2</quantity>
				<type>float</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>