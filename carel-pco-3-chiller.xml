<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<APC_DDF canremove="yes"
    xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    ddfversion="1"
    ddfname="Carel PCO-3 Chiller"
    ddfid="carel-pco-3-chiller">
  <schemaVersion>1.6</schemaVersion>

  <device deviceid="pco-3_chiller_header">
    <oidMustExist oid="MODBUS_OID_MUST_EXIST" ruleid="OIDMustExist_modbusdevicetest" />

    <setProductData ruleid="vendordata" field="vendor">Carel</setProductData>

    <setProductData ruleid="modeldata" field="model">PCO-3</setProductData>

    <setProductData ruleid="typedata" field="type">Cooling Device</setProductData>

    <setDefaultLabel ruleid="labeldata"><sysHostname /> - Slave <commSetting field="slaveaddress" /> </setDefaultLabel>

  </device>

  <device deviceid="pco-3_chiller_sensors">
    <oidMustExist oid="MODBUS_OID_MUST_EXIST" ruleid="OIDMustExist_modbusdevicetest" />

    <numSensor ruleid="cond_tmp_cir_1">
      <type>temp</type>
      <sensorId>COND_TEMP_CIRCUIT_1</sensorId>
      <value>
        <!-- scaling: in / 10 = out  -->
        <div>
          <op><getOid>cond_temp_circuit_1</getOid></op>
          <op>10</op>
        </div>
      </value>
      <label>Condesner Temperature Circuit 1</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="cond_tmp_cir_2">
      <type>temp</type>
      <sensorId>COND_TEMP_CIRCUIT_2</sensorId>
      <value>
        <!-- scaling: in / 10 = out  -->
        <div>
          <op><getOid>cond_temp_circuit_2</getOid></op>
          <op>10</op>
        </div>
      </value>
      <label>Condesner Temperature Circuit 2</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="external_temp">
      <type>temp</type>
      <sensorId>EXTERNAL_TEMP</sensorId>
      <value>
        <!-- scaling: in / 10 = out  -->
        <div>
          <op><getOid>external_temp</getOid></op>
          <op>10</op>
        </div>
      </value>
      <label>External Temperature</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="evpaorator_inlet_temp">
      <type>temp</type>
      <sensorId>EVAPORATOR_INLET_TEMP</sensorId>
      <value>
        <!-- scaling: in / 10 = out  -->
        <div>
          <op><getOid>evapor_inlet_temp</getOid></op>
          <op>10</op>
        </div>
      </value>
      <label>Evaporator Inlet Temperature</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="evaporator_outlet_temp">
      <type>temp</type>
      <sensorId>EVAPORATOR_OUTLET_TEMP</sensorId>
      <value>
        <!-- scaling: in / 10 = out  -->
        <div>
          <op><getOid>evapor_outlet_temp</getOid></op>
          <op>10</op>
        </div>
      </value>
      <label>Evaporator Outlet Temperature</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="freecooling_inlet_temp">
      <type>temp</type>
      <sensorId>FREECOOLING_INLET_TEMP</sensorId>
      <value>
        <!-- scaling: in / 10 = out  -->
        <div>
          <op><getOid>freecooling_inlet_temp</getOid></op>
          <op>10</op>
        </div>
      </value>
      <label>Freecooling Inlet Temperature</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="high_pressure_circuit_1">
      <type>pressure</type>
      <sensorId>HIGH_PRESSURE_CIRCUIT_1</sensorId>
      <value>
        <!-- scaling: in / 10 = out  -->
        <div>
          <op><getOid>high_press_circuit_1</getOid></op>
          <op>10</op>
        </div>
      </value>
      <label>High Pressure Circuit 1</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="high_pressure_circuit_2">
      <type>pressure</type>
      <sensorId>HIGH_PRESSURE_CIRCUIT_2</sensorId>
      <value>
        <!-- scaling: in / 10 = out  -->
        <div>
          <op><getOid>high_press_circuit_2</getOid></op>
          <op>10</op>
        </div>
      </value>
      <label>High Pressure Circuit 2</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="analog_output_1">
      <type>temp</type>
      <sensorId>ANALOG_OUTPUT_1</sensorId>
      <value>
        <!-- scaling: in / 100 = out  -->
        <div>
          <op><getOid>analog_output_1</getOid></op>
          <op>100</op>
        </div>
      </value>
      <label>Analog Output 1</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="analog_output_2">
      <type>temp</type>
      <sensorId>ANALOG_OUTPUT_2</sensorId>
      <value>
        <!-- scaling: in / 100 = out  -->
        <div>
          <op><getOid>analog_output_2</getOid></op>
          <op>100</op>
        </div>
      </value>
      <label>Analog Output 2</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="cooling_setpoint_evaporation">
      <type>temp</type>
      <sensorId>COOLING_SETPOINT_EVAPORATION</sensorId>
      <value>
        <!-- scaling: in / 10 = out  -->
        <div>
          <op><getOid>cooling_setpoint_evap</getOid></op>
          <op>10</op>
        </div>
      </value>
      <label>Cooling Setpoint Evaporation</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="heating_setpoint_evaporation">
      <type>temp</type>
      <sensorId>HEATING_SETPOINT_EVAPORATION</sensorId>
      <value>
        <!-- scaling: in / 10 = out  -->
        <div>
          <op><getOid>heating_setpoint_evap</getOid></op>
          <op>10</op>
        </div>
      </value>
      <label>Heating Setpoint Evaporation</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <numSensor ruleid="current_setpoint">
      <type>temp</type>
      <sensorId>CURRENT_SETPOINT</sensorId>
      <value>
        <!-- scaling: in / 10 = out  -->
        <div>
          <op><getOid>current_setpoint</getOid></op>
          <op>10</op>
        </div>
      </value>
      <label>Current Setpoint</label>
      <sensorSet>Number Sensors</sensorSet>
    </numSensor>

    <stateSensor ruleid="compressor_1">
      <type>state</type>
      <sensorId>COMPRESSOR_1_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>compressor_1</getOid>
        </mapValue>
      </value>
      <label>Compressor 1 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="compressor_2">
      <type>state</type>
      <sensorId>COMPRESSOR_2_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>compressor_2</getOid>
        </mapValue>
      </value>
      <label>Compressor 2 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="liquid_solenoid_circuit_1">
      <type>state</type>
      <sensorId>LIQUID_SOLENOID_CIRCUIT_1_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>liquid_solenoid_cir_1</getOid>
        </mapValue>
      </value>
      <label>Liquid Solenoid Circut ` Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="compressor_3">
      <type>state</type>
      <sensorId>COMPRESSOR_3_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>compressor_3</getOid>
        </mapValue>
      </value>
      <label>Compressor 3 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="compressor_4">
      <type>state</type>
      <sensorId>COMPRESSOR_4_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>compressor_4</getOid>
        </mapValue>
      </value>
      <label>Compressor 4 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="liquid_solenoid_circuit_2">
      <type>state</type>
      <sensorId>LIQUID_SOLENOID_CIRCUIT_2_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>liquid_solenoid_cir_2</getOid>
        </mapValue>
      </value>
      <label>Liquid Solenoid Circuit 2 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="evaporator_pumps">
      <type>state</type>
      <sensorId>EVAPORATOR_PUMP_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>evapor_pumps</getOid>
        </mapValue>
      </value>
      <label>Evaporator Pumps Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="general_alarm_1">
      <type>state</type>
      <sensorId>GENERAL_ALARM_1_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>general_alarm_1</getOid>
        </mapValue>
      </value>
      <label>General Alarm 1 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="condition_fan_1_circuit_1">
      <type>state</type>
      <sensorId>CONDITION_FAN_1_CIRCUIT_1_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>condit_fan_1_cir_1</getOid>
        </mapValue>
      </value>
      <label>Condition Fan 1 Circuit 1 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="freecooling">
      <type>state</type>
      <sensorId>FREECOOLING_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>freecooling</getOid>
        </mapValue>
      </value>
      <label>Freecooling Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="antifreeze_heater">
      <type>state</type>
      <sensorId>ANTIFREEZE_HEATER_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>antifreeze_heater</getOid>
        </mapValue>
      </value>
      <label>Antifreeze Heater Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="coil_12_no_label">
      <type>state</type>
      <sensorId>COIL_12_NO_LABEL</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>no_name</getOid>
        </mapValue>
      </value>
      <label>Coil Number 12 - No label</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="condition_fan_1_circuit_2">
      <type>state</type>
      <sensorId>CONDITION_FAN_1_CIRCUIT_2_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>condit_fan_1_cir_2</getOid>
        </mapValue>
      </value>
      <label>Condition Fan 1 Circuit 2 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="general_alarm">
      <type>state</type>
      <sensorId>GENERAL_ALARM_2_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>general_alarm_2</getOid>
        </mapValue>
      </value>
      <label>General Alarm 2 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="antifreeze_alarm">
      <type>state</type>
      <sensorId>ANTIFREEZE_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>antifreeze_alarm</getOid>
        </mapValue>
      </value>
      <label>Antifreeze Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="compressor_1_thermal_overload">
      <type>state</type>
      <sensorId>COMPRESSOR_1_THERMAL_OVERLOAD_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>compressor_1_thermal_overload</getOid>
        </mapValue>
      </value>
      <label>Compressor 1 Thermal Overload Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="compressor_2_thermal_overload">
      <type>state</type>
      <sensorId>COMPRESSOR_2_THERMAL_OVERLOAD_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>compressor_2_thermal_overload</getOid>
        </mapValue>
      </value>
      <label>Compressor 2 Thermal Overload Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="compressor_3_thermal_overload">
      <type>state</type>
      <sensorId>COMPRESSOR_3_THERMAL_OVERLOAD_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>compressor_3_thermal_overload</getOid>
        </mapValue>
      </value>
      <label>Compressor 3 Thermal Overload Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="compressor_4_thermal_overload">
      <type>state</type>
      <sensorId>COMPRESSOR_4_THERMAL_OVERLOAD_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>compressor_4_thermal_overload</getOid>
        </mapValue>
      </value>
      <label>Compressor 4 Thermal Overload Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="condenser_flow_switch_alarm">
      <type>state</type>
      <sensorId>CONDENSER_FLOW_SWITCH_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>condesner_flow_switch_alarm</getOid>
        </mapValue>
      </value>
      <label>Condenser Flow Switch Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="evaporator_flow_switch_alarm">
      <type>state</type>
      <sensorId>EVAPORATOR_FLOW_SWITCH_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>evaporator_flow_switch_alarm</getOid>
        </mapValue>
      </value>
      <label>Evaporator Flow Switch Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="high_pressure_alarm_circuit_1">
      <type>state</type>
      <sensorId>HIGH_PRESSURE_ALARM_CIRCUIT_1_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>hi_press_alarm_circuit_1</getOid>
        </mapValue>
      </value>
      <label>High Pressure Alarm Circuit 1 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="high_pressure_alarm_circuit_2">
      <type>state</type>
      <sensorId>HIGH_PRESSURE_ALARM_CIRCUIT_2_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>hi_press_alarm_circuit_2</getOid>
        </mapValue>
      </value>
      <label>High Pressure Alarm Circuit 2 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="oil_differential_alarm_circuit_1">
      <type>state</type>
      <sensorId>OIL_DIFFERENTIAL_ALARM_CIRCUIT_1_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>oil_diff_alarm_circuit_1</getOid>
        </mapValue>
      </value>
      <label>Oil Differential Alarm Circuit 1 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="oil_differential_alarm_circuit_2">
      <type>state</type>
      <sensorId>OIL_DIFFERENTIAL_ALARM_CIRCUIT_2_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>oil_diff_alarm_circuit_2</getOid>
        </mapValue>
      </value>
      <label>Oil Differential Alarm Circuit 2 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="low_pressure_alarm_circuit_1">
      <type>state</type>
      <sensorId>LOW_PRESSURE_ALARM_CIRCUIT_1_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>low_press_alarm_circuit_1</getOid>
        </mapValue>
      </value>
      <label>Low Pressure Alarm Circuit 1 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="low_pressure_alarm_circuit_2">
      <type>state</type>
      <sensorId>LOW_PRESSURE_ALARM_CIRCUIT_2_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>low_press_alarm_circuit_2</getOid>
        </mapValue>
      </value>
      <label>Low Pressure Alarm Circuit 2 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="high_pressure_transucer_alarm_1">
      <type>state</type>
      <sensorId>HIGH_PRESSURE_TRANSDUCER_ALARM_1_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>hi_press_transducer_alarm_1</getOid>
        </mapValue>
      </value>
      <label>High Pressure Transducer Alarm 1 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="high_pressure_transucer_alarm_2">
      <type>state</type>
      <sensorId>HIGH_PRESSURE_TRANSDUCER_ALARM_2_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>hi_press_transducer_alarm_2</getOid>
        </mapValue>
      </value>
      <label>High Pressure Transducer Alarm 2 Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="serious_alarm_from_digital_input">
      <type>state</type>
      <sensorId>SERIOUS_ALARM_FROM_DIGITAL_INPUT_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>serious_alarm_from_digital_input</getOid>
        </mapValue>
      </value>
      <label>Serious Alarm From Digital Input Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="condenser_fan_1_thermal_overload_alarm">
      <type>state</type>
      <sensorId>CONDENSER_FAN_1_THERMAL_OVERLOAD_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>condenser_fan_1_thermal_overload</getOid>
        </mapValue>
      </value>
      <label>Condenser Fan 1 Thermal Overload Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="condenser_fan_2_thermal_overload_alarm">
      <type>state</type>
      <sensorId>CONDENSER_FAN_2_THERMAL_OVERLOAD_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>condenser_fan_2_thermal_overload</getOid>
        </mapValue>
      </value>
      <label>Condenser Fan 2 Thermal Overload Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="condenser_fan_3_thermal_overload_alarm">
      <type>state</type>
      <sensorId>CONDENSER_FAN_3_THERMAL_OVERLOAD_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>condenser_fan_3_thermal_overload</getOid>
        </mapValue>
      </value>
      <label>Condenser Fan 3 Thermal Overload Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="main_fan_thermal_overload_alarm">
      <type>state</type>
      <sensorId>MAIN_FAN_THERMAL_OVERLOAD_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>main_fan_thermal_overload</getOid>
        </mapValue>
      </value>
      <label>Main Fan Thermal Overload Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="condenser_pump_thermal_overload_alarm">
      <type>state</type>
      <sensorId>CONDERNSER_PUMPT_THERMAL_OVERLOAD_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>condenser_pump_thermal_overload</getOid>
        </mapValue>
      </value>
      <label>Condenser Pump Thermal Overload Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="evaporator_pump_thermal_overload_alarm">
      <type>state</type>
      <sensorId>EVAPORATOR_PUMPT_THERMAL_OVERLOAD_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>evaporator_pump_thermal_overload</getOid>
        </mapValue>
      </value>
      <label>Evaporator Pump Thermal Overload Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="unit_1_disconnected_alarm">
      <type>state</type>
      <sensorId>UNIT_1_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>unit_1_disconnected</getOid>
        </mapValue>
      </value>
      <label>Unit 1 Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="unit_2_disconnected_alarm">
      <type>state</type>
      <sensorId>UNIT_2_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>unit_2_disconnected</getOid>
        </mapValue>
      </value>
      <label>Unit 2 Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="unit_3_disconnected_alarm">
      <type>state</type>
      <sensorId>UNIT_3_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>unit_3_disconnected</getOid>
        </mapValue>
      </value>
      <label>Unit 3 Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="unit_4_disconnected_alarm">
      <type>state</type>
      <sensorId>UNIT_4_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>unit_4_disconnected</getOid>
        </mapValue>
      </value>
      <label>Unit 4 Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="probe_b1_broken_or_disconnected_alarm">
      <type>state</type>
      <sensorId>PROBE_B1_BROKEN_OR_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>probe_b1_broken_or_disconnected</getOid>
        </mapValue>
      </value>
      <label>Probe B1 Broken Or Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="probe_b2_broken_or_disconnected_alarm">
      <type>state</type>
      <sensorId>PROBE_B2_BROKEN_OR_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>probe_b2_broken_or_disconnected</getOid>
        </mapValue>
      </value>
      <label>Probe B2 Broken Or Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="probe_b3_broken_or_disconnected_alarm">
      <type>state</type>
      <sensorId>PROBE_B3_BROKEN_OR_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>probe_b3_broken_or_disconnected</getOid>
        </mapValue>
      </value>
      <label>Probe B3 Broken Or Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="probe_b4_broken_or_disconnected_alarm">
      <type>state</type>
      <sensorId>PROBE_B4_BROKEN_OR_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>probe_b4_broken_or_disconnected</getOid>
        </mapValue>
      </value>
      <label>Probe B4 Broken Or Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="probe_b5_broken_or_disconnected_alarm">
      <type>state</type>
      <sensorId>PROBE_B5_BROKEN_OR_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>probe_b5_broken_or_disconnected</getOid>
        </mapValue>
      </value>
      <label>Probe B5 Broken Or Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="probe_b6_broken_or_disconnected_alarm">
      <type>state</type>
      <sensorId>PROBE_B6_BROKEN_OR_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>probe_b6_broken_or_disconnected</getOid>
        </mapValue>
      </value>
      <label>Probe B6 Broken Or Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="probe_b7_broken_or_disconnected_alarm">
      <type>state</type>
      <sensorId>PROBE_B7_BROKEN_OR_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>probe_b7_broken_or_disconnected</getOid>
        </mapValue>
      </value>
      <label>Probe B7 Broken Or Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="probe_b8_broken_or_disconnected_alarm">
      <type>state</type>
      <sensorId>PROBE_B8_BROKEN_OR_DISCONNECTED_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>probe_b8_broken_or_disconnected</getOid>
        </mapValue>
      </value>
      <label>Probe B8 Broken Or Disconnected Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="main_pump_or_main_fan_maint_alarm">
      <type>state</type>
      <sensorId>MAIN_PUMP_OR_FAN_MAINT_ALARM_STATUS</sensorId>
      <value>
        <mapValue mapid="state_vm">
          <getOid>main_pump_or_fan_maint</getOid>
        </mapValue>
      </value>
      <label>Main Pump Or Main Fan Maintenance Alarm Status</label>
      <enum>normal_alarm_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
   
    <valueMap ruleid="state_vm">
      <valueIn>0</valueIn><valueOut>0</valueOut>
      <valueIn>1</valueIn><valueOut>1</valueOut>
      <valueIn>*</valueIn><valueOut>2</valueOut>
    </valueMap>

    <enumMap ruleid="normal_alarm_em">
      <label>Normal</label>
      <label>Alarm</label>
      <label>Unknown</label>
    </enumMap>

  </device>

  <protocol>
    <modbus>
    
        <!-- Holding register values -->
      <value_ref_id valid="cond_temp_circuit_1">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="cond_temp_circuit_2">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="external_temp">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="evapor_inlet_temp">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="evapor_outlet_temp">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="freecooling_inlet_temp">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="high_press_circuit_1">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="high_press_circuit_2">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="analog_output_1">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="analog_output_2">
        <function>3</function>
        <start_addr>9</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="cooling_setpoint_evap">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="heating_setpoint_evap">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="current_setpoint">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>

      <!-- Coil register values -->
      <value_ref_id valid="compressor_1">
        <function>1</function>
        <start_addr>9</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="compressor_2">
        <function>1</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="liquid_solenoid_cir_1">
        <function>1</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="compressor_3">
        <function>1</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="compressor_4">
        <function>1</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="liquid_solenoid_cir_2">
        <function>1</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="evapor_pumps">
        <function>1</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="general_alarm_1">
        <function>1</function>
        <start_addr>16</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="condit_fan_1_cir_1">
        <function>1</function>
        <start_addr>17</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="freecooling">
        <function>1</function>
        <start_addr>18</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="antifreeze_heater">
        <function>1</function>
        <start_addr>19</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="no_name">
        <function>1</function>
        <start_addr>20</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="condit_fan_1_cir_2">
        <function>1</function>
        <start_addr>21</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      
      
      <value_ref_id valid="general_alarm_2">
        <function>1</function>
        <start_addr>69</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="antifreeze_alarm">
        <function>1</function>
        <start_addr>70</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="compressor_1_thermal_overload">
        <function>1</function>
        <start_addr>71</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="compressor_2_thermal_overload">
        <function>1</function>
        <start_addr>72</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="compressor_3_thermal_overload">
        <function>1</function>
        <start_addr>73</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="compressor_4_thermal_overload">
        <function>1</function>
        <start_addr>74</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="condesner_flow_switch_alarm">
        <function>1</function>
        <start_addr>75</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="evaporator_flow_switch_alarm">
        <function>1</function>
        <start_addr>76</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="hi_press_alarm_circuit_1">
        <function>1</function>
        <start_addr>77</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="hi_press_alarm_circuit_2">
        <function>1</function>
        <start_addr>78</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="oil_diff_alarm_circuit_1">
        <function>1</function>
        <start_addr>79</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="oil_diff_alarm_circuit_2">
        <function>1</function>
        <start_addr>80</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="low_press_alarm_circuit_1">
        <function>1</function>
        <start_addr>81</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="low_press_alarm_circuit_2">
        <function>1</function>
        <start_addr>82</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="hi_press_transducer_alarm_1">
        <function>1</function>
        <start_addr>83</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="hi_press_transducer_alarm_2">
        <function>1</function>
        <start_addr>84</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="serious_alarm_from_digital_input">
        <function>1</function>
        <start_addr>85</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="condenser_fan_1_thermal_overload">
        <function>1</function>
        <start_addr>86</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="condenser_fan_2_thermal_overload">
        <function>1</function>
        <start_addr>87</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="condenser_fan_3_thermal_overload">
        <function>1</function>
        <start_addr>88</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="main_fan_thermal_overload">
        <function>1</function>
        <start_addr>89</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="condenser_pump_thermal_overload">
        <function>1</function>
        <start_addr>90</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="evaporator_pump_thermal_overload">
        <function>1</function>
        <start_addr>91</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="unit_1_disconnected">
        <function>1</function>
        <start_addr>92</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="unit_2_disconnected">
        <function>1</function>
        <start_addr>93</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="unit_3_disconnected">
        <function>1</function>
        <start_addr>94</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="unit_4_disconnected">
        <function>1</function>
        <start_addr>95</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="probe_b1_broken_or_disconnected">
        <function>1</function>
        <start_addr>96</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="probe_b2_broken_or_disconnected">
        <function>1</function>
        <start_addr>97</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="probe_b3_broken_or_disconnected">
        <function>1</function>
        <start_addr>98</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="probe_b4_broken_or_disconnected">
        <function>1</function>
        <start_addr>99</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="probe_b5_broken_or_disconnected">
        <function>1</function>
        <start_addr>100</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="probe_b6_broken_or_disconnected">
        <function>1</function>
        <start_addr>101</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="probe_b7_broken_or_disconnected">
        <function>1</function>
        <start_addr>102</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="probe_b8_broken_or_disconnected">
        <function>1</function>
        <start_addr>103</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="main_pump_or_fan_maint">
        <function>1</function>
        <start_addr>104</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
    </modbus>
  </protocol>


</APC_DDF>