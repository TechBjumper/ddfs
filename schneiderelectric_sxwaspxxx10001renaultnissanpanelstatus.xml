<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="schneiderelectric_sxwaspxxx10001renaultnissanpanelstatus" ddfname="SchneiderElectric SXWASPXXX10001RenaultNissanPanelStatus" ddfversion="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="schneiderelectric_sxwaspxxx10001renaultnissanpanelstatus">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">SchneiderElectric</setProductData>
    <setProductData ruleid="modeldata" field="model">SXWASPXXX10001RenaultNissanPanelStatus</setProductData>
    <setProductData ruleid="typedata" field="type">Generic Device</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />
      - Slave
      <commSetting field="slaveaddress" />
    </setDefaultLabel>
    <stateSensor ruleid="batt_rm_damper1_sts">
      <type>state</type>
      <sensorId>_BATT_RM_DAMPER1_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>BATT_RM_DAMPER1_STS</getOid>
        </mapValue>
      </value>
      <label>Batt_Rm_Damper1_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="batt_rm_damper2_sts">
      <type>state</type>
      <sensorId>_BATT_RM_DAMPER2_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>BATT_RM_DAMPER2_STS</getOid>
        </mapValue>
      </value>
      <label>Batt_Rm_Damper2_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="batt_rm_damper3_sts">
      <type>state</type>
      <sensorId>_BATT_RM_DAMPER3_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>BATT_RM_DAMPER3_STS</getOid>
        </mapValue>
      </value>
      <label>Batt_Rm_Damper3_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="batt_rm_damper4_sts">
      <type>state</type>
      <sensorId>_BATT_RM_DAMPER4_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>BATT_RM_DAMPER4_STS</getOid>
        </mapValue>
      </value>
      <label>Batt_Rm_Damper4_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fire_alarm_sts">
      <type>state</type>
      <sensorId>_FIRE_ALARM_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>FIRE_ALARM_STS</getOid>
        </mapValue>
      </value>
      <label>Fire_Alarm_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="gss_panel_sts">
      <type>state</type>
      <sensorId>_GSS_PANEL_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>GSS_PANEL_STS</getOid>
        </mapValue>
      </value>
      <label>GSS_Panel_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="incommer1_on_off_sts">
      <type>state</type>
      <sensorId>_INCOMMER1_ON_OFF_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>INCOMMER1_ON_OFF_STS</getOid>
        </mapValue>
      </value>
      <label>Incommer1_On_Off_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="incommer1_trip_sts">
      <type>state</type>
      <sensorId>_INCOMMER1_TRIP_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>INCOMMER1_TRIP_STS</getOid>
        </mapValue>
      </value>
      <label>Incommer1_Trip_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="incommer2_on_off_sts">
      <type>state</type>
      <sensorId>_INCOMMER2_ON_OFF_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>INCOMMER2_ON_OFF_STS</getOid>
        </mapValue>
      </value>
      <label>Incommer2_On_Off_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="incommer2_trip_sts">
      <type>state</type>
      <sensorId>_INCOMMER2_TRIP_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>INCOMMER2_TRIP_STS</getOid>
        </mapValue>
      </value>
      <label>Incommer2_Trip_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="pmm1_on_off_sts">
      <type>state</type>
      <sensorId>_PMM1_ON_OFF_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>PMM1_ON_OFF_STS</getOid>
        </mapValue>
      </value>
      <label>PMM1_On_Off_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="pmm1_trip_sts">
      <type>state</type>
      <sensorId>_PMM1_TRIP_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>PMM1_TRIP_STS</getOid>
        </mapValue>
      </value>
      <label>PMM1_Trip_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="pmm2_on_off_sts">
      <type>state</type>
      <sensorId>_PMM2_ON_OFF_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>PMM2_ON_OFF_STS</getOid>
        </mapValue>
      </value>
      <label>PMM2_On_Off_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="pmm2_trip_sts">
      <type>state</type>
      <sensorId>_PMM2_TRIP_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>PMM2_TRIP_STS</getOid>
        </mapValue>
      </value>
      <label>PMM2_Trip_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="raw_pwr_panel_on_off_sts">
      <type>state</type>
      <sensorId>_RAW_PWR_PANEL_ON_OFF_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>RAW_PWR_PANEL_ON_OFF_STS</getOid>
        </mapValue>
      </value>
      <label>Raw_Pwr_Panel_On_Off_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="raw_pwr_panel_trip_sts">
      <type>state</type>
      <sensorId>_RAW_PWR_PANEL_TRIP_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>RAW_PWR_PANEL_TRIP_STS</getOid>
        </mapValue>
      </value>
      <label>Raw_Pwr_Panel_Trip_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="rodent_panel1_sts">
      <type>state</type>
      <sensorId>_RODENT_PANEL1_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>RODENT_PANEL1_STS</getOid>
        </mapValue>
      </value>
      <label>Rodent_Panel1_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="rodent_panel2_sts">
      <type>state</type>
      <sensorId>_RODENT_PANEL2_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>RODENT_PANEL2_STS</getOid>
        </mapValue>
      </value>
      <label>Rodent_Panel2_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="rodent_panel3_sts">
      <type>state</type>
      <sensorId>_RODENT_PANEL3_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>RODENT_PANEL3_STS</getOid>
        </mapValue>
      </value>
      <label>Rodent_Panel3_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups_panel_og_on_off_sts">
      <type>state</type>
      <sensorId>_UPS_PANEL_OG_ON_OFF_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>UPS_PANEL_OG_ON_OFF_STS</getOid>
        </mapValue>
      </value>
      <label>UPS_Panel_OG_On_Off_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ups_panel_og_trip_sts">
      <type>state</type>
      <sensorId>_UPS_PANEL_OG_TRIP_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>UPS_PANEL_OG_TRIP_STS</getOid>
        </mapValue>
      </value>
      <label>UPS_Panel_OG_Trip_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="vesda_panel_sts">
      <type>state</type>
      <sensorId>_VESDA_PANEL_STS</sensorId>
      <value>
        <mapValue mapid="offon_vm">
          <getOid>VESDA_PANEL_STS</getOid>
        </mapValue>
      </value>
      <label>Vesda_Panel_Sts</label>
      <enum>offon_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
			<valueMap ruleid="offon_vm">
<valueIn>0</valueIn>
			<valueOut>0</valueOut>
<valueIn>1</valueIn>
			<valueOut>1</valueOut>
<valueIn>*</valueIn>
		<valueOut>0</valueOut>
</valueMap>

<enumMap ruleid="offon_em">
<label>Off</label>
<label>On</label>
</enumMap>
  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="PMM1_TRIP_STS">
        <function>1</function>
        <start_addr>362</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="RAW_PWR_PANEL_TRIP_STS">
        <function>1</function>
        <start_addr>370</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="RODENT_PANEL3_STS">
        <function>1</function>
        <start_addr>376</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="BATT_RM_DAMPER1_STS">
        <function>1</function>
        <start_addr>340</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="FIRE_ALARM_STS">
        <function>1</function>
        <start_addr>348</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="RAW_PWR_PANEL_ON_OFF_STS">
        <function>1</function>
        <start_addr>368</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="INCOMMER2_TRIP_STS">
        <function>1</function>
        <start_addr>358</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="RODENT_PANEL2_STS">
        <function>1</function>
        <start_addr>374</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="PMM2_TRIP_STS">
        <function>1</function>
        <start_addr>366</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="BATT_RM_DAMPER4_STS">
        <function>1</function>
        <start_addr>346</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="INCOMMER1_ON_OFF_STS">
        <function>1</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="RODENT_PANEL1_STS">
        <function>1</function>
        <start_addr>372</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="UPS_PANEL_OG_TRIP_STS">
        <function>1</function>
        <start_addr>380</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="BATT_RM_DAMPER2_STS">
        <function>1</function>
        <start_addr>342</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="INCOMMER2_ON_OFF_STS">
        <function>1</function>
        <start_addr>356</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="PMM1_ON_OFF_STS">
        <function>1</function>
        <start_addr>360</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="PMM2_ON_OFF_STS">
        <function>1</function>
        <start_addr>364</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="GSS_PANEL_STS">
        <function>1</function>
        <start_addr>350</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="UPS_PANEL_OG_ON_OFF_STS">
        <function>1</function>
        <start_addr>378</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="BATT_RM_DAMPER3_STS">
        <function>1</function>
        <start_addr>344</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="INCOMMER1_TRIP_STS">
        <function>1</function>
        <start_addr>354</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
      <value_ref_id valid="VESDA_PANEL_STS">
        <function>1</function>
        <start_addr>382</start_addr>
        <quantity>1</quantity>
        <type>bit</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
