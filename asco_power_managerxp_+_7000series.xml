<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="asco_power_managerxp_+_7000series" ddfname="Asco power_managerxp_+_7000series" ddfversion="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="asco_power_managerxp__7000series">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">asco</setProductData>
    <setProductData ruleid="modeldata" field="model">power_managerxp__7000series</setProductData>
    <setProductData ruleid="typedata" field="type">Generic Device</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />
      - Slave
      <commSetting field="slaveaddress" />
    </setDefaultLabel>
    <numSensor ruleid="normal_voltage_phase_ab">
      <type>voltage</type>
      <units />
      <sensorId>_NORMAL_VOLTAGE_PHASE_AB</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NORMAL_VOLTAGE_PHASE_AB</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Normal Voltage Phase AB</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="normal_voltage_phase_bc">
      <type>voltage</type>
      <units />
      <sensorId>_NORMAL_VOLTAGE_PHASE_BC</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NORMAL_VOLTAGE_PHASE_BC</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Normal Voltage Phase BC</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="normal_voltage_phase_ca">
      <type>voltage</type>
      <units />
      <sensorId>_NORMAL_VOLTAGE_PHASE_CA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NORMAL_VOLTAGE_PHASE_CA</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Normal Voltage Phase CA</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="emergency_voltage_phase_ab">
      <type>voltage</type>
      <units />
      <sensorId>_EMERGENCY_VOLTAGE_PHASE_AB</sensorId>
      <value>
        <mult>
          <op>
            <getOid>EMERGENCY_VOLTAGE_PHASE_AB</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Emergency Voltage Phase AB</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="emergency_voltage_phase_bc">
      <type>voltage</type>
      <units />
      <sensorId>_EMERGENCY_VOLTAGE_PHASE_BC</sensorId>
      <value>
        <mult>
          <op>
            <getOid>EMERGENCY_VOLTAGE_PHASE_BC</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Emergency Voltage Phase BC</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <numSensor ruleid="emergency_voltage_phase_ca">
      <type>voltage</type>
      <units />
      <sensorId>_EMERGENCY_VOLTAGE_PHASE_CA</sensorId>
      <value>
        <mult>
          <op>
            <getOid>EMERGENCY_VOLTAGE_PHASE_CA</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Emergency Voltage Phase CA</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    <stateSensor ruleid="EVENT_TYPE">
      <type>state</type>
      <sensorId>_EVENT_TYPE</sensorId>
      <value>
        <mapValue mapid="event_type_vm">
          <getOid>EVENT_TYPE</getOid>
        </mapValue>
      </value>
      <label>Event Type</label>
      <enum>event_type_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="main_on_normal">
      <type>state</type>
      <sensorId>_MAIN_ON_NORMAL</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MAIN_ON_NORMAL</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Main on Normal</label>
      <enum>true_false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="main_on_emergency">
      <type>state</type>
      <sensorId>_MAIN_ON_EMERGENCY</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MAIN_ON_EMERGENCY</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Main on Emergency</label>
      <enum>true_false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="auxiliary_on_normal">
      <type>state</type>
      <sensorId>_AUXILIARY_ON_NORMAL</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>AUXILIARY_ON_NORMAL</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Auxiliary on Normal</label>
      <enum>true_false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="auxiliary_on_emergency">
      <type>state</type>
      <sensorId>_AUXILIARY_ON_EMERGENCY</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>AUXILIARY_ON_EMERGENCY</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Auxiliary on Emergency</label>
      <enum>true_false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="normall_source_available">
      <type>state</type>
      <sensorId>_NORMALL_SOURCE_AVAILABLE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NORMALL_SOURCE_AVAILABLE</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Normall Source Available</label>
      <enum>true_false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
    <stateSensor ruleid="emergency_source_available">
      <type>state</type>
      <sensorId>_EMERGENCY_SOURCE_AVAILABLE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>EMERGENCY_SOURCE_AVAILABLE</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Emergency Source Available</label>
      <enum>true_false_em</enum>
      <sensorSet>State Sensors</sensorSet>
    </stateSensor>
	
	
		<valueMap ruleid="true_false_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="true_false_em">
			<label>False</label>
			<label>True</label>
		</enumMap>	


		<valueMap ruleid="event_type_vm">
			<valueIn>1</valueIn><valueOut>0</valueOut>
			<valueIn>2</valueIn><valueOut>1</valueOut>
			<valueIn>3</valueIn><valueOut>2</valueOut>
			<valueIn>4</valueIn><valueOut>3</valueOut>
			<valueIn>5</valueIn><valueOut>4</valueOut>
			<valueIn>6</valueIn><valueOut>5</valueOut>
			<valueIn>7</valueIn><valueOut>6</valueOut>
			<valueIn>8</valueIn><valueOut>7</valueOut>
			<valueIn>9</valueIn><valueOut>8</valueOut>
			<valueIn>10</valueIn><valueOut>9</valueOut>
			<valueIn>11</valueIn><valueOut>10</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="event_type_em">
			<label>Engine Start</label>
			<label>Transfer N>E</label>
			<label>Transfer E>N</label>
			<label>Engine Stop</label>
			<label>Emerg Acceptable</label>
			<label>Emerg Not Acceptable</label>
			<label>Normal Acceptable</label>
			<label>Normal Not Acceptable</label>
			<label>Transfer Abort</label>
			<label>Breaker Trip</label>
			<label>YY Primary Fail</label>
		</enumMap>	
		
	
  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="EMERGENCY_VOLTAGE_PHASE_CA">
        <function>3</function>
        <start_addr>22</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="EMERGENCY_SOURCE_AVAILABLE">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="EMERGENCY_VOLTAGE_PHASE_AB">
        <function>3</function>
        <start_addr>20</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="AUXILIARY_ON_NORMAL">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="EMERGENCY_VOLTAGE_PHASE_BC">
        <function>3</function>
        <start_addr>20</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="EVENT_TYPE">
        <function>3</function>
        <start_addr>52</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="AUXILIARY_ON_EMERGENCY">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NORMALL_SOURCE_AVAILABLE">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NORMAL_VOLTAGE_PHASE_CA">
        <function>3</function>
        <start_addr>18</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAIN_ON_NORMAL">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NORMAL_VOLTAGE_PHASE_BC">
        <function>3</function>
        <start_addr>17</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAIN_ON_EMERGENCY">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NORMAL_VOLTAGE_PHASE_AB">
        <function>3</function>
        <start_addr>16</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
