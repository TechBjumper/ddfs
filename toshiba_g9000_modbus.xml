<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="toshiba_g9000_modbus"
	ddfname="Toshiba G9000"
	ddfversion="1"
	canremove="yes">
		 
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="toshiba_g9000_modbus">

		<setProductData ruleid="vendordata" field="vendor">Toshiba</setProductData>
		<setProductData ruleid="modeldata" field="model">G9000</setProductData>
		<setProductData ruleid="typedata" field="type">UPS</setProductData>
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		
	    <numSensor ruleid="BATTERY_VOLTAGE_PERCENTAGE_SENSOR">
            <type>num</type>
			<units>percent</units>
            <sensorId>battery_voltage_percentage</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>batteryvoltagepercentage</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Battery Voltage Percentage</label>
            <sensorSet>Battery</sensorSet>
        </numSensor>
        <numSensor ruleid="BATTERY_CURRENT_SENSOR">
            <type>num</type>
			<units>percent</units>
            <sensorId>battery_current</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>batterycurrent</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Battery Current</label>
            <sensorSet>Battery</sensorSet>
        </numSensor>
        <numSensor ruleid="BATTERY_ESTIMATE_CHARGE_SENSOR">
            <type>num</type>
			<units>percent</units>
            <sensorId>battery_estimate_charge</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>batteryestimatecharge</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Battery Estimate Charge</label>
            <sensorSet>Battery</sensorSet>
        </numSensor>
        <numSensor ruleid="DC_BUS_VOLTAGE_SENSOR">
            <type>voltageDC</type>
            <sensorId>dc_bus_voltage</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>dcbusvoltage</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>DC Bus Voltage</label>
            <sensorSet>Battery</sensorSet>
        </numSensor>
        <numSensor ruleid="INPUT_VOLTAGE_PHASE_1_SENSOR">
            <type>voltageAC</type>
            <sensorId>input_voltage_phase_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputvoltagephase1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Input Voltage Phase 1</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="INPUT_VOLTAGE_PHASE_2_SENSOR">
            <type>voltageAC</type>
            <sensorId>input_voltage_phase_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputvoltagephase2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Input Voltage Phase 2</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="INPUT_VOLTAGE_PHASE_3_SENSOR">
            <type>voltageAC</type>
            <sensorId>input_voltage_phase_3</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputvoltagephase3</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Input Voltage Phase 3</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="INPUT_CURRENT_PHASE_1_SENSOR">
            <type>amperage</type>
            <sensorId>input_current_phase_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputcurrentphase1</getOid>
                    </op>
                    <op>1</op>
                </mult>
            </value>
            <label>Input Current Phase 1</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="INPUT_CURRENT_PHASE_2_SENSOR">
            <type>amperage</type>
            <sensorId>input_current_phase_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputcurrentphase2</getOid>
                    </op>
                    <op>1</op>
                </mult>
            </value>
            <label>Input Current Phase 2</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="INPUT_CURRENT_PHASE_3_SENSOR">
            <type>amperage</type>
            <sensorId>input_current_phase_3</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputcurrentphase3</getOid>
                    </op>
                    <op>1</op>
                </mult>
            </value>
            <label>Input Current Phase 3</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="INPUT_FREQUENCY_SENSOR">
            <type>frequency</type>
            <sensorId>input_frequency</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputfrequency</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Input Frequency</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_CURRENT_PHASE_1_SENSOR">
            <type>amperage</type>
            <sensorId>output_current_phase_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputcurrentphase1</getOid>
                    </op>
                    <op>1</op>
                </mult>
            </value>
            <label>Output Current Phase 1</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_CURRENT_PHASE_2_SENSOR">
            <type>amperage</type>
            <sensorId>output_current_phase_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputcurrentphase2</getOid>
                    </op>
                    <op>1</op>
                </mult>
            </value>
            <label>Output Current Phase 2</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_CURRENT_PHASE_3_SENSOR">
            <type>amperage</type>
            <sensorId>output_current_phase_3</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputcurrentphase3</getOid>
                    </op>
                    <op>1</op>
                </mult>
            </value>
            <label>Output Current Phase 3</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_FREQUENCY_SENSOR">
            <type>frequency</type>
            <sensorId>output_frequency</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputfrequency</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Frequency</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_LOAD_PERCENTAGE_PHASE_1_SENSOR">
            <type>num</type>
			<units>percent</units>
            <sensorId>output_load_percentage_phase_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputloadpercentagephase1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Load Percentage Phase 1</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_LOAD_PERCENTAGE_PHASE_2_SENSOR">
            <type>num</type>
			<units>percent</units>
            <sensorId>output_load_percentage_phase_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputloadpercentagephase2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Load Percentage Phase 2</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_LOAD_PERCENTAGE_PHASE_3_SENSOR">
            <type>num</type>
			<units>percent</units>
            <sensorId>output_load_percentage_phase_3</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputloadpercentagephase3</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Load Percentage Phase 3</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="BYPASS_VOLTAGE_PHASE_1_SENSOR">
            <type>voltageAC</type>
            <sensorId>bypass_voltage_phase_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>bypassvoltagephase1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Bypass Voltage Phase 1</label>
            <sensorSet>Bypass</sensorSet>
        </numSensor>
        <numSensor ruleid="BYPASS_VOLTAGE_PHASE_2_SENSOR">
            <type>voltageAC</type>
            <sensorId>bypass_voltage_phase_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>bypassvoltagephase2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Bypass Voltage Phase 2</label>
            <sensorSet>Bypass</sensorSet>
        </numSensor>
        <numSensor ruleid="BYPASS_VOLTAGE_PHASE_3_SENSOR">
            <type>voltageAC</type>
            <sensorId>bypass_voltage_phase_3</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>bypassvoltagephase3</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Bypass Voltage Phase 3</label>
            <sensorSet>Bypass</sensorSet>
        </numSensor>
        <numSensor ruleid="BYPASS_FREQUENCY_SENSOR">
            <type>frequency</type>
            <sensorId>bypass_frequency</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>bypassfrequency</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Bypass Frequency</label>
            <sensorSet>Bypass</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_VOLTAGE_PHASE_1_SENSOR">
            <type>voltageAC</type>
            <sensorId>output_voltage_phase_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputvoltagephase1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Voltage Phase 1</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_VOLTAGE_PHASE_2_SENSOR">
            <type>voltageAC</type>
            <sensorId>output_voltage_phase_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputvoltagephase2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Voltage Phase 2</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_VOLTAGE_PHASE_3_SENSOR">
            <type>voltageAC</type>
            <sensorId>output_voltage_phase_3</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputvoltagephase3</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Voltage Phase 3</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="INPUT_POWER_TOTAL_SENSOR">
            <type>num/powerKW</type>
            <sensorId>input_power_total</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputpowertotal</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Input Power Total</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="INPUT_POWER_PHASE_1_SENSOR">
            <type>num/powerKW</type>
            <sensorId>input_power_phase_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputpowerphase1</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Input Power Phase 1</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="INPUT_POWER_PHASE_2_SENSOR">
            <type>num/powerKW</type>
            <sensorId>input_power_phase_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputpowerphase2</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Input Power Phase 2</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="INPUT_POWER_PHASE_3_SENSOR">
            <type>num/powerKW</type>
            <sensorId>input_power_phase_3</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputpowerphase3</getOid>
                    </op>
                    <op>0.1</op>
                </mult>
            </value>
            <label>Input Power Phase 3</label>
            <sensorSet>Input</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_POWER_SENSOR">
            <type>num/powerKW</type>
            <sensorId>output_power</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputpower</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Power</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_POWER_PERCENTAGE_SENSOR">
            <type>num</type>
			<units>percent</units>
            <sensorId>output_power_percentage</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputpowerpercentage</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Power Percentage</label>
            <sensorSet>Output</sensorSet>
        </numSensor>
        <numSensor ruleid="POWER_FACTOR_SENSOR">
            <type>num/powerfactor</type>
            <sensorId>power_factor</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>powerfactor</getOid>
                    </op>
                    <op>.1</op>
                </mult>
            </value>
            <label>Power Factor</label>
            <sensorSet>Output</sensorSet>
        </numSensor>


		<enumMap ruleid="true_false_em">
			<label>False</label>
			<label>True</label>
			<label>Unknown</label>
		</enumMap>


        <stateSensor ruleid="UPS_INPUT_OUTPUT_VOLTAGE_SYNC_SENSOR">
            <type>state</type>
            <sensorId>ups_input_output_voltage_sync</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>upsinputoutputvoltagesync</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>UPS Input Output Voltage Sync</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="UPS_OUTPUT_FROM_INVERTER_SENSOR">
            <type>state</type>
            <sensorId>ups_output_from_inverter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>upsoutputfrominverter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>UPS Output From Inverter</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="UPS_OUTPUT_FROM_BYPASS_SENSOR">
            <type>state</type>
            <sensorId>ups_output_from_bypass</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>upsoutputfrombypass</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>UPS Output From Bypass</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="LOW_BATTERY_VOLTAGE_DETECTED_SENSOR">
            <type>state</type>
            <sensorId>low_battery_voltage_detected</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>lowbatteryvoltagedetected</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Low Battery Voltage Detected</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="INPUT_VOLTAGE_OUT_OF_SPEC_SENSOR">
            <type>state</type>
            <sensorId>input_voltage_out_of_spec</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inputvoltageoutofspec</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Input Voltage Out of Spec</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="UPS_FAULT_DETECTED_SENSOR">
            <type>state</type>
            <sensorId>ups_fault_detected</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>upsfaultdetected</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>UPS Fault Detected</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="DC_BUS_IMBALANCE_SENSOR">
            <type>state</type>
            <sensorId>dc_bus_imbalance</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>dcbusimbalance</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>DC Bus Imbalance</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="DC_BUS_UNDERVOLTAGE_SENSOR">
            <type>state</type>
            <sensorId>dc_bus_undervoltage</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>dcbusundervoltage</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>DC Bus Undervoltage</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="DC_BUS_OVERVOLTAGE_SENSOR">
            <type>state</type>
            <sensorId>dc_bus_overvoltage</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>dcbusovervoltage</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>DC Bus Overvoltage</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="DC_OVER_CURRENT_SENSOR">
            <type>state</type>
            <sensorId>dc_over_current</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>dcovercurrent</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>DC Over Current</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="UPS_OVERHEAT_SENSOR">
            <type>state</type>
            <sensorId>ups_overheat</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>upsoverheat</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>UPS Overheat</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="BATTERY_OVERHEAT_SENSOR">
            <type>state</type>
            <sensorId>battery_overheat</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>batteryoverheat</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Battery Overheat</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="BATTERY_OR_CHARGER_CIRCUIT_FAULT_SENSOR">
            <type>state</type>
            <sensorId>battery_or_charger_circuit_fault</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>batteryorchargercircuitfault</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Battery or Charger Circuit Fault</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="INVERTER_OVERVOLTAGE_SENSOR">
            <type>state</type>
            <sensorId>inverter_overvoltage</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inverterovervoltage</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Inverter Overvoltage</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="OVERLOAD_SENSOR">
            <type>state</type>
            <sensorId>overload</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>overload</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Overload</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="INVERTER_UNDERVOLTAGE_SENSOR">
            <type>state</type>
            <sensorId>inverter_undervoltage</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inverterundervoltage</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Inverter Undervoltage</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="INVERTER_OVERLOAD_SENSOR">
            <type>state</type>
            <sensorId>inverter_overload</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inverteroverload</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Inverter Overload</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
        <stateSensor ruleid="INVERTER_OVERCURRENT_SENSOR">
            <type>state</type>
            <sensorId>inverter_overcurrent</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inverterovercurrent</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Inverter Overcurrent</label>
			<enum>true_false_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


	</device>
	<protocol>
		<modbus>

            <value_ref_id valid="batteryvoltagepercentage">
                <function>4</function>
                <start_addr>0</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="batterycurrent">
                <function>4</function>
                <start_addr>1</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="batteryestimatecharge">
                <function>4</function>
                <start_addr>2</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="dcbusvoltage">
                <function>4</function>
                <start_addr>3</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="inputvoltagephase1">
                <function>4</function>
                <start_addr>4</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="inputvoltagephase2">
                <function>4</function>
                <start_addr>5</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="inputvoltagephase3">
                <function>4</function>
                <start_addr>6</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="inputcurrentphase1">
                <function>4</function>
                <start_addr>7</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="inputcurrentphase2">
                <function>4</function>
                <start_addr>8</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="inputcurrentphase3">
                <function>4</function>
                <start_addr>9</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="inputfrequency">
                <function>4</function>
                <start_addr>10</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputcurrentphase1">
                <function>4</function>
                <start_addr>11</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputcurrentphase2">
                <function>4</function>
                <start_addr>12</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputcurrentphase3">
                <function>4</function>
                <start_addr>13</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputfrequency">
                <function>4</function>
                <start_addr>14</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputloadpercentagephase1">
                <function>4</function>
                <start_addr>15</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputloadpercentagephase2">
                <function>4</function>
                <start_addr>16</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputloadpercentagephase3">
                <function>4</function>
                <start_addr>17</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="bypassvoltagephase1">
                <function>4</function>
                <start_addr>18</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="bypassvoltagephase2">
                <function>4</function>
                <start_addr>19</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="bypassvoltagephase3">
                <function>4</function>
                <start_addr>20</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="bypassfrequency">
                <function>4</function>
                <start_addr>21</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputvoltagephase1">
                <function>4</function>
                <start_addr>22</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputvoltagephase2">
                <function>4</function>
                <start_addr>23</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputvoltagephase3">
                <function>4</function>
                <start_addr>24</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="inputpowertotal">
                <function>4</function>
                <start_addr>25</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="inputpowerphase1">
                <function>4</function>
                <start_addr>26</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="inputpowerphase2">
                <function>4</function>
                <start_addr>27</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="inputpowerphase3">
                <function>4</function>
                <start_addr>28</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputpower">
                <function>4</function>
                <start_addr>29</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="outputpowerpercentage">
                <function>4</function>
                <start_addr>30</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="powerfactor">
                <function>4</function>
                <start_addr>30</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>


            <value_ref_id valid="upsinputoutputvoltagesync">
                <function>2</function>
                <start_addr>0</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="upsoutputfrominverter">
                <function>2</function>
                <start_addr>1</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="upsoutputfrombypass">
                <function>2</function>
                <start_addr>2</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="lowbatteryvoltagedetected">
                <function>2</function>
                <start_addr>3</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="inputvoltageoutofspec">
                <function>2</function>
                <start_addr>4</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="upsfaultdetected">
                <function>2</function>
                <start_addr>5</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="dcbusimbalance">
                <function>2</function>
                <start_addr>8</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="dcbusundervoltage">
                <function>2</function>
                <start_addr>10</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="dcbusovervoltage">
                <function>2</function>
                <start_addr>11</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="dcovercurrent">
                <function>2</function>
                <start_addr>12</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="upsoverheat">
                <function>2</function>
                <start_addr>18</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="batteryoverheat">
                <function>2</function>
                <start_addr>19</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="batteryorchargercircuitfault">
                <function>2</function>
                <start_addr>20</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="inverterovervoltage">
                <function>2</function>
                <start_addr>24</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="overload">
                <function>2</function>
                <start_addr>25</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="inverterundervoltage">
                <function>2</function>
                <start_addr>26</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="inverteroverload">
                <function>2</function>
                <start_addr>27</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>
            <value_ref_id valid="inverterovercurrent">
                <function>2</function>
                <start_addr>29</start_addr>
                <quantity>1</quantity>
                <type>bit</type>
            </value_ref_id>

		</modbus>
	</protocol>
</APC_DDF>