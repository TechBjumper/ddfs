<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="liebert_p3100"
	ddfname="Liebert P3100"
	ddfversion="1"
	canremove="yes">
		 
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="liebert_p3100">

		<setProductData ruleid="vendordata" field="vendor">Liebert</setProductData>
		<setProductData ruleid="modeldata" field="model">P3100</setProductData>
		<setProductData ruleid="typedata" field="type">Generic Device</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		

		<numSensor ruleid="NUMBER_OF_COMPRESSORS_SENSOR">
            <type>num</type>
            <sensorId>number_of_compressors</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>numberofcompressors</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Number of Compressors</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="NUMBER_OF_ELECTRIC_HEATINGS_SENSOR">
            <type>num</type>
            <sensorId>number_of_electric_heatings</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>numberofelectricheatings</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Number of Electric Heatings</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<!-- Not needed 

        <numSensor ruleid="ELECTRIC_HEATING_STAGES_SENSOR">
            <type>num</type>
            <sensorId>electric_heating_stages</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>electricheatingstages</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Electric Heating Stages</label>
            <sensorSet>General</sensorSet>
        </numSensor>
		-->
 
        <numSensor ruleid="TEAMWORK_NUMBER_OF_UNITS_SENSOR">
            <type>num</type>
            <sensorId>teamwork_number_of_units</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>teamworknumberofunits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Teamwork Number of Units</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="COMPRESSOR_RUN_SEQUENCE_SENSOR">
            <type>num</type>
            <sensorId>compressor_run_sequence</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>compressorrunsequence</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Compressor Run Sequence</label>
            <sensorSet>General</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="STEAM_CONTROL_SENSOR">
            <type>num</type>
            <sensorId>steam_control</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>steamcontrol</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Steam Control</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REHEAT_CONTROL_SENSOR">
            <type>num</type>
            <sensorId>reheat_control</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>reheatcontrol</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Reheat Control</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<enumMap ruleid="timed_run_em">
			<label>No</label>
			<label>Yes</label>
			<label>Unknown</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="temp_control_em">
			<label>N</label>
			<label>Difference</label>
			<label>Absolute Value</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="humidity_control_em">
			<label>Relative</label>
			<label>Compensation</label>
			<label>Forecast</label>
			<label>Unknown</label>
		</enumMap>


        <stateSensor ruleid="TIMED_RUN_SENSOR">
            <type>state</type>
            <sensorId>timed_run</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>timedrun</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Timed Run</label>
			<enum>timed_run_em</enum>
            <sensorSet>General</sensorSet>
        </stateSensor>
        <stateSensor ruleid="INDOOR_TEMPERATURE_CONTROL_SENSOR">
            <type>state</type>
            <sensorId>indoor_temperature_control</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>indoortemperaturecontrol</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Indoor Temperature Control</label>
			<enum>temp_control_em</enum>
            <sensorSet>General</sensorSet>
        </stateSensor>
        <stateSensor ruleid="HUMIDITY_CONTROL_MODE_SENSOR">
            <type>state</type>
            <sensorId>humidity_control_mode</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humiditycontrolmode</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidity Control Mode</label>
			<enum>humidity_control_em</enum>
            <sensorSet>General</sensorSet>
        </stateSensor>

		<!-- Not Needed
        <numSensor ruleid="VSD_SETPOINT_SENSOR">
            <type>num</type>
            <sensorId>vsd_setpoint</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>vsdsetpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>VSD Setpoint</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="AIR_TEMPERATURE_LIMIT_SENSOR">
            <type>num</type>
            <sensorId>air_temperature_limit</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>airtemperaturelimit</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Air Temperature Limit</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TEMPERATURE_DIFFERENCE_BETWEEN_INDOOR_AND_NATURAL_COOLING_OF_THE_ORIGINAL__SENSOR">
            <type>num</type>
            <sensorId>temperature_difference_between_indoor_and_natural_cooling_of_the_original_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>temperaturedifferencebetweenindoorandnaturalcoolingoftheoriginal</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Temperature difference between indoor and natural cooling of the original</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="MINIMUM_CHILLED_WATER_TEMPERATURE__SENSOR">
            <type>num</type>
            <sensorId>minimum_chilled_water_temperature_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>minimumchilledwatertemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Minimum chilled water temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TEMPERATURE_SET_POINT__SENSOR">
            <type>num</type>
            <sensorId>temperature_set_point_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>temperaturesetpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Temperature set point</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TEMPERATURE_PROPORTIONAL_BAND__SENSOR">
            <type>num</type>
            <sensorId>temperature_proportional_band_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>temperatureproportionalband</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Temperature proportional band</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DEAD_ZONE_TEMPERATURE__SENSOR">
            <type>num</type>
            <sensorId>dead_zone_temperature_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>deadzonetemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Dead zone temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TEMPERATURE_INTEGRATION_TIME__SENSOR">
            <type>num</type>
            <sensorId>temperature_integration_time_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>temperatureintegrationtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Temperature integration time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TEMPERATURE_SET_POINT__SENSOR">
            <type>num</type>
            <sensorId>temperature_set_point_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>temperaturesetpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Temperature set point</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TEMPERATURE_PROPORTIONAL_BAND__SENSOR">
            <type>num</type>
            <sensorId>temperature_proportional_band_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>temperatureproportionalband</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Temperature proportional band</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TEMPERATURE_INTEGRATION_TIME__SENSOR">
            <type>num</type>
            <sensorId>temperature_integration_time_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>temperatureintegrationtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Temperature integration time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DEAD_ZONE_TEMPERATURE___SENSOR">
            <type>num</type>
            <sensorId>dead_zone_temperature__</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>deadzonetemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Dead zone temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SINGLE_GROUP_RESTART_DELAY__SENSOR">
            <type>num</type>
            <sensorId>single_group_restart_delay_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>singlegrouprestartdelay</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Single group Restart Delay</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="INFRARED_SCOUR_PROPORTION__SENSOR">
            <type>num</type>
            <sensorId>infrared_scour_proportion_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>infraredscourproportion</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Infrared scour proportion</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<enumMap ruleid="temp_control2_em">
			<label>Proportional</label>
			<label>P1</label>
			<label>PID</label>
			<label>Smart</label>
			<label>Unknown</label>
		</enumMap>


        <stateSensor ruleid="TEMPERATURE_CONTROL_SENSOR">
            <type>state</type>
            <sensorId>temperature_control</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>temperaturecontrol</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Temperature control</label>
			<enum>temp_control2_em</enum>
            <sensorSet>General</sensorSet>
        </stateSensor>




        <numSensor ruleid="SLEEP_INTERVAL_A_START_TIME_SENSOR">
            <type>num</type>
            <sensorId>sleep_interval_a_start_time</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepintervalastarttime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep interval a start time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SLEEP_INTERVAL_AN_END_TIME_SENSOR">
            <type>num</type>
            <sensorId>sleep_interval_an_end_time</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepintervalanendtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep interval an end time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SLEEP_START_TIME_INTERVAL_OF_2__SENSOR">
            <type>num</type>
            <sensorId>sleep_start_time_interval_of_2_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepstarttimeintervalof2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep start time interval of 2</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SLEEP_INTERVAL_2_END_TIME_SENSOR">
            <type>num</type>
            <sensorId>sleep_interval_2_end_time</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sleepinterval2endtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sleep interval 2 end time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TIMING_MEANS_DEAD_ZONE_TEMPERATURE__SENSOR">
            <type>num</type>
            <sensorId>timing_means_dead_zone_temperature_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>timingmeansdeadzonetemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Timing means dead zone temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="VSD_MANUALLY_TIMED_LENGTH_SENSOR">
            <type>num</type>
            <sensorId>vsd_manually_timed_length</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>vsdmanuallytimedlength</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>VSD manually timed length</label>
            <sensorSet>General</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="INSULATION_ALARM__SENSOR">
            <type>num</type>
            <sensorId>insulation_alarm_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>insulationalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Insulation alarm Point</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="GROUND_TEMPERATURE_ALARM_POINT__SENSOR">
            <type>num</type>
            <sensorId>ground_temperature_alarm_point_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>groundtemperaturealarmpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Ground temperature alarm point</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="A_TEMPERATURE_SENSOR_ALARM_POINT___SENSOR">
            <type>num</type>
            <sensorId>a_temperature_sensor_alarm_point__</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>atemperaturesensoralarmpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>A temperature sensor alarm point</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SENSOR_B_GROUND_TEMPERATURE_ALARM_POINT____SENSOR">
            <type>num</type>
            <sensorId>sensor_b_ground_temperature_alarm_point___</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sensorbgroundtemperaturealarmpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sensor B ground temperature alarm point</label>
            <sensorSet>General</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="HUMIDITY_ALARM__SENSOR">
            <type>num</type>
            <sensorId>humidity_alarm_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidityalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>High Humidity alarm</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="LOW_HUMIDITY_ALARM__SENSOR">
            <type>num</type>
            <sensorId>low_humidity_alarm_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>lowhumidityalarm</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Low humidity alarm</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="A_HUMIDITY_SENSOR_ALARM_POINT__SENSOR">
            <type>num</type>
            <sensorId>a_humidity_sensor_alarm_point_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>ahumiditysensoralarmpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>A humidity sensor alarm point</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="FAN_RUN_TIME_LIMITS__SENSOR">
            <type>num</type>
            <sensorId>fan_run_time_limits_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>fanruntimelimits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Fan run time limits</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="A_COMPRESSOR_RUNNING_TIME_LIMITS___SENSOR">
            <type>num</type>
            <sensorId>a_compressor_running_time_limits__</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>acompressorrunningtimelimits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>A compressor running time limits</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="COMPRESSOR_2_RUNNING_TIME_LIMITS____SENSOR">
            <type>num</type>
            <sensorId>compressor_2_running_time_limits___</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>compressor2runningtimelimits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Compressor 2 running time limits</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HUMIDIFIER_RUNNING_TIME_LIMITS__SENSOR">
            <type>num</type>
            <sensorId>humidifier_running_time_limits_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidifierrunningtimelimits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidifier running time limits</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DEHUMIDIFIER_RUNNING_TIME_LIMITS__SENSOR">
            <type>num</type>
            <sensorId>dehumidifier_running_time_limits_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>dehumidifierrunningtimelimits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Dehumidifier running time limits</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="FROZEN_DEAD_/_NATURAL_COOLING_OF_THE_ORIGINAL_RUNNING_TIME_LIMITS__SENSOR">
            <type>num</type>
            <sensorId>frozen_dead_/_natural_cooling_of_the_original_running_time_limits_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>frozendeadnaturalcoolingoftheoriginalrunningtimelimits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Frozen Dead / natural cooling of the original running time limits</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="ELECTRIC_HEATING_A_RUNNING_TIME_LIMITS__SENSOR">
            <type>num</type>
            <sensorId>electric_heating_a_running_time_limits_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>electricheatingarunningtimelimits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Electric heating a running time limits</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="ELECTRIC_HEATING_2_RUNNING_TIME_LIMITS__SENSOR">
            <type>num</type>
            <sensorId>electric_heating_2_running_time_limits_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>electricheating2runningtimelimits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Electric heating 2 running time limits</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="ELECTRIC_HEATING_3_RUNNING_TIME_LIMITS__SENSOR">
            <type>num</type>
            <sensorId>electric_heating_3_running_time_limits_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>electricheating3runningtimelimits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Electric heating 3 running time limits</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HOT,_HOT_RUNNING_TIME_LIMITS__SENSOR">
            <type>num</type>
            <sensorId>hot,_hot_running_time_limits_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>hothotrunningtimelimits</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Hot, hot running time limits</label>
            <sensorSet>General</sensorSet>
        </numSensor>
		-->


		<enumMap ruleid="bit_0_1_operating_status_em">
			<label>Group Shutdown</label>
			<label>Group On</label>
			<label>Group Standby</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="bit_2_3_operating_status_em">
			<label>Auto</label>
			<label>Manual</label>
			<label>Unknown</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="bit_4_7_operating_status_em">
			<label>None</label>
			<label>Local</label>
			<label>Alarm</label>
			<label>Conductor</label>
			<label>Monitoring</label>
			<label>Remote</label>
			<label>Display</label>
			<label>Unknown</label>
		</enumMap>


        <stateSensor ruleid="OPERATING_STATUS_0_1_SENSOR">
            <type>state</type>
            <sensorId>operating_status_0_1</sensorId>
            <value>
                <bitwise_and>
					<op>
						<getOid>operatingstatus</getOid>
					</op>
					<op>3</op>
				</bitwise_and>
            </value>
            <label>Group Status</label>
			<enum>bit_0_1_operating_status_em</enum>
            <sensorSet>General</sensorSet>
        </stateSensor>


        <stateSensor ruleid="OPERATING_STATUS_2_3_SENSOR">
            <type>state</type>
            <sensorId>operating_status_2_3</sensorId>
           <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>operatingstatus</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>3</op>
					</bitwise_and>
            </value>
            <label>Running Thru</label>
			<enum>bit_2_3_operating_status_em</enum>
            <sensorSet>General</sensorSet>
        </stateSensor>


        <stateSensor ruleid="OPERATING_STATUS_4_7_SENSOR">
            <type>state</type>
            <sensorId>operating_status_4_7</sensorId>
           <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>operatingstatus</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>15</op>
					</bitwise_and>
            </value>
            <label>Reason for Shutting Down</label>
			<enum>bit_4_7_operating_status_em</enum>
            <sensorSet>General</sensorSet>
        </stateSensor>

        <numSensor ruleid="CURRENT_ALARMS,_THE_NUMBER_OF_EVENTS_SENSOR">
            <type>num</type>
            <sensorId>current_alarms,_the_number_of_events</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>currentalarmsthenumberofevents</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Current Alarms, the Number of Events</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<enumMap ruleid="bit_0_0_alarm_status_em">
			<label>0</label>
			<label>Reset Status</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="bit_1_1_alarm_status_em">
			<label>0</label>
			<label>Valid Status</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="bit_2_2_alarm_status_em">
			<label>0</label>
			<label>Confirm Status</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="bit_3_7_alarm_status_em">
			<label>Info</label>
			<label>Warning</label>
			<label>Critical</label>
			<label>Unknown</label>
		</enumMap>

 		<!-- Not Needed
       <stateSensor ruleid="ALARM_STATUS_0_0_SENSOR">
            <type>state</type>
            <sensorId>alarm_status_0_0</sensorId>
             <value>
                <bitwise_and>
					<op>
						<getOid>alarmstatus</getOid>
					</op>
					<op>1</op>
				</bitwise_and>
            </value>
            <label>Alarm Status Bit 0</label>
			<enum>bit_0_0_alarm_status_em</enum>
            <sensorSet>General</sensorSet>
        </stateSensor>


        <stateSensor ruleid="ALARM_STATUS_1_1_SENSOR">
            <type>state</type>
            <sensorId>alarm_status_1_1</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>alarmstatus</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Alarm Status Bit 1</label>
			<enum>bit_1_1_alarm_status_em</enum>
            <sensorSet>General</sensorSet>
        </stateSensor>

        <stateSensor ruleid="ALARM_STATUS_2_2_SENSOR">
            <type>state</type>
            <sensorId>alarm_status_2_2</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>alarmstatus</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Alarm Status Bit 2</label>
			<enum>bit_2_2_alarm_status_em</enum>
            <sensorSet>General</sensorSet>
        </stateSensor>
		-->


        <stateSensor ruleid="ALARM_STATUS_3_7_SENSOR">
            <type>state</type>
            <sensorId>alarm_status_3_7</sensorId>
            <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>alarmstatus</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>31</op>
					</bitwise_and>
            </value>
            <label>Alarm Type</label>
			<enum>bit_3_7_alarm_status_em</enum>
            <sensorSet>General</sensorSet>
        </stateSensor>


		<!-- Not Needed
        <numSensor ruleid="FANS_DEMAND__SENSOR">
            <type>num</type>
            <sensorId>fans_demand_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>fansdemand</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Fans demand</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="COOLING_DEMAND__SENSOR">
            <type>num</type>
            <sensorId>cooling_demand_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>coolingdemand</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Cooling demand</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DEMAND_FOR_NATURAL_COOLING_OF_THE_ORIGINAL__SENSOR">
            <type>num</type>
            <sensorId>demand_for_natural_cooling_of_the_original_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>demandfornaturalcoolingoftheoriginal</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Demand for natural cooling of the original</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HEAT_DEMAND__SENSOR">
            <type>num</type>
            <sensorId>heat_demand_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>heatdemand</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Heat demand</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HUMIDIFICATION__SENSOR">
            <type>num</type>
            <sensorId>humidification_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidification</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidification</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DEHUMIDIFICATION_DEMAND__SENSOR">
            <type>num</type>
            <sensorId>dehumidification_demand_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>dehumidificationdemand</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Dehumidification demand</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="NATURAL_COOLING_OF_THE_ORIGINAL_STATE_SENSOR">
            <type>num</type>
            <sensorId>natural_cooling_of_the_original_state</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>naturalcoolingoftheoriginalstate</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Natural cooling of the original state</label>
            <sensorSet>General</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="RETURN_AIR_TEMPERATURE__SENSOR">
            <type>temp</type>
            <sensorId>return_air_temperature_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>returnairtemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Return air temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="ACTUAL_TEMPERATURE_SET_POINT__SENSOR">
            <type>temp</type>
            <sensorId>actual_temperature_set_point_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>actualtemperaturesetpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Actual temperature set point</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="SUPPLY_AIR_TEMPERATURE__SENSOR">
            <type>temp</type>
            <sensorId>supply_air_temperature_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>supplyairtemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Supply air temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="ACTUAL_AIR_TEMPERATURE_SET_POINT__SENSOR">
            <type>temp</type>
            <sensorId>actual_air_temperature_set_point_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>actualairtemperaturesetpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Actual air temperature set point</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="NATURAL_SOURCE_OF_COLD_TEMPERATURES_SENSOR">
            <type>temp</type>
            <sensorId>natural_source_of_cold_temperatures</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>naturalsourceofcoldtemperatures</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Natural source of cold temperatures</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SENSOR_A_TEMPERATURE__SENSOR">
            <type>temp</type>
            <sensorId>sensor_a_temperature_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sensoratemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sensor A temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SENSOR_B_TEMPERATURE__SENSOR">
            <type>temp</type>
            <sensorId>sensor_b_temperature_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sensorbtemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sensor B temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SENSOR_C_TEMPERATURE__SENSOR">
            <type>temp</type>
            <sensorId>sensor_c_temperature_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sensorctemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sensor C temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DIGITAL_VORTEX_1_TEMPERATURE___SENSOR">
            <type>temp</type>
            <sensorId>digital_vortex_1_temperature__</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>digitalvortex1temperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Digital Vortex 1 Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DIGITAL_VORTEX_2_TEMPERATURE___SENSOR">
            <type>temp</type>
            <sensorId>digital_vortex_2_temperature__</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>digitalvortex2temperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Digital Vortex 2 Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="RETURN_AIR_HUMIDITY____SENSOR">
            <type>humidity</type>
            <sensorId>return_air_humidity___</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>returnairhumidity</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Return air humidity</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="ACTUAL_RETURN_AIR_HUMIDITY_SET_POINT__SENSOR">
            <type>humidity</type>
            <sensorId>actual_return_air_humidity_set_point_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>actualreturnairhumiditysetpoint</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Actual return air humidity set point</label>
            <sensorSet>General</sensorSet>
        </numSensor>

		<!-- Not Needed
        <numSensor ruleid="SENSOR_A_HUMIDITY____SENSOR">
            <type>humidity</type>
            <sensorId>sensor_a_humidity___</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sensorahumidity</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sensor A Humidity</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SENSOR_B_HUMIDITY___SENSOR">
            <type>humidity</type>
            <sensorId>sensor_b_humidity__</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sensorbhumidity</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sensor B Humidity</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="SENSOR_C_HUMIDITY__SENSOR">
            <type>humidity</type>
            <sensorId>sensor_c_humidity_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>sensorchumidity</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Sensor C Humidity</label>
            <sensorSet>General</sensorSet>
        </numSensor>
		-->

        <numSensor ruleid="FAN_RUN_TIME__SENSOR">
            <type>timeinmin</type>
            <sensorId>fan_run_time_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>fanruntime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Fan run time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="COMPRESSOR_1_RUNNING_TIME__SENSOR">
            <type>timeinmin</type>
            <sensorId>compressor_1_running_time_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>compressor1runningtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Compressor 1 running time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="COMPRESSOR_2_RUNNING_TIME___SENSOR">
            <type>timeinmin</type>
            <sensorId>compressor_2_running_time__</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>compressor2runningtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Compressor 2 running time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HUMIDIFYING_OPERATION_TIME__SENSOR">
            <type>timeinmin</type>
            <sensorId>humidifying_operation_time_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>humidifyingoperationtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Humidifying operation time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DEHUMIDIFYING_OPERATION_TIME___SENSOR">
            <type>timeinmin</type>
            <sensorId>dehumidifying_operation_time__</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>dehumidifyingoperationtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Dehumidifying operation time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="NATURAL_SOURCE_OF_COLD_RUNNING_TIME___SENSOR">
            <type>timeinmin</type>
            <sensorId>natural_source_of_cold_running_time__</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>naturalsourceofcoldrunningtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Natural source of cold running time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="ELECTRIC_HEATING_1_RUN_TIME____SENSOR">
            <type>timeinmin</type>
            <sensorId>electric_heating_1_run_time___</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>electricheating1runtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Electric heating 1 Run Time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="ELECTRIC_HEATING_2_RUN_TIME____SENSOR">
            <type>timeinmin</type>
            <sensorId>electric_heating_2_run_time___</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>electricheating2runtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Electric heating 2 Run Time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="ELECTRIC_HEATING_3_RUN_TIME____SENSOR">
            <type>timeinmin</type>
            <sensorId>electric_heating_3_run_time___</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>electricheating3runtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Electric heating 3 Run Time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HOT_WATER_AND_STEAM_RUNNING_TIME_____SENSOR">
            <type>timeinmin</type>
            <sensorId>hot_water_and_steam_running_time____</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>hotwaterandsteamrunningtime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Hot water and steam running time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HIGHEST_TEMPERATURE_BY_DAY_SENSOR">
            <type>temp</type>
            <sensorId>highest_temperature_by_day</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>highesttemperaturebyday</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Highest temperature by day</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HIGHEST_TEMPERATURE_DURATION_BY_DAY__SENSOR">
            <type>timeinmin</type>
            <sensorId>highest_temperature_duration_by_day_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>highesttemperaturedurationbyday</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Highest temperature duration by day</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="LOWEST_TEMPERATURE_BY_DAY__SENSOR">
            <type>temp</type>
            <sensorId>lowest_temperature_by_day_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>lowesttemperaturebyday</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Lowest temperature by day</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="LOWEST_TEMPERATURE_DURATION_BY_DAY__SENSOR">
            <type>timeinmin</type>
            <sensorId>lowest_temperature_duration_by_day_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>lowesttemperaturedurationbyday</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Lowest temperature duration by day</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HIGHEST_HUMIDITY_BY_DAY__SENSOR">
            <type>humidity</type>
            <sensorId>highest_humidity_by_day_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>highesthumiditybyday</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Highest humidity by day</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="HIGHEST_HUMIDITY_DURATION_BY_DAY__SENSOR">
            <type>timeinmin</type>
            <sensorId>highest_humidity_duration_by_day_</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>highesthumiditydurationbyday</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Highest humidity duration by day</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="LOWEST_HUMIDITY_BY_DAY___SENSOR">
            <type>humidity</type>
            <sensorId>lowest_humidity_by_day__</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>lowesthumiditybyday</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Lowest humidity by day</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="LOWEST_HUMIDITY_DURATION_BY_DAY_SENSOR">
            <type>timeinmin</type>
            <sensorId>lowest_humidity_duration_by_day</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>lowesthumiditydurationbyday</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Lowest humidity duration by day</label>
            <sensorSet>General</sensorSet>
        </numSensor>



		<enumMap ruleid="online_offline_em">
			<label>Normal</label>
			<label>Alarm</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="f_c_em">
			<label>Farenheit</label>
			<label>Celcius</label>
			<label>Unknown</label>
		</enumMap>

		<enumMap ruleid="no_yes_em">
			<label>No</label>
			<label>Yes</label>
			<label>Unknown</label>
		</enumMap>




		<stateSensor ruleid="REGISTER_0_BIT_0">
            <type>state</type>
            <sensorId>register_0_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>communication status
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="REGISTER_0_BIT_1">
            <type>state</type>
            <sensorId>register_0_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Monday sleep state
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_2">
            <type>state</type>
            <sensorId>register_0_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Tuesday sleep state
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_3">
            <type>state</type>
            <sensorId>register_0_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Wednesday sleep state
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_4">
            <type>state</type>
            <sensorId>register_0_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Thursday sleep state
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_5">
            <type>state</type>
            <sensorId>register_0_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Friday sleep state
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_6">
            <type>state</type>
            <sensorId>register_0_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Saturday sleep state
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_7">
            <type>state</type>
            <sensorId>register_0_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Sunday sleep state
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_8">
            <type>state</type>
            <sensorId>register_0_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Supply air temperature limit is enabled
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_9">
            <type>state</type>
            <sensorId>register_0_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Reheat Lock
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="REGISTER_0_BIT_10">
            <type>state</type>
            <sensorId>register_0_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Humidifier lock
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_11">
            <type>state</type>
            <sensorId>register_0_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Temperature unit (0 = F, 1 = C)
</label>
			<enum>f_c_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="REGISTER_0_BIT_12">
            <type>state</type>
            <sensorId>register_0_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Timer mode allows
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_13">
            <type>state</type>
            <sensorId>register_0_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Minimum chilled water temperature enables
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_14">
            <type>state</type>
            <sensorId>register_0_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor Pump down is enabled
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="REGISTER_0_BIT_15">
            <type>state</type>
            <sensorId>register_0_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister0</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Natural source of cold and the compressor run simultaneously enable
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_0">
            <type>state</type>
            <sensorId>register_1_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Enable automatic setting
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_1_BIT_1">
            <type>state</type>
            <sensorId>register_1_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Enable dehumidification
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_2">
            <type>state</type>
            <sensorId>register_1_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Use hot water
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_1_BIT_3">
            <type>state</type>
            <sensorId>register_1_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>T / H quote enabled
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_4">
            <type>state</type>
            <sensorId>register_1_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Sensor A alarm enable
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_1_BIT_5">
            <type>state</type>
            <sensorId>register_1_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor Locked
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="register_1_BIT_6">
            <type>state</type>
            <sensorId>register_1_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>VSD fan control enabled
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_1_BIT_7">
            <type>state</type>
            <sensorId>register_1_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>FAN ON
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_8">
            <type>state</type>
            <sensorId>register_1_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Refrigeration on
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_9">
            <type>state</type>
            <sensorId>register_1_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Natural source of cold on
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_10">
            <type>state</type>
            <sensorId>register_1_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Hot water on
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_11">
            <type>state</type>
            <sensorId>register_1_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Electric heating on
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_12">
            <type>state</type>
            <sensorId>register_1_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Humidification on
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_13">
            <type>state</type>
            <sensorId>register_1_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Dehumidification on
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_14">
            <type>state</type>
            <sensorId>register_1_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Alarm buzzer on
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_1_BIT_15">
            <type>state</type>
            <sensorId>register_1_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister1</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Fan Overload
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_0">
            <type>state</type>
            <sensorId>register_2_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Airflow is lost
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_1">
            <type>state</type>
            <sensorId>register_2_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Water loss
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_2">
            <type>state</type>
            <sensorId>register_2_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor 1 high-pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_3">
            <type>state</type>
            <sensorId>register_2_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor 1 low-pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_4">
            <type>state</type>
            <sensorId>register_2_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor 1 over load
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_5">
            <type>state</type>
            <sensorId>register_2_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor 1 Pumpdown failure 
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_6">
            <type>state</type>
            <sensorId>register_2_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor 2 high-pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_7">
            <type>state</type>
            <sensorId>register_2_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor 2 low-pressure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_8">
            <type>state</type>
            <sensorId>register_2_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor 2 over load
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_9">
            <type>state</type>
            <sensorId>register_2_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor  2 Pumpdown failure 
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_10">
            <type>state</type>
            <sensorId>register_2_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Digital Vortex 1 high temperature
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_11">
            <type>state</type>
            <sensorId>register_2_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Digital Vortex 2 high temperature
</label>
			<enum>no_yes_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_12">
            <type>state</type>
            <sensorId>register_2_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Smoke Alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_13">
            <type>state</type>
            <sensorId>register_2_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Floor leaking
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_2_BIT_14">
            <type>state</type>
            <sensorId>register_2_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Humidifier Fault
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="register_2_BIT_15">
            <type>state</type>
            <sensorId>register_2_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Spare glycol pump operation
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_3_BIT_0">
            <type>state</type>
            <sensorId>register_3_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Spare unit operation
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<!-- Not Needed
		<stateSensor ruleid="register_3_BIT_1">
            <type>state</type>
            <sensorId>register_3_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Condensate pump high water
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_3_BIT_2">
            <type>state</type>
            <sensorId>register_3_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Indoor T / H sensor failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_3">
            <type>state</type>
            <sensorId>register_3_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor Down
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="register_3_BIT_4">
            <type>state</type>
            <sensorId>register_3_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Blower airflow is lost
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


		<stateSensor ruleid="register_3_BIT_5">
            <type>state</type>
            <sensorId>register_3_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Humidifier low water
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_6">
            <type>state</type>
            <sensorId>register_3_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Humidifier current is too high
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_7">
            <type>state</type>
            <sensorId>register_3_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>High temperature
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_8">
            <type>state</type>
            <sensorId>register_3_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>System lost power
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_9">
            <type>state</type>
            <sensorId>register_3_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Unknown alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_10">
            <type>state</type>
            <sensorId>register_3_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Chilled water  high temperature
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_11">
            <type>state</type>
            <sensorId>register_3_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>High indoor temperature
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_12">
            <type>state</type>
            <sensorId>register_3_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label> Low indoor temperature
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_13">
            <type>state</type>
            <sensorId>register_3_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>High indoor humidity 
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_14">
            <type>state</type>
            <sensorId>register_3_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Low indoor humidity
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_3_BIT_15">
            <type>state</type>
            <sensorId>register_3_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Sensor A high temperature
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_0">
            <type>state</type>
            <sensorId>register_4_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Sensor A low temperature
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_1">
            <type>state</type>
            <sensorId>register_4_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Sensor A high humidity
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_2">
            <type>state</type>
            <sensorId>register_4_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Sensor A low humidity
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_3">
            <type>state</type>
            <sensorId>register_4_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Chilled water flow is lost
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_4">
            <type>state</type>
            <sensorId>register_4_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Filter is clogged
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_5">
            <type>state</type>
            <sensorId>register_4_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Air sensor fault
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_6">
            <type>state</type>
            <sensorId>register_4_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Natural cooling of the original document sensor failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_7">
            <type>state</type>
            <sensorId>register_4_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Sensor A failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_8">
            <type>state</type>
            <sensorId>register_4_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Units running out of time
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_9">
            <type>state</type>
            <sensorId>register_4_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor 1 running out of time
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_10">
            <type>state</type>
            <sensorId>register_4_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Compressor 2 running out of time
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_11">
            <type>state</type>
            <sensorId>register_4_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Natural source of cold running out of time
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_12">
            <type>state</type>
            <sensorId>register_4_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Electric heating 1 running timeout
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_13">
            <type>state</type>
            <sensorId>register_4_bit_13</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Electric heating 2 running timeout
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_14">
            <type>state</type>
            <sensorId>register_4_bit_14</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Electric heating 3 running timeout
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_4_BIT_15">
            <type>state</type>
            <sensorId>register_4_bit_15</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Hot water / steam running timeout
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_0">
            <type>state</type>
            <sensorId>register_5_bit_0</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Humidifier running timeout
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_1">
            <type>state</type>
            <sensorId>register_5_bit_1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Dehumidifier running timeout
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_2">
            <type>state</type>
            <sensorId>register_5_bit_2</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Network Failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_3">
            <type>state</type>
            <sensorId>register_5_bit_3</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>communication lost with unit 1
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_4">
            <type>state</type>
            <sensorId>register_5_bit_4</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>communication lost with other units 
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_5">
            <type>state</type>
            <sensorId>register_5_bit_5</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Group missing codes
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_6">
            <type>state</type>
            <sensorId>register_5_bit_6</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Code does not match the unit require maintenance
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


		<!-- Not Needed
		<stateSensor ruleid="register_5_BIT_7">
            <type>state</type>
            <sensorId>register_5_bit_7</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Custom Input 1 Alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_8">
            <type>state</type>
            <sensorId>register_5_bit_8</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Custom Input 2 Alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_9">
            <type>state</type>
            <sensorId>register_5_bit_9</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Custom Input 3 Alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_10">
            <type>state</type>
            <sensorId>register_5_bit_10</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Custom Input 4 Alarm
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_11">
            <type>state</type>
            <sensorId>register_5_bit_11</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Digital Vortex 1 sensor failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="register_5_BIT_12">
            <type>state</type>
            <sensorId>register_5_bit_12</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister5</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Digital Vortex 2 sensor failure
</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>
		-->


    </device>
    <protocol>
        <modbus>
            <value_ref_id valid="numberofcompressors">
                <function>3</function>
                <start_addr>0</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="numberofelectricheatings">
                <function>3</function>
                <start_addr>2</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="electricheatingstages">
                <function>3</function>
                <start_addr>4</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="teamworknumberofunits">
                <function>3</function>
                <start_addr>6</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="compressorrunsequence">
                <function>3</function>
                <start_addr>8</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="steamcontrol">
                <function>3</function>
                <start_addr>10</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="reheatcontrol">
                <function>3</function>
                <start_addr>12</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="timedrun">
                <function>3</function>
                <start_addr>14</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="indoortemperaturecontrol">
                <function>3</function>
                <start_addr>15</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="humiditycontrolmode">
                <function>3</function>
                <start_addr>16</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="vsdsetpoint">
                <function>3</function>
                <start_addr>17</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="airtemperaturelimit">
                <function>3</function>
                <start_addr>19</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="temperaturedifferencebetweenindoorandnaturalcoolingoftheoriginal">
                <function>3</function>
                <start_addr>21</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="minimumchilledwatertemperature">
                <function>3</function>
                <start_addr>23</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="temperaturesetpoint">
                <function>3</function>
                <start_addr>25</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="temperatureproportionalband">
                <function>3</function>
                <start_addr>27</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="deadzonetemperature">
                <function>3</function>
                <start_addr>29</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="temperatureintegrationtime">
                <function>3</function>
                <start_addr>31</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="temperaturesetpoint">
                <function>3</function>
                <start_addr>33</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="temperatureproportionalband">
                <function>3</function>
                <start_addr>35</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="temperatureintegrationtime">
                <function>3</function>
                <start_addr>37</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="deadzonetemperature">
                <function>3</function>
                <start_addr>39</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="singlegrouprestartdelay">
                <function>3</function>
                <start_addr>41</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="infraredscourproportion">
                <function>3</function>
                <start_addr>43</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="temperaturecontrol">
                <function>3</function>
                <start_addr>45</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="sleepintervalastarttime">
                <function>3</function>
                <start_addr>46</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="sleepintervalanendtime">
                <function>3</function>
                <start_addr>48</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="sleepstarttimeintervalof2">
                <function>3</function>
                <start_addr>50</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="sleepinterval2endtime">
                <function>3</function>
                <start_addr>52</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="timingmeansdeadzonetemperature">
                <function>3</function>
                <start_addr>54</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="vsdmanuallytimedlength">
                <function>3</function>
                <start_addr>56</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="insulationalarm">
                <function>3</function>
                <start_addr>58</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="groundtemperaturealarmpoint">
                <function>3</function>
                <start_addr>60</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="atemperaturesensoralarmpoint">
                <function>3</function>
                <start_addr>62</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="sensorbgroundtemperaturealarmpoint">
                <function>3</function>
                <start_addr>64</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="humidityalarm">
                <function>3</function>
                <start_addr>66</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="lowhumidityalarm">
                <function>3</function>
                <start_addr>68</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="ahumiditysensoralarmpoint">
                <function>3</function>
                <start_addr>70</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="fanruntimelimits">
                <function>3</function>
                <start_addr>74</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="acompressorrunningtimelimits">
                <function>3</function>
                <start_addr>76</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="compressor2runningtimelimits">
                <function>3</function>
                <start_addr>78</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="humidifierrunningtimelimits">
                <function>3</function>
                <start_addr>80</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="dehumidifierrunningtimelimits">
                <function>3</function>
                <start_addr>82</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="frozendeadnaturalcoolingoftheoriginalrunningtimelimits">
                <function>3</function>
                <start_addr>84</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="electricheatingarunningtimelimits">
                <function>3</function>
                <start_addr>86</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="electricheating2runningtimelimits">
                <function>3</function>
                <start_addr>88</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="electricheating3runningtimelimits">
                <function>3</function>
                <start_addr>90</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="hothotrunningtimelimits">
                <function>3</function>
                <start_addr>92</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="operatingstatus">
                <function>3</function>
                <start_addr>94</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="currentalarmsthenumberofevents">
                <function>3</function>
                <start_addr>95</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="alarmstatus">
                <function>3</function>
                <start_addr>96</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="fansdemand">
                <function>3</function>
                <start_addr>97</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="coolingdemand">
                <function>3</function>
                <start_addr>99</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="demandfornaturalcoolingoftheoriginal">
                <function>3</function>
                <start_addr>101</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="heatdemand">
                <function>3</function>
                <start_addr>103</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="humidification">
                <function>3</function>
                <start_addr>105</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="dehumidificationdemand">
                <function>3</function>
                <start_addr>107</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="naturalcoolingoftheoriginalstate">
                <function>3</function>
                <start_addr>109</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="returnairtemperature">
                <function>3</function>
                <start_addr>110</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="actualtemperaturesetpoint">
                <function>3</function>
                <start_addr>112</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="supplyairtemperature">
                <function>3</function>
                <start_addr>114</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="actualairtemperaturesetpoint">
                <function>3</function>
                <start_addr>116</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="naturalsourceofcoldtemperatures">
                <function>3</function>
                <start_addr>118</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="sensoratemperature">
                <function>3</function>
                <start_addr>120</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="sensorbtemperature">
                <function>3</function>
                <start_addr>122</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="sensorctemperature">
                <function>3</function>
                <start_addr>124</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="digitalvortex1temperature">
                <function>3</function>
                <start_addr>126</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="digitalvortex2temperature">
                <function>3</function>
                <start_addr>128</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="returnairhumidity">
                <function>3</function>
                <start_addr>130</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="actualreturnairhumiditysetpoint">
                <function>3</function>
                <start_addr>132</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="sensorahumidity">
                <function>3</function>
                <start_addr>134</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="sensorbhumidity">
                <function>3</function>
                <start_addr>136</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="sensorchumidity">
                <function>3</function>
                <start_addr>138</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="fanruntime">
                <function>3</function>
                <start_addr>140</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="compressor1runningtime">
                <function>3</function>
                <start_addr>142</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="compressor2runningtime">
                <function>3</function>
                <start_addr>144</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="humidifyingoperationtime">
                <function>3</function>
                <start_addr>146</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="dehumidifyingoperationtime">
                <function>3</function>
                <start_addr>148</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="naturalsourceofcoldrunningtime">
                <function>3</function>
                <start_addr>150</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="electricheating1runtime">
                <function>3</function>
                <start_addr>152</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="electricheating2runtime">
                <function>3</function>
                <start_addr>154</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="electricheating3runtime">
                <function>3</function>
                <start_addr>156</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="hotwaterandsteamrunningtime">
                <function>3</function>
                <start_addr>158</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="highesttemperaturebyday">
                <function>3</function>
                <start_addr>160</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="highesttemperaturedurationbyday">
                <function>3</function>
                <start_addr>162</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="lowesttemperaturebyday">
                <function>3</function>
                <start_addr>164</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="lowesttemperaturedurationbyday">
                <function>3</function>
                <start_addr>166</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="highesthumiditybyday">
                <function>3</function>
                <start_addr>168</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="highesthumiditydurationbyday">
                <function>3</function>
                <start_addr>170</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="lowesthumiditybyday">
                <function>3</function>
                <start_addr>172</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="lowesthumiditydurationbyday">
                <function>3</function>
                <start_addr>174</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>


			<!-- STATUS REGISTERS -->

            <value_ref_id valid="statusregister0">
                <function>3</function>
                <start_addr>1000</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister1">
                <function>3</function>
                <start_addr>1001</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister2">
                <function>3</function>
                <start_addr>1002</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister3">
                <function>3</function>
                <start_addr>1003</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister4">
                <function>3</function>
                <start_addr>1004</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

            <value_ref_id valid="statusregister5">
                <function>3</function>
                <start_addr>1005</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>



		</modbus>
	</protocol>
</APC_DDF>