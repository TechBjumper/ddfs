<?xml version="1.0"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="basler_dgc2020_legacy"
	ddfname="Basler Electric DGC-2020 (Legacy Devices)"
	ddfversion="2"
	canremove="yes">
	<schemaVersion>1.6</schemaVersion>

	<device deviceid="basler_dgc2020_legacy">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<setProductData ruleid="vendordata" field="vendor">Basler Electric</setProductData>
		<setProductData ruleid="modeldata" field="model">DGC-2020</setProductData>
		<setProductData ruleid="typedata" field="type">Generator</setProductData>
		<setDefaultLabel ruleid="labeldata">
			<sysHostname/> - Slave <commSetting field="slaveaddress"/>
		</setDefaultLabel>

		<valueMap ruleid="2state-vm">
			<valueIn>0</valueIn>
			<valueOut>0</valueOut>
			<valueIn>1</valueIn>
			<valueOut>1</valueOut>
			<valueIn>*</valueIn>
			<valueOut>2</valueOut>
		</valueMap>
		<enumMap ruleid="norm-alarm-em">
			<label>Normal</label>
			<label>ALARM</label>
			<label>Unknown</label>
		</enumMap>
		<enumMap ruleid="off-on-em">
			<label>Off</label>
			<label>ON</label>
			<label>Unknown</label>
		</enumMap>
		<valueMap ruleid="system-status-vm">
			<valueIn>0</valueIn>
			<valueOut>0</valueOut>
			<valueIn>1</valueIn>
			<valueOut>1</valueOut>
			<valueIn>2</valueIn>
			<valueOut>2</valueOut>
			<valueIn>3</valueIn>
			<valueOut>3</valueOut>
			<valueIn>4</valueIn>
			<valueOut>4</valueOut>
			<valueIn>5</valueIn>
			<valueOut>5</valueOut>
			<valueIn>6</valueIn>
			<valueOut>6</valueOut>
			<valueIn>7</valueIn>
			<valueOut>7</valueOut>
			<valueIn>8</valueIn>
			<valueOut>8</valueOut>
			<valueIn>9</valueIn>
			<valueOut>9</valueOut>
			<valueIn>10</valueIn>
			<valueOut>10</valueOut>
			<valueIn>11</valueIn>
			<valueOut>11</valueOut>
			<valueIn>*</valueIn>
			<valueOut>12</valueOut>
		</valueMap>
		<enumMap ruleid="system-status-em">
			<label>RESET State</label>
			<label>READY State</label>
			<label>CRANKING State</label>
			<label>RESTING State</label>
			<label>RUNNING State</label>
			<label>ALARM State</label>
			<label>PRESTART State</label>
			<label>COOLING State</label>
			<label>CONNECTING State</label>
			<label>DISCONNECTING State</label>
			<label>PULSING State</label>
			<label>UNLOADING State</label>
			<label>Unknown</label>
		</enumMap>

		<!-- alarm codes -->
		<stateSensor ruleid="ac0_status">
			<type>state</type>
			<sensorId>ALARM_CODE_0</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<getOid>Reg_40082</getOid>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>01:High Coolant Temperature</label>
			<sensorSet>Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ac1_status">
			<type>state</type>
			<sensorId>ALARM_CODE_1</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40082</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>02:Low Coolant Level</label>
			<sensorSet>Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ac2_status">
			<type>state</type>
			<sensorId>ALARM_CODE_2</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40082</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>03:Low Fuel Level</label>
			<sensorSet>Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ac3_status">
			<type>state</type>
			<sensorId>ALARM_CODE_3</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40082</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>04:Emergency Stop</label>
			<sensorSet>Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ac4_status">
			<type>state</type>
			<sensorId>ALARM_CODE_4</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40082</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>05:Sender Failure</label>
			<sensorSet>Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ac5_status">
			<type>state</type>
			<sensorId>ALARM_CODE_5</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40082</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>06:Over Crank</label>
			<sensorSet>Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ac6_status">
			<type>state</type>
			<sensorId>ALARM_CODE_6</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40082</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>07:Over Speed</label>
			<sensorSet>Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ac7_status">
			<type>state</type>
			<sensorId>ALARM_CODE_7</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40082</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>08:Low Oil Pressure</label>
			<sensorSet>Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ac8_status">
			<type>state</type>
			<sensorId>ALARM_CODE_8</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40082</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>09:CAN Failure</label>
			<sensorSet>Alarm Codes</sensorSet>
		</stateSensor>

		<!-- pre-alarm codes -->
		<stateSensor ruleid="pac0_status">
			<type>state</type>
			<sensorId>PREALARM_CODE_0</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<getOid>Reg_40083</getOid>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>01:High Coolant Temperature</label>
			<sensorSet>Pre Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="pac1_status">
			<type>state</type>
			<sensorId>PREALARM_CODE_1</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40083</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>02:Low Coolant Temperature</label>
			<sensorSet>Pre Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="pac2_status">
			<type>state</type>
			<sensorId>PREALARM_CODE_2</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40083</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>03:Weak Battery</label>
			<sensorSet>Pre Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="pac3_status">
			<type>state</type>
			<sensorId>PREALARM_CODE_3</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40083</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>04:Low Battery</label>
			<sensorSet>Pre Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="pac4_status">
			<type>state</type>
			<sensorId>PREALARM_CODE_4</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40083</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>05:Battery Overvoltage</label>
			<sensorSet>Pre Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="pac5_status">
			<type>state</type>
			<sensorId>PREALARM_CODE_5</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40083</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>06:Battery Charger Fail</label>
			<sensorSet>Pre Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="pac6_status">
			<type>state</type>
			<sensorId>PREALARM_CODE_6</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40083</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>07:Maintenence Interval</label>
			<sensorSet>Pre Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="pac7_status">
			<type>state</type>
			<sensorId>PREALARM_CODE_7</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40083</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>08:Engine Overload</label>
			<sensorSet>Pre Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="pac8_status">
			<type>state</type>
			<sensorId>PREALARM_CODE_8</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40083</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>09:DTC</label>
			<sensorSet>Pre Alarm Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="pac9_status">
			<type>state</type>
			<sensorId>PREALARM_CODE_9</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40083</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>10:CAN Failure</label>
			<sensorSet>Pre Alarm Codes</sensorSet>
		</stateSensor>

		<!-- pre-alarm code, group 2 -->
		<stateSensor ruleid="pac1_status">
			<type>state</type>
			<sensorId>PREALARM_CODE_GROUP_2_1</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40084</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>norm-alarm-em</enum>
			<label>03:Low Fuel Level</label>
			<sensorSet>Pre Alarm Codes</sensorSet>
		</stateSensor>

		<!-- system monitor sensors -->
		<numSensor ruleid="eng_coolant_temp">
			<type>temp</type>
			<sensorId>SYSTEM_ENG_COOL_TEMP</sensorId>
			<value>
				<!-- Device reports Deg F.  Convert to Celsius  -->
				<div>
					<op>
						<sub>
							<op>
								<getOid>Reg_40085</getOid>
							</op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Engine Coolant Temperature</label>
			<sensorSet>System Monitor Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="eng_oil_pressure">
			<type>pressure</type>
			<sensorId>SYSTEM_ENG_OIL_PRESS</sensorId>
			<value>
				<!-- convert: PSIG * 6.895 = kPa -->
				<mult> 
					<op>
						<getOid>Reg_40086</getOid>
					</op>
					<op>6.895</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Engine Oil Pressure</label>
			<sensorSet>System Monitor Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="battery_voltage">
			<type>voltage</type>
			<sensorId>SYSTEM_BATT_VOLTAGE</sensorId>
			<value>
				<!-- reported as 0.1 voltsDC -->
				<mult> 
					<op>
						<getOid>Reg_40087</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Battery Voltage</label>
			<sensorSet>System Monitor Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="Fuel Level">
			<type>num</type>
			<units>percent</units>
			<sensorId>FUEL_LEVEL</sensorId>
			<value>
				<getOid>Reg_40088</getOid>
			</value>
			<label>Fuel Level</label>
			<sensorSet>System Monitor Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="time_remain">
			<type>timeinhrs</type>
			<sensorId>SYSTEM_TIME_REMAIN</sensorId>
			<value>
				<getOid>Reg_40089</getOid>
			</value>
			<label>Time Remaining until Maintenance</label>
			<sensorSet>System Monitor Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="engine_runtime">
			<type>timeinmin</type>
			<sensorId>SYSTEM_ENG_RUNTIME</sensorId>
			<value>
				<add>
					<op>
						<mult>
							<op>10000</op>
							<op>
								<getOid>Reg_40090</getOid>
							</op>
						</mult>
					</op>
					<op>
						<getOid>Reg_40091</getOid>
					</op>
				</add>
			</value>
			<label>Engine Runtime</label>
			<sensorSet>System Monitor Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="engine_speed">
			<type>num</type>
			<units>rpm</units>
			<sensorId>SYSTEM_ENG_SPEED</sensorId>
			<value>
				<add>
					<op>
						<mult>
							<op>10000</op>
							<op>
								<getOid>Reg_40094</getOid>
							</op>
						</mult>
					</op>
					<op>
						<getOid>Reg_40095</getOid>
					</op>
				</add>
			</value>
			<label>Engine Speed</label>
			<sensorSet>System Monitor Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="engine_load">
			<type>num</type>
			<units>percent</units>
			<sensorId>SYSTEM_ENG_LOAD</sensorId>
			<value>
				<add>
					<op>
						<mult>
							<op>10000</op>
							<op>
								<getOid>Reg_40096</getOid>
							</op>
						</mult>
					</op>
					<op>
						<getOid>Reg_40097</getOid>
					</op>
				</add>
			</value>
			<label>Engine Load</label>
			<sensorSet>System Monitor Sensors</sensorSet>
		</numSensor>

		<!-- generator sensors -->
		<numSensor ruleid="voltage_ab">
			<type>voltage</type>
			<sensorId>VOLTAGE_AB</sensorId>
			<value>
				<add>
					<op>
						<mult>
							<op>10000</op>
							<op>
								<getOid>Reg_40098</getOid>
							</op>
						</mult>
					</op>
					<op>
						<getOid>Reg_40099</getOid>
					</op>
				</add>
			</value>
			<label>Voltage A-B</label>
			<sensorSet>Generator Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_bc">
			<type>voltage</type>
			<sensorId>VOLTAGE_BC</sensorId>
			<value>
				<add>
					<op>
						<mult>
							<op>10000</op>
							<op>
								<getOid>Reg_40100</getOid>
							</op>
						</mult>
					</op>
					<op>
						<getOid>Reg_40101</getOid>
					</op>
				</add>
			</value>
			<label>Voltage B-C</label>
			<sensorSet>Generator Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_ca">
			<type>voltage</type>
			<sensorId>VOLTAGE_CA</sensorId>
			<value>
				<add>
					<op>
						<mult>
							<op>10000</op>
							<op>
								<getOid>Reg_40102</getOid>
							</op>
						</mult>
					</op>
					<op>
						<getOid>Reg_40103</getOid>
					</op>
				</add>
			</value>
			<label>Voltage C-A</label>
			<sensorSet>Generator Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_an">
			<type>voltage</type>
			<sensorId>VOLTAGE_AN</sensorId>
			<value>
				<add>
					<op>
						<mult>
							<op>10000</op>
							<op>
								<getOid>Reg_40104</getOid>
							</op>
						</mult>
					</op>
					<op>
						<getOid>Reg_40105</getOid>
					</op>
				</add>
			</value>
			<label>Voltage A-N</label>
			<sensorSet>Generator Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_bn">
			<type>voltage</type>
			<sensorId>VOLTAGE_BN</sensorId>
			<value>
				<add>
					<op>
						<mult>
							<op>10000</op>
							<op>
								<getOid>Reg_40106</getOid>
							</op>
						</mult>
					</op>
					<op>
						<getOid>Reg_40107</getOid>
					</op>
				</add>
			</value>
			<label>Voltage B-N</label>
			<sensorSet>Generator Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage_cn">
			<type>voltage</type>
			<sensorId>VOLTAGE_CN</sensorId>
			<value>
				<add>
					<op>
						<mult>
							<op>10000</op>
							<op>
								<getOid>Reg_40108</getOid>
							</op>
						</mult>
					</op>
					<op>
						<getOid>Reg_40109</getOid>
					</op>
				</add>
			</value>
			<label>Voltage C-N</label>
			<sensorSet>Generator Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="current_a">
			<type>amperage</type>
			<sensorId>CURRENT_A</sensorId>
			<value>
				<getOid>Reg_40110</getOid>
			</value>
			<label>Current A</label>
			<sensorSet>Generator Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="current_b">
			<type>amperage</type>
			<sensorId>CURRENT_B</sensorId>
			<value>
				<getOid>Reg_40111</getOid>
			</value>
			<label>Current B</label>
			<sensorSet>Generator Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="current_c">
			<type>amperage</type>
			<sensorId>CURRENT_C</sensorId>
			<value>
				<getOid>Reg_40112</getOid>
			</value>
			<label>Current C</label>
			<sensorSet>Generator Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="3phase_power">
			<type>num/powerKW</type>
			<sensorId>3PHASE_POWER</sensorId>
			<value>
				<add>
					<op>
						<mult>
							<op>10000</op>
							<op>
								<getOid>Reg_40127</getOid>
							</op>
						</mult>
					</op>
					<op>
						<getOid>Reg_40128</getOid>
					</op>
				</add>
			</value>
			<label>3 Phase Power</label>
			<sensorSet>Generator Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="frequency">
			<type>frequency</type>
			<sensorId>FREQUENCY</sensorId>
			<value>
				<!-- reported as 0.1 Hertz -->
				<mult> 
					<op>
						<getOid>Reg_40133</getOid>
					</op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Frequency</label>
			<sensorSet>Generator Sensors</sensorSet>
		</numSensor>

		<!-- diagnostic status -->
		<stateSensor ruleid="diag-status">
			<type>state</type>
			<sensorId>DIAG_STATS</sensorId>
			<value>
				<mapValue mapid="system-status-vm">
					<getOid>Reg_40374</getOid>
				</mapValue>
			</value>
			<label>System Status</label>
			<enum>system-status-em</enum>
			<sensorSet>Diagnostic Status</sensorSet>
		</stateSensor>

		<!-- LED status -->
		<stateSensor ruleid="led_codes">
			<type>state</type>
			<sensorId>LED_CODE_0</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<getOid>Reg_40504</getOid>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>off-on-em</enum>
			<label>LED 01: Run</label>
			<sensorSet>LED Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="led_codes">
			<type>state</type>
			<sensorId>LED_CODE_1</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40504</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>off-on-em</enum>
			<label>LED 02: Off</label>
			<sensorSet>LED Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="led_codes">
			<type>state</type>
			<sensorId>LED_CODE_2</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40504</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>off-on-em</enum>
			<label>LED 03: Auto</label>
			<sensorSet>LED Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="led_codes">
			<type>state</type>
			<sensorId>LED_CODE_3</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40504</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>off-on-em</enum>
			<label>LED 04: Alarm</label>
			<sensorSet>LED Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="led_codes">
			<type>state</type>
			<sensorId>LED_CODE_4</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40504</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>off-on-em</enum>
			<label>LED 05: Load</label>
			<sensorSet>LED Codes</sensorSet>
		</stateSensor>
		<stateSensor ruleid="led_codes">
			<type>state</type>
			<sensorId>LED_CODE_5</sensorId>
			<value>
				<mapValue mapid="2state-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>Reg_40504</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>off-on-em</enum>
			<label>LED 06: Not In Auto</label>
			<sensorSet>LED Codes</sensorSet>
		</stateSensor>

	</device>

	<protocol>
		<modbus>
			<value_ref_id valid="Reg_40082">
				<!-- Alarm Codes -->
				<function>3</function>
				<start_addr>81</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40083">
				<!-- Pre-Alarm Codes -->
				<function>3</function>
				<start_addr>82</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40084">
				<!-- Pre-Alarm Codes, group 2 -->
				<function>3</function>
				<start_addr>83</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40085">
				<!-- Engine Coolant Temp -->
				<function>3</function>
				<start_addr>84</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40086">
				<!-- Engine Oil Pressure -->
				<function>3</function>
				<start_addr>85</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40087">
				<!-- Battery Voltage -->
				<function>3</function>
				<start_addr>86</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40088">
				<!-- Fuel Level -->
				<function>3</function>
				<start_addr>87</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40089">
				<!-- Time remaining until maintenance, hours -->
				<function>3</function>
				<start_addr>88</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40090">
				<!-- Accumulated Engine Runtime Minutes x10000-->
				<function>3</function>
				<start_addr>89</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40091">
				<!-- Accumulated Engine Runtime Minutes-->
				<function>3</function>
				<start_addr>90</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40094">
				<!-- Engine Speed RPM x10000 -->
				<function>3</function>
				<start_addr>93</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40095">
				<!-- Engine Speed RPM -->
				<function>3</function>
				<start_addr>94</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40096">
				<!-- Engine Load, % x10000 -->
				<function>3</function>
				<start_addr>95</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40097">
				<!-- Engine Load, % -->
				<function>3</function>
				<start_addr>96</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40098">
				<!-- Voltage a-b x10000 -->
				<function>3</function>
				<start_addr>97</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40099">
				<!-- Voltage a-b -->
				<function>3</function>
				<start_addr>98</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40100">
				<!-- Voltage b-c x10000 -->
				<function>3</function>
				<start_addr>99</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40101">
				<!-- Voltage b-c -->
				<function>3</function>
				<start_addr>100</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40102">
				<!-- Voltage c-a x10000 -->
				<function>3</function>
				<start_addr>101</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40103">
				<!-- Voltage c-a -->
				<function>3</function>
				<start_addr>102</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40104">
				<!-- Voltage a-n x10000 -->
				<function>3</function>
				<start_addr>103</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40105">
				<!-- Voltage a-n -->
				<function>3</function>
				<start_addr>104</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40106">
				<!-- Voltage b-n x10000 -->
				<function>3</function>
				<start_addr>105</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40107">
				<!-- Voltage b-n -->
				<function>3</function>
				<start_addr>106</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40108">
				<!-- Voltage c-n x10000 -->
				<function>3</function>
				<start_addr>107</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40109">
				<!-- Voltage c-n -->
				<function>3</function>
				<start_addr>108</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40110">
				<!-- Current a -->
				<function>3</function>
				<start_addr>109</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40111">
				<!-- Current b -->
				<function>3</function>
				<start_addr>110</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40112">
				<!-- Current c -->
				<function>3</function>
				<start_addr>111</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40127">
				<!-- 3 phase power x10000 -->
				<function>3</function>
				<start_addr>126</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40128">
				<!-- 3 phase power -->
				<function>3</function>
				<start_addr>127</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40133">
				<!-- Frequency -->
				<function>3</function>
				<start_addr>132</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40374">
				<!-- system status -->
				<function>3</function>
				<start_addr>373</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="Reg_40504">
				<!-- LED status -->
				<function>3</function>
				<start_addr>503</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>