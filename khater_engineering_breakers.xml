<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="khater_engineering_breakers"
	ddfname="Khater Engineering - Breakers"
	ddfversion="3"
	canremove="yes">
		 
	<schemaVersion>1.6</schemaVersion>

	<device deviceid="khater_engineering_breakers">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<setProductData ruleid="vendordata" field="vendor">Khater Engineering</setProductData>
		<setProductData ruleid="modeldata" field="model">Khater Engineering - Breakers</setProductData>
		<setProductData ruleid="typedata" field="type">Branch Circuit Monitor</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

        <stateSensor ruleid="elecpnl_udbsra1_mainsw">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MAINSW</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MAINSW</getOid>
                </mapValue>
            </value>
            <label>INCOMER (FROM SMDB-UPS-A) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcb3phsp1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCB3PHSP1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCB3PHSP1</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 1( 4x32A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcb3phsp2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCB3PHSP2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCB3PHSP2</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 2 (4x32A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbetca1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBETCA1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBETCA1</getOid>
                </mapValue>
            </value>
            <label>VISA RACK BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbetca2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBETCA2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBETCA2</getOid>
                </mapValue>
            </value>
            <label>ETC-A2 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbmc">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBMC</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBMC</getOid>
                </mapValue>
            </value>
            <label>ETC-A1 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbmdaa1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBMDAA1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBMDAA1</getOid>
                </mapValue>
            </value>
            <label>MDA-A1 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbmdaa2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBMDAA2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBMDAA2</getOid>
                </mapValue>
            </value>
            <label>MDA-A2 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbmdab1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBMDAB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBMDAB1</getOid>
                </mapValue>
            </value>
            <label>MDA-B1 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbmdab2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBMDAB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBMDAB2</getOid>
                </mapValue>
            </value>
            <label>MDA-B2 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsp1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSP1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSP1</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 1 ( 2x16A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsp10">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSP10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSP10</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 10 ( 2x16A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsp2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSP2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSP2</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 2 ( 2x32A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsp3">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSP3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSP3</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 3 ( 2x16A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsp4">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSP4</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSP4</getOid>
                </mapValue>
            </value>
            <label>SR-03-A BREAKER  ( 2x32A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsp5">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSP5</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSP5</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 5 ( 2x16A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsp6">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSP6</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSP6</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 6 ( 2x16A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsp7">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSP7</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSP7</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 7 ( 2x32A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsp8">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSP8</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSP8</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 8 ( 2x16A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsp9">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSP9</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSP9</getOid>
                </mapValue>
            </value>
            <label>SR-13-A BREAKER  ( 2x32A ) (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr01">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR01</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR01</getOid>
                </mapValue>
            </value>
            <label>SR-01 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr02">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR02</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR02</getOid>
                </mapValue>
            </value>
            <label>SR-02 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr03">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR03</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR03</getOid>
                </mapValue>
            </value>
            <label>SR-03 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr04">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR04</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR04</getOid>
                </mapValue>
            </value>
            <label>SR-04 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr05">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR05</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR05</getOid>
                </mapValue>
            </value>
            <label>SR-05 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr06">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR06</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR06</getOid>
                </mapValue>
            </value>
            <label>SR-06 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr07">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR07</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR07</getOid>
                </mapValue>
            </value>
            <label>SR-07 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr08">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR08</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR08</getOid>
                </mapValue>
            </value>
            <label>SR-08 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr09">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR09</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR09</getOid>
                </mapValue>
            </value>
            <label>SR-09 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr10">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR10</getOid>
                </mapValue>
            </value>
            <label>SR-10 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr11">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR11</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR11</getOid>
                </mapValue>
            </value>
            <label>SR-11 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr12">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR12</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR12</getOid>
                </mapValue>
            </value>
            <label>SR-12 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr13">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR13</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR13</getOid>
                </mapValue>
            </value>
            <label>SR-13 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr14">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR14</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR14</getOid>
                </mapValue>
            </value>
            <label>SR-14 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr15">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR15</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR15</getOid>
                </mapValue>
            </value>
            <label>SR-15 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr16">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR16</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR16</getOid>
                </mapValue>
            </value>
            <label>SR-16 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr17">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR17</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR17</getOid>
                </mapValue>
            </value>
            <label>SR-17 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr18">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR18</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR18</getOid>
                </mapValue>
            </value>
            <label>SR-18 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr19">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR19</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR19</getOid>
                </mapValue>
            </value>
            <label>SR-19 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbsr20">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBSR20</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBSR20</getOid>
                </mapValue>
            </value>
            <label>SR-20 BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra1_mcbvisa">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA1_MCBVISA</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA1_MCBVISA</getOid>
                </mapValue>
            </value>
            <label>MASTER CARD RACK BREAKERS (UDB-SR-A1)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mainsw">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MAINSW</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MAINSW</getOid>
                </mapValue>
            </value>
            <label>INCOMER (FROM SMDB-UPS-A) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbhdaa1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBHDAA1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBHDAA1</getOid>
                </mapValue>
            </value>
            <label>HDA-A1 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbhdaa2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBHDAA2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBHDAA2</getOid>
                </mapValue>
            </value>
            <label>HDA-A2 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbhdab1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBHDAB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBHDAB1</getOid>
                </mapValue>
            </value>
            <label>HDA-B1 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbhdab2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBHDAB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBHDAB2</getOid>
                </mapValue>
            </value>
            <label>HDA-B2 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP1</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 1 ( 2x16A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp10">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP10</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 10 ( 2x32A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp11">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP11</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP11</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 1 ( 4x32A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP2</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 2 ( 4x32A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp22">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP22</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP22</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 2 ( 2x32A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp3">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP3</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 3 ( 2x32A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp4">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP4</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP4</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 4 ( 2x16A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp5">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP5</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP5</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 5 ( 2x32A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp6">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP6</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP6</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 6 ( 2x16A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp7">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP7</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP7</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 7 ( 2x32A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp8">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP8</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP8</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 8 ( 2x32A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp9">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP9</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP9</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 9 ( 2x16A ) (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsr21">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSR21</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSR21</getOid>
                </mapValue>
            </value>
            <label>SR-21 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsr22">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSR22</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSR22</getOid>
                </mapValue>
            </value>
            <label>SR-22 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsr23">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSR23</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSR23</getOid>
                </mapValue>
            </value>
            <label>SR-23 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsr24">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSR24</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSR24</getOid>
                </mapValue>
            </value>
            <label>SR-24 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsr25">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSR25</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSR25</getOid>
                </mapValue>
            </value>
            <label>SR-25 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsr26">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSR26</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSR26</getOid>
                </mapValue>
            </value>
            <label>SR-26 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsr27">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSR27</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSR27</getOid>
                </mapValue>
            </value>
            <label>SR-27 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsr28">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSR28</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSR28</getOid>
                </mapValue>
            </value>
            <label>SR-28 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsr29">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSR29</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSR29</getOid>
                </mapValue>
            </value>
            <label>SR-29 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsr30">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSR30</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSR30</getOid>
                </mapValue>
            </value>
            <label>SR-30 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsr31">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSR31</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSR31</getOid>
                </mapValue>
            </value>
            <label>SR-31 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsra2_mcbsp9">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRA2_MCBSP9</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRA2_MCBSP9</getOid>
                </mapValue>
            </value>
            <label>SR-32 BREAKERS (UDB-SR-A2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRA2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mainsw">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MAINSW</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MAINSW</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MainSW</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcb3phsp1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCB3PHSP1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCB3PHSP1</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCB3PHSP1</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcb3phsp2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCB3PHSP2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCB3PHSP2</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCB3PHSP2</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbetca1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBETCA1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBETCA1</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBETCA1</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbetca2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBETCA2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBETCA2</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBETCA2</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbmacr">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBMACR</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBMACR</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBMACR</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbmdaa1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBMDAA1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBMDAA1</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBMDAA1</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbmdaa2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBMDAA2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBMDAA2</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBMDAA2</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbmdab1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBMDAB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBMDAB1</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBMDAB1</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbmdab2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBMDAB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBMDAB2</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBMDAB2</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsp1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSP1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSP1</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSP1</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsp10">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSP10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSP10</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSP10</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsp2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSP2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSP2</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSP2</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsp3">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSP3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSP3</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSP3</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsp5">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSP5</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSP5</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSP5</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsp6">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSP6</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSP6</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSP6</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsp7">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSP7</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSP7</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSP7</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsp8">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSP8</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSP8</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSP8</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr01">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR01</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR01</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR01</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr02">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR02</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR02</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR02</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr03">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR03</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR03</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR03</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr04">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR04</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR04</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR04</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr05">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR05</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR05</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR05</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr06">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR06</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR06</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR06</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr07">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR07</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR07</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR07</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr08">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR08</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR08</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR08</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr09">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR09</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR09</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR09</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr10">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR10</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR10</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr11">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR11</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR11</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR11</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr12">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR12</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR12</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR12</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr13">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR13</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR13</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR13</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr13a">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR13A</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR13A</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR13A</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr14">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR14</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR14</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR14</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr15">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR15</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR15</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR15</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr16">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR16</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR16</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR16</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr17">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR17</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR17</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR17</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr18">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR18</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR18</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR18</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr19">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR19</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR19</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR19</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr20">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR20</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR20</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR20</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbsr3a">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBSR3A</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBSR3A</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBSR3A</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb1_mcbvisa">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB1_MCBVISA</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB1_MCBVISA</getOid>
                </mapValue>
            </value>
            <label>ElecPnl'UDBSRB1'MCBVISA</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB1'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mainsw">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MAINSW</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MAINSW</getOid>
                </mapValue>
            </value>
            <label>INCOMER (FROM SMDB-UPS-B) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcb3phsp2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCB3PHSP2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCB3PHSP2</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 2 (4x32A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcb3psp1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCB3PSP1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCB3PSP1</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 1 (4x32A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbhdaa1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBHDAA1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBHDAA1</getOid>
                </mapValue>
            </value>
            <label>HDA-A1 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbhdaa2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBHDAA2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBHDAA2</getOid>
                </mapValue>
            </value>
            <label>HDA-A2 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbhdab1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBHDAB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBHDAB1</getOid>
                </mapValue>
            </value>
            <label>HDA-B1 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbhdab2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBHDAB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBHDAB2</getOid>
                </mapValue>
            </value>
            <label>HDA-B2 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsp1">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSP1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSP1</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 1( 2x16A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsp10">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSP10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSP10</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 10 ( 2x32A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsp2">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSP2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSP2</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 2 ( 2x32A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsp3">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSP3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSP3</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 3 ( 2x32A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsp4">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSP4</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSP4</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 4 ( 2x16A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsp5">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSP5</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSP5</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 5 ( 2x32A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsp6">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSP6</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSP6</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 6 ( 2x16A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsp7">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSP7</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSP7</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 7 ( 2x32A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsp8">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSP8</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSP8</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 8 ( 2x32A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsp9">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSP9</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSP9</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER 9 ( 2x16A ) (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr21">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR21</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR21</getOid>
                </mapValue>
            </value>
            <label>SR-21 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr22">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR22</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR22</getOid>
                </mapValue>
            </value>
            <label>SR-22 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr23">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR23</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR23</getOid>
                </mapValue>
            </value>
            <label>SR-23 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr24">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR24</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR24</getOid>
                </mapValue>
            </value>
            <label>SR-24 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr25">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR25</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR25</getOid>
                </mapValue>
            </value>
            <label>SR-25 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr26">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR26</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR26</getOid>
                </mapValue>
            </value>
            <label>SR-26 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr27">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR27</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR27</getOid>
                </mapValue>
            </value>
            <label>SR-27 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr28">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR28</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR28</getOid>
                </mapValue>
            </value>
            <label>SR-28 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr29">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR29</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR29</getOid>
                </mapValue>
            </value>
            <label>SR-29 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr30">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR30</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR30</getOid>
                </mapValue>
            </value>
            <label>SR-30 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr31">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR31</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR31</getOid>
                </mapValue>
            </value>
            <label>SR-31 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbsrb2_mcbsr32">
            <type>state</type>
            <sensorId>ELECPNL_UDBSRB2_MCBSR32</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBSRB2_MCBSR32</getOid>
                </mapValue>
            </value>
            <label>SR-32 BREAKERS (UDB-SR-B2)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBSRB2'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_stsurgarr">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_STSURGARR</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_STSURGARR</getOid>
                </mapValue>
            </value>
            <label>Surge Arrester IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_sttota">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_STTOTA</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_STTOTA</getOid>
                </mapValue>
            </value>
            <label>Incomer (TOT-A SIDE) IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_stmdbedl">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_STMDBEDL</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_STMDBEDL</getOid>
                </mapValue>
            </value>
            <label>Incomer (MDB-EDL SIDE) IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mccb1">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCCB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCCB1</getOid>
                </mapValue>
            </value>
            <label>SMDB-UPS-B BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mccb2">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCCB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCCB2</getOid>
                </mapValue>
            </value>
            <label>UPS-A (Inverter) BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mccb16">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCCB16</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCCB16</getOid>
                </mapValue>
            </value>
            <label>DB-DC BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mccb12">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCCB12</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCCB12</getOid>
                </mapValue>
            </value>
            <label>UPS-CC1 (Inverter) BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mccb13">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCCB13</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCCB13</getOid>
                </mapValue>
            </value>
            <label>UPS-CC2 (Inverter) BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mccb14">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCCB14</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCCB14</getOid>
                </mapValue>
            </value>
            <label>UPS-B (Bypass) BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mcb11">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCB11</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCB11</getOid>
                </mapValue>
            </value>
            <label>OU-02 BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mcb5">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCB5</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCB5</getOid>
                </mapValue>
            </value>
            <label>IU-ENTRY A BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mcb6">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCB6</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCB6</getOid>
                </mapValue>
            </value>
            <label>IU-ENTRY B BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mcb7">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCB7</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCB7</getOid>
                </mapValue>
            </value>
            <label>IU-NOC BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mcb8">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCB8</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCB8</getOid>
                </mapValue>
            </value>
            <label>IU-DC ELEC. ROOM BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mcb9">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCB9</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCB9</getOid>
                </mapValue>
            </value>
            <label>IU-BLDG ELEC. ROOM BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mcb10">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCB10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCB10</getOid>
                </mapValue>
            </value>
            <label>IU-STAGING BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mccb15">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCCB15</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCCB15</getOid>
                </mapValue>
            </value>
            <label>USMDB-CC-A BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mccb4">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCCB4</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCCB4</getOid>
                </mapValue>
            </value>
            <label>UMDB-BLDG-OUT BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_mccb3">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_MCCB3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_MCCB3</getOid>
                </mapValue>
            </value>
            <label>SPARE 160 Amp BREAKER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_swmanten">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_SWMANTEN</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_SWMANTEN</getOid>
                </mapValue>
            </value>
            <label>(Switch) MAINTENANCE MODE ON [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_erthncnt">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_ERTHNCNT</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_ERTHNCNT</getOid>
                </mapValue>
            </value>
            <label>EARTH-NEUTRAL CONTACTOR IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_ac3cnt">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_AC3CNT</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_AC3CNT</getOid>
                </mapValue>
            </value>
            <label>INDOOR and OUTDOOR UNITS CONTACTOR IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_pfgen">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_PFGEN</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_PFGEN</getOid>
                </mapValue>
            </value>
            <label>BLDG GEN FAILED TO PROVIDE POWER IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_swatsedl">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_SWATSEDL</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_SWATSEDL</getOid>
                </mapValue>
            </value>
            <label>(Switch ) ATS FORCED ON EDL SIDE IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_swatsgen">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_SWATSGEN</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_SWATSGEN</getOid>
                </mapValue>
            </value>
            <label>(Switch )  ATS FORCED ON GEN SIDE IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdca_atscntnor">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCA_ATSCNTNOR</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCA_ATSCNTNOR</getOid>
                </mapValue>
            </value>
            <label>ATS Control ON NORMAL SUPPLY IN [ATS-DC-A]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_stsurgarr">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_STSURGARR</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_STSURGARR</getOid>
                </mapValue>
            </value>
            <label>Surge Arrester IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_sttotb">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_STTOTB</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_STTOTB</getOid>
                </mapValue>
            </value>
            <label>Incomer (TOT-B SIDE) IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_stmdbedl">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_STMDBEDL</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_STMDBEDL</getOid>
                </mapValue>
            </value>
            <label>Incomer (MDB-EDL SIDE) IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb2">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB2</getOid>
                </mapValue>
            </value>
            <label>UPS-B (Inverter) BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb1">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB1</getOid>
                </mapValue>
            </value>
            <label>SMDB-UPS-A BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb11">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB11</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB11</getOid>
                </mapValue>
            </value>
            <label>DB-DC BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb3">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB3</getOid>
                </mapValue>
            </value>
            <label>UPS-CC1 (Bypass) BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb4">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB4</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB4</getOid>
                </mapValue>
            </value>
            <label>UPS-CC2 (Bypass) BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb13">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB13</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB13</getOid>
                </mapValue>
            </value>
            <label>UPS-A (Bypass) BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mcb10">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCB10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCB10</getOid>
                </mapValue>
            </value>
            <label>OU-03 BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mcb5">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCB5</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCB5</getOid>
                </mapValue>
            </value>
            <label>IU-ENTRY A BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mcb6">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCB6</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCB6</getOid>
                </mapValue>
            </value>
            <label>IU-ENTRY B BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mcb7">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCB7</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCB7</getOid>
                </mapValue>
            </value>
            <label>IU-DC ELEC. ROOM BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mcb8">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCB8</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCB8</getOid>
                </mapValue>
            </value>
            <label>IU-BLDG ELEC. ROOM BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mcb9">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCB9</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCB9</getOid>
                </mapValue>
            </value>
            <label>IU-STAGING BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb12">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB12</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB12</getOid>
                </mapValue>
            </value>
            <label>USMDB-CC-B BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb16">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB16</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB16</getOid>
                </mapValue>
            </value>
            <label>UPS-BLDG-1 (Bypass) BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb17">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB17</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB17</getOid>
                </mapValue>
            </value>
            <label>UPS-BLDG-2 (Bypass) BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb18">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB18</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB18</getOid>
                </mapValue>
            </value>
            <label>MBP-BLDG BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb19">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB19</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB19</getOid>
                </mapValue>
            </value>
            <label>MBP-CC BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb14">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB14</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB14</getOid>
                </mapValue>
            </value>
            <label>SPARE 250 Amp BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb15">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB15</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB15</getOid>
                </mapValue>
            </value>
            <label>SPARE 160 Amp BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_mccb20">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_MCCB20</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_MCCB20</getOid>
                </mapValue>
            </value>
            <label>DB-GE-3 BREAKER IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_erthncnt">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_ERTHNCNT</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_ERTHNCNT</getOid>
                </mapValue>
            </value>
            <label>EARTH-NEUTRAL CONTACTOR IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_ac3cnt">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_AC3CNT</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_AC3CNT</getOid>
                </mapValue>
            </value>
            <label>INDOOR and OUTDOOR UNITS CONTACTOR IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_pfgen">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_PFGEN</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_PFGEN</getOid>
                </mapValue>
            </value>
            <label>BLDG GENERATORS FAILED TO PROVIDE POWER [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_swatsedl">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_SWATSEDL</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_SWATSEDL</getOid>
                </mapValue>
            </value>
            <label>(Switch ) ATS FORCED ON EDL SIDE IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_swatsgen">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_SWATSGEN</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_SWATSGEN</getOid>
                </mapValue>
            </value>
            <label>(Switch) ATS FORCED ON GEN SIDE IN [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_swmainte">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_SWMAINTE</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_SWMAINTE</getOid>
                </mapValue>
            </value>
            <label>Switch MAINTENANCE MODE ON [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_atsdcb_atscont">
            <type>state</type>
            <sensorId>ELECPNL_ATSDCB_ATSCONT</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_ATSDCB_ATSCONT</getOid>
                </mapValue>
            </value>
            <label>ATS Control ON UPS Supply [ATS-DC-B]</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'ATSDCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_incupscc">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_INCUPSCC</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_INCUPSCC</getOid>
                </mapValue>
            </value>
            <label>INCOMER (SMDB-UPS-CC-OB SIDE) (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_incatsdca">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_INCATSDCA</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_INCATSDCA</getOid>
                </mapValue>
            </value>
            <label>INCOMER (ATS-DC-A  SIDE) (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_lodupsc">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_LODUPSC</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_LODUPSC</getOid>
                </mapValue>
            </value>
            <label>LOAD ON SMDB-UPS-CC-OB  SIDE (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_lodatsdca">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_LODATSDCA</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_LODATSDCA</getOid>
                </mapValue>
            </value>
            <label>LOAD ON ATS-DC-A  SIDE (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_swauto">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_SWAUTO</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_SWAUTO</getOid>
                </mapValue>
            </value>
            <label>AUTOMATIC MODE (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_swbypass">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_SWBYPASS</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_SWBYPASS</getOid>
                </mapValue>
            </value>
            <label>BYPASS MODE (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb1">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB1</getOid>
                </mapValue>
            </value>
            <label>CRAC-01 BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb2">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB2</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb3">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB3</getOid>
                </mapValue>
            </value>
            <label>CRAC-03 BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb4">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB4</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB4</getOid>
                </mapValue>
            </value>
            <label>CRAC-04 BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb5">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB5</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB5</getOid>
                </mapValue>
            </value>
            <label>CRAC-05 BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb6">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB6</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB6</getOid>
                </mapValue>
            </value>
            <label>CRAC-06 BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb14">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB14</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB14</getOid>
                </mapValue>
            </value>
            <label>CRAC-UPS-A BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb13">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB13</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB13</getOid>
                </mapValue>
            </value>
            <label>ATS-C (PATH-A)  BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb10">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB10</getOid>
                </mapValue>
            </value>
            <label>RAISED FLOOR ACTIVE TILES 1  BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb11">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB11</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB11</getOid>
                </mapValue>
            </value>
            <label>RAISED FLOOR ACTIVE TILES 2  BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb9">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB9</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB9</getOid>
                </mapValue>
            </value>
            <label>TOT-A PANEL BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb8">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB8</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB8</getOid>
                </mapValue>
            </value>
            <label>MOTORIZED DAMPERS PATH A BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb7">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB7</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB7</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbcca_mcb12">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCA_MCB12</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCA_MCB12</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (USMDB-CC-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_d26">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_D26</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_D26</getOid>
                </mapValue>
            </value>
            <label>INCOMER (SMDB-UPS-CC-OB SIDE) (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_d35">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_D35</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_D35</getOid>
                </mapValue>
            </value>
            <label>INCOMER (ATS-DC-B  SIDE) (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_swsmdb">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_SWSMDB</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_SWSMDB</getOid>
                </mapValue>
            </value>
            <label>LOAD ON SMDB-UPS-CC-OB  SIDE (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_swats">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_SWATS</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_SWATS</getOid>
                </mapValue>
            </value>
            <label>LOAD ON ATS-DC-B  SIDE (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_swauto">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_SWAUTO</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_SWAUTO</getOid>
                </mapValue>
            </value>
            <label>AUTOMATIC MODE (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_swbypass">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_SWBYPASS</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_SWBYPASS</getOid>
                </mapValue>
            </value>
            <label>BYPASS MODE (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb3">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB3</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb5">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB5</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB5</getOid>
                </mapValue>
            </value>
            <label>CRAC-02 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb6">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB6</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB6</getOid>
                </mapValue>
            </value>
            <label>CRAC-03 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb7">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB7</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB7</getOid>
                </mapValue>
            </value>
            <label>CRAC-04 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb8">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB8</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB8</getOid>
                </mapValue>
            </value>
            <label>CRAC-05 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb9">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB9</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB9</getOid>
                </mapValue>
            </value>
            <label>CRAC-06 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb1">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB1</getOid>
                </mapValue>
            </value>
            <label>CRAC-UPS-B BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb2">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB2</getOid>
                </mapValue>
            </value>
            <label>ATS-C (PATH-B)  BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb10">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB10</getOid>
                </mapValue>
            </value>
            <label>RAISED FLOOR ACTIVE TILES 1  BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb11">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB11</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB11</getOid>
                </mapValue>
            </value>
            <label>RAISED FLOOR ACTIVE TILES 2 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb12">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB12</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB12</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb4">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB4</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB4</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_dbdc_stincomer">
            <type>state</type>
            <sensorId>ELECPNL_DBDC_STINCOMER</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_DBDC_STINCOMER</getOid>
                </mapValue>
            </value>
            <label>Status INCOMER ATS A/B (DB-DC)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'DBDC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_dbdc_stmcb">
            <type>state</type>
            <sensorId>ELECPNL_DBDC_STMCB</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_DBDC_STMCB</getOid>
                </mapValue>
            </value>
            <label>Status RCCB/MCB (DB-DC)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'DBDC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_dbdc_stconatsa">
            <type>state</type>
            <sensorId>ELECPNL_DBDC_STCONATSA</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_DBDC_STCONATSA</getOid>
                </mapValue>
            </value>
            <label>Status Contactor ATS-A (DB-DC)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'DBDC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_dbdc_stconatsb">
            <type>state</type>
            <sensorId>ELECPNL_DBDC_STCONATSB</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_DBDC_STCONATSB</getOid>
                </mapValue>
            </value>
            <label>Status Contactor ATS-B (DB-DC)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'DBDC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbdc_stincomer">
            <type>state</type>
            <sensorId>ELECPNL_UDBDC_STINCOMER</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBDC_STINCOMER</getOid>
                </mapValue>
            </value>
            <label>Status INCOMER (UDB-DC)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBDC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbdc_stmcb">
            <type>state</type>
            <sensorId>ELECPNL_UDBDC_STMCB</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBDC_STMCB</getOid>
                </mapValue>
            </value>
            <label>Status RCCB/MCB (UDB-DC)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBDC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbdc_stmcb1">
            <type>state</type>
            <sensorId>ELECPNL_UDBDC_STMCB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBDC_STMCB1</getOid>
                </mapValue>
            </value>
            <label>Status FSPS and IB3 FACP</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBDC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_udbdc_stmcb2">
            <type>state</type>
            <sensorId>ELECPNL_UDBDC_STMCB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_UDBDC_STMCB2</getOid>
                </mapValue>
            </value>
            <label>Status Door Controles MFSDS TOT-B</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'UDBDC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsob_incomer">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSOB_INCOMER</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSOB_INCOMER</getOid>
                </mapValue>
            </value>
            <label>INCOMER (SMDB-UPS-CC-OB)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSOB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsob_stsurgarr">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSOB_STSURGARR</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSOB_STSURGARR</getOid>
                </mapValue>
            </value>
            <label>Surge Arrester (SMDB-UPS-CC-OB)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSOB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsob_mccb3">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSOB_MCCB3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSOB_MCCB3</getOid>
                </mapValue>
            </value>
            <label>USMDB-CC-A BREAKER (SMDB-UPS-CC-OB)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSOB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsob_mccb1">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSOB_MCCB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSOB_MCCB1</getOid>
                </mapValue>
            </value>
            <label>USMDB-CC-B BREAKER (SMDB-UPS-CC-OB)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSOB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsob_mccb2">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSOB_MCCB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSOB_MCCB2</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (SMDB-UPS-CC-OB)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSOB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_mbpcc_mccb1">
            <type>state</type>
            <sensorId>ELECPNL_MBPCC_MCCB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_MBPCC_MCCB1</getOid>
                </mapValue>
            </value>
            <label>INCOMER ATS-DC-B (LOAD ON ATS-DC-B) (MBP-CC)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'MBPCC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_mbpcc_mccb3">
            <type>state</type>
            <sensorId>ELECPNL_MBPCC_MCCB3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_MBPCC_MCCB3</getOid>
                </mapValue>
            </value>
            <label>INCOMER UPS-CC1 BREAKER (MBP-CC)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'MBPCC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_mbpcc_mccb4">
            <type>state</type>
            <sensorId>ELECPNL_MBPCC_MCCB4</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_MBPCC_MCCB4</getOid>
                </mapValue>
            </value>
            <label>INCOMER UPS-CC2 BREAKER (MBP-CC)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'MBPCC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_mbpcc_mccb2">
            <type>state</type>
            <sensorId>ELECPNL_MBPCC_MCCB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_MBPCC_MCCB2</getOid>
                </mapValue>
            </value>
            <label>INCOMER PARALLEL UPS (LOAD ON UPS-CC) (MBP-CC)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'MBPCC'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_stsurgarr">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_STSURGARR</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_STSURGARR</getOid>
                </mapValue>
            </value>
            <label>Surge Arrester (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_stupsa">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_STUPSA</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_STUPSA</getOid>
                </mapValue>
            </value>
            <label>INCOMER (UPS-A  SIDE) (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_statsdcb">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_STATSDCB</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_STATSDCB</getOid>
                </mapValue>
            </value>
            <label>INCOMER (ATS-DC-B  SIDE) (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb16">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB16</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB16</getOid>
                </mapValue>
            </value>
            <label>TC-B4 BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mccb4">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCCB4</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCCB4</getOid>
                </mapValue>
            </value>
            <label>UDB-SR-A1 BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mccb1">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCCB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCCB1</getOid>
                </mapValue>
            </value>
            <label>UDB-SR-A2 BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb5">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB5</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB5</getOid>
                </mapValue>
            </value>
            <label>ETC-B BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb15">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB15</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB15</getOid>
                </mapValue>
            </value>
            <label>UDB-DC BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb6">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB6</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB6</getOid>
                </mapValue>
            </value>
            <label>TC-B1 BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb7">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB7</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB7</getOid>
                </mapValue>
            </value>
            <label>TC-B3 BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb8">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB8</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB8</getOid>
                </mapValue>
            </value>
            <label>STAGING RACK (2x16A) BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb11">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB11</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB11</getOid>
                </mapValue>
            </value>
            <label>STAGING RACK (2x32A) BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb14">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB14</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB14</getOid>
                </mapValue>
            </value>
            <label>STAGING RACK (4x32A) BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb9">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB9</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB9</getOid>
                </mapValue>
            </value>
            <label>ATS-CONTROL PATH A BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb10">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB10</getOid>
                </mapValue>
            </value>
            <label>POWER METER PATH A BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb12">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB12</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB12</getOid>
                </mapValue>
            </value>
            <label>ETC-7F-A BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mcb13">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCB13</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCB13</getOid>
                </mapValue>
            </value>
            <label>ETC-RF-B BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mccb2">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCCB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCCB2</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsa_mccb3">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSA_MCCB3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSA_MCCB3</getOid>
                </mapValue>
            </value>
            <label>TIE BREAKER (SMDB-UPS-B) (SMDB-UPS-A)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSA'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_d26">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_D26</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_D26</getOid>
                </mapValue>
            </value>
            <label>INCOMER (SMDB-UPS-CC-OB SIDE) (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_d35">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_D35</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_D35</getOid>
                </mapValue>
            </value>
            <label>INCOMER (ATS-DC-B  SIDE) (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_swsmdb">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_SWSMDB</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_SWSMDB</getOid>
                </mapValue>
            </value>
            <label>LOAD ON SMDB-UPS-CC-OB  SIDE (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_swats">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_SWATS</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_SWATS</getOid>
                </mapValue>
            </value>
            <label>LOAD ON ATS-DC-B  SIDE (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_swauto">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_SWAUTO</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_SWAUTO</getOid>
                </mapValue>
            </value>
            <label>AUTOMATIC MODE (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_swbypass">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_SWBYPASS</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_SWBYPASS</getOid>
                </mapValue>
            </value>
            <label>BYPASS MODE (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb3">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB3</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb5">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB5</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB5</getOid>
                </mapValue>
            </value>
            <label>CRAC-02 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb6">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB6</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB6</getOid>
                </mapValue>
            </value>
            <label>CRAC-03 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb7">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB7</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB7</getOid>
                </mapValue>
            </value>
            <label>CRAC-04 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb8">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB8</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB8</getOid>
                </mapValue>
            </value>
            <label>CRAC-05 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb9">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB9</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB9</getOid>
                </mapValue>
            </value>
            <label>CRAC-06 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb1">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB1</getOid>
                </mapValue>
            </value>
            <label>CRAC-UPS-B BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb2">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB2</getOid>
                </mapValue>
            </value>
            <label>ATS-C (PATH-B)  BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb10">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB10</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB10</getOid>
                </mapValue>
            </value>
            <label>RAISED FLOOR ACTIVE TILES 1  BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb11">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB11</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB11</getOid>
                </mapValue>
            </value>
            <label>RAISED FLOOR ACTIVE TILES 2 BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb12">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB12</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB12</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_usmdbccb_mcb4">
            <type>state</type>
            <sensorId>ELECPNL_USMDBCCB_MCB4</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_USMDBCCB_MCB4</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (USMDB-CC-B)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'USMDBCCB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsob_incomer">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSOB_INCOMER</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSOB_INCOMER</getOid>
                </mapValue>
            </value>
            <label>INCOMER (SMDB-UPS-CC-OB)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSOB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsob_stsurgarr">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSOB_STSURGARR</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSOB_STSURGARR</getOid>
                </mapValue>
            </value>
            <label>Surge Arrester (SMDB-UPS-CC-OB)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSOB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsob_mccb3">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSOB_MCCB3</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSOB_MCCB3</getOid>
                </mapValue>
            </value>
            <label>USMDB-CC-A BREAKER (SMDB-UPS-CC-OB)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSOB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsob_mccb1">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSOB_MCCB1</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSOB_MCCB1</getOid>
                </mapValue>
            </value>
            <label>USMDB-CC-B BREAKER (SMDB-UPS-CC-OB)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSOB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="elecpnl_smdbupsob_mccb2">
            <type>state</type>
            <sensorId>ELECPNL_SMDBUPSOB_MCCB2</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>ELECPNL_SMDBUPSOB_MCCB2</getOid>
                </mapValue>
            </value>
            <label>SPARE BREAKER (SMDB-UPS-CC-OB)</label>
            <enum>off_on-em</enum>
            <sensorSet>ElecPnl'SMDBUPSOB'</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40589">
            <type>state</type>
            <sensorId>SPARE_40589</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40589</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40589</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40591">
            <type>state</type>
            <sensorId>SPARE_40591</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40591</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40591</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40593">
            <type>state</type>
            <sensorId>SPARE_40593</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40593</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40593</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40595">
            <type>state</type>
            <sensorId>SPARE_40595</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40595</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40595</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40597">
            <type>state</type>
            <sensorId>SPARE_40597</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40597</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40597</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40599">
            <type>state</type>
            <sensorId>SPARE_40599</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40599</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40599</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40601">
            <type>state</type>
            <sensorId>SPARE_40601</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40601</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40601</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40603">
            <type>state</type>
            <sensorId>SPARE_40603</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40603</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40603</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40605">
            <type>state</type>
            <sensorId>SPARE_40605</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40605</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40605</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40607">
            <type>state</type>
            <sensorId>SPARE_40607</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40607</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40607</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40609">
            <type>state</type>
            <sensorId>SPARE_40609</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40609</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40609</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40611">
            <type>state</type>
            <sensorId>SPARE_40611</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40611</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40611</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40613">
            <type>state</type>
            <sensorId>SPARE_40613</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40613</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40613</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40615">
            <type>state</type>
            <sensorId>SPARE_40615</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40615</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40615</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40617">
            <type>state</type>
            <sensorId>SPARE_40617</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40617</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40617</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40619">
            <type>state</type>
            <sensorId>SPARE_40619</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40619</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40619</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40621">
            <type>state</type>
            <sensorId>SPARE_40621</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40621</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40621</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40623">
            <type>state</type>
            <sensorId>SPARE_40623</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40623</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40623</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40625">
            <type>state</type>
            <sensorId>SPARE_40625</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40625</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40625</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40627">
            <type>state</type>
            <sensorId>SPARE_40627</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40627</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40627</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40629">
            <type>state</type>
            <sensorId>SPARE_40629</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40629</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40629</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40631">
            <type>state</type>
            <sensorId>SPARE_40631</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40631</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40631</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40633">
            <type>state</type>
            <sensorId>SPARE_40633</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40633</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40633</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>
        <stateSensor ruleid="spare_40635">
            <type>state</type>
            <sensorId>SPARE_40635</sensorId>
            <value>
                <mapValue mapid="2state-vm">
                    <getOid>SPARE_40635</getOid>
                </mapValue>
            </value>
            <label>Spare - Register 40635</label>
            <enum>off_on-em</enum>
            <sensorSet>spare</sensorSet>
        </stateSensor>

		<valueMap ruleid="2state-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>16256</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="off_on-em">
			<label>OFF</label>
			<label>ON</label>
			<label>Unknown</label>
		</enumMap>

	</device>
	<protocol>
		<modbus>
            <value_ref_id valid="ELECPNL_UDBSRA1_MAINSW">
                <function>3</function>
                <start_addr>2</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCB3PHSP1">
                <function>3</function>
                <start_addr>4</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCB3PHSP2">
                <function>3</function>
                <start_addr>6</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBETCA1">
                <function>3</function>
                <start_addr>8</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBETCA2">
                <function>3</function>
                <start_addr>10</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBMC">
                <function>3</function>
                <start_addr>12</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBMDAA1">
                <function>3</function>
                <start_addr>14</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBMDAA2">
                <function>3</function>
                <start_addr>16</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBMDAB1">
                <function>3</function>
                <start_addr>18</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBMDAB2">
                <function>3</function>
                <start_addr>20</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSP1">
                <function>3</function>
                <start_addr>22</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSP10">
                <function>3</function>
                <start_addr>24</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSP2">
                <function>3</function>
                <start_addr>26</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSP3">
                <function>3</function>
                <start_addr>28</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSP4">
                <function>3</function>
                <start_addr>30</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSP5">
                <function>3</function>
                <start_addr>32</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSP6">
                <function>3</function>
                <start_addr>34</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSP7">
                <function>3</function>
                <start_addr>36</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSP8">
                <function>3</function>
                <start_addr>38</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSP9">
                <function>3</function>
                <start_addr>40</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR01">
                <function>3</function>
                <start_addr>42</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR02">
                <function>3</function>
                <start_addr>44</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR03">
                <function>3</function>
                <start_addr>46</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR04">
                <function>3</function>
                <start_addr>48</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR05">
                <function>3</function>
                <start_addr>50</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR06">
                <function>3</function>
                <start_addr>52</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR07">
                <function>3</function>
                <start_addr>54</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR08">
                <function>3</function>
                <start_addr>56</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR09">
                <function>3</function>
                <start_addr>58</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR10">
                <function>3</function>
                <start_addr>60</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR11">
                <function>3</function>
                <start_addr>62</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR12">
                <function>3</function>
                <start_addr>64</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR13">
                <function>3</function>
                <start_addr>66</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR14">
                <function>3</function>
                <start_addr>68</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR15">
                <function>3</function>
                <start_addr>70</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR16">
                <function>3</function>
                <start_addr>72</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR17">
                <function>3</function>
                <start_addr>74</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR18">
                <function>3</function>
                <start_addr>76</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR19">
                <function>3</function>
                <start_addr>78</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBSR20">
                <function>3</function>
                <start_addr>80</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA1_MCBVISA">
                <function>3</function>
                <start_addr>82</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MAINSW">
                <function>3</function>
                <start_addr>84</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBHDAA1">
                <function>3</function>
                <start_addr>86</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBHDAA2">
                <function>3</function>
                <start_addr>88</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBHDAB1">
                <function>3</function>
                <start_addr>90</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBHDAB2">
                <function>3</function>
                <start_addr>92</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP1">
                <function>3</function>
                <start_addr>94</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP10">
                <function>3</function>
                <start_addr>96</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP11">
                <function>3</function>
                <start_addr>98</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP2">
                <function>3</function>
                <start_addr>100</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP22">
                <function>3</function>
                <start_addr>102</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP3">
                <function>3</function>
                <start_addr>104</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP4">
                <function>3</function>
                <start_addr>106</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP5">
                <function>3</function>
                <start_addr>108</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP6">
                <function>3</function>
                <start_addr>110</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP7">
                <function>3</function>
                <start_addr>112</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP8">
                <function>3</function>
                <start_addr>114</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP9">
                <function>3</function>
                <start_addr>116</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSR21">
                <function>3</function>
                <start_addr>118</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSR22">
                <function>3</function>
                <start_addr>120</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSR23">
                <function>3</function>
                <start_addr>122</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSR24">
                <function>3</function>
                <start_addr>124</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSR25">
                <function>3</function>
                <start_addr>126</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSR26">
                <function>3</function>
                <start_addr>128</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSR27">
                <function>3</function>
                <start_addr>130</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSR28">
                <function>3</function>
                <start_addr>132</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSR29">
                <function>3</function>
                <start_addr>134</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSR30">
                <function>3</function>
                <start_addr>136</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSR31">
                <function>3</function>
                <start_addr>138</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRA2_MCBSP9">
                <function>3</function>
                <start_addr>140</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MAINSW">
                <function>3</function>
                <start_addr>142</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCB3PHSP1">
                <function>3</function>
                <start_addr>144</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCB3PHSP2">
                <function>3</function>
                <start_addr>146</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBETCA1">
                <function>3</function>
                <start_addr>148</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBETCA2">
                <function>3</function>
                <start_addr>150</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBMACR">
                <function>3</function>
                <start_addr>152</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBMDAA1">
                <function>3</function>
                <start_addr>154</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBMDAA2">
                <function>3</function>
                <start_addr>156</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBMDAB1">
                <function>3</function>
                <start_addr>158</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBMDAB2">
                <function>3</function>
                <start_addr>160</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSP1">
                <function>3</function>
                <start_addr>162</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSP10">
                <function>3</function>
                <start_addr>164</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSP2">
                <function>3</function>
                <start_addr>166</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSP3">
                <function>3</function>
                <start_addr>168</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSP5">
                <function>3</function>
                <start_addr>170</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSP6">
                <function>3</function>
                <start_addr>172</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSP7">
                <function>3</function>
                <start_addr>174</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSP8">
                <function>3</function>
                <start_addr>176</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR01">
                <function>3</function>
                <start_addr>178</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR02">
                <function>3</function>
                <start_addr>180</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR03">
                <function>3</function>
                <start_addr>182</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR04">
                <function>3</function>
                <start_addr>184</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR05">
                <function>3</function>
                <start_addr>186</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR06">
                <function>3</function>
                <start_addr>188</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR07">
                <function>3</function>
                <start_addr>190</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR08">
                <function>3</function>
                <start_addr>192</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR09">
                <function>3</function>
                <start_addr>194</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR10">
                <function>3</function>
                <start_addr>196</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR11">
                <function>3</function>
                <start_addr>198</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR12">
                <function>3</function>
                <start_addr>200</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR13">
                <function>3</function>
                <start_addr>202</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR13A">
                <function>3</function>
                <start_addr>204</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR14">
                <function>3</function>
                <start_addr>206</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR15">
                <function>3</function>
                <start_addr>208</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR16">
                <function>3</function>
                <start_addr>210</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR17">
                <function>3</function>
                <start_addr>212</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR18">
                <function>3</function>
                <start_addr>214</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR19">
                <function>3</function>
                <start_addr>216</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR20">
                <function>3</function>
                <start_addr>218</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBSR3A">
                <function>3</function>
                <start_addr>220</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB1_MCBVISA">
                <function>3</function>
                <start_addr>222</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MAINSW">
                <function>3</function>
                <start_addr>224</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCB3PHSP2">
                <function>3</function>
                <start_addr>226</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCB3PSP1">
                <function>3</function>
                <start_addr>228</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBHDAA1">
                <function>3</function>
                <start_addr>230</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBHDAA2">
                <function>3</function>
                <start_addr>232</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBHDAB1">
                <function>3</function>
                <start_addr>234</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBHDAB2">
                <function>3</function>
                <start_addr>236</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSP1">
                <function>3</function>
                <start_addr>238</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSP10">
                <function>3</function>
                <start_addr>240</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSP2">
                <function>3</function>
                <start_addr>242</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSP3">
                <function>3</function>
                <start_addr>244</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSP4">
                <function>3</function>
                <start_addr>246</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSP5">
                <function>3</function>
                <start_addr>248</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSP6">
                <function>3</function>
                <start_addr>250</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSP7">
                <function>3</function>
                <start_addr>252</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSP8">
                <function>3</function>
                <start_addr>254</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSP9">
                <function>3</function>
                <start_addr>256</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR21">
                <function>3</function>
                <start_addr>258</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR22">
                <function>3</function>
                <start_addr>260</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR23">
                <function>3</function>
                <start_addr>262</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR24">
                <function>3</function>
                <start_addr>264</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR25">
                <function>3</function>
                <start_addr>266</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR26">
                <function>3</function>
                <start_addr>268</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR27">
                <function>3</function>
                <start_addr>270</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR28">
                <function>3</function>
                <start_addr>272</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR29">
                <function>3</function>
                <start_addr>274</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR30">
                <function>3</function>
                <start_addr>276</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR31">
                <function>3</function>
                <start_addr>278</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBSRB2_MCBSR32">
                <function>3</function>
                <start_addr>280</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_STSURGARR">
                <function>3</function>
                <start_addr>282</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_STTOTA">
                <function>3</function>
                <start_addr>284</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_STMDBEDL">
                <function>3</function>
                <start_addr>286</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCCB1">
                <function>3</function>
                <start_addr>288</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCCB2">
                <function>3</function>
                <start_addr>290</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCCB16">
                <function>3</function>
                <start_addr>292</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCCB12">
                <function>3</function>
                <start_addr>294</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCCB13">
                <function>3</function>
                <start_addr>296</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCCB14">
                <function>3</function>
                <start_addr>298</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCB11">
                <function>3</function>
                <start_addr>300</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCB5">
                <function>3</function>
                <start_addr>302</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCB6">
                <function>3</function>
                <start_addr>304</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCB7">
                <function>3</function>
                <start_addr>306</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCB8">
                <function>3</function>
                <start_addr>308</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCB9">
                <function>3</function>
                <start_addr>310</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCB10">
                <function>3</function>
                <start_addr>312</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCCB15">
                <function>3</function>
                <start_addr>314</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCCB4">
                <function>3</function>
                <start_addr>316</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_MCCB3">
                <function>3</function>
                <start_addr>318</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_SWMANTEN">
                <function>3</function>
                <start_addr>320</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_ERTHNCNT">
                <function>3</function>
                <start_addr>322</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_AC3CNT">
                <function>3</function>
                <start_addr>324</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_PFGEN">
                <function>3</function>
                <start_addr>326</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_SWATSEDL">
                <function>3</function>
                <start_addr>328</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_SWATSGEN">
                <function>3</function>
                <start_addr>330</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCA_ATSCNTNOR">
                <function>3</function>
                <start_addr>332</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_STSURGARR">
                <function>3</function>
                <start_addr>334</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_STTOTB">
                <function>3</function>
                <start_addr>336</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_STMDBEDL">
                <function>3</function>
                <start_addr>338</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB2">
                <function>3</function>
                <start_addr>340</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB1">
                <function>3</function>
                <start_addr>342</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB11">
                <function>3</function>
                <start_addr>344</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB3">
                <function>3</function>
                <start_addr>346</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB4">
                <function>3</function>
                <start_addr>348</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB13">
                <function>3</function>
                <start_addr>350</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCB10">
                <function>3</function>
                <start_addr>352</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCB5">
                <function>3</function>
                <start_addr>354</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCB6">
                <function>3</function>
                <start_addr>356</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCB7">
                <function>3</function>
                <start_addr>358</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCB8">
                <function>3</function>
                <start_addr>360</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCB9">
                <function>3</function>
                <start_addr>362</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB12">
                <function>3</function>
                <start_addr>364</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB16">
                <function>3</function>
                <start_addr>366</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB17">
                <function>3</function>
                <start_addr>368</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB18">
                <function>3</function>
                <start_addr>370</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB19">
                <function>3</function>
                <start_addr>372</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB14">
                <function>3</function>
                <start_addr>374</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB15">
                <function>3</function>
                <start_addr>376</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_MCCB20">
                <function>3</function>
                <start_addr>378</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_ERTHNCNT">
                <function>3</function>
                <start_addr>380</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_AC3CNT">
                <function>3</function>
                <start_addr>382</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_PFGEN">
                <function>3</function>
                <start_addr>384</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_SWATSEDL">
                <function>3</function>
                <start_addr>386</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_SWATSGEN">
                <function>3</function>
                <start_addr>388</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_SWMAINTE">
                <function>3</function>
                <start_addr>390</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_ATSDCB_ATSCONT">
                <function>3</function>
                <start_addr>392</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_INCUPSCC">
                <function>3</function>
                <start_addr>394</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_INCATSDCA">
                <function>3</function>
                <start_addr>396</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_LODUPSC">
                <function>3</function>
                <start_addr>398</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_LODATSDCA">
                <function>3</function>
                <start_addr>400</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_SWAUTO">
                <function>3</function>
                <start_addr>402</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_SWBYPASS">
                <function>3</function>
                <start_addr>404</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB1">
                <function>3</function>
                <start_addr>406</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB2">
                <function>3</function>
                <start_addr>408</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB3">
                <function>3</function>
                <start_addr>410</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB4">
                <function>3</function>
                <start_addr>412</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB5">
                <function>3</function>
                <start_addr>414</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB6">
                <function>3</function>
                <start_addr>416</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB14">
                <function>3</function>
                <start_addr>418</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB13">
                <function>3</function>
                <start_addr>420</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB10">
                <function>3</function>
                <start_addr>422</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB11">
                <function>3</function>
                <start_addr>424</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB9">
                <function>3</function>
                <start_addr>426</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB8">
                <function>3</function>
                <start_addr>428</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB7">
                <function>3</function>
                <start_addr>430</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCA_MCB12">
                <function>3</function>
                <start_addr>432</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_D26">
                <function>3</function>
                <start_addr>434</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_D35">
                <function>3</function>
                <start_addr>436</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_SWSMDB">
                <function>3</function>
                <start_addr>438</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_SWATS">
                <function>3</function>
                <start_addr>440</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_SWAUTO">
                <function>3</function>
                <start_addr>442</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_SWBYPASS">
                <function>3</function>
                <start_addr>444</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB3">
                <function>3</function>
                <start_addr>446</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB5">
                <function>3</function>
                <start_addr>448</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB6">
                <function>3</function>
                <start_addr>450</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB7">
                <function>3</function>
                <start_addr>452</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB8">
                <function>3</function>
                <start_addr>454</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB9">
                <function>3</function>
                <start_addr>456</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB1">
                <function>3</function>
                <start_addr>458</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB2">
                <function>3</function>
                <start_addr>460</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB10">
                <function>3</function>
                <start_addr>462</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB11">
                <function>3</function>
                <start_addr>464</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB12">
                <function>3</function>
                <start_addr>466</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB4">
                <function>3</function>
                <start_addr>468</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_DBDC_STINCOMER">
                <function>3</function>
                <start_addr>470</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_DBDC_STMCB">
                <function>3</function>
                <start_addr>472</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_DBDC_STCONATSA">
                <function>3</function>
                <start_addr>474</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_DBDC_STCONATSB">
                <function>3</function>
                <start_addr>476</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBDC_STINCOMER">
                <function>3</function>
                <start_addr>478</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBDC_STMCB">
                <function>3</function>
                <start_addr>480</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBDC_STMCB1">
                <function>3</function>
                <start_addr>482</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_UDBDC_STMCB2">
                <function>3</function>
                <start_addr>484</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSOB_INCOMER">
                <function>3</function>
                <start_addr>486</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSOB_STSURGARR">
                <function>3</function>
                <start_addr>488</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSOB_MCCB3">
                <function>3</function>
                <start_addr>490</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSOB_MCCB1">
                <function>3</function>
                <start_addr>492</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSOB_MCCB2">
                <function>3</function>
                <start_addr>494</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_MBPCC_MCCB1">
                <function>3</function>
                <start_addr>496</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_MBPCC_MCCB3">
                <function>3</function>
                <start_addr>498</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_MBPCC_MCCB4">
                <function>3</function>
                <start_addr>500</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_MBPCC_MCCB2">
                <function>3</function>
                <start_addr>502</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_STSURGARR">
                <function>3</function>
                <start_addr>504</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_STUPSA">
                <function>3</function>
                <start_addr>506</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_STATSDCB">
                <function>3</function>
                <start_addr>508</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB16">
                <function>3</function>
                <start_addr>510</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCCB4">
                <function>3</function>
                <start_addr>512</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCCB1">
                <function>3</function>
                <start_addr>514</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB5">
                <function>3</function>
                <start_addr>516</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB15">
                <function>3</function>
                <start_addr>518</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB6">
                <function>3</function>
                <start_addr>520</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB7">
                <function>3</function>
                <start_addr>522</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB8">
                <function>3</function>
                <start_addr>524</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB11">
                <function>3</function>
                <start_addr>526</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB14">
                <function>3</function>
                <start_addr>528</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB9">
                <function>3</function>
                <start_addr>530</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB10">
                <function>3</function>
                <start_addr>532</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB12">
                <function>3</function>
                <start_addr>534</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCB13">
                <function>3</function>
                <start_addr>536</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCCB2">
                <function>3</function>
                <start_addr>538</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSA_MCCB3">
                <function>3</function>
                <start_addr>540</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_D26">
                <function>3</function>
                <start_addr>542</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_D35">
                <function>3</function>
                <start_addr>544</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_SWSMDB">
                <function>3</function>
                <start_addr>546</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_SWATS">
                <function>3</function>
                <start_addr>548</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_SWAUTO">
                <function>3</function>
                <start_addr>550</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_SWBYPASS">
                <function>3</function>
                <start_addr>552</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB3">
                <function>3</function>
                <start_addr>554</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB5">
                <function>3</function>
                <start_addr>556</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB6">
                <function>3</function>
                <start_addr>558</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB7">
                <function>3</function>
                <start_addr>560</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB8">
                <function>3</function>
                <start_addr>562</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB9">
                <function>3</function>
                <start_addr>564</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB1">
                <function>3</function>
                <start_addr>566</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB2">
                <function>3</function>
                <start_addr>568</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB10">
                <function>3</function>
                <start_addr>570</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB11">
                <function>3</function>
                <start_addr>572</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB12">
                <function>3</function>
                <start_addr>574</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_USMDBCCB_MCB4">
                <function>3</function>
                <start_addr>576</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSOB_INCOMER">
                <function>3</function>
                <start_addr>578</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSOB_STSURGARR">
                <function>3</function>
                <start_addr>580</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSOB_MCCB3">
                <function>3</function>
                <start_addr>582</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSOB_MCCB1">
                <function>3</function>
                <start_addr>584</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="ELECPNL_SMDBUPSOB_MCCB2">
                <function>3</function>
                <start_addr>586</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40589">
                <function>3</function>
                <start_addr>588</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40591">
                <function>3</function>
                <start_addr>590</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40593">
                <function>3</function>
                <start_addr>592</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40595">
                <function>3</function>
                <start_addr>594</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40597">
                <function>3</function>
                <start_addr>596</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40599">
                <function>3</function>
                <start_addr>598</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40601">
                <function>3</function>
                <start_addr>600</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40603">
                <function>3</function>
                <start_addr>602</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40605">
                <function>3</function>
                <start_addr>604</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40607">
                <function>3</function>
                <start_addr>606</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40609">
                <function>3</function>
                <start_addr>608</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40611">
                <function>3</function>
                <start_addr>610</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40613">
                <function>3</function>
                <start_addr>612</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40615">
                <function>3</function>
                <start_addr>614</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40617">
                <function>3</function>
                <start_addr>616</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40619">
                <function>3</function>
                <start_addr>618</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40621">
                <function>3</function>
                <start_addr>620</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40623">
                <function>3</function>
                <start_addr>622</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40625">
                <function>3</function>
                <start_addr>624</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40627">
                <function>3</function>
                <start_addr>626</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40629">
                <function>3</function>
                <start_addr>628</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40631">
                <function>3</function>
                <start_addr>630</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40633">
                <function>3</function>
                <start_addr>632</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>
            <value_ref_id valid="SPARE_40635">
                <function>3</function>
                <start_addr>634</start_addr>
                <quantity>2</quantity>
                <type>uint_32</type>
            </value_ref_id>

		</modbus>
	</protocol>
</APC_DDF>