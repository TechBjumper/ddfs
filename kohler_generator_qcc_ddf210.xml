<?xml version="1.0"?>
<!-- Test Modbus related information -->
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_4.xsd"
    ddfid="kohler_generator_qcc_ddf210" ddfname="Kohler Generator (QCC)" ddfversion="3" canremove="yes">
  <schemaVersion>1.4</schemaVersion>

  <device deviceid="koeler_generator">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
    <oidMustMatch ruleid="kohler_generator_device_id" oid="device_id">
      <valueList>
        <value>20</value> <!-- Decision Maker 550 -->
      </valueList>
    </oidMustMatch>

    <setProductData ruleid="vendordata" field="vendor">Kohler</setProductData>
    <setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
    <setProductData ruleid="typedata" field="type">Generator</setProductData>

    <!-- Decision-Maker 550 Generator Set Controller used to monitor generators -->
    <setProductData ruleid="modeldata" field="model">Decision-Maker 550 Controller</setProductData>

    <setProductData ruleid="fwdata" field="appversion"><getOid>CODE_VERSION</getOid></setProductData>

    <numSensor ruleid="system_voltage">
      <type>voltage</type>
      <sensorId>SYSTEM_VOLTAGE</sensorId>
      <value>
        <getOid>SYSTEM_VOLTAGE</getOid>
      </value>
      <label>System Voltage</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    
    <numSensor ruleid="system_frequency">
      <type>frequency</type>
      <sensorId>SYSTEM_FREQUENCY</sensorId>
      <value>
        <getOid>SYSTEM_FREQUENCY</getOid>
      </value>
      <label>System Frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>
    
    <numSensor ruleid="battery_voltage">
      <type>voltage</type>
      <sensorId>BATTERY_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <mapValue mapid="value_available-vm">
                <getOid>BATTERY_VOLTAGE</getOid>
            </mapValue>
          </op>
          <op>0.1</op>
        </mult>
      </value>
      <label>Battery Voltage</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    
    <numSensor ruleid="voltage_l1-l2">
      <type>voltage</type>
      <sensorId>VOLTAGE_L1_L2</sensorId>
      <value>
        <getOid>VOLTAGE_L1_L2</getOid>
      </value>
      <label>Voltage L1-L2</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_l2-l3">
      <type>voltage</type>
      <sensorId>VOLTAGE_L2_L3</sensorId>
      <value>
        <getOid>VOLTAGE_L2_L3</getOid>
      </value>
      <label>Voltage L2-L3</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    
    <numSensor ruleid="voltage_l3-l1">
      <type>voltage</type>
      <sensorId>VOLTAGE_L3_L1</sensorId>
      <value>
        <getOid>VOLTAGE_L3_L1</getOid>
      </value>
      <label>Voltage L3-L1</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>
    
    <numSensor ruleid="frequency">
      <type>frequency</type>
      <sensorId>FREQUENCY</sensorId>
      <value>
        <getOid>FREQUENCY</getOid>
      </value>
      <label>Frequency</label>
      <sensorSet>Frequency</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_l1-l0">
      <type>voltage</type>
      <sensorId>VOLTAGE_L1_L0</sensorId>
      <value>
        <getOid>VOLTAGE_L1_L0</getOid>
      </value>
      <label>Voltage L1-L0</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_l2-l0">
      <type>voltage</type>
      <sensorId>VOLTAGE_L2_L0</sensorId>
      <value>
        <getOid>VOLTAGE_L2_L0</getOid>
      </value>
      <label>Voltage L2-L0</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="voltage_l3-l0">
      <type>voltage</type>
      <sensorId>VOLTAGE_L3_L0</sensorId>
      <value>
        <getOid>VOLTAGE_L3_L0</getOid>
      </value>
      <label>Voltage L3-L0</label>
      <sensorSet>Voltage</sensorSet>
    </numSensor>

    <numSensor ruleid="current_l1">
      <type>amperage</type>
      <sensorId>CURRENT_L1</sensorId>
      <value>
        <getOid>CURRENT_L1</getOid>
      </value>
      <label>Current L1</label>
      <sensorSet>Current</sensorSet>
    </numSensor>

    <numSensor ruleid="current_l2">
      <type>amperage</type>
      <sensorId>CURRENT_L2</sensorId>
      <value>
        <getOid>CURRENT_L2</getOid>
      </value>
      <label>Current L2</label>
      <sensorSet>Current</sensorSet>
    </numSensor>

    <numSensor ruleid="current_l3">
      <type>amperage</type>
      <sensorId>CURRENT_L3</sensorId>
      <value>
        <getOid>CURRENT_L3</getOid>
      </value>
      <label>Current L3</label>
      <sensorSet>Current</sensorSet>
    </numSensor>

    <numSensor ruleid="power_factor">
      <type>num/powerfactor</type>
      <sensorId>POWER_FACTOR</sensorId>
      <value>
        <mult>
          <op><getOid>POWER_FACTOR</getOid></op>
          <op>0.01</op>
        </mult>
      </value>
      <valueInc>0.01</valueInc>
      <label>Power Factor</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="total_real_power">
      <type>num/powerKW</type>
      <sensorId>TOTAL_REAL_POWER</sensorId>
      <value>
        <getOid>TOTAL_REAL_POWER</getOid>
      </value>
      <label>Total Real Power</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="max_power_percent">
      <type>pctofcapacity</type>
      <sensorId>MAX_POWER_PERCENT</sensorId>
      <value>
        <getOid>MAX_POWER_PERCENT</getOid>
      </value>
      <label>Percent of Max Power</label>
      <sensorSet>Power</sensorSet>
    </numSensor>

    <numSensor ruleid="engine_speed">
      <type>fanspeed</type>
      <sensorId>ENGINE_SPEED</sensorId>
      <value>
        <mapValue mapid="value_available-vm">
          <getOid>ENGINE_SPEED</getOid>
        </mapValue>
      </value>
      <valueInc>1.0</valueInc>
      <label>Engine Speed</label>
      <sensorSet>System</sensorSet>
    </numSensor>

    <numSensor ruleid="coolant_temp">
      <type>temp</type>
      <sensorId>COOLANT_TEMP</sensorId>
      <value>
        <mapValue mapid="value_available-vm">
          <getOid>COOLANT_TEMP</getOid>
        </mapValue>
      </value>
      <label>Coolant Temperature</label>
      <sensorSet>System</sensorSet>
    </numSensor>

    <numSensor ruleid="oil_pressure">
      <type>pressure</type>
      <sensorId>OIL_PRESSURE</sensorId>
      <value>
        <mapValue mapid="value_available-vm">
          <getOid>OIL_PRESSURE</getOid>
        </mapValue>
      </value>
      <label>Oil Pressure</label>
      <sensorSet>System</sensorSet>
    </numSensor>

    <valueMap ruleid="value_available-vm">
      <valueIn>32726</valueIn><valueOut>0</valueOut>
      <valueIn>32727</valueIn><valueOut>0</valueOut>
      <valueIn>*</valueIn><valueOut>*</valueOut>
    </valueMap>

    <valueMap ruleid="sensor_exists-vm">
      <valueIn>32726</valueIn><valueOut>[false]</valueOut>
      <valueIn>32727</valueIn><valueOut>[false]</valueOut>
      <valueIn>*</valueIn><valueOut>[true]</valueOut>
    </valueMap>

    <valueMap ruleid="normal-alarm-vm">
      <valueIn>0</valueIn><valueOut>0</valueOut>
      <valueIn>1</valueIn><valueOut>1</valueOut>
      <valueIn>*</valueIn><valueOut>2</valueOut>
    </valueMap>

    <enumMap ruleid="event_code-em">
      <label>Normal</label>
      <label>Active</label>
      <label>Unknown</label>
    </enumMap>
    
    <stateSensor ruleid="emergency_stop">
      <type>state</type>
      <sensorId>EMERGENCY_STOP</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op><getOid>event_code_reg_1500</getOid></op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Emergency Stop</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="overspeed">
      <type>state</type>
      <sensorId>OVERSPEED</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Overspeed</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="overcrank">
      <type>state</type>
      <sensorId>OVERCRANK</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Overcrank</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="high_coolant_temperature_shutdown">
      <type>state</type>
      <sensorId>HIGH_COOLANT_TEMPERATURE_SHUTDOWN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High Coolant Temperature Shutdown</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="oil_pressure_shutdown">
      <type>state</type>
      <sensorId>OIL_PRESSURE_SHUTDOWN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil Pressure Shutdown</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="low_coolant_temperature_warn">
      <type>state</type>
      <sensorId>LOW_COOLANT_TEMPERATURE_WARN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Coolant Temperature Warn.</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="low_fuel">
      <type>state</type>
      <sensorId>LOW_FUEL</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Fuel</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="high_coolant_temperature_warning">
      <type>state</type>
      <sensorId>HIGH_COOLANT_TEMPERATURE_WARNING</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High Coolant Temperature Warning</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="oil_pressure_warning">
      <type>state</type>
      <sensorId>OIL_PRESSURE_WARNING</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Oil Pressure Warning</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="master_not_in_auto">
      <type>state</type>
      <sensorId>MASTER_NOT_IN_AUTO</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Master Not In Auto</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="nfpa_110_fault">
      <type>state</type>
      <sensorId>NFPA_110_FAULT</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NFPA 110 Fault</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="low_battery_voltage">
      <type>state</type>
      <sensorId>LOW_BATTERY_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Battery Voltage</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="high_battery_voltage">
      <type>state</type>
      <sensorId>HIGH_BATTERY_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High Battery Voltage</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="battery_charger_fault">
      <type>state</type>
      <sensorId>BATTERY_CHARGER_FAULT</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Battery Charger Fault</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="system_ready">
      <type>state</type>
      <sensorId>SYSTEM_READY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>System Ready</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="loss_of_ecm_comm">
      <type>state</type>
      <sensorId>LOSS_OF_ECM_COMM</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1500</getOid></op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Loss of ECM Comm</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="no_oil_pressure_signal">
      <type>state</type>
      <sensorId>NO_OIL_PRESSURE_SIGNAL</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op><getOid>event_code_reg_1501</getOid></op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>No Oil Pressure Signal</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="high_oil_temperature_shutdown">
      <type>state</type>
      <sensorId>HIGH_OIL_TEMPERATURE_SHUTDOWN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>High Oil Temperature Shutdown</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="no_coolant_temperature_signal">
      <type>state</type>
      <sensorId>NO_COOLANT_TEMPERATURE_SIGNAL</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>No Coolant Temperature Signal</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="low_coolant_level">
      <type>state</type>
      <sensorId>LOW_COOLANT_LEVEL</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Low Coolant Level</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="speed_sensor_fault">
      <type>state</type>
      <sensorId>SPEED_SENSOR_FAULT</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Speed Sensor Fault</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="locked_rotor">
      <type>state</type>
      <sensorId>LOCKED_ROTOR</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Locked Rotor</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="master_switch_error">
      <type>state</type>
      <sensorId>MASTER_SWITCH_ERROR</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Master Switch Error</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="master_switch_open">
      <type>state</type>
      <sensorId>MASTER_SWITCH_OPEN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Master Switch Open</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="master_switch_off">
      <type>state</type>
      <sensorId>MASTER_SWITCH_OFF</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Master Switch Off</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="ac_sensing_loss">
      <type>state</type>
      <sensorId>AC_SENSING_LOSS</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>AC Sensing Loss</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="over_voltage">
      <type>state</type>
      <sensorId>OVER_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Over Voltage</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="under_voltage">
      <type>state</type>
      <sensorId>UNDER_VOLTAGE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Under Voltage</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="weak_battery">
      <type>state</type>
      <sensorId>WEAK_BATTERY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Weak Battery</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="over_frequency">
      <type>state</type>
      <sensorId>OVER_FREQUENCY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Over Frequency</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="under_frequency">
      <type>state</type>
      <sensorId>UNDER_FREQUENCY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Under Frequency</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="load_shed_kw_overload">
      <type>state</type>
      <sensorId>LOAD_SHED_KW_OVERLOAD</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1501</getOid></op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Load Shed kW Overload</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="load_shed_kw_under_frequency">
      <type>state</type>
      <sensorId>LOAD_SHED_KW_UNDER_FREQUENCY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op><getOid>event_code_reg_1502</getOid></op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Load Shed kW Under Frequency</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="over_current_warning">
      <type>state</type>
      <sensorId>OVER_CURRENT_WARNING</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Over Current Warning</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="eps_supplying_load">
      <type>state</type>
      <sensorId>EPS_SUPPLYING_LOAD</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>EPS Supplying Load</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="internal_fault">
      <type>state</type>
      <sensorId>INTERNAL_FAULT</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Internal Fault</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="engine_cooldown_oelay">
      <type>state</type>
      <sensorId>ENGINE_COOLDOWN_OELAY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Engine Cooldown Oelay</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="engine_start_delay">
      <type>state</type>
      <sensorId>ENGINE_START_DELAY</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Engine Start Delay</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="starting_aid">
      <type>state</type>
      <sensorId>STARTING_AID</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Starting Aid</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="generator_running">
      <type>state</type>
      <sensorId>GENERATOR_RUNNING</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Generator Running</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="air_damper_control">
      <type>state</type>
      <sensorId>AIR_DAMPER_CONTROL</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Air Damper Control</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="ground_fault">
      <type>state</type>
      <sensorId>GROUND_FAULT</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Ground Fault</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="eeprom_write_failure">
      <type>state</type>
      <sensorId>EEPROM_WRITE_FAILURE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>EEPROM Write Failure</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="critical_overvoltage">
      <type>state</type>
      <sensorId>CRITICAL_OVERVOLTAGE</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Critical Overvoltage</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="alternator_protect_shutdown">
      <type>state</type>
      <sensorId>ALTERNATOR_PROTECT_SHUTDOWN</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Alternator Protect Shutdown</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>

    <stateSensor ruleid="air_damper_indicator">
      <type>state</type>
      <sensorId>AIR_DAMPER_INDICATOR</sensorId>
      <value>
        <mapValue mapid="normal-alarm-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op><getOid>event_code_reg_1502</getOid></op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Air Damper Indicator</label>
      <enum>event_code-em</enum>
      <sensorSet>Status</sensorSet>
    </stateSensor>
  
  </device>

  <protocol>
    <modbus>
      <value_ref_id valid="VOLTAGE_L1_L2">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOLTAGE_L2_L3">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOLTAGE_L3_L1">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOLTAGE_L1_L0">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOLTAGE_L2_L0">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOLTAGE_L3_L0">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CURRENT_L1">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CURRENT_L2">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CURRENT_L3">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FREQUENCY">
        <function>3</function>
        <start_addr>9</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TOTAL_REAL_POWER">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAX_POWER_PERCENT">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="POWER_FACTOR">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="OIL_PRESSURE">
        <function>3</function>
        <start_addr>32</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="COOLANT_TEMP">
        <function>3</function>
        <start_addr>33</start_addr>
        <quantity>1</quantity>
        <type>int_16</type>
      </value_ref_id>
      <value_ref_id valid="ENGINE_SPEED">
        <function>3</function>
        <start_addr>34</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="SYSTEM_VOLTAGE">
        <function>3</function>
        <start_addr>125</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
        <value_ref_id valid="SYSTEM_FREQUENCY">
        <function>3</function>
        <start_addr>126</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
        </value_ref_id>
      <value_ref_id valid="BATTERY_VOLTAGE">
        <function>3</function>
        <start_addr>135</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CODE_VERSION">
        <function>3</function>
        <start_addr>204</start_addr>
        <quantity>3</quantity>
        <type>ascii</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1500">
        <function>3</function>
        <start_addr>1499</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1501">
        <function>3</function>
        <start_addr>1500</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1502">
        <function>3</function>
        <start_addr>1501</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1503">
        <function>3</function>
        <start_addr>1502</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1504">
        <function>3</function>
        <start_addr>1503</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1505">
        <function>3</function>
        <start_addr>1504</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1506">
        <function>3</function>
        <start_addr>1505</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1507">
        <function>3</function>
        <start_addr>1506</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1508">
        <function>3</function>
        <start_addr>1507</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1509">
        <function>3</function>
        <start_addr>1508</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1510">
        <function>3</function>
        <start_addr>1509</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1511">
        <function>3</function>
        <start_addr>1510</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1512">
        <function>3</function>
        <start_addr>1511</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1513">
        <function>3</function>
        <start_addr>1512</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1514">
        <function>3</function>
        <start_addr>1513</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="event_code_reg_1515">
        <function>3</function>
        <start_addr>1514</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="device_id">
        <function>3</function>
        <start_addr>9998</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <!-- Bulk read for performance. -->
      <!-- Kohler documents say no more than 50 at a time -->
      <packet>
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>13</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>32</start_addr>
        <quantity>3</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>125</start_addr>
        <quantity>2</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>135</start_addr>
        <quantity>1</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>204</start_addr>
        <quantity>1</quantity>
      </packet>
      
      <packet>
        <function>3</function>
        <start_addr>1499</start_addr>
        <quantity>16</quantity>
      </packet>
      <packet>
        <function>3</function>
        <start_addr>9998</start_addr>
        <quantity>1</quantity>
      </packet>
    </modbus>
  </protocol>
</APC_DDF>
