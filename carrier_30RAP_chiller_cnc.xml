<?xml version="1.0"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_4.xsd"
  ddfid="carrier_30RAP_chiller_cnc" ddfname="Carrier 30RAP Chiller Cast and Crew" ddfversion="1" canremove="yes">
	<schemaVersion>1.4</schemaVersion>
	
	<device deviceid="carrier_30rap_chiller_cnc">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
	
		<setProductData ruleid="vendordata" field="vendor">Carrier</setProductData>
		<setProductData ruleid="modeldata" field="model">30RAP Chiller</setProductData>
		<setProductData ruleid="typedata" field="type">Cooling Device</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

		<stateSensor ruleid="chiller_state">
			<type>state</type>
			<sensorId>DEVSTATUS_1</sensorId>
			<value>
				<mapValue mapid="chiller-status-vm">
					<getOid>chiller_state</getOid>
				</mapValue>
			</value>
			<label>Status</label>
			<enum>chiller-status-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 

		<stateSensor ruleid="occupied">
			<type>state</type>
			<sensorId>OCCUPIED</sensorId>
			<value>
				<mapValue mapid="yesno-vm">
					<getOid>occupied</getOid>
				</mapValue>
			</value>
			<label>Occupied</label>
			<enum>yesno-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 

		<stateSensor ruleid="chiller_start_stop">
			<type>state</type>
			<sensorId>START_STOP</sensorId>
			<value>
				<mapValue mapid="startstop-vm">
					<getOid>chiller_start_stop</getOid>
				</mapValue>
			</value>
			<label>Chiller Start/Stop Status</label>
			<enum>startstop-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 

		<stateSensor ruleid="low_sound_active">
			<type>state</type>
			<sensorId>LOW_SOUND_ACTIVE</sensorId>
			<value>
				<mapValue mapid="yesno-vm">
					<getOid>low_sound_active</getOid>
				</mapValue>
			</value>
			<label>Low Sound Active</label>
			<enum>yesno-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 

		<stateSensor ruleid="alarm_state">
			<type>state</type>
			<sensorId>ALARM_STATE</sensorId>
			<value>
				<mapValue mapid="offon-vm">
					<getOid>alarm_state</getOid>
				</mapValue>
			</value>
			<label>Alarm State</label>
			<enum>offon-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 

		<numSensor ruleid="active_demand_limit">
			<type>num</type>
			<units>percent</units>
			<sensorId>ACTIVE_DEMAND_LIMIT</sensorId>
			<value>
				<getOid>active_demand_limit</getOid>
			</value>
			<label>Active Demand Limit</label>
			<sensorSet>System Sensors</sensorSet>
		</numSensor>
		
		<stateSensor ruleid="override_modes_active">
			<type>state</type>
			<sensorId>OVERRIDE_MODES_ACTIVE</sensorId>
			<value>
				<mapValue mapid="yesno-vm">
					<getOid>override_modes_active</getOid>
				</mapValue>
			</value>
			<label>Override Modes Active</label>
			<enum>yesno-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 

		<numSensor ruleid="percent_total_capacity">
			<type>pctofcapacity/pctcoolingcap</type>
			<sensorId>PERCENT_TOTAL_CAPACITY</sensorId>
			<value>
				<getOid>percent_total_capacity</getOid>
			</value>
			<label>Total Capacity</label>
			<sensorSet>Capacity Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="stage">
			<type>num</type>
			<sensorId>STAGE</sensorId>
			<value>
				<getOid>stage</getOid>
			</value>
			<label>Stage</label>
			<sensorSet>System Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="temp_set_point">
			<type>temp</type>
			<sensorId>SETPOINT_TEMP</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>temp_set_point</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Set Point</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="temp_control_point">
			<type>temp</type>
			<sensorId>CONTROL_POINT_TEMP</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>temp_control_point</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Control Point</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="entering_fluid_temp">
			<type>temp</type>
			<sensorId>ENTERING_FLUID_TEMP</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>entering_fluid_temp</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Entering Fluid Temperature</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="leaving_fluid_temp">
			<type>temp</type>
			<sensorId>LEAVING_FLUID_TEMP</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>leaving_fluid_temp</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Leaving Fluid Temperature</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>

		<stateSensor ruleid="emergency_stop">
			<type>state</type>
			<sensorId>EMERGENCY_STOP</sensorId>
			<value>
				<mapValue mapid="offon-vm">
					<getOid>emergency_stop</getOid>
				</mapValue>
			</value>
			<label>Emergency Stop</label>
			<enum>offon-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor>
		
		<numSensor ruleid="minutes_left">
			<type>timeinmin</type>
			<sensorId>MINUTES_LEFT</sensorId>
			<value>
				<getOid>minutes_left</getOid>
			</value>
			<label>Minutes Left</label>
			<sensorSet>System Sensors</sensorSet>
		</numSensor>
		
		<stateSensor ruleid="cool_pump_relay_1">
			<type>state</type>
			<sensorId>COOL_PUMP_RELAY_1</sensorId>
			<value>
				<mapValue mapid="offon-vm">
					<getOid>cool_pump_relay_1</getOid>
				</mapValue>
			</value>
			<label>Cool Pump Relay 1</label>
			<enum>offon-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor>

		<stateSensor ruleid="coolflow_status">
			<type>state</type>
			<sensorId>COOLFLOW_STATUS</sensorId>
			<value>
				<mapValue mapid="flowstatus-vm">
					<getOid>coolflow_status</getOid>
				</mapValue>
			</value>
			<label>Cool Flow Status</label>
			<enum>flowstatus-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 

		<numSensor ruleid="percent_available_capacity_a">
			<type>pctofcapacity/pctcoolingcap</type>
			<sensorId>PERCENT_AVAILABLE_CAPACITY_A</sensorId>
			<value>
				<getOid>percent_available_capacity_a</getOid>
			</value>
			<label>Available Capacity A</label>
			<sensorSet>Capacity Sensors</sensorSet>
		</numSensor>
		
		<stateSensor ruleid="cool_pump_relay_2">
			<type>state</type>
			<sensorId>COOL_PUMP_RELAY_2</sensorId>
			<value>
				<mapValue mapid="offon-vm">
					<getOid>cool_pump_relay_2</getOid>
				</mapValue>
			</value>
			<label>Cool Pump Relay 2</label>
			<enum>offon-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		<stateSensor ruleid="cool_pump_1_interlock">
			<type>state</type>
			<sensorId>COOL_PUMP_1_INTERLOCK</sensorId>
			<value>
				<mapValue mapid="openclose-vm">
					<getOid>cool_pump_1_interlock</getOid>
				</mapValue>
			</value>
			<label>Cool Pump 1 Interlock</label>
			<enum>openclose-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor>
		
		<stateSensor ruleid="cool_pump_2_interlock">
			<type>state</type>
			<sensorId>COOL_PUMP_2_INTERLOCK</sensorId>
			<value>
				<mapValue mapid="openclose-vm">
					<getOid>cool_pump_2_interlock</getOid>
				</mapValue>
			</value>
			<label>Cool Pump 2 Interlock</label>
			<enum>openclose-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		<numSensor ruleid="lead_pump">
			<type>num</type>
			<sensorId>LEAD_PUMP</sensorId>
			<value>
				<getOid>lead_pump</getOid>
			</value>
			<label>Lead Pump</label>
			<sensorSet>System Sensors</sensorSet>
		</numSensor>
		
		<stateSensor ruleid="rotate_cooler_pumps_now">
			<type>state</type>
			<sensorId>ROTATE_COOLER_PUMPS_NOW</sensorId>
			<value>
				<mapValue mapid="offon-vm">
					<getOid>rotate_cooler_pumps_now</getOid>
				</mapValue>
			</value>
			<label>Rotate Cooler Pumps Now</label>
			<enum>offon-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		<stateSensor ruleid="heat_cool_select">
			<type>state</type>
			<sensorId>HEAT_COOL_SELECT</sensorId>
			<value>
				<mapValue mapid="heatcool-vm">
					<getOid>heat_cool_select</getOid>
				</mapValue>
			</value>
			<label>Heat-Cool Select</label>
			<enum>heatcool-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		<numSensor ruleid="percent_total_capacity_a">
			<type>pctofcapacity/pctcoolingcap</type>
			<sensorId>PERCENT_TOTAL_CAPACITY_A</sensorId>
			<value>
				<getOid>percent_total_capacity_a</getOid>
			</value>
			<label>Total Capacity A</label>
			<sensorSet>Capacity Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="discharge_pressure_a">
			<type>pressure</type>
			<sensorId>DISCHARGE_PRESSURE_A</sensorId>
			<value>
				<!-- convert: PSIG * 6.895 = kPa -->
				<mult> 
					<op><getOid>discharge_pressure_a</getOid></op>
					<op>6.895</op>
				</mult>
			</value>
			<label>Discharge Pressure A</label>
			<sensorSet>Pressure Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="suction_pressure_a">
			<type>pressure</type>
			<sensorId>SUCTION_PRESSURE_A</sensorId>
			<value>
				<!-- convert: PSIG * 6.895 = kPa -->
				<mult> 
					<op><getOid>suction_pressure_a</getOid></op>
					<op>6.895</op>
				</mult>
			</value>
			<label>Suction Pressure A</label>
			<sensorSet>Pressure Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="head_setpoint_a">
			<type>temp</type>
			<sensorId>HEAD_SETPOINT_A</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>head_setpoint_a</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Head Setpoint A</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="saturated_condensing_temp_a">
			<type>temp</type>
			<sensorId>SATURATED_CONDENSING_TEMP_A</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>saturated_condensing_temp_a</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Saturated Condensing Temperature A</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="saturated_suction_temp_a">
			<type>temp</type>
			<sensorId>SATURATED_SUCTION_TEMP_A</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>saturated_suction_temp_a</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Saturated Suction Temperature A</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="exv_perc_open_a">
			<type>num</type>
			<units>percent</units>
			<sensorId>EXV_PERC_OPEN_A</sensorId>
			<value>
				<getOid>exv_perc_open_a</getOid>
			</value>
			<label>EXV Open A</label>
			<sensorSet>System Sensors</sensorSet>
		</numSensor>
		 
		<numSensor ruleid="var_head_press_output_a">
			<type>num</type>
			<units>milliamps</units>
			<sensorId>VAR_HEAD_PRESS_OUTPUT_A</sensorId>
			<value>
				<getOid>var_head_press_output_a</getOid>
			</value>
			<label>Var Head Press Output A</label>
			<sensorSet>System Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="compr_return_gas_temp_a">
			<type>temp</type>
			<sensorId>COMPR_RETURN_GAS_TEMP_A</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>compr_return_gas_temp_a</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Compressor Return Gas Temperature A</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="discharge_gas_temp">
			<type>temp</type>
			<sensorId>DISCHARGE_GAS_TEMP</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>discharge_gas_temp</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Discharge Gas Temperature</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="suction_superheat_temp_a">
			<type>temp</type>
			<sensorId>SUCTION_SUPERHEAT_TEMP_A</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>suction_superheat_temp_a</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Suction Superheat Temperature A</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="spare_1_temp">
			<type>temp</type>
			<sensorId>SPARE_1_TEMP</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>spare_1_temp</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Spare 1 Temperature</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<stateSensor ruleid="compressor_a1_relay">
			<type>state</type>
			<sensorId>COMPRESSOR_A1_RELAY</sensorId>
			<value>
				<mapValue mapid="onoff-vm">
					<getOid>compressor_a1_relay</getOid>
				</mapValue>
			</value>
			<label>Compressor A1 Relay</label>
			<enum>onoff-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		<numSensor ruleid="compressor_a1_unload_time">
			<type>num</type>
			<sensorId>COMPRESSOR_A1_UNLOAD_TIME</sensorId>
			<value>
				<getOid>compressor_a1_unload_time</getOid>
			</value>
			<label>Compressor A1 Unload Time</label>
			<sensorSet>System Sensors</sensorSet>
		</numSensor>

		<stateSensor ruleid="compressor_a2_relay">
			<type>state</type>
			<sensorId>COMPRESSOR_A2_RELAY</sensorId>
			<value>
				<mapValue mapid="onoff-vm">
					<getOid>compressor_a2_relay</getOid>
				</mapValue>
			</value>
			<label>Compressor A2 Relay</label>
			<enum>onoff-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		<stateSensor ruleid="minimum_load_valve_relay_a">
			<type>state</type>
			<sensorId>MINIMUM_LOAD_VALVE_RELAY_A</sensorId>
			<value>
				<mapValue mapid="onoff-vm">
					<getOid>minimum_load_valve_relay_a</getOid>
				</mapValue>
			</value>
			<label>Minimum Load Valve Relay A</label>
			<enum>onoff-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		<stateSensor ruleid="compressor_a1_feedback">
			<type>state</type>
			<sensorId>COMPRESSOR_A1_FEEDBACK</sensorId>
			<value>
				<mapValue mapid="onoff-vm">
					<getOid>compressor_a1_feedback</getOid>
				</mapValue>
			</value>
			<label>Compressor A1 Feedback</label>
			<enum>onoff-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 

		<stateSensor ruleid="compressor_a2_feedback">
			<type>state</type>
			<sensorId>COMPRESSOR_A2_FEEDBACK</sensorId>
			<value>
				<mapValue mapid="onoff-vm">
					<getOid>compressor_a2_feedback</getOid>
				</mapValue>
			</value>
			<label>Compressor A2 Feedback</label>
			<enum>onoff-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		<numSensor ruleid="percent_total_capacity_b">
			<type>pctofcapacity/pctcoolingcap</type>
			<sensorId>PERCENT_TOTAL_CAPACITY_B</sensorId>
			<value>
				<getOid>percent_total_capacity_b</getOid>
			</value>
			<label>Total Capacity B</label>
			<sensorSet>Capacity Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="percent_available_capacity_b">
			<type>pctofcapacity/pctcoolingcap</type>
			<sensorId>PERCENT_AVAILABLE_CAPACITY_B</sensorId>
			<value>
				<getOid>percent_available_capacity_b</getOid>
			</value>
			<label>Available Capacity B</label>
			<sensorSet>Capacity Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="discharge_pressure_b">
			<type>pressure</type>
			<sensorId>DISCHARGE_PRESSURE_B</sensorId>
			<value>
				<!-- convert: PSIG * 6.895 = kPa -->
				<mult> 
					<op><getOid>discharge_pressure_b</getOid></op>
					<op>6.895</op>
				</mult>
			</value>
			<label>Discharge Pressure B</label>
			<sensorSet>Pressure Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="suction_pressure_b">
			<type>pressure</type>
			<sensorId>SUCTION_PRESSURE_B</sensorId>
			<value>
				<!-- convert: PSIG * 6.895 = kPa -->
				<mult> 
					<op><getOid>suction_pressure_b</getOid></op>
					<op>6.895</op>
				</mult>
			</value>
			<label>Suction Pressure B</label>
			<sensorSet>Pressure Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="head_setpoint_b">
			<type>temp</type>
			<sensorId>HEAD_SETPOINT_B</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>head_setpoint_b</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Head Setpoint B</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="saturated_condensing_temp_b">
			<type>temp</type>
			<sensorId>SATURATED_CONDENSING_TEMP_B</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>saturated_condensing_temp_b</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Saturated Condensing Temperature B</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="saturated_suction_temp_b">
			<type>temp</type>
			<sensorId>SATURATED_SUCTION_TEMP_B</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>saturated_suction_temp_b</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Saturated Suction Temperature B</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="exv_perc_open_b">
			<type>num</type>
			<units>percent</units>
			<sensorId>EXV_PERC_OPEN_B</sensorId>
			<value>
				<getOid>exv_perc_open_b</getOid>
			</value>
			<label>EXV Open B</label>
			<sensorSet>System Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="var_head_press_output_b">
			<type>num</type>
			<units>milliamps</units>
			<sensorId>VAR_HEAD_PRESS_OUTPUT_B</sensorId>
			<value>
				<getOid>var_head_press_output_b</getOid>
			</value>
			<label>Var Head Press Output B</label>
			<sensorSet>System Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="compr_return_gas_temp_b">
			<type>temp</type>
			<sensorId>COMPR_RETURN_GAS_TEMP_B</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>compr_return_gas_temp_b</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Compressor Return Gas Temperature B</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="suction_superheat_temp_b">
			<type>temp</type>
			<sensorId>SUCTION_SUPERHEAT_TEMP_B</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>suction_superheat_temp_b</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Suction Superheat Temperature B</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="spare_2_temp">
			<type>temp</type>
			<sensorId>SPARE_2_TEMP</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>spare_2_temp</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Spare 2 Temperature</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<stateSensor ruleid="compressor_b1_relay">
			<type>state</type>
			<sensorId>COMPRESSOR_B1_RELAY</sensorId>
			<value>
				<mapValue mapid="onoff-vm">
					<getOid>compressor_b1_relay</getOid>
				</mapValue>
			</value>
			<label>Compressor B1 Relay</label>
			<enum>onoff-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 

		<stateSensor ruleid="compressor_b2_relay">
			<type>state</type>
			<sensorId>COMPRESSOR_B2_RELAY</sensorId>
			<value>
				<mapValue mapid="onoff-vm">
					<getOid>compressor_b2_relay</getOid>
				</mapValue>
			</value>
			<label>Compressor B2 Relay</label>
			<enum>onoff-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		<stateSensor ruleid="minimum_load_valve_relay_b">
			<type>state</type>
			<sensorId>MINIMUM_LOAD_VALVE_RELAY_B</sensorId>
			<value>
				<mapValue mapid="onoff-vm">
					<getOid>minimum_load_valve_relay_b</getOid>
				</mapValue>
			</value>
			<label>Minimum Load Valve Relay B</label>
			<enum>onoff-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		<stateSensor ruleid="compressor_b1_feedback">
			<type>state</type>
			<sensorId>COMPRESSOR_B1_FEEDBACK</sensorId>
			<value>
				<mapValue mapid="onoff-vm">
					<getOid>compressor_b1_feedback</getOid>
				</mapValue>
			</value>
			<label>Compressor B1 Feedback</label>
			<enum>onoff-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		<stateSensor ruleid="compressor_b2_feedback">
			<type>state</type>
			<sensorId>COMPRESSOR_B2_FEEDBACK</sensorId>
			<value>
				<mapValue mapid="onoff-vm">
					<getOid>compressor_b2_feedback</getOid>
				</mapValue>
			</value>
			<label>Compressor B2 Feedback</label>
			<enum>onoff-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 

		<stateSensor ruleid="fan_1_relay">
			<type>state</type>
			<sensorId>FAN_1_RELAY</sensorId>
			<value>
				<mapValue mapid="offon-vm">
					<getOid>fan_1_relay</getOid>
				</mapValue>
			</value>
			<label>Fan 1 Relay</label>
			<enum>offon-em</enum>
			<sensorSet>System Sensors</sensorSet>
		</stateSensor> 
		
		
		<numSensor ruleid="cooling_setpoint" index="cooling_setpoint">
			<type>temp</type>
			<sensorId><rowIndex/></sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getRowOid>cooling_setpoint</getRowOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Cooling Setpoint <rowNumber/></label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="cooling_ramp_loading">
			<type>num</type>
			<sensorId>COOLING_RAMP_LOADING</sensorId>
			<value>
				<getOid>cooling_ramp_loading</getOid>
			</value>
			<label>Cooling Ramp Loading</label>
			<sensorSet>System Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="brine_freeze_point">
			<type>temp</type>
			<sensorId>BRINE_FREEZE_POINT</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>brine_freeze_point</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Brine Freeze Point</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="head_setpoint">
			<type>temp</type>
			<sensorId>HEAD_SETPOINT</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>head_setpoint</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Head Setpoint</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="fan_on_setpoint">
			<type>temp</type>
			<sensorId>FAN_ON_SETPOINT</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>fan_on_setpoint</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Fan On Setpoint</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="fan_off_setpoint">
			<type>temp</type>
			<sensorId>FAN_OFF_SETPOINT</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>fan_off_setpoint</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Fan Off Setpoint</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="fan_stage_delta">
			<type>temp</type>
			<sensorId>FAN_STAGE_DELTA</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>fan_stage_delta</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Fan Stage Delta</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="base_fan_off_delta_temp">
			<type>temp</type>
			<sensorId>BASE_FAN_OFF_DELTA_TEMP</sensorId>
			<value>
				<!-- convert: (F - 32) / 1.8 = C -->
				<div>
					<op>
						<sub>
							<op><getOid>base_fan_off_delta_temp</getOid></op>
							<op>32</op>
						</sub>
					</op>
					<op>1.8</op>
				</div>
			</value>
			<label>Base Fan Off Delta Temperature</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>
		
		<numSensor ruleid="ice_build_time_schedule">
			<type>num</type>
			<sensorId>ICE_BUILD_TIME_SCHEDULE</sensorId>
			<value>
				<getOid>ice_build_time_schedule</getOid>
			</value>
			<label>Ice Build Time Schedule</label>
			<sensorSet>System Sensors</sensorSet>
		</numSensor>
		


		<!-- Chiller Status Enums -->
		<valueMap ruleid="chiller-status-vm">
			<valueIn>0</valueIn><valueOut>1</valueOut> 
			<valueIn>6</valueIn><valueOut>2</valueOut>
			<valueIn>15</valueIn><valueOut>3</valueOut>
			<valueIn>19</valueIn><valueOut>4</valueOut>
			<valueIn>24</valueIn><valueOut>5</valueOut>
			<valueIn>29</valueIn><valueOut>6</valueOut>
			<valueIn>30</valueIn><valueOut>7</valueOut>
			<valueIn>32</valueIn><valueOut>8</valueOut>
			<valueIn>37</valueIn><valueOut>9</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap> 
		<enumMap ruleid="chiller-status-em">
			<label>Unknown</label>
			<label>Off</label>
			<label>Delay</label>
			<label>Override</label>
			<label>Ready</label>
			<label>Running</label>
			<label>Stopping</label>
			<label>Test</label>
			<label>Tripout</label>
			<label>Defrost</label>
		</enumMap> 

		<!-- YesNo Status Enums -->
		<valueMap ruleid="yesno-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut> 
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap> 
		<enumMap ruleid="yesno-em">
			<label>No</label>
			<label>Yes</label>
		</enumMap>

		<!-- StartStop Status Enums -->
		<valueMap ruleid="startstop-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut> 
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap> 
		<enumMap ruleid="startstop-em">
			<label>Stop</label>
			<label>Start</label>
		</enumMap>

		<!-- offon Status Enums -->
		<valueMap ruleid="offon-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut> 
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap> 
		<enumMap ruleid="offon-em">
			<label>Off</label>
			<label>On</label>
		</enumMap>

		<!-- onoff Status Enums -->
		<valueMap ruleid="onoff-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut> 
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap> 
		<enumMap ruleid="onoff-em">
			<label>On</label>
			<label>Off</label>
		</enumMap>

		<!-- Flow Status Enums -->
		<valueMap ruleid="flowstatus-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut> 
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap> 
		<enumMap ruleid="flowstatus-em">
			<label>No Flow</label>
			<label>Flow</label>
		</enumMap>
		
		<!-- Open/Close Enums -->
		<valueMap ruleid="openclose-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut> 
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap> 
		<enumMap ruleid="openclose-em">
			<label>Open</label>
			<label>Close</label>
		</enumMap>
		
		<!-- Open/Close Enums -->
		<valueMap ruleid="heatcool-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut> 
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap> 
		<enumMap ruleid="heatcool-em">
			<label>Heat</label>
			<label>Cool</label>
		</enumMap>
		
	</device>
	
	<protocol>
		<!-- Point Names given below are from the customer's docs -->
		<!-- Registers are listed by hex value to simplify lookups in the customers docs -->
		<modbus>	
			<value_ref_id valid="chiller_state"> <!-- PtName STAT -->
				<function>3</function>
				<start_addr>16383</start_addr> <!-- register 0x4000 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="occupied"> <!-- PtName OCC -->
				<function>3</function>
				<start_addr>16384</start_addr> <!-- register 0x4001 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="chiller_start_stop"> <!-- PtName CHIL_S_S -->
				<function>3</function>
				<start_addr>16385</start_addr> <!-- register 0x4002 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="low_sound_active"> <!-- PtName LSACTIVE -->
				<function>3</function>
				<start_addr>16386</start_addr> <!-- register 0x4003 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="alarm_state"> <!-- PtName ALM -->
				<function>3</function>
				<start_addr>16387</start_addr> <!-- register 0x4004 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="active_demand_limit"> <!-- PtName DEM_LIM -->
				<function>3</function>
				<start_addr>16388</start_addr> <!-- register 0x4005 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="override_modes_active"> <!-- PtName MODE -->
				<function>3</function>
				<start_addr>16389</start_addr> <!-- register 0x4006 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="percent_total_capacity"> <!-- PtName CAP_T -->
				<function>3</function>
				<start_addr>16390</start_addr> <!-- register 0x4007 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="stage"> <!-- PtName STAGE -->
				<function>3</function>
				<start_addr>16391</start_addr> <!-- register 0x4008 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="temp_set_point"> <!-- PtName SP -->
				<function>3</function>
				<start_addr>16392</start_addr> <!-- register 0x4009 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="temp_control_point"> <!-- PtName CTRL_PNT -->
				<function>3</function>
				<start_addr>16393</start_addr> <!-- register 0x400A -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="entering_fluid_temp"> <!-- PtName EWT -->
				<function>3</function>
				<start_addr>16394</start_addr> <!-- register 0x400B -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="leaving_fluid_temp"> <!-- PtName LWT -->
				<function>3</function>
				<start_addr>16395</start_addr> <!-- register 0x400C -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="emergency_stop"> <!-- PtName EMSTOP -->
				<function>3</function>
				<start_addr>16396</start_addr> <!-- register 0x400D -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="minutes_left"> <!-- PtName MIN_LEFT -->
				<function>3</function>
				<start_addr>16397</start_addr> <!-- register 0x400E -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="cool_pump_relay_1"> <!-- PtName COOLPMP1 -->
				<function>3</function>
				<start_addr>16398</start_addr> <!-- register 0x400F -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="cool_pump_relay_2"> <!-- PtName COOLPMP2 -->
				<function>3</function>
				<start_addr>16399</start_addr> <!-- register 0x4010 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="cool_pump_1_interlock"> <!-- PtName PMP1_FBK -->
				<function>3</function>
				<start_addr>16400</start_addr> <!-- register 0x4011 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="cool_pump_2_interlock"> <!-- PtName PMP2_FBK -->
				<function>3</function>
				<start_addr>16401</start_addr> <!-- register 0x4012 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="coolflow_status"> <!-- PtName COOLFLOW -->
				<function>3</function>
				<start_addr>16402</start_addr> <!-- register 0x4013 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="lead_pump"> <!-- PtName LEADPUMP -->
				<function>3</function>
				<start_addr>16403</start_addr> <!-- register 0x4014 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="rotate_cooler_pumps_now"> <!-- PtName ROT_PUMP -->
				<function>3</function>
				<start_addr>16404</start_addr> <!-- register 0x4015 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="heat_cool_select"> <!-- PtName HC_SEL -->
				<function>3</function>
				<start_addr>16405</start_addr> <!-- register 0x4016 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="percent_total_capacity_a"> <!-- PtName CAPA_T -->
				<function>3</function>
				<start_addr>16406</start_addr> <!-- register 0x4017 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="percent_available_capacity_a"> <!-- PtName CAPA_A -->
				<function>3</function>
				<start_addr>16407</start_addr> <!-- register 0x4018 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="discharge_pressure_a"> <!-- PtName DP_A -->
				<function>3</function>
				<start_addr>16408</start_addr> <!-- register 0x4019 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="suction_pressure_a"> <!-- PtName SP_A -->
				<function>3</function>
				<start_addr>16409</start_addr> <!-- register 0x401A -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="head_setpoint_a"> <!-- PtName HSP -->
				<function>3</function>
				<start_addr>16410</start_addr> <!-- register 0x401B -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="saturated_condensing_temp_a"><!-- PtName TMP_SCTA -->
				<function>3</function>
				<start_addr>16411</start_addr> <!-- register 0x401C -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="saturated_suction_temp_a"> <!-- PtName TMP_SSTA -->
				<function>3</function>
				<start_addr>16412</start_addr> <!-- register 0x401D -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="exv_perc_open_a"> <!-- PtName EXV_A -->
				<function>3</function>
				<start_addr>16413</start_addr> <!-- register 0x401E -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="var_head_press_output_a"> <!-- PtName VHP_ACT -->
				<function>3</function>
				<start_addr>16414</start_addr> <!-- register 0x401F -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="compr_return_gas_temp_a"> <!-- PtName TMP_RGTA -->
				<function>3</function>
				<start_addr>16415</start_addr> <!-- register 0x4020 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="discharge_gas_temp"> <!-- PtName DISGAS -->
				<function>3</function>
				<start_addr>16416</start_addr> <!-- register 0x4021 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="suction_superheat_temp_a"> <!-- PtName SH_A -->
				<function>3</function>
				<start_addr>16417</start_addr> <!-- register 0x4022 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="spare_1_temp"> <!-- PtName SPR1_TMP -->
				<function>3</function>
				<start_addr>16418</start_addr> <!-- register 0x4023 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="compressor_a1_relay"> <!-- PtName K_A1_RLY -->
				<function>3</function>
				<start_addr>16419</start_addr> <!-- register 0x4024 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="compressor_a1_unload_time"> <!-- PtName A1UNLTME -->
				<function>3</function>
				<start_addr>16420</start_addr> <!-- register 0x4025 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="compressor_a2_relay"> <!-- PtName K_A2_RLY -->
				<function>3</function>
				<start_addr>16421</start_addr> <!-- register 0x4026 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="minimum_load_valve_relay_a"> <!-- PtName MLV_RLY -->
				<function>3</function>
				<start_addr>16422</start_addr> <!-- register 0x4027 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="compressor_a1_feedback"> <!-- PtName K_A1_FBK -->
				<function>3</function>
				<start_addr>16423</start_addr> <!-- register 0x4028 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="compressor_a2_feedback"> <!-- PtName K_A2_FBK -->
				<function>3</function>
				<start_addr>16424</start_addr> <!-- register 0x4029 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="percent_total_capacity_b"> <!-- PtName CAPB_T -->
				<function>3</function>
				<start_addr>16425</start_addr> <!-- register 0x402A -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="percent_available_capacity_b"> <!-- PtName CAPB_A -->
				<function>3</function>
				<start_addr>16426</start_addr> <!-- register 0x402B -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="discharge_pressure_b"> <!-- PtName DP_B -->
				<function>3</function>
				<start_addr>16427</start_addr> <!-- register 0x402C -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="suction_pressure_b"> <!-- PtName SP_B -->
				<function>3</function>
				<start_addr>16428</start_addr> <!-- register 0x402D -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="head_setpoint_b"> <!-- PtName HSP -->
				<function>3</function>
				<start_addr>16429</start_addr> <!-- register 0x402E -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="saturated_condensing_temp_b"> <!-- PtName TMP_SCTB -->
				<function>3</function>
				<start_addr>16430</start_addr> <!-- register 0x402F -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="saturated_suction_temp_b"> <!-- PtName TMP_SSTB -->
				<function>3</function>
				<start_addr>16431</start_addr> <!-- register 0x4030 -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="exv_perc_open_b"> <!-- PtName EXV_B -->
				<function>3</function>
				<start_addr>16432</start_addr> <!-- register 0x4031 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="var_head_press_output_b"> <!-- PtName VHP_ACT -->
				<function>3</function>
				<start_addr>16433</start_addr> <!-- register 0x4032 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="compr_return_gas_temp_b"> <!-- PtName TMP_RGTB -->
				<function>3</function>
				<start_addr>16434</start_addr> <!-- register 0x4033 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="suction_superheat_temp_b"> <!-- PtName SH_B -->
				<function>3</function>
				<start_addr>16435</start_addr> <!-- register 0x4034 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="spare_2_temp"> <!-- PtName SPR2_TMP -->
				<function>3</function>
				<start_addr>16436</start_addr> <!-- register 0x4035 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="compressor_b1_relay"> <!-- PtName K_B1_RLY -->
				<function>3</function>
				<start_addr>16437</start_addr> <!-- register 0x4036 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="compressor_b2_relay"> <!-- PtName K_B2_RLY -->
				<function>3</function>
				<start_addr>16438</start_addr> <!-- register 0x4037 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="minimum_load_valve_relay_b"> <!-- PtName MLV_RLY -->
				<function>3</function>
				<start_addr>16439</start_addr> <!-- register 0x4038 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="compressor_b1_feedback"> <!-- PtName K_B1_FBK -->
				<function>3</function>
				<start_addr>16440</start_addr> <!-- register 0x4039 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="compressor_b2_feedback"> <!-- PtName K_B2_FBK -->
				<function>3</function>
				<start_addr>16441</start_addr> <!-- register 0x403A -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			<value_ref_id valid="fan_1_relay"> <!-- PtName FAN_1 -->
				<function>3</function>
				<start_addr>16442</start_addr> <!-- register 0x403B -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			
			<value_ref_id valid="cooling_setpoint_1"> <!-- PtName CSP1 -->
				<function>3</function>
				<start_addr>32767</start_addr> <!-- register 0x8000 -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="cooling_setpoint_2"> <!-- PtName CSP2 -->
				<function>3</function>
				<start_addr>32768</start_addr> <!-- register 0x8001 -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="cooling_setpoint_3"> <!-- PtName CSP3 -->
				<function>3</function>
				<start_addr>32769</start_addr> <!-- register 0x8002 -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<table_ref_id indexid="cooling_setpoint">
				<entry num="0">cooling_setpoint_1</entry>
				<entry num="1">cooling_setpoint_2</entry>
				<entry num="2">cooling_setpoint_3</entry>
			</table_ref_id>
			<value_ref_id valid="cooling_ramp_loading"> <!-- PtName CRAMP -->
				<function>3</function>
				<start_addr>32770</start_addr> <!-- register 0x8003 -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="brine_freeze_point"> <!-- PtName BRN_FRZ -->
				<function>3</function>
				<start_addr>32771</start_addr> <!-- register 0x8004 -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="head_setpoint"> <!-- PtName HSP -->
				<function>3</function>
				<start_addr>32772</start_addr> <!-- register 0x8005 -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="fan_on_setpoint"> <!-- PtName FANONSP -->
				<function>3</function>
				<start_addr>32773</start_addr> <!-- register 0x8006 -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="fan_off_setpoint"> <!-- PtName FANOFFSP -->
				<function>3</function>
				<start_addr>32774</start_addr> <!-- register 0x8007 -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="fan_stage_delta"> <!-- PtName FSTGDLTA -->
				<function>3</function>
				<start_addr>32775</start_addr> <!-- register 0x8008 -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			<value_ref_id valid="base_fan_off_delta_temp"> <!-- PtName B_FANOFF -->
				<function>3</function>
				<start_addr>32776</start_addr> <!-- register 0x8009 -->
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id> 
			
			<value_ref_id valid="ice_build_time_schedule"> <!-- PtName OCCPC01S -->
				<function>3</function>
				<start_addr>36863</start_addr> <!-- register 0x9000 -->
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id> 
			


			<!-- Bulk read for performance. -->
			<packet>
				<function>3</function>
				<start_addr>16383</start_addr>
				<quantity>60</quantity>
			</packet>
			<!-- Splitting these next 3 packets up, because of issues I saw on ISXC 6.1.1 (lost comm).
				 Probably has something to do with ISXCP-4505. -->
			<packet>
				<function>3</function>
				<start_addr>32767</start_addr>
				<quantity>1</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>32768</start_addr>
				<quantity>1</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>32769</start_addr>
				<quantity>1</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>32770</start_addr>
				<quantity>7</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>36863</start_addr>
				<quantity>1</quantity>
			</packet>
		</modbus>
	</protocol>
</APC_DDF>		
