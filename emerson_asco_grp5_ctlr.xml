<?xml version="1.0"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
		ddfid="emerson_asco_grp5_ctlr" ddfname="Emerson ASCO Grp5 Controller" ddfversion="1" canremove="yes">
	<schemaVersion>1.6</schemaVersion>

	<device deviceid="emerson_asco_grp5_ctlr">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		
		<setProductData ruleid="vendordata" field="vendor">Emerson</setProductData>
		<setProductData ruleid="typedata" field="type">Transfer Switch</setProductData>
		<setProductData ruleid="modeldata" field="model">ASCO Group 5 Controller</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

		<stateSensor ruleid="main_on_normal">
			<type>state</type>
			<sensorId>MAIN_ON_NORMAL</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40015</getOid></op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Main on Normal</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="main_on_emergency">
			<type>state</type>
			<sensorId>MAIN_ON_EMERGENCY</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40015</getOid></op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Main on Emergency</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="auxiliary_on_normal">
			<type>state</type>
			<sensorId>AUXILIARY_ON_NORMAL</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40015</getOid></op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Auxiliary on Normal</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="auxiliary_on_emergency">
			<type>state</type>
			<sensorId>AUXILIARY_ON_EMERGENCY</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40015</getOid></op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Auxiliary on Emergency</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="normal_source_available">
			<type>state</type>
			<sensorId>NORMAL_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40015</getOid></op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Normal Source Available</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="emergency_source_available">
			<type>state</type>
			<sensorId>EMERGENCY_SOURCE_AVAILABLE</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40015</getOid></op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Emergency Source Available</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="normal_phase_rotation_is_abc">
			<type>state</type>
			<sensorId>NORMAL_PHASE_ROTATION_IS_ABC</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40016</getOid></op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Normal Phase Rotation is ABC</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="normal_phase_rotation_is_cba">
			<type>state</type>
			<sensorId>NORMAL_PHASE_ROTATION_IS_CBA</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40016</getOid></op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Normal Phase Rotation is CBA</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="emergency_phase_rotation_is_abc">
			<type>state</type>
			<sensorId>EMERGENCY_PHASE_ROTATION_IS_ABC</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40016</getOid></op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Emergency Phase Rotation is ABC</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="emergency_phase_rotation_is_cba">
			<type>state</type>
			<sensorId>EMERGENCY_PHASE_ROTATION_IS_CBA</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40016</getOid></op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Emergency Phase Rotation is CBA</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="engine_exerciser_with_load_active">
			<type>state</type>
			<sensorId>ENGINE_EXERCISER_WITH_LOAD_ACTIVE</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40016</getOid></op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Engine Exerciser with Load Active</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="serial_f17_is_active">
			<type>state</type>
			<sensorId>SERIAL_F17_IS_ACTIVE</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40016</getOid></op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Serial F17 is Active</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="external_f17_is_active">
			<type>state</type>
			<sensorId>EXTERNAL_F17_IS_ACTIVE</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40016</getOid></op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>External F17 is Active</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="normal_source_3_phase_sensing">
			<type>state</type>
			<sensorId>NORMAL_SOURCE_3_PHASE_SENSING</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40026</getOid></op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Normal Source 3 Phase sensing</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="emergency_source_3_phase_sensing">
			<type>state</type>
			<sensorId>EMERGENCY_SOURCE_3_PHASE_SENSING</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40026</getOid></op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Emergency Source 3 Phase sensing</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="transfer_switch_bypass_or_not">
			<type>state</type>
			<sensorId>TRANSFER_SWITCH_BYPASS_OR_NOT</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40026</getOid></op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Transfer Switch Bypass or not</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="transfer_switch_or_dual_breaker">
			<type>state</type>
			<sensorId>TRANSFER_SWITCH_OR_DUAL_BREAKER</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40026</getOid></op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Transfer Switch or Dual Breaker</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="transfer_switch_locked_out">
			<type>state</type>
			<sensorId>TRANSFER_SWITCH_LOCKED_OUT</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40040</getOid></op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Transfer Switch Locked Out</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="ctts_extended_parallel_alarm">
			<type>state</type>
			<sensorId>CTTS_EXTENDED_PARALLEL_ALARM</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40040</getOid></op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>CTTS extended parallel alarm</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="ctts_failure_to_synch_alarm">
			<type>state</type>
			<sensorId>CTTS_FAILURE_TO_SYNCH_ALARM</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40040</getOid></op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>CTTS failure to synch alarm</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="dtts_load_disconnect">
			<type>state</type>
			<sensorId>DTTS_LOAD_DISCONNECT</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40040</getOid></op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>DTTS Load Disconnect</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="external_parameter_lock_is_active">
			<type>state</type>
			<sensorId>EXTERNAL_PARAMETER_LOCK_IS_ACTIVE</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40040</getOid></op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>External parameter lock is active</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="engine_running">
			<type>state</type>
			<sensorId>ENGINE_RUNNING</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40040</getOid></op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Engine running</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="normal_breaker_tripped">
			<type>state</type>
			<sensorId>NORMAL_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40040</getOid></op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Normal Breaker Tripped</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="emergency_breaker_tripped">
			<type>state</type>
			<sensorId>EMERGENCY_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40040</getOid></op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Emergency Breaker Tripped</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_6b">
			<type>state</type>
			<sensorId>FEATURE_6B</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40043</getOid></op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 6B</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_6c">
			<type>state</type>
			<sensorId>FEATURE_6C</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40043</getOid></op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 6C</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_17">
			<type>state</type>
			<sensorId>FEATURE_17</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40043</getOid></op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 17</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_17_serial">
			<type>state</type>
			<sensorId>FEATURE_17_SERIAL</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40043</getOid></op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 17 Serial</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_29">
			<type>state</type>
			<sensorId>FEATURE_29</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40043</getOid></op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 29</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_30">
			<type>state</type>
			<sensorId>FEATURE_30</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40043</getOid></op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 30</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_34a">
			<type>state</type>
			<sensorId>FEATURE_34A</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40043</getOid></op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 34A</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_34b">
			<type>state</type>
			<sensorId>FEATURE_34B</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40043</getOid></op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 34B</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_89">
			<type>state</type>
			<sensorId>FEATURE_89</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40044</getOid></op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 89</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_ct_bypass">
			<type>state</type>
			<sensorId>FEATURE_CT_BYPASS</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40044</getOid></op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature CT Bypass</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_alarm_reset">
			<type>state</type>
			<sensorId>FEATURE_ALARM_RESET</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40044</getOid></op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature Alarm Reset</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_6d">
			<type>state</type>
			<sensorId>FEATURE_6D</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40044</getOid></op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 6D</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_5">
			<type>state</type>
			<sensorId>FEATURE_5</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40044</getOid></op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 5</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_6z">
			<type>state</type>
			<sensorId>FEATURE_6Z</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40044</getOid></op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 6Z</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="feature_34t">
			<type>state</type>
			<sensorId>FEATURE_34T</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40044</getOid></op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>Feature 34T</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="slc_normal_breaker_status">
			<type>state</type>
			<sensorId>SLC_NORMAL_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40101</getOid></op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>SLC Normal Breaker status</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="slc_emergency_breaker_status">
			<type>state</type>
			<sensorId>SLC_EMERGENCY_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="active_inactive-vm">
					<formatNumber>
						<bitwise_and>
							<op>
								<right_shift>
									<op><getOid>register40101</getOid></op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>active_inactive-em</enum>
			<label>SLC Emergency Breaker status</label>
			<sensorSet>Status</sensorSet>
		</stateSensor>

		<valueMap ruleid="active_inactive-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="active_inactive-em">
			<label>Inactive</label>
			<label>Active</label>
			<label>Unknown</label>
		</enumMap>

		<numSensor ruleid="normal_frequency">
			<type>frequency</type>
			<sensorId>NORMAL_FREQUENCY</sensorId>
			<value>
				<getOid>register40013</getOid>
			</value>
			<label>Normal Frequency</label>
			<sensorSet>Frequency</sensorSet>
		</numSensor>

		<numSensor ruleid="emergency_frequency">
			<type>frequency</type>
			<sensorId>EMERGENCY_FREQUENCY</sensorId>
			<value>
				<getOid>register40014</getOid>
			</value>
			<label>Emergency Frequency</label>
			<sensorSet>Frequency</sensorSet>
		</numSensor>

		<numSensor ruleid="normal_voltage_phase_ab">
			<type>voltage</type>
			<sensorId>NORMAL_VOLTAGE_PHASE_AB</sensorId>
			<value>
				<getOid>register40017</getOid>
			</value>
			<label>Normal Voltage Phase AB</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>

		<numSensor ruleid="normal_voltage_phase_bc">
			<type>voltage</type>
			<sensorId>NORMAL_VOLTAGE_PHASE_BC</sensorId>
			<value>
				<getOid>register40018</getOid>
			</value>
			<label>Normal Voltage Phase BC</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>

		<numSensor ruleid="normal_voltage_phase_ca">
			<type>voltage</type>
			<sensorId>NORMAL_VOLTAGE_PHASE_CA</sensorId>
			<value>
				<getOid>register40019</getOid>
			</value>
			<label>Normal Voltage Phase CA</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>

		<numSensor ruleid="normal_voltage_unbalance">
			<type>voltage</type>
			<sensorId>NORMAL_VOLTAGE_UNBALANCE</sensorId>
			<value>
				<getOid>register40020</getOid>
			</value>
			<label>Normal Voltage Unbalance</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>

		<numSensor ruleid="emergency_voltage_phase_ab">
			<type>voltage</type>
			<sensorId>EMERGENCY_VOLTAGE_PHASE_AB</sensorId>
			<value>
				<getOid>register40021</getOid>
			</value>
			<label>Emergency Voltage Phase AB</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>

		<numSensor ruleid="emergency_voltage_phase_bc">
			<type>voltage</type>
			<sensorId>EMERGENCY_VOLTAGE_PHASE_BC</sensorId>
			<value>
				<getOid>register40022</getOid>
			</value>
			<label>Emergency Voltage Phase BC</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>

		<numSensor ruleid="emergency_voltage_phase_ca">
			<type>voltage</type>
			<sensorId>EMERGENCY_VOLTAGE_PHASE_CA</sensorId>
			<value>
				<getOid>register40023</getOid>
			</value>
			<label>Emergency Voltage Phase CA</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>

		<numSensor ruleid="emergency_voltage_unbalance">
			<type>voltage</type>
			<sensorId>EMERGENCY_VOLTAGE_UNBALANCE</sensorId>
			<value>
				<getOid>register40024</getOid>
			</value>
			<label>Emergency Voltage Unbalance</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>

		<numSensor ruleid="nominal_voltage">
			<type>voltage</type>
			<sensorId>NOMINAL_VOLTAGE</sensorId>
			<value>
				<getOid>register40025</getOid>
			</value>
			<label>Nominal Voltage</label>
			<sensorSet>Voltage</sensorSet>
		</numSensor>

		<numSensor ruleid="transfer_switch_amp_rating">
			<type>num</type>
			<sensorId>TRANSFER_SWITCH_AMP_RATING</sensorId>
			<value>
				<getOid>register40027</getOid>
			</value>
			<label>Transfer Switch Amp rating</label>
			<sensorSet>Num</sensorSet>
		</numSensor>

		<numSensor ruleid="control_panel_state">
			<type>num</type>
			<sensorId>CONTROL_PANEL_STATE</sensorId>
			<value>
				<getOid>register40041</getOid>
			</value>
			<label>Control Panel State</label>
			<sensorSet>Num</sensorSet>
		</numSensor>

		<numSensor ruleid="control_panel_status_state_data">
			<type>num</type>
			<sensorId>CONTROL_PANEL_STATUS_STATE_DATA</sensorId>
			<value>
				<getOid>register40042</getOid>
			</value>
			<label>Control Panel Status State Data</label>
			<sensorSet>Num</sensorSet>
		</numSensor>

	</device>

	<protocol>
		<modbus>
			<value_ref_id valid="register40015"> <!-- Main on Normal,Main on Emergency,Auxiliary on Normal,Auxiliary on Emergency,Normal Source Available,Emergency Source Available -->
				<function>3</function>
				<start_addr>14</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40016"> <!-- Normal Phase Rotation is ABC,Normal Phase Rotation is CBA,Emergency Phase Rotation is ABC,Emergency Phase Rotation is CBA,Engine Exerciser with Load Active,Serial F17 is Active,External F17 is Active -->
				<function>3</function>
				<start_addr>15</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40026"> <!-- Normal Source 3 Phase sensing,Emergency Source 3 Phase sensing,Transfer Switch Bypass or not,Transfer Switch or Dual Breaker -->
				<function>3</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40040"> <!-- Transfer Switch Locked Out,CTTS extended parallel alarm,CTTS failure to synch alarm,DTTS Load Disconnect,External parameter lock is active,Engine running,Normal Breaker Tripped,Emergency Breaker Tripped -->
				<function>3</function>
				<start_addr>39</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40043"> <!-- Feature 6B,Feature 6C,Feature 17,Feature 17 Serial,Feature 29,Feature 30,Feature 34A,Feature 34B -->
				<function>3</function>
				<start_addr>42</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40044"> <!-- Feature 89,Feature CT Bypass,Feature Alarm Reset,Feature 6D,Feature 5,Feature 6Z,Feature 34T -->
				<function>3</function>
				<start_addr>43</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40101"> <!-- SLC Normal Breaker status,SLC Emergency Breaker status -->
				<function>3</function>
				<start_addr>100</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40013"> <!-- Normal Frequency -->
				<function>3</function>
				<start_addr>12</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40014"> <!-- Emergency Frequency -->
				<function>3</function>
				<start_addr>13</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40017"> <!-- Normal Voltage Phase AB -->
				<function>3</function>
				<start_addr>16</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40018"> <!-- Normal Voltage Phase BC -->
				<function>3</function>
				<start_addr>17</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40019"> <!-- Normal Voltage Phase CA -->
				<function>3</function>
				<start_addr>18</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40020"> <!-- Normal Voltage Unbalance -->
				<function>3</function>
				<start_addr>19</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40021"> <!-- Emergency Voltage Phase AB -->
				<function>3</function>
				<start_addr>20</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40022"> <!-- Emergency Voltage Phase BC -->
				<function>3</function>
				<start_addr>21</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40023"> <!-- Emergency Voltage Phase CA -->
				<function>3</function>
				<start_addr>22</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40024"> <!-- Emergency Voltage Unbalance -->
				<function>3</function>
				<start_addr>23</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40025"> <!-- Nominal Voltage -->
				<function>3</function>
				<start_addr>24</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40027"> <!-- Transfer Switch Amp rating -->
				<function>3</function>
				<start_addr>26</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40041"> <!-- Control Panel State -->
				<function>3</function>
				<start_addr>40</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register40042"> <!-- Control Panel Status State Data -->
				<function>3</function>
				<start_addr>41</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>

			<packet>
				<function>3</function>
				<start_addr>14</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>39</start_addr>
				<quantity>1</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>42</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>100</start_addr>
				<quantity>1</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>12</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>16</start_addr>
				<quantity>9</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>26</start_addr>
				<quantity>1</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>40</start_addr>
				<quantity>2</quantity>
			</packet>
		</modbus>
	</protocol>
</APC_DDF>
