<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="siemens_sentron_wl_circuit_breaker"
	ddfname="Siemens Sentron WL Circuit Breaker"
	ddfversion="5"
	canremove="yes">
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="siemens_sentron_wl_circuit_breaker">
		<setProductData ruleid="vendordata" field="vendor">Siemens</setProductData>
		<setProductData ruleid="modeldata" field="model">Sentron WL Circuit Breaker</setProductData>
		<setProductData ruleid="typedata" field="type">Power Meter</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<numSensor ruleid="voltage-a-b">
			<type>voltage</type>
			<sensorId>VOLTAGE_A-B</sensorId>
			<value>
				<getOid>VOLTAGE_A-B</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Voltage A-B</label>
			<sensorSet>Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage-b-c">
			<type>voltage</type>
			<sensorId>VOLTAGE_B-C</sensorId>
			<value>
				<getOid>VOLTAGE_B-C</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Voltage B-C</label>
			<sensorSet>Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="voltage-c-a">
			<type>voltage</type>
			<sensorId>VOLTAGE_C-A</sensorId>
			<value>
				<getOid>VOLTAGE_C-A</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Voltage C-A</label>
			<sensorSet>Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="current-a">
			<type>amperage</type>
			<sensorId>CURRENT_A</sensorId>
			<value>
				<getOid>CURRENT_A</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Current A</label>
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="current-b">
			<type>amperage</type>
			<sensorId>CURRENT_B</sensorId>
			<value>
				<getOid>CURRENT_B</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Current B</label>
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="current-c">
			<type>amperage</type>
			<sensorId>CURRENT_C</sensorId>
			<value>
				<getOid>CURRENT_C</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Current C</label>
			<sensorSet>Current Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="frequency">
			<type>frequency</type>
			<sensorId>FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>FREQUENCY</getOid></op>
				<op>0.01</op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Frequency</label>
			<sensorSet>Frequency Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="active-power-a">
			<type>num/powerKW</type>
			<sensorId>ACTIVE_POWER_A</sensorId>
			<value>
				<getOid>ACTIVE_POWER_A</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Active Power A</label>
			<sensorSet>Power Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="active-power-b">
			<type>num/powerKW</type>
			<sensorId>ACTIVE_POWER_B</sensorId>
			<value>
				<getOid>ACTIVE_POWER_B</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Active Power B</label>
			<sensorSet>Power Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="active-power-c">
			<type>num/powerKW</type>
			<sensorId>ACTIVE_POWER_C</sensorId>
			<value>
				<getOid>ACTIVE_POWER_C</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Active Power C</label>
			<sensorSet>Power Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="active-power-total">
			<type>num/powerKW</type>
			<sensorId>ACTIVE_POWER_TOTAL</sensorId>
			<value>
				<getOid>ACTIVE_POWER_TOTAL</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Active Power Total</label>
			<sensorSet>Power Sensors</sensorSet>
		</numSensor>

		<numSensor ruleid="cubicle-temp">
			<type>temp</type>
			<sensorId>CUBICLE_TEMP</sensorId>
			<value>
				<bitwise_and>
				<op>
					<right_shift>
				<op><getOid>CUBICLE_TEMP</getOid></op>
					<op>8</op>
					</right_shift>
				</op>
				<op>255</op>
				</bitwise_and>
			</value>
			<valueInc>1</valueInc>
			<label>Temperature in the Cubicle</label>
			<sensorSet>Temperature Sensors</sensorSet>
		</numSensor>

		<stateSensor ruleid="breaker-open">
			<type>state</type>
			<sensorId>BREAKER_OPEN</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
				<bitwise_and>
				<op>
					<right_shift>
					<op><getOid>REG_413158</getOid></op>
					<op>0</op>
					</right_shift>
				</op>
				<op>1</op>
				</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<enum>trueFalse-em</enum>
			<label>Breaker Open</label>
			<sensorSet>Breaker Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-closed">
			<type>state</type>
			<sensorId>BREAKER_CLOSED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
				<bitwise_and>
				<op>
					<right_shift>
					<op><getOid>REG_413158</getOid></op>
					<op>1</op>
					</right_shift>
				</op>
				<op>1</op>
				</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<enum>trueFalse-em</enum>
			<label>Breaker Closed</label>
			<sensorSet>Breaker Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-tripped">
			<type>state</type>
			<sensorId>BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
				<bitwise_and>
				<op>
					<right_shift>
					<op><getOid>REG_413158</getOid></op>
					<op>2</op>
					</right_shift>
				</op>
				<op>1</op>
				</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<enum>trueFalse-em</enum>
			<label>Breaker Tripped</label>
			<sensorSet>Breaker Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="breaker-ready-to-close">
			<type>state</type>
			<sensorId>BREAKER_READY_TO_CLOSE</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
				<bitwise_and>
				<op>
					<right_shift>
					<op><getOid>REG_413158</getOid></op>
					<op>3</op>
					</right_shift>
				</op>
				<op>1</op>
				</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<enum>trueFalse-em</enum>
			<label>Breaker Ready to Close</label>
			<sensorSet>Breaker Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="aux-release-1">
			<type>state</type>
			<sensorId>AUX_RELEASE_1</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
				<bitwise_and>
				<op>
					<right_shift>
					<op><getOid>REG_413158</getOid></op>
					<op>4</op>
					</right_shift>
				</op>
				<op>1</op>
				</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<enum>trueFalse-em</enum>
			<label>1st Auxiliary Release is Operated</label>
			<sensorSet>Breaker Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="aux-release-2">
			<type>state</type>
			<sensorId>AUX_RELEASE_2</sensorId>
			<value>
				<mapValue mapid="binaryDefaultZero-vm">
				<formatNumber printffmt="%1.0f">
				<bitwise_and>
				<op>
					<right_shift>
					<op><getOid>REG_413158</getOid></op>
					<op>5</op>
					</right_shift>
				</op>
				<op>1</op>
				</bitwise_and>
				</formatNumber>
				</mapValue>
			</value>
			<enum>trueFalse-em</enum>
			<label>2nd Auxiliary Release is Operated</label>
			<sensorSet>Breaker Status</sensorSet>
		</stateSensor>

		<valueMap ruleid="binaryDefaultZero-vm">
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="trueFalse-em">
			<label>False</label>
			<label>True</label>
		</enumMap>

	</device>
	<protocol>
		<modbus>
			<value_ref_id valid="VOLTAGE_A-B">
				<function>3</function>
				<start_addr>24076</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="VOLTAGE_B-C">
				<function>3</function>
				<start_addr>24077</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="VOLTAGE_C-A">
				<function>3</function>
				<start_addr>24078</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CURRENT_A">
				<function>3</function>
				<start_addr>24069</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CURRENT_B">
				<function>3</function>
				<start_addr>24070</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CURRENT_C">
				<function>3</function>
				<start_addr>24071</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="FREQUENCY">
				<function>3</function>
				<start_addr>24117</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="ACTIVE_POWER_A">
				<function>3</function>
				<start_addr>24086</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="ACTIVE_POWER_B">
				<function>3</function>
				<start_addr>24087</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="ACTIVE_POWER_C">
				<function>3</function>
				<start_addr>24088</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="ACTIVE_POWER_TOTAL">
				<function>3</function>
				<start_addr>24085</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="REG_413158">
				<function>3</function>
				<start_addr>13157</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="CUBICLE_TEMP">
				<function>3</function>
				<start_addr>24121</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>
