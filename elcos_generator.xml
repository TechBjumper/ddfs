<?xml version="1.0"?>
<APC_DDF 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="elcos_generator" 
	ddfname="Elcos Generator" 
	ddfversion="2" 
	canremove="yes">
	<schemaVersion>1.6</schemaVersion>

	<device deviceid="elcos_generator">
		<oidMustExist ruleid="elcos_exists" oid="MODBUS_OID_MUST_EXIST"/>
		
		<setProductData ruleid="vendordata" field="vendor">Elcos</setProductData>
		<setProductData ruleid="typedata" field="type">Generator</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

		<valueMap ruleid="off_arrest-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="off_arrest-em">
			<label>Off</label>
			<label>Arrest</label>
			<label>Unknown</label>
		</enumMap>

		<valueMap ruleid="off_cgon-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="off_cgon-em">
			<label>Off</label>
			<label>CG On</label>
			<label>Unknown</label>
		</enumMap>

		<valueMap ruleid="off_genseton-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="off_genseton-em">
			<label>Off</label>
			<label>Genset On</label>
			<label>Unknown</label>
		</enumMap>

		<valueMap ruleid="manual_automatic-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="manual_automatic-em">
			<label>Manual</label>
			<label>Automatic</label>
			<label>Unknown</label>
		</enumMap>

		<valueMap ruleid="off_starton-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="off_starton-em">
			<label>Off</label>
			<label>Start On</label>
			<label>Unknown</label>
		</enumMap>

		<valueMap ruleid="off_cron-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="off_cron-em">
			<label>Off</label>
			<label>CR On</label>
			<label>Unknown</label>
		</enumMap>

		<valueMap ruleid="off_alarm-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="off_alarm-em">
			<label>Off</label>
			<label>Alarm</label>
			<label>Unknown</label>
		</enumMap>

		<valueMap ruleid="off_teston-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="off_teston-em">
			<label>Off</label>
			<label>Test On</label>
			<label>Unknown</label>
		</enumMap>

		<valueMap ruleid="off_crank-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="off_crank-em">
			<label>Off</label>
			<label>Crank</label>
			<label>Unknown</label>
		</enumMap>

		<valueMap ruleid="off_pumpon-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="off_pumpon-em">
			<label>Off</label>
			<label>Pump On</label>
			<label>Unknown</label>
		</enumMap>

		<valueMap ruleid="off_on-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>2</valueOut>
		</valueMap>

		<enumMap ruleid="off_on-em">
			<label>Off</label>
			<label>On</label>
			<label>Unknown</label>
		</enumMap>

		<!-- In ISXC 6.0 there was an issue where, rather than getting 0 or 1 for a coil,
			 we'd see 0 or N (some number greater than 1); mapping N to 1 -->
		<valueMap ruleid="coil-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>*</valueIn><valueOut>1</valueOut>
		</valueMap>

		<stateSensor ruleid="genset_running_in_test_mode">
			<type>state</type>
			<sensorId>GENSET_RUNNING_IN_TEST_MODE</sensorId>
			<value>
				<mapValue mapid="off_teston-vm">
					<mapValue mapid="coil-vm"><getOid>register10001</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_teston-em</enum>
			<label>Genset Running in Test Mode</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="aux_2">
			<type>state</type>
			<sensorId>AUX_2</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10002</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Aux 2</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="aux_1">
			<type>state</type>
			<sensorId>AUX_1</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10003</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Aux 1</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="low_h2o_level">
			<type>state</type>
			<sensorId>LOW_H2O_LEVEL</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10004</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Low H2O Level</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="low_fuel">
			<type>state</type>
			<sensorId>LOW_FUEL</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10005</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Low Fuel</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="high_water_temperature">
			<type>state</type>
			<sensorId>HIGH_WATER_TEMPERATURE</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10006</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>High Water Temperature</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="low_oil_pressure">
			<type>state</type>
			<sensorId>LOW_OIL_PRESSURE</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10007</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Low Oil Pressure</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="dynamo">
			<type>state</type>
			<sensorId>DYNAMO</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10008</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Dynamo</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="master_start">
			<type>state</type>
			<sensorId>MASTER_START</sensorId>
			<value>
				<mapValue mapid="off_starton-vm">
					<mapValue mapid="coil-vm"><getOid>register10009</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_starton-em</enum>
			<label>Master Start</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="presence_of_water_in_fuel">
			<type>state</type>
			<sensorId>PRESENCE_OF_WATER_IN_FUEL</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10010</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Presence of Water in Fuel</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="start-up_in_progress">
			<type>state</type>
			<sensorId>START-UP_IN_PROGRESS</sensorId>
			<value>
				<mapValue mapid="off_crank-vm">
					<mapValue mapid="coil-vm"><getOid>register10011</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_crank-em</enum>
			<label>Start-up in Progress</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="key_on_automatic">
			<type>state</type>
			<sensorId>KEY_ON_AUTOMATIC</sensorId>
			<value>
				<mapValue mapid="manual_automatic-vm">
					<mapValue mapid="coil-vm"><getOid>register10012</getOid></mapValue>
				</mapValue>
			</value>
			<enum>manual_automatic-em</enum>
			<label>Key on Automatic</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="start-up_failed">
			<type>state</type>
			<sensorId>START-UP_FAILED</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10013</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Start-up Failed</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="overspeed">
			<type>state</type>
			<sensorId>OVERSPEED</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10014</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Overspeed</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="emergency_on_board">
			<type>state</type>
			<sensorId>EMERGENCY_ON_BOARD</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10015</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Emergency on Board</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="external_start_active">
			<type>state</type>
			<sensorId>EXTERNAL_START_ACTIVE</sensorId>
			<value>
				<mapValue mapid="off_starton-vm">
					<mapValue mapid="coil-vm"><getOid>register10016</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_starton-em</enum>
			<label>External Start Active</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="stop_command">
			<type>state</type>
			<sensorId>STOP_COMMAND</sensorId>
			<value>
				<mapValue mapid="off_arrest-vm">
					<mapValue mapid="coil-vm"><getOid>register10017</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_arrest-em</enum>
			<label>Stop Command</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="fuel_pump_inserted">
			<type>state</type>
			<sensorId>FUEL_PUMP_INSERTED</sensorId>
			<value>
				<mapValue mapid="off_pumpon-vm">
					<mapValue mapid="coil-vm"><getOid>register10018</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_pumpon-em</enum>
			<label>Fuel Pump Inserted</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="engine_running">
			<type>state</type>
			<sensorId>ENGINE_RUNNING</sensorId>
			<value>
				<mapValue mapid="off_genseton-vm">
					<mapValue mapid="coil-vm"><getOid>register10019</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_genseton-em</enum>
			<label>Engine Running</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="glow_plugs">
			<type>state</type>
			<sensorId>GLOW_PLUGS</sensorId>
			<value>
				<mapValue mapid="off_on-vm">
					<mapValue mapid="coil-vm"><getOid>register10020</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_on-em</enum>
			<label>Glow Plugs</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="maximum_frequency_alarm">
			<type>state</type>
			<sensorId>MAXIMUM_FREQUENCY_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10021</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Maximum Frequency Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="minimum_frequency_alarm">
			<type>state</type>
			<sensorId>MINIMUM_FREQUENCY_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10022</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Minimum Frequency Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="maximum_voltage_alarm">
			<type>state</type>
			<sensorId>MAXIMUM_VOLTAGE_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10023</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Maximum Voltage Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="minimum_voltage_alarm">
			<type>state</type>
			<sensorId>MINIMUM_VOLTAGE_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10024</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Minimum Voltage Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="water_temperature_analogue_alarm">
			<type>state</type>
			<sensorId>WATER_TEMPERATURE_ANALOGUE_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10025</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Water Temperature Analogue Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="fuel_reserve_analogue_alarm">
			<type>state</type>
			<sensorId>FUEL_RESERVE_ANALOGUE_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10026</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Fuel Reserve Analogue Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="overload_analogue_alarm">
			<type>state</type>
			<sensorId>OVERLOAD_ANALOGUE_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10027</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Overload Analogue Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="short_circuit_analogue_alarm">
			<type>state</type>
			<sensorId>SHORT_CIRCUIT_ANALOGUE_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10028</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Short Circuit Analogue Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="minimum_oil_pressare_analogue_alarm">
			<type>state</type>
			<sensorId>MINIMUM_OIL_PRESSARE_ANALOGUE_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10029</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Minimum Oil Pressare Analogue Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="maximum_battery_volt_analogue_alarm">
			<type>state</type>
			<sensorId>MAXIMUM_BATTERY_VOLT_ANALOGUE_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10030</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Maximum Battery Volt Analogue Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="minimum_battery_volt_analogue_alarm">
			<type>state</type>
			<sensorId>MINIMUM_BATTERY_VOLT_ANALOGUE_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10031</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Minimum Battery Volt Analogue Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="minimum_temperature_analogue_alarm">
			<type>state</type>
			<sensorId>MINIMUM_TEMPERATURE_ANALOGUE_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10032</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Minimum Temperature Analogue Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="state_of_commutation_on_genset">
			<type>state</type>
			<sensorId>STATE_OF_COMMUTATION_ON_GENSET</sensorId>
			<value>
				<mapValue mapid="off_cgon-vm">
					<mapValue mapid="coil-vm"><getOid>register10033</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_cgon-em</enum>
			<label>State of Commutation on Genset</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="state_of_commutation_on_mains">
			<type>state</type>
			<sensorId>STATE_OF_COMMUTATION_ON_MAINS</sensorId>
			<value>
				<mapValue mapid="off_cron-vm">
					<mapValue mapid="coil-vm"><getOid>register10034</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_cron-em</enum>
			<label>State of Commutation on Mains</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="signalling_cumulative_alarm">
			<type>state</type>
			<sensorId>SIGNALLING_CUMULATIVE_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10035</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Signalling Cumulative Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="differential_intervention_alarm">
			<type>state</type>
			<sensorId>DIFFERENTIAL_INTERVENTION_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10036</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Differential Intervention Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="failure_to_stop_alarm">
			<type>state</type>
			<sensorId>FAILURE_TO_STOP_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10037</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Failure to Stop Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="maintenance_request_alarm">
			<type>state</type>
			<sensorId>MAINTENANCE_REQUEST_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10038</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Maintenance Request Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="failure_to_send_sms_alarm">
			<type>state</type>
			<sensorId>FAILURE_TO_SEND_SMS_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10039</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Failure to Send SMS Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="can-bus_failure">
			<type>state</type>
			<sensorId>CAN-BUS_FAILURE</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10040</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Can-bus Failure</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="remote_emergency">
			<type>state</type>
			<sensorId>REMOTE_EMERGENCY</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10041</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Remote Emergency</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="forced_stop_alarm">
			<type>state</type>
			<sensorId>FORCED_STOP_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10042</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Forced Stop Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="reverse_power_alarm">
			<type>state</type>
			<sensorId>REVERSE_POWER_ALARM</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10043</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Reverse Power Alarm</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="weekly_test_enabled">
			<type>state</type>
			<sensorId>WEEKLY_TEST_ENABLED</sensorId>
			<value>
				<mapValue mapid="off_teston-vm">
					<mapValue mapid="coil-vm"><getOid>register10044</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_teston-em</enum>
			<label>Weekly Test Enabled</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<stateSensor ruleid="oil_sensor_failure">
			<type>state</type>
			<sensorId>OIL_SENSOR_FAILURE</sensorId>
			<value>
				<mapValue mapid="off_alarm-vm">
					<mapValue mapid="coil-vm"><getOid>register10045</getOid></mapValue>
				</mapValue>
			</value>
			<enum>off_alarm-em</enum>
			<label>Oil Sensor Failure</label>
			<sensorSet>Input Status</sensorSet>
		</stateSensor>

		<numSensor ruleid="triangle_voltage_phase_x-y">
			<type>voltage</type>
			<sensorId>TRIANGLE_VOLTAGE_PHASE_X-Y</sensorId>
			<value>
				<getOid>register30001</getOid>
			</value>
			<label>Triangle Voltage Phase X-Y</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="triangle_voltage_phase_x-z">
			<type>voltage</type>
			<sensorId>TRIANGLE_VOLTAGE_PHASE_X-Z</sensorId>
			<value>
				<getOid>register30002</getOid>
			</value>
			<label>Triangle Voltage Phase X-Z</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="triangle_voltage_phase_y-z">
			<type>voltage</type>
			<sensorId>TRIANGLE_VOLTAGE_PHASE_Y-Z</sensorId>
			<value>
				<getOid>register30003</getOid>
			</value>
			<label>Triangle Voltage Phase Y-Z</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="triangle_voltage_phase_x-neutral">
			<type>voltage</type>
			<sensorId>TRIANGLE_VOLTAGE_PHASE_X-NEUTRAL</sensorId>
			<value>
				<getOid>register30004</getOid>
			</value>
			<label>Triangle Voltage Phase X-NEUTRAL</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="triangle_voltage_phase_y-neutral">
			<type>voltage</type>
			<sensorId>TRIANGLE_VOLTAGE_PHASE_Y-NEUTRAL</sensorId>
			<value>
				<getOid>register30005</getOid>
			</value>
			<label>Triangle Voltage Phase Y-NEUTRAL</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="triangle_voltage_phase_z-neutral">
			<type>voltage</type>
			<sensorId>TRIANGLE_VOLTAGE_PHASE_Z-NEUTRAL</sensorId>
			<value>
				<getOid>register30006</getOid>
			</value>
			<label>Triangle Voltage Phase Z-NEUTRAL</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="current_phase_x">
			<type>amperage</type>
			<sensorId>CURRENT_PHASE_X</sensorId>
			<value>
				<getOid>register30007</getOid>
			</value>
			<label>Current Phase X</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="current_phase_y">
			<type>amperage</type>
			<sensorId>CURRENT_PHASE_Y</sensorId>
			<value>
				<getOid>register30008</getOid>
			</value>
			<label>Current Phase Y</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="current_phase_z">
			<type>amperage</type>
			<sensorId>CURRENT_PHASE_Z</sensorId>
			<value>
				<getOid>register30009</getOid>
			</value>
			<label>Current Phase Z</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="reactive_power">
			<type>num/powerKVAR</type>
			<sensorId>REACTIVE_POWER</sensorId>
			<value>
				<getOid>register30010</getOid>
			</value>
			<label>Reactive Power</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="apparent_power">
			<type>num/powerKVA</type>
			<sensorId>APPARENT_POWER</sensorId>
			<value>
				<getOid>register30011</getOid>
			</value>
			<label>Apparent Power</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="active_power">
			<type>num/powerKW</type>
			<sensorId>ACTIVE_POWER</sensorId>
			<value>
				<getOid>register30012</getOid>
			</value>
			<label>Active Power</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="generator_frequency">
			<type>frequency</type>
			<sensorId>GENERATOR_FREQUENCY</sensorId>
			<value>
				<getOid>register30013</getOid>
			</value>
			<label>Generator Frequency</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="cosfi_power_factor">
			<type>num/powerfactor</type>
			<sensorId>COSFI_POWER_FACTOR</sensorId>
			<value>
				<mult>
					<op><getOid>register30014</getOid></op>
					<op>0.01</op>
				</mult>
			</value>
			<label>Cosfi Power Factor</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="total_produced_power_low">
			<type>num/kwatthr</type>
			<sensorId>TOTAL_PRODUCED_POWER_LOW</sensorId>
			<value>
				<getOid>register30015</getOid>
			</value>
			<label>Total Produced Power (Low)</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="total_produced_power_high">
			<type>num/kwatthr</type>
			<sensorId>TOTAL_PRODUCED_POWER_HIGH</sensorId>
			<value>
				<getOid>register30016</getOid>
			</value>
			<label>Total Produced Power (High)</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="analog_input_terminal_22_%-bar-c">
			<type>num</type>
			<sensorId>ANALOG_INPUT_TERMINAL_22_%-BAR-C</sensorId>
			<value>
				<getOid>register30017</getOid>
			</value>
			<label>Analog Input Terminal 22 (%-Bar-C)</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="fuel_level">
			<type>num</type>
			<units>percent</units>
			<sensorId>FUEL_LEVEL</sensorId>
			<value>
				<getOid>register30018</getOid>
			</value>
			<label>Fuel Level</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="engine_water_temperature">
			<type>temp</type>
			<sensorId>ENGINE_WATER_TEMPERATURE</sensorId>
			<value>
				<getOid>register30019</getOid>
			</value>
			<label>Engine Water Temperature</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="oil_pressure">
			<type>pressure</type>
			<sensorId>OIL_PRESSURE</sensorId>
			<value>
				<mult>
					<op><getOid>register30020</getOid></op>
					<op>10.0</op>
				</mult>
			</value>
			<label>Oil Pressure</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="battery_voltage">
			<type>voltage</type>
			<sensorId>BATTERY_VOLTAGE</sensorId>
			<value>
				<mult>
					<op><getOid>register30021</getOid></op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Battery Voltage</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="total_running_hours">
			<type>timeinhrs</type>
			<sensorId>TOTAL_RUNNING_HOURS</sensorId>
			<value>
				<getOid>register30022</getOid>
			</value>
			<label>Total Running Hours</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="nr._of_performed_start-ups">
			<type>num</type>
			<sensorId>NR._OF_PERFORMED_START-UPS</sensorId>
			<value>
				<getOid>register30023</getOid>
			</value>
			<label>Nr. of Performed Start-ups</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="differential_current">
			<type>num</type>
			<units>milliamps</units>
			<sensorId>DIFFERENTIAL_CURRENT</sensorId>
			<value>
				<getOid>register30024</getOid>
			</value>
			<label>Differential Current</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="hours_to_maintenance">
			<type>timeinhrs</type>
			<sensorId>HOURS_TO_MAINTENANCE</sensorId>
			<value>
				<getOid>register30025</getOid>
			</value>
			<label>Hours to Maintenance</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="instantaneous_consumption_with_can-bus_on_l-h">
			<type>num</type>
			<sensorId>INSTANTANEOUS_CONSUMPTION_WITH_CAN-BUS_ON_L-H</sensorId>
			<value>
				<getOid>register30026</getOid>
			</value>
			<label>Instantaneous Consumption, with Can-bus On (L/h)</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="air_pressure_with_can-bus_on">
			<type>pressure</type>
			<sensorId>AIR_PRESSURE_WITH_CAN-BUS_ON</sensorId>
			<value>
				<mult>
					<op><getOid>register30027</getOid></op>
					<op>0.1</op>
				</mult>
			</value>
			<label>Air Pressure, with Can-bus On</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="engine_speed_with_can-bus_on">
			<type>num</type>
			<units>rpm</units>
			<sensorId>ENGINE_SPEED_WITH_CAN-BUS_ON</sensorId>
			<value>
				<getOid>register30028</getOid>
			</value>
			<label>Engine Speed, with Can-bus On</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="engine_water_level_with_can-bus_on">
			<type>num</type>
			<units>percent</units>
			<sensorId>ENGINE_WATER_LEVEL_WITH_CAN-BUS_ON</sensorId>
			<value>
				<getOid>register30029</getOid>
			</value>
			<label>Engine Water Level, with Can-bus On</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="engine_oil_level_with_can-bus_on">
			<type>num</type>
			<units>percent</units>
			<sensorId>ENGINE_OIL_LEVEL_WITH_CAN-BUS_ON</sensorId>
			<value>
				<getOid>register30030</getOid>
			</value>
			<label>Engine Oil Level, with Can-bus On</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="cooler_temperature_with_can-bus_on">
			<type>temp</type>
			<sensorId>COOLER_TEMPERATURE_WITH_CAN-BUS_ON</sensorId>
			<value>
				<getOid>register30031</getOid>
			</value>
			<label>Cooler Temperature, with Can-bus On</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="spn_alarm_can_1_with_can-bus_on">
			<type>num</type>
			<sensorId>SPN_ALARM_CAN_1_WITH_CAN-BUS_ON</sensorId>
			<value>
				<getOid>register30032</getOid>
			</value>
			<label>Spn Alarm Can 1, with Can-bus On</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="spn_alarm_can_1_with_can-bus_on">
			<type>num</type>
			<sensorId>SPN_ALARM_CAN_1_WITH_CAN-BUS_ON</sensorId>
			<value>
				<getOid>register30033</getOid>
			</value>
			<label>Spn Alarm Can 1, with Can-bus On</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="spn_alarm_can_1_with_can-bus_on">
			<type>num</type>
			<sensorId>SPN_ALARM_CAN_1_WITH_CAN-BUS_ON</sensorId>
			<value>
				<getOid>register30034</getOid>
			</value>
			<label>Spn Alarm Can 1, with Can-bus On</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="spn_alarm_can_1_with_can-bus_on">
			<type>num</type>
			<sensorId>SPN_ALARM_CAN_1_WITH_CAN-BUS_ON</sensorId>
			<value>
				<getOid>register30035</getOid>
			</value>
			<label>Spn Alarm Can 1, with Can-bus On</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="mains_voltage_phase-phase_r-s">
			<type>voltage</type>
			<sensorId>MAINS_VOLTAGE_PHASE-PHASE_R-S</sensorId>
			<value>
				<getOid>register30036</getOid>
			</value>
			<label>Mains Voltage Phase-phase R-S</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="mains_voltage_phase-phase_r-t">
			<type>voltage</type>
			<sensorId>MAINS_VOLTAGE_PHASE-PHASE_R-T</sensorId>
			<value>
				<getOid>register30037</getOid>
			</value>
			<label>Mains Voltage Phase-phase R-T</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

		<numSensor ruleid="mains_voltage_phase-phase_t-s">
			<type>voltage</type>
			<sensorId>MAINS_VOLTAGE_PHASE-PHASE_T-S</sensorId>
			<value>
				<getOid>register30038</getOid>
			</value>
			<label>Mains Voltage Phase-phase T-S</label>
			<sensorSet>Input Registers</sensorSet>
		</numSensor>

	</device>

	<protocol>
		<modbus>
			<value_ref_id valid="register10001"> <!-- Genset running in Test mode -->
				<function>2</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10002"> <!-- Aux 2 -->
				<function>2</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10003"> <!-- Aux 1 -->
				<function>2</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10004"> <!-- Low H2O level -->
				<function>2</function>
				<start_addr>3</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10005"> <!-- Low fuel -->
				<function>2</function>
				<start_addr>4</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10006"> <!-- High water temperature -->
				<function>2</function>
				<start_addr>5</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10007"> <!-- Low oil pressure -->
				<function>2</function>
				<start_addr>6</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10008"> <!-- Dynamo -->
				<function>2</function>
				<start_addr>7</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10009"> <!-- Master start -->
				<function>2</function>
				<start_addr>8</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10010"> <!-- Presence of water in fuel -->
				<function>2</function>
				<start_addr>9</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10011"> <!-- Start-up in progress -->
				<function>2</function>
				<start_addr>10</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10012"> <!-- Key on automatic -->
				<function>2</function>
				<start_addr>11</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10013"> <!-- Start-up failed -->
				<function>2</function>
				<start_addr>12</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10014"> <!-- Overspeed -->
				<function>2</function>
				<start_addr>13</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10015"> <!-- Emergency on board -->
				<function>2</function>
				<start_addr>14</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10016"> <!-- External start active -->
				<function>2</function>
				<start_addr>15</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10017"> <!-- Stop command -->
				<function>2</function>
				<start_addr>16</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10018"> <!-- Fuel pump inserted -->
				<function>2</function>
				<start_addr>17</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10019"> <!-- Engine running -->
				<function>2</function>
				<start_addr>18</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10020"> <!-- Glow plugs -->
				<function>2</function>
				<start_addr>19</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10021"> <!-- Maximum frequency alarm -->
				<function>2</function>
				<start_addr>20</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10022"> <!-- Minimum frequency alarm -->
				<function>2</function>
				<start_addr>21</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10023"> <!-- Maximum voltage alarm -->
				<function>2</function>
				<start_addr>22</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10024"> <!-- Minimum voltage alarm -->
				<function>2</function>
				<start_addr>23</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10025"> <!-- Water temperature analogue alarm -->
				<function>2</function>
				<start_addr>24</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10026"> <!-- Fuel reserve analogue alarm -->
				<function>2</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10027"> <!-- Overload analogue alarm -->
				<function>2</function>
				<start_addr>26</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10028"> <!-- Short circuit analogue alarm -->
				<function>2</function>
				<start_addr>27</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10029"> <!-- Minimum oil pressare analogue alarm -->
				<function>2</function>
				<start_addr>28</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10030"> <!-- Maximum battery volt analogue alarm -->
				<function>2</function>
				<start_addr>29</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10031"> <!-- Minimum battery volt analogue alarm -->
				<function>2</function>
				<start_addr>30</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10032"> <!-- Minimum temperature analogue alarm -->
				<function>2</function>
				<start_addr>31</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10033"> <!-- State of commutation on genset -->
				<function>2</function>
				<start_addr>32</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10034"> <!-- State of commutation on mains -->
				<function>2</function>
				<start_addr>33</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10035"> <!-- Signalling cumulative alarm -->
				<function>2</function>
				<start_addr>34</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10036"> <!-- Differential intervention alarm -->
				<function>2</function>
				<start_addr>35</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10037"> <!-- Failure to stop alarm -->
				<function>2</function>
				<start_addr>36</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10038"> <!-- Maintenance request alarm -->
				<function>2</function>
				<start_addr>37</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10039"> <!-- Failure to send sms alarm -->
				<function>2</function>
				<start_addr>38</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10040"> <!-- Can-bus failure -->
				<function>2</function>
				<start_addr>39</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10041"> <!-- Remote emergency -->
				<function>2</function>
				<start_addr>40</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10042"> <!-- Forced stop alarm -->
				<function>2</function>
				<start_addr>41</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10043"> <!-- Reverse power alarm -->
				<function>2</function>
				<start_addr>42</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10044"> <!-- Weekly test enabled -->
				<function>2</function>
				<start_addr>43</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register10045"> <!-- Oil sensor failure -->
				<function>2</function>
				<start_addr>44</start_addr>
				<quantity>1</quantity>
				<type>coil</type>
			</value_ref_id>
			<value_ref_id valid="register30001"> <!-- Triangle voltage phase X-Y -->
				<function>4</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30002"> <!-- Triangle voltage phase X-Z -->
				<function>4</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30003"> <!-- Triangle voltage phase Y-Z -->
				<function>4</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30004"> <!-- Triangle voltage phase X-NEUTRAL -->
				<function>4</function>
				<start_addr>3</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30005"> <!-- Triangle voltage phase Y-NEUTRAL -->
				<function>4</function>
				<start_addr>4</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30006"> <!-- Triangle voltage phase Z-NEUTRAL -->
				<function>4</function>
				<start_addr>5</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30007"> <!-- Current phase X -->
				<function>4</function>
				<start_addr>6</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30008"> <!-- Current phase Y -->
				<function>4</function>
				<start_addr>7</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30009"> <!-- Current phase Z -->
				<function>4</function>
				<start_addr>8</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30010"> <!-- Reactive power -->
				<function>4</function>
				<start_addr>9</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30011"> <!-- Apparent power -->
				<function>4</function>
				<start_addr>10</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30012"> <!-- Active power -->
				<function>4</function>
				<start_addr>11</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30013"> <!-- Generator frequency -->
				<function>4</function>
				<start_addr>12</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30014"> <!-- Cosfi power factor -->
				<function>4</function>
				<start_addr>13</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30015"> <!-- Total produced power (low) -->
				<function>4</function>
				<start_addr>14</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30016"> <!-- Total produced power (high) -->
				<function>4</function>
				<start_addr>15</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30017"> <!-- Analog input terminal 22 (%-Bar-C) -->
				<function>4</function>
				<start_addr>16</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30018"> <!-- Fuel level -->
				<function>4</function>
				<start_addr>17</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30019"> <!-- Engine water temperature -->
				<function>4</function>
				<start_addr>18</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register30020"> <!-- Oil pressure -->
				<function>4</function>
				<start_addr>19</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30021"> <!-- Battery voltage -->
				<function>4</function>
				<start_addr>20</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30022"> <!-- Total running hours -->
				<function>4</function>
				<start_addr>21</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30023"> <!-- Nr. of performed start-ups -->
				<function>4</function>
				<start_addr>22</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30024"> <!-- Differential current -->
				<function>4</function>
				<start_addr>23</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30025"> <!-- Hours to maintenance -->
				<function>4</function>
				<start_addr>24</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30026"> <!-- Instantaneous consumption, with can-bus on (L/h) -->
				<function>4</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30027"> <!-- Air pressure, with can-bus on -->
				<function>4</function>
				<start_addr>26</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30028"> <!-- Engine speed, with can-bus on -->
				<function>4</function>
				<start_addr>27</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30029"> <!-- Engine water level, with can-bus on -->
				<function>4</function>
				<start_addr>28</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30030"> <!-- Engine oil level, with can-bus on -->
				<function>4</function>
				<start_addr>29</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30031"> <!-- Cooler temperature, with can-bus on -->
				<function>4</function>
				<start_addr>30</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register30032"> <!-- Spn alarm can 1, with can-bus on -->
				<function>4</function>
				<start_addr>31</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30033"> <!-- Spn alarm can 1, with can-bus on -->
				<function>4</function>
				<start_addr>32</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30034"> <!-- Spn alarm can 1, with can-bus on -->
				<function>4</function>
				<start_addr>33</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30035"> <!-- Spn alarm can 1, with can-bus on -->
				<function>4</function>
				<start_addr>34</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30036"> <!-- Mains voltage phase-phase R-S -->
				<function>4</function>
				<start_addr>35</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30037"> <!-- Mains voltage phase-phase R-T -->
				<function>4</function>
				<start_addr>36</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register30038"> <!-- Mains voltage phase-phase T-S -->
				<function>4</function>
				<start_addr>37</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>

			<packet>
				<function>2</function>
				<start_addr>0</start_addr>
				<quantity>45</quantity>
			</packet>

			<packet>
				<function>4</function>
				<start_addr>0</start_addr>
				<quantity>38</quantity>
			</packet>
		</modbus>
	</protocol>
</APC_DDF>
