<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="apc_ddf_1_6.xsl"?>
<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="schneider_electric_twdlcae40drf"
	ddfname="Schneider Electric TWDLCAE40DRF"
	ddfversion="1"
	canremove="yes">
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="schneider_electric_twdlcae40drf">
		<setProductData ruleid="vendordata" field="vendor">Schneider Electric</setProductData>
		<setProductData ruleid="modeldata" field="model">TWDLCAE40DRF</setProductData>
		<setProductData ruleid="typedata" field="type">Generic Device</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<stateSensor ruleid="wapda-source-1-breaker-status">
			<type>state</type>
			<sensorId>WAPDA_SOURCE-1_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>WAPDA_SOURCE-1_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Wapda Source-1 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Wapda Source-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="wapda-source-1-breaker-tripped">
			<type>state</type>
			<sensorId>WAPDA_SOURCE-1_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>WAPDA_SOURCE-1_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Wapda Source-1 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Wapda Source-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="wapda-source-2-breaker-status">
			<type>state</type>
			<sensorId>WAPDA_SOURCE-2_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>WAPDA_SOURCE-2_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Wapda Source-2 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Wapda Source-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="wapda-source-2-breaker-tripped">
			<type>state</type>
			<sensorId>WAPDA_SOURCE-2_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>WAPDA_SOURCE-2_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Wapda Source-2 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Wapda Source-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mobile-generator-breaker-status">
			<type>state</type>
			<sensorId>MOBILE_GENERATOR_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MOBILE_GENERATOR_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Mobile Generator Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Mobile Generator</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mobile-generator-breaker-tripped">
			<type>state</type>
			<sensorId>MOBILE_GENERATOR_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MOBILE_GENERATOR_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Mobile Generator Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Mobile Generator</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bus-coupler-breaker-status">
			<type>state</type>
			<sensorId>BUS_COUPLER_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>BUS_COUPLER_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Bus Coupler Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Bus Coupler</sensorSet>
		</stateSensor>
		<stateSensor ruleid="bus-coupler-breaker-tripped">
			<type>state</type>
			<sensorId>BUS_COUPLER_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>BUS_COUPLER_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Bus Coupler Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Bus Coupler</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-1-ups-1-input-breaker-status">
			<type>state</type>
			<sensorId>SOURCE-1_UPS-1_INPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-1_UPS-1_INPUT_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Source-1 UPS-1 Input Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Source-1 UPS-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-1-ups-1-input-breaker-tripped">
			<type>state</type>
			<sensorId>SOURCE-1_UPS-1_INPUT_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-1_UPS-1_INPUT_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Source-1 UPS-1 Input Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Source-1 UPS-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-1-ups-1-output-breaker-status">
			<type>state</type>
			<sensorId>SOURCE-1_UPS-1_OUTPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-1_UPS-1_OUTPUT_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Source-1 UPS-1 Output Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Source-1 UPS-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-1-ups-1-output-breaker-tripped">
			<type>state</type>
			<sensorId>SOURCE-1_UPS-1_OUTPUT_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-1_UPS-1_OUTPUT_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Source-1 UPS-1 Output Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Source-1 UPS-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-1-mcc-1-input-breaker-status">
			<type>state</type>
			<sensorId>SOURCE-1_MCC-1_INPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-1_MCC-1_INPUT_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Source-1 MCC-1 Input Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Source-1 MCC-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-1-mcc-1-input-breaker-tripped">
			<type>state</type>
			<sensorId>SOURCE-1_MCC-1_INPUT_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-1_MCC-1_INPUT_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Source-1 MCC-1 Input Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Source-1 MCC-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-1-mcc-2-input-breaker-status">
			<type>state</type>
			<sensorId>SOURCE-1_MCC-2_INPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-1_MCC-2_INPUT_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Source-1 MCC-2 Input Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Source-1 MCC-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-1-mcc-2-input-breaker-tripped">
			<type>state</type>
			<sensorId>SOURCE-1_MCC-2_INPUT_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-1_MCC-2_INPUT_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Source-1 MCC-2 Input Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Source-1 MCC-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ups-supply-db-breaker-status">
			<type>state</type>
			<sensorId>UPS_SUPPLY_DB_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>UPS_SUPPLY_DB_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>UPS Supply DB Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>UPS Supply DB</sensorSet>
		</stateSensor>
		<stateSensor ruleid="ups-supply-db-breaker-tripped">
			<type>state</type>
			<sensorId>UPS_SUPPLY_DB_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>UPS_SUPPLY_DB_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>UPS Supply DB Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>UPS Supply DB</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-2-ups-2-output-breaker-status">
			<type>state</type>
			<sensorId>SOURCE-2_UPS-2_OUTPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-2_UPS-2_OUTPUT_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Source-2 UPS-2 Output Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Source-2 UPS-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-2-ups-2-output-breaker-tripped">
			<type>state</type>
			<sensorId>SOURCE-2_UPS-2_OUTPUT_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-2_UPS-2_OUTPUT_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Source-2 UPS-2 Output Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Source-2 UPS-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-2-ups-2-input-breaker-status">
			<type>state</type>
			<sensorId>SOURCE-2_UPS-2_INPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-2_UPS-2_INPUT_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Source-2 UPS-2 Input Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Source-2 UPS-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-2-ups-2-input-breaker-tripped">
			<type>state</type>
			<sensorId>SOURCE-2_UPS-2_INPUT_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-2_UPS-2_INPUT_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Source-2 UPS-2 Input Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Source-2 UPS-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-2-mcc-2-input-breaker-status">
			<type>state</type>
			<sensorId>SOURCE-2_MCC-2_INPUT_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-2_MCC-2_INPUT_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Source-2 MCC-2 Input Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Source-2 MCC-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="source-2-mcc-2-input-breaker-tripped">
			<type>state</type>
			<sensorId>SOURCE-2_MCC-2_INPUT_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SOURCE-2_MCC-2_INPUT_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Source-2 MCC-2 Input Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Source-2 MCC-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-sp-1-breaker-status">
			<type>state</type>
			<sensorId>MCC-1_SP-1_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_SP-1_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-1 SP-1 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-1 SP-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-sp-1-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-1_SP-1_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_SP-1_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-1 SP-1 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-1 SP-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-sp-2-breaker-status">
			<type>state</type>
			<sensorId>MCC-1_SP-2_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_SP-2_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-1 SP-2 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-1 SP-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-sp-2-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-1_SP-2_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_SP-2_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-1 SP-2 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-1 SP-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-inrow-6-breaker-status">
			<type>state</type>
			<sensorId>MCC-1_INROW-6_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_INROW-6_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-1 InRow-6 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-1 InRow-6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-inrow-6-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-1_INROW-6_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_INROW-6_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-1 InRow-6 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-1 InRow-6</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-inrow-4-breaker-status">
			<type>state</type>
			<sensorId>MCC-1_INROW-4_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_INROW-4_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-1 InRow-4 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-1 InRow-4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-inrow-4-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-1_INROW-4_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_INROW-4_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-1 InRow-4 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-1 InRow-4</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-inrow-1-breaker-status">
			<type>state</type>
			<sensorId>MCC-1_INROW-1_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_INROW-1_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-1 InRow-1 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-1 InRow-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-inrow-1-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-1_INROW-1_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_INROW-1_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-1 InRow-1 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-1 InRow-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-source-2-breaker-status">
			<type>state</type>
			<sensorId>MCC-1_SOURCE-2_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_SOURCE-2_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-1 Source-2 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-1 Source-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-source-2-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-1_SOURCE-2_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_SOURCE-2_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-1 Source-2 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-1 Source-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-source-1-breaker-status">
			<type>state</type>
			<sensorId>MCC-1_SOURCE-1_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_SOURCE-1_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-1 Source-1 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-1 Source-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-1-source-1-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-1_SOURCE-1_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-1_SOURCE-1_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-1 Source-1 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-1 Source-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-2-source-1-breaker-status">
			<type>state</type>
			<sensorId>MCC-2_SOURCE-1_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-2_SOURCE-1_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-2 Source-1 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-2 Source-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-2-source-1-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-2_SOURCE-1_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-2_SOURCE-1_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-2 Source-1 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-2 Source-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-2-source-2-breaker-status">
			<type>state</type>
			<sensorId>MCC-2_SOURCE-2_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-2_SOURCE-2_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-2 Source-2 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-2 Source-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-2-source-2-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-2_SOURCE-2_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-2_SOURCE-2_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-2 Source-2 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-2 Source-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-2-inrow-2-breaker-status">
			<type>state</type>
			<sensorId>MCC-2_INROW-2_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-2_INROW-2_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-2 InRow-2 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-2 InRow-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-2-inrow-2-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-2_INROW-2_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-2_INROW-2_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-2 InRow-2 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-2 InRow-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-2-inrow-3-breaker-status">
			<type>state</type>
			<sensorId>MCC-2_INROW-3_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-2_INROW-3_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-2 InRow-3 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-2 InRow-3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-2-inrow-3-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-2_INROW-3_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-2_INROW-3_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-2 InRow-3 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-2 InRow-3</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-2-inrow-5-breaker-status">
			<type>state</type>
			<sensorId>MCC-2_INROW-5_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-2_INROW-5_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>MCC-2 InRow-5 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>MCC-2 InRow-5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mcc-2-inrow-5-breaker-tripped">
			<type>state</type>
			<sensorId>MCC-2_INROW-5_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>MCC-2_INROW-5_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>MCC-2 InRow-5 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>MCC-2 InRow-5</sensorSet>
		</stateSensor>
		<stateSensor ruleid="spare-1-breaker-status">
			<type>state</type>
			<sensorId>SPARE-1_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SPARE-1_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Spare-1 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Spare-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="spare-1-breaker-tripped">
			<type>state</type>
			<sensorId>SPARE-1_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SPARE-1_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Spare-1 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Spare-1</sensorSet>
		</stateSensor>
		<stateSensor ruleid="spare-2-breaker-status">
			<type>state</type>
			<sensorId>SPARE-2_BREAKER_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SPARE-2_BREAKER_STATUS</getOid>
				</mapValue>
			</value>
			<label>Spare-2 Breaker Status</label>
			<enum>breaker-status-em</enum>
			<sensorSet>Spare-2</sensorSet>
		</stateSensor>
		<stateSensor ruleid="spare-2-breaker-tripped">
			<type>state</type>
			<sensorId>SPARE-2_BREAKER_TRIPPED</sensorId>
			<value>
				<mapValue mapid="truefalse-vm">
				<getOid>SPARE-2_BREAKER_TRIPPED</getOid>
				</mapValue>
			</value>
			<label>Spare-2 Breaker Tripped</label>
			<enum>breaker-tripped-em</enum>
			<sensorSet>Spare-2</sensorSet>
		</stateSensor>
		<valueMap ruleid="truefalse-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="breaker-status-em">
			<label>Off</label>
			<label>On</label>
		</enumMap>
		<enumMap ruleid="breaker-tripped-em">
			<label>Normal</label>
			<label>Tripped</label>
		</enumMap>

	</device>
	<protocol>
		<modbus>
			<value_ref_id valid="WAPDA_SOURCE-1_BREAKER_STATUS">
				<function>3</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="WAPDA_SOURCE-1_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="WAPDA_SOURCE-2_BREAKER_STATUS">
				<function>3</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="WAPDA_SOURCE-2_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>3</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MOBILE_GENERATOR_BREAKER_STATUS">
				<function>3</function>
				<start_addr>4</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MOBILE_GENERATOR_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>5</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BUS_COUPLER_BREAKER_STATUS">
				<function>3</function>
				<start_addr>6</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BUS_COUPLER_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>7</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-1_UPS-1_INPUT_BREAKER_STATUS">
				<function>3</function>
				<start_addr>8</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-1_UPS-1_INPUT_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>9</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-1_UPS-1_OUTPUT_BREAKER_STATUS">
				<function>3</function>
				<start_addr>10</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-1_UPS-1_OUTPUT_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>11</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-1_MCC-1_INPUT_BREAKER_STATUS">
				<function>3</function>
				<start_addr>12</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-1_MCC-1_INPUT_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>13</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-1_MCC-2_INPUT_BREAKER_STATUS">
				<function>3</function>
				<start_addr>14</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-1_MCC-2_INPUT_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>15</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="UPS_SUPPLY_DB_BREAKER_STATUS">
				<function>3</function>
				<start_addr>16</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="UPS_SUPPLY_DB_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>17</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-2_UPS-2_OUTPUT_BREAKER_STATUS">
				<function>3</function>
				<start_addr>18</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-2_UPS-2_OUTPUT_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>19</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-2_UPS-2_INPUT_BREAKER_STATUS">
				<function>3</function>
				<start_addr>20</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-2_UPS-2_INPUT_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>21</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-2_MCC-2_INPUT_BREAKER_STATUS">
				<function>3</function>
				<start_addr>22</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SOURCE-2_MCC-2_INPUT_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>23</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			
			
			
			<!--Source-2 MCC-1 Input Breaker Status(24)  and Source-2 MCC-1 Input Breaker Tripped(25)-->
			
			
			
			<value_ref_id valid="MCC-1_SP-1_BREAKER_STATUS">
				<function>3</function>
				<start_addr>26</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_SP-1_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>27</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_SP-2_BREAKER_STATUS">
				<function>3</function>
				<start_addr>28</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_SP-2_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>29</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_INROW-6_BREAKER_STATUS">
				<function>3</function>
				<start_addr>30</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_INROW-6_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>31</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_INROW-4_BREAKER_STATUS">
				<function>3</function>
				<start_addr>32</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			
				
			<value_ref_id valid="MCC-1_INROW-4_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>33</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_INROW-1_BREAKER_STATUS">
				<function>3</function>
				<start_addr>34</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_INROW-1_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>35</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_SOURCE-2_BREAKER_STATUS">
				<function>3</function>
				<start_addr>36</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_SOURCE-2_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>37</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_SOURCE-1_BREAKER_STATUS">
				<function>3</function>
				<start_addr>38</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-1_SOURCE-1_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>39</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-2_SOURCE-1_BREAKER_STATUS">
				<function>3</function>
				<start_addr>40</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-2_SOURCE-1_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>41</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-2_SOURCE-2_BREAKER_STATUS">
				<function>3</function>
				<start_addr>42</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-2_SOURCE-2_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>43</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-2_INROW-2_BREAKER_STATUS">
				<function>3</function>
				<start_addr>44</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-2_INROW-2_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>45</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-2_INROW-3_BREAKER_STATUS">
				<function>3</function>
				<start_addr>46</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-2_INROW-3_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>47</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-2_INROW-5_BREAKER_STATUS">
				<function>3</function>
				<start_addr>48</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MCC-2_INROW-5_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>49</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SPARE-1_BREAKER_STATUS">
				<function>3</function>
				<start_addr>50</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SPARE-1_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>51</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SPARE-2_BREAKER_STATUS">
				<function>3</function>
				<start_addr>52</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SPARE-2_BREAKER_TRIPPED">
				<function>3</function>
				<start_addr>53</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>
