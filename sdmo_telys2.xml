<?xml version="1.0"?>
<!-- Test Modbus related information -->
<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="sdmo_telys2"
	ddfname="SDMO Telys 2"
	ddfversion="4"
	canremove="yes">
		 
	<schemaVersion>1.6</schemaVersion>

	<device deviceid="sdmo_telys2">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<setProductData ruleid="vendordata" field="vendor">SDMO</setProductData>
		<setProductData ruleid="modeldata" field="model">Telys 2</setProductData>
		<setProductData ruleid="typedata" field="type">Modbus Device</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
		
        <valueMap ruleid="inactive_active-vm">
            <valueIn>0</valueIn> <valueOut>0</valueOut>
            <valueIn>*</valueIn> <valueOut>1</valueOut>
        </valueMap>
		
        <enumMap ruleid="inactive_active-em">
            <label>Inactif</label>
            <label>Actif</label>
        </enumMap>
		
        <valueMap ruleid="ok_fault-vm">
            <valueIn>0</valueIn> <valueOut>0</valueOut>
            <valueIn>*</valueIn> <valueOut>1</valueOut>
        </valueMap>
		
        <enumMap ruleid="ok_fault-em">
            <label>Bien</label>
            <label>Faute</label>
        </enumMap>

 		<valueMap ruleid="zerobased2onebased-vm">
			<valueIn>0</valueIn><valueOut>1</valueOut>
			<valueIn>1</valueIn><valueOut>2</valueOut>
			<valueIn>2</valueIn><valueOut>3</valueOut>
			<valueIn>*</valueIn><valueOut>?</valueOut>
		</valueMap>

		<valueMap ruleid="linetoline_phase-vm">
			<valueIn>0</valueIn><valueOut>12</valueOut>
			<valueIn>1</valueIn><valueOut>23</valueOut>
			<valueIn>2</valueIn><valueOut>31</valueOut>
			<valueIn>*</valueIn><valueOut>?</valueOut>
		</valueMap>

  <stateSensor ruleid="demande_de_démarrage_automatique_à_vide_en_cours">
      <type>state</type>
      <sensorId>_DEMANDE_DE_DÉMARRAGE_AUTOMATIQUE_À_VIDE_EN_COURS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Demande de démarrage automatique à vide en cours</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>

		<valueMap ruleid="true_false_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="true_false_em">
			<label>Faux</label>
			<label>Frai</label>
		</enumMap>		
	
	
	
    <stateSensor ruleid="demande_de_démarrage_automatique_en_charge_en_cours">
      <type>state</type>
      <sensorId>_DEMANDE_DE_DÉMARRAGE_AUTOMATIQUE_EN_CHARGE_EN_COURS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Demande de démarrage automatique en charge en cours</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="demande_de_démarrage_manuel_à_vide_en_cours">
      <type>state</type>
      <sensorId>_DEMANDE_DE_DÉMARRAGE_MANUEL_À_VIDE_EN_COURS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Demande de démarrage manuel à vide en cours</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="demande_de_démarrage_manuel_en_charge_en_cours">
      <type>state</type>
      <sensorId>_DEMANDE_DE_DÉMARRAGE_MANUEL_EN_CHARGE_EN_COURS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Demande de démarrage manuel en charge en cours</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="demande_d’arrêt_en_cours">
      <type>state</type>
      <sensorId>_DEMANDE_D’ARRÊT_EN_COURS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Demande d’arrêt en cours</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="demande_d’arrêt_différé_en_cours">
      <type>state</type>
      <sensorId>_DEMANDE_D’ARRÊT_DIFFÉRÉ_EN_COURS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Demande d’arrêt différé en cours</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="groupe_électrogène_arrêté">
      <type>state</type>
      <sensorId>_GROUPE_ÉLECTROGÈNE_ARRÊTÉ</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Groupe électrogène arrêté</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="groupe_électrogène_démarré">
      <type>state</type>
      <sensorId>_GROUPE_ÉLECTROGÈNE_DÉMARRÉ</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Groupe électrogène démarré</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="groupe_électrogène_stabilisé">
      <type>state</type>
      <sensorId>_GROUPE_ÉLECTROGÈNE_STABILISÉ</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Groupe électrogène stabilisé</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="groupe_électrogène_en_charge">
      <type>state</type>
      <sensorId>_GROUPE_ÉLECTROGÈNE_EN_CHARGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Groupe électrogène en charge</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="groupe_électrogène_prêt_à_débiter">
      <type>state</type>
      <sensorId>_GROUPE_ÉLECTROGÈNE_PRÊT_À_DÉBITER</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Groupe électrogène prêt à débiter</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mise_sous_tension_du_contrôle/commande_en_cours">
      <type>state</type>
      <sensorId>_MISE_SOUS_TENSION_DU_CONTRÔLE/COMMANDE_EN_COURS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mise sous tension du contrôle/commande en cours</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="inhibition_sécurités_activée">
      <type>state</type>
      <sensorId>_INHIBITION_SÉCURITÉS_ACTIVÉE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Inhibition sécurités activée</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="marche_automatique_avec_démarrage_sur_ordre_extérieur_de_démarrage">
      <type>state</type>
      <sensorId>_MARCHE_AUTOMATIQUE_AVEC_DÉMARRAGE_SUR_ORDRE_EXTÉRIEUR_DE_DÉMARRAGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Marche automatique avec démarrage sur ordre extérieur de démarrage</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="marche_automatique_avec_démarrage_sur_plage_horaire">
      <type>state</type>
      <sensorId>_MARCHE_AUTOMATIQUE_AVEC_DÉMARRAGE_SUR_PLAGE_HORAIRE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Marche automatique avec démarrage sur plage horaire</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="marche_automatique_avec_démarrage_sur_test">
      <type>state</type>
      <sensorId>_MARCHE_AUTOMATIQUE_AVEC_DÉMARRAGE_SUR_TEST</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Marche automatique avec démarrage sur test</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="auto/manu_inversé_1_:_mode_automatique_/_0_:_mode_manuel">
      <type>state</type>
      <sensorId>_AUTO/MANU_INVERSÉ_1_:_MODE_AUTOMATIQUE_/_0_:_MODE_MANUEL</sensorId>
      <value>
        <mapValue mapid="mode_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>16</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Auto/manu inversé 1 : mode automatique / 0 : mode manuel</label>
      <enum>mode_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
	
		<valueMap ruleid="mode_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="mode_em">
			<label>mode automatique</label>
			<label>mode manuel</label>
		</enumMap>	
	
	
    <stateSensor ruleid="type_de_test_:_0_:_test_à_vide_/_1_:_test_en_charge">
      <type>state</type>
      <sensorId>_TYPE_DE_TEST_:_0_:_TEST_À_VIDE_/_1_:_TEST_EN_CHARGE</sensorId>
      <value>
        <mapValue mapid="test_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>17</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Type de test : 0 : test à vide / 1 : test en charge</label>
      <enum>test_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
	
		<valueMap ruleid="test_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="test_em">
			<label>test à vide</label>
			<label>test en charge</label>
		</enumMap>	
	
    <stateSensor ruleid="démarrage_effectué_sur_plage_horaire">
      <type>state</type>
      <sensorId>_DÉMARRAGE_EFFECTUÉ_SUR_PLAGE_HORAIRE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>18</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Démarrage effectué sur plage horaire</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="pré_alarme_groupe_électrogène_de_sécurité_:_ges">
      <type>state</type>
      <sensorId>_PRÉ_ALARME_GROUPE_ÉLECTROGÈNE_DE_SÉCURITÉ_:_GES</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>19</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Pré alarme groupe électrogène de sécurité : ges</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="ordre_extérieur_de_démarrage">
      <type>state</type>
      <sensorId>_ORDRE_EXTÉRIEUR_DE_DÉMARRAGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>20</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Ordre extérieur de démarrage</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="alarme_générale_(0_:_désactivée_/_1_:_activée)">
      <type>state</type>
      <sensorId>_ALARME_GÉNÉRALE_(0_:_DÉSACTIVÉE_/_1_:_ACTIVÉE)</sensorId>
      <value>
        <mapValue mapid="activate_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>21</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Alarme générale (0 : désactivée / 1 : activée)</label>
      <enum>activate_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
	
		<valueMap ruleid="activate_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="activate_em">
			<label>Désactivée</label>
			<label>Activée</label>
		</enumMap>	
		
    <stateSensor ruleid="défaut_général_(0_:_désactivé_/_1_:_activé)">
      <type>state</type>
      <sensorId>_DÉFAUT_GÉNÉRAL_(0_:_DÉSACTIVÉ_/_1_:_ACTIVÉ)</sensorId>
      <value>
        <mapValue mapid="activate_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>22</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Défaut général (0 : désactivé / 1 : activé)</label>
      <enum>activate_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="défaut_général_avec_arrêt_différé_(0_:_désactivé_/_1_:_activé)">
      <type>state</type>
      <sensorId>_DÉFAUT_GÉNÉRAL_AVEC_ARRÊT_DIFFÉRÉ_(0_:_DÉSACTIVÉ_/_1_:_ACTIVÉ)</sensorId>
      <value>
        <mapValue mapid="activate_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>23</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Défaut général avec arrêt différé (0 : désactivé / 1 : activé)</label>
      <enum>activate_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="automatisme_prêt_à_démarrer">
      <type>state</type>
      <sensorId>_AUTOMATISME_PRÊT_À_DÉMARRER</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>24</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Automatisme prêt à démarrer</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="automatisme_en_séquence_de_démarrage">
      <type>state</type>
      <sensorId>_AUTOMATISME_EN_SÉQUENCE_DE_DÉMARRAGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>25</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Automatisme en séquence de démarrage</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="automatisme_groupe_électrogène_actif">
      <type>state</type>
      <sensorId>_AUTOMATISME_GROUPE_ÉLECTROGÈNE_ACTIF</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>26</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Automatisme groupe électrogène actif</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="automatisme_en_séquence_d’arrêt">
      <type>state</type>
      <sensorId>_AUTOMATISME_EN_SÉQUENCE_D’ARRÊT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>27</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Automatisme en séquence d’arrêt</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="etat_du_klaxon">
      <type>state</type>
      <sensorId>_ETAT_DU_KLAXON</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>28</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Etat du klaxon</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="configuration_de_l’automate_en_cours">
      <type>state</type>
      <sensorId>_CONFIGURATION_DE_L’AUTOMATE_EN_COURS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>29</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Configuration de l’automate en cours</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="défaut_dans_la_configuration">
      <type>state</type>
      <sensorId>_DÉFAUT_DANS_LA_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_256</getOid>
                  </op>
                  <op>30</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Défaut dans la configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
		
        
		<alarmFlags ruleid="genset-alarms1">
			<value><getOid>address0x102</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Alarme générique </activeText>
					<inactiveText>Alarme générique effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme générique  condition existe.</activeText>
					<inactiveText>Alarme générique  condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2">
				<name>
					<activeText>Alarme bac de rétention Alarm</activeText>
					<inactiveText>Alarme bac de rétention Alarm effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Alarme bac de rétention Alarm condition existe.</activeText>
					<inactiveText>Alarme bac de rétention Alarm condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4">
				<name>
					<activeText>Alarme disjonction pompe fuel Alarm 1</activeText>
					<inactiveText>Alarme disjonction pompe fuel Alarm 1 effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme disjonction pompe fuel Alarm 1 condition existe.</activeText>
					<inactiveText>Alarme disjonction pompe fuel Alarm 1 condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8">
				<name>
					<activeText>Alarme disjonction pompe fuel Alarm 2</activeText>
					<inactiveText>Alarme disjonction pompe fuel Alarm 2 effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme disjonction pompe fuel Alarm 2 condition existe.</activeText>
					<inactiveText>Alarme disjonction pompe fuel Alarm 2 condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10">
				<name>
					<activeText>Alarme niveau haut de fuel</activeText>
					<inactiveText>Alarme niveau haut de fuel effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme niveau haut de fuel condition existe.</activeText>
					<inactiveText>Alarme niveau haut de fuel condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20">
				<name>
					<activeText>Alarme niveau très haut de fuel</activeText>
					<inactiveText>Alarme niveau très haut de fuel effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme niveau très haut de fuel condition existe.</activeText>
					<inactiveText>Alarme niveau très haut de fuel condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40">
				<name>
					<activeText>Alarme niveau bas fuel réservoir journalier</activeText>
					<inactiveText>Alarme niveau bas fuel réservoir journalier effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme niveau bas fuel réservoir journalier condition existe.</activeText>
					<inactiveText>Alarme niveau bas fuel réservoir journalier condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80">
				<name>
					<activeText>Alarme pression huile</activeText>
					<inactiveText>Alarme pression huile effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme pression huile condition existe.</activeText>
					<inactiveText>Alarme pression huile condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100">
				<name>
					<activeText>Alarme transmetteur pression huile</activeText>
					<inactiveText>Alarme transmetteur pression huile effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme transmetteur pression huile condition existe.</activeText>
					<inactiveText>Alarme transmetteur pression huile condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200">
				<name>
					<activeText>Alarme température huile</activeText>
					<inactiveText>Alarme température huile effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme température huile condition existe.</activeText>
					<inactiveText>Alarme température huile condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400">
				<name>
					<activeText>Alarme transmetteur température huile</activeText>
					<inactiveText>Alarme transmetteur température huile effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme transmetteur température huile condition existe.</activeText>
					<inactiveText>Alarme transmetteur température huile condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800">
				<name>
					<activeText>Alarme niveau bas huile</activeText>
					<inactiveText>Alarme niveau bas huile effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme niveau bas huile condition existe.</activeText>
					<inactiveText>Alarme niveau bas huile condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000">
				<name>
					<activeText>Alarme température eau HT</activeText>
					<inactiveText>Alarme température eau HT effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme température eau HT condition existe.</activeText>
					<inactiveText>Alarme température eau HT condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000">
				<name>
					<activeText>Alarme température eau BT</activeText>
					<inactiveText>Alarme température eau BT effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme température eau BT condition existe.</activeText>
					<inactiveText>Alarme température eau BT condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000">
				<name>
					<activeText>Alarme transmetteur température eau</activeText>
					<inactiveText>Alarme transmetteur température eau effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme transmetteur température eau condition existe.</activeText>
					<inactiveText>Alarme transmetteur température eau condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000">
				<name>
					<activeText>Alarme manque préchauffage eau</activeText>
					<inactiveText>Alarme manque préchauffage eau effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme manque préchauffage eau condition existe.</activeText>
					<inactiveText>Alarme manque préchauffage eau condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10000" match="10000">
				<name>
					<activeText>Alarme niveau bas eau</activeText>
					<inactiveText>Alarme niveau bas eau effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme niveau bas eau condition existe.</activeText>
					<inactiveText>Alarme niveau bas eau condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20000" match="20000">
				<name>
					<activeText>Alarme niveau bas eau aéro-refroidisseur</activeText>
					<inactiveText>Alarme niveau bas eau aéro-refroidisseur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme niveau bas eau aéro-refroidisseur condition existe.</activeText>
					<inactiveText>Alarme niveau bas eau aéro-refroidisseur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40000" match="40000">
				<name>
					<activeText>Alarme alternateur de charge</activeText>
					<inactiveText>Alarme alternateur de charge effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme alternateur de charge condition existe.</activeText>
					<inactiveText>Alarme alternateur de charge condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80000" match="80000">
				<name>
					<activeText>Alarme général moteur</activeText>
					<inactiveText>Alarme général moteur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme général moteur condition existe.</activeText>
					<inactiveText>Alarme général moteur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100000" match="100000">
				<name>
					<activeText>Alarme surcharge</activeText>
					<inactiveText>Alarme surcharge effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme surcharge condition existe.</activeText>
					<inactiveText>Alarme surcharge condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200000" match="200000">
				<name>
					<activeText>Alarme surcharge court circuit</activeText>
					<inactiveText>Alarme surcharge court circuit effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme surcharge court circuit condition existe.</activeText>
					<inactiveText>Alarme surcharge court circuit condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400000" match="400000">
				<name>
					<activeText>Alarme retour puissance active</activeText>
					<inactiveText>Alarme retour puissance active effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme retour puissance active condition existe.</activeText>
					<inactiveText>Alarme retour puissance active condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800000" match="800000">
				<name>
					<activeText>Alarme retour puissance réactive</activeText>
					<inactiveText>Alarme retour puissance réactive effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme retour puissance réactive condition existe.</activeText>
					<inactiveText>Alarme retour puissance réactive condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000000" match="1000000">
				<name>
					<activeText>Alarme mini tension alternateur</activeText>
					<inactiveText>Alarme mini tension alternateur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme mini tension alternateur condition existe.</activeText>
					<inactiveText>Alarme mini tension alternateur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000000" match="2000000">
				<name>
					<activeText>Alarme maxi tension alternateur</activeText>
					<inactiveText>Alarme maxi tension alternateur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme maxi tension alternateur condition existe.</activeText>
					<inactiveText>Alarme maxi tension alternateur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000000" match="4000000">
				<name>
					<activeText>Alarme mini fréquence alternateur</activeText>
					<inactiveText>Alarme mini fréquence alternateur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme mini fréquence alternateur condition existe.</activeText>
					<inactiveText>Alarme mini fréquence alternateur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000000" match="8000000">
				<name>
					<activeText>Alarme maxii fréquence alternateur</activeText>
					<inactiveText>Alarme maxii fréquence alternateur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme maxii fréquence alternateur condition existe.</activeText>
					<inactiveText>Alarme maxii fréquence alternateur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10000000" match="10000000">
				<name>
					<activeText>Alarme mini tension batterie</activeText>
					<inactiveText>Alarme mini tension batterie effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme mini tension batterie condition existe.</activeText>
					<inactiveText>Alarme mini tension batterie condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20000000" match="20000000">
				<name>
					<activeText>Alarme maxi tension batterie</activeText>
					<inactiveText>Alarme maxi tension batterie effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme maxi tension batterie condition existe.</activeText>
					<inactiveText>Alarme maxi tension batterie condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40000000" match="40000000">
				<name>
					<activeText>Alarme problème rotation de phase</activeText>
					<inactiveText>Alarme problème rotation de phase effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme problème rotation de phase condition existe.</activeText>
					<inactiveText>Alarme problème rotation de phase condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80000000" match="80000000">
				<name>
					<activeText>Alarme branchement transformateur de courant</activeText>
					<inactiveText>Alarme branchement transformateur de courant effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme branchement transformateur de courant condition existe.</activeText>
					<inactiveText>Alarme branchement transformateur de courant condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="genset-alarms2">
			<value><getOid>address0x104</getOid></value>
			<alarmFlagsTest mask="2" match="2">
				<name>
					<activeText>Alarme ordre extérieur de démarrage</activeText>
					<inactiveText>Alarme ordre extérieur de démarrage effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme ordre extérieur de démarrage condition existe.</activeText>
					<inactiveText>Alarme ordre extérieur de démarrage condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4">
				<name>
					<activeText>Alarme arrêt d’urgence</activeText>
					<inactiveText>Alarme arrêt d’urgence effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme arrêt d’urgence condition existe.</activeText>
					<inactiveText>Alarme arrêt d’urgence condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8">
				<name>
					<activeText>Alarme arrêt d’urgence extérieur</activeText>
					<inactiveText>Alarme arrêt d’urgence extérieur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme arrêt d’urgence extérieur condition existe.</activeText>
					<inactiveText>Alarme arrêt d’urgence extérieur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10">
				<name>
					<activeText>Alarme déclenchement contrôleur permanent d’isolement</activeText>
					<inactiveText>Alarme déclenchement contrôleur permanent d’isolement effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme déclenchement contrôleur permanent d’isolement condition existe.</activeText>
					<inactiveText>Alarme déclenchement contrôleur permanent d’isolement condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40">
				<name>
					<activeText>EJP J-1 Alarm</activeText>
					<inactiveText>EJP J-1 Alarm effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A EJP J-1 Alarm condition existe.</activeText>
					<inactiveText>EJP J-1 Alarm condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80">
				<name>
					<activeText>Alarme non démarrage</activeText>
					<inactiveText>Alarme non démarrage effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Alarme non démarrage condition existe.</activeText>
					<inactiveText>Alarme non démarrage condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100">
				<name>
					<activeText>Alarme sur vitesse</activeText>
					<inactiveText>Alarme sur vitesse effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Alarme sur vitesse condition existe.</activeText>
					<inactiveText>Alarme sur vitesse condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200">
				<name>
					<activeText>Alarme sous vitesse</activeText>
					<inactiveText>Alarme sous vitesse effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme sous vitesse condition existe.</activeText>
					<inactiveText>Alarme sous vitesse condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400">
				<name>
					<activeText>Alarme bus CAN 1</activeText>
					<inactiveText>Alarme bus CAN 1 effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme bus CAN 1 condition existe.</activeText>
					<inactiveText>Alarme bus CAN 1 condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800">
				<name>
					<activeText>Alarme bus CAN moteur</activeText>
					<inactiveText>Alarme bus CAN moteur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Alarme bus CAN moteur condition existe.</activeText>
					<inactiveText>Alarme bus CAN moteur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000">
				<name>
					<activeText>Alarme déclenchement relais différentiel</activeText>
					<inactiveText>Alarme déclenchement relais différentiel effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Alarme déclenchement relais différentiel condition existe.</activeText>
					<inactiveText>Alarme déclenchement relais différentielcondition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="genset-faults1">
			<value><getOid>address0x106</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Défaut générique</activeText>
					<inactiveText>Défaut générique effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut générique condition existe.</activeText>
					<inactiveText>Défaut générique condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2">
				<name>
					<activeText>Défaut bac de rétention</activeText>
					<inactiveText>Défaut bac de rétention effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Défaut bac de rétention exists.</activeText>
					<inactiveText>Défaut bac de rétention no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4">
				<name>
					<activeText>Défaut disjonction pompe fuel  1</activeText>
					<inactiveText>Défaut disjonction pompe fuel  1 effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut disjonction pompe fuel  1 condition existe.</activeText>
					<inactiveText>Défaut disjonction pompe fuel  1 condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8">
				<name>
					<activeText>Défaut disjonction pompe fuel  2</activeText>
					<inactiveText>Défaut disjonction pompe fuel  2 effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut disjonction pompe fuel  2 condition existe.</activeText>
					<inactiveText>Défaut disjonction pompe fuel  2 condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10">
				<name>
					<activeText>Défaut niveau haut de fuel</activeText>
					<inactiveText>Défaut niveau haut de fuel effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut niveau haut de fuel condition existe.</activeText>
					<inactiveText>Défaut niveau haut de fuel condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20">
				<name>
					<activeText>Défaut niveau très haut de fuel</activeText>
					<inactiveText>Défaut niveau très haut de fuel effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>Défaut niveau très haut de fuel condition existe.</activeText>
					<inactiveText>Défaut niveau très haut de fuel condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40">
				<name>
					<activeText>Défaut niveau bas fuel réservoir journalier</activeText>
					<inactiveText>Défaut niveau bas fuel réservoir journalier effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut niveau bas fuel réservoir journalier condition existe.</activeText>
					<inactiveText>Défaut niveau bas fuel réservoir journaliercondition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80">
				<name>
					<activeText>Défaut pression huile</activeText>
					<inactiveText>Défaut pression huile effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut pression huile condition existe.</activeText>
					<inactiveText>Défaut pression huile condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100">
				<name>
					<activeText>Défaut transmetteur pression huile</activeText>
					<inactiveText>Défaut transmetteur pression huile effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut transmetteur pression huile condition existe.</activeText>
					<inactiveText>Défaut transmetteur pression huile condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200">
				<name>
					<activeText>Défaut température huile</activeText>
					<inactiveText>Défaut température huile effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut température huile condition existe.</activeText>
					<inactiveText>Défaut température huile condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400">
				<name>
					<activeText>Défaut transmetteur température huile</activeText>
					<inactiveText>Défaut transmetteur température huile effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut transmetteur température huile condition existe.</activeText>
					<inactiveText>Défaut transmetteur température huile condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800">
				<name>
					<activeText>Défaut niveau bas huile</activeText>
					<inactiveText>Défaut niveau bas huile effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut niveau bas huile condition existe.</activeText>
					<inactiveText>Défaut niveau bas huile condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000">
				<name>
					<activeText>Défaut température eau HT</activeText>
					<inactiveText>Défaut température eau HT effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut température eau HT condition existe.</activeText>
					<inactiveText>Défaut température eau HT condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000">
				<name>
					<activeText>Défaut température eau BT</activeText>
					<inactiveText>Défaut température eau BT effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut température eau BT condition existe.</activeText>
					<inactiveText>Défaut température eau BT condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000">
				<name>
					<activeText>Défaut transmetteur température eau</activeText>
					<inactiveText>Défaut transmetteur température eau effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut transmetteur température eau condition existe.</activeText>
					<inactiveText>Défaut transmetteur température eau condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000">
				<name>
					<activeText>Défaut manque préchauffage eau</activeText>
					<inactiveText>Défaut manque préchauffage eau effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut manque préchauffage eau condition existe.</activeText>
					<inactiveText>Défaut manque préchauffage eau condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10000" match="10000">
				<name>
					<activeText>Défaut niveau bas eau</activeText>
					<inactiveText>Défaut niveau bas eau effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut niveau bas eau condition existe.</activeText>
					<inactiveText>Défaut niveau bas eau condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20000" match="20000">
				<name>
					<activeText>Défaut niveau bas eau aéro-refroidisseur</activeText>
					<inactiveText>Défaut niveau bas eau aéro-refroidisseur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut niveau bas eau aéro-refroidisseur condition existe.</activeText>
					<inactiveText>Défaut niveau bas eau aéro-refroidisseur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40000" match="40000">
				<name>
					<activeText>Défaut alternateur de charge</activeText>
					<inactiveText>Défaut alternateur de charge effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut alternateur de charge condition existe.</activeText>
					<inactiveText>Défaut alternateur de charge condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80000" match="80000">
				<name>
					<activeText>Défaut général moteur</activeText>
					<inactiveText>Défaut général moteur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut général moteur condition existe.</activeText>
					<inactiveText>Défaut général moteur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100000" match="100000">
				<name>
					<activeText>Défaut surcharge</activeText>
					<inactiveText>Défaut surcharge effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut surcharge condition existe.</activeText>
					<inactiveText>Défaut surcharge condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200000" match="200000">
				<name>
					<activeText>Défaut surcharge court circuit</activeText>
					<inactiveText>Défaut surcharge court circuit effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut surcharge court circuit condition existe.</activeText>
					<inactiveText>Défaut surcharge court circuit condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400000" match="400000">
				<name>
					<activeText>Défaut retour puissance active</activeText>
					<inactiveText>Défaut retour puissance active effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut retour puissance active condition existe.</activeText>
					<inactiveText>Défaut retour puissance active condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800000" match="800000">
				<name>
					<activeText>Défaut retour puissance réactive</activeText>
					<inactiveText>Défaut retour puissance réactive effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut retour puissance réactive condition existe.</activeText>
					<inactiveText>Défaut retour puissance réactive condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000000" match="1000000">
				<name>
					<activeText>Défaut mini tension alternateur</activeText>
					<inactiveText>Défaut mini tension alternateur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut mini tension alternateur condition existe.</activeText>
					<inactiveText>Défaut mini tension alternateur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000000" match="2000000">
				<name>
					<activeText>Défaut maxi tension alternateur</activeText>
					<inactiveText>Défaut maxi tension alternateur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut maxi tension alternateur condition existe.</activeText>
					<inactiveText>Défaut maxi tension alternateur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000000" match="4000000">
				<name>
					<activeText>Défaut minii tension alternateur</activeText>
					<inactiveText>Défaut minii tension alternateur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut minii tension alternateur condition existe.</activeText>
					<inactiveText>Défaut minii tension alternateur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000000" match="8000000">
				<name>
					<activeText>Défaut maxi tension alternateur</activeText>
					<inactiveText>Défaut maxi tension alternateur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut maxi tension alternateur condition existe.</activeText>
					<inactiveText>Défaut maxi tension alternateur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10000000" match="10000000">
				<name>
					<activeText>Défaut mini tension batterie</activeText>
					<inactiveText>Défaut mini tension batterie effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut mini tension batterie condition existe.</activeText>
					<inactiveText>Défaut mini tension batterie condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20000000" match="20000000">
				<name>
					<activeText>Défaut maxi tension batterie</activeText>
					<inactiveText>Défaut maxi tension batterie effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut maxi tension batterie condition existe.</activeText>
					<inactiveText>Défaut maxi tension batterie condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40000000" match="40000000">
				<name>
					<activeText>Défaut problème rotation de phase</activeText>
					<inactiveText>Défaut problème rotation de phase effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut problème rotation de phase condition existe.</activeText>
					<inactiveText>Défaut problème rotation de phase condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80000000" match="80000000">
				<name>
					<activeText>Défaut branchement transformateur de courant</activeText>
					<inactiveText>Défaut branchement transformateur de courant effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut branchement transformateur de courant condition existe.</activeText>
					<inactiveText>Défaut branchement transformateur de courant condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>	
		
		<alarmFlags ruleid="genset-faults2">
			<value><getOid>address0x108</getOid></value>
			<alarmFlagsTest mask="2" match="2">
				<name>
					<activeText>Défaut ordre extérieur de démarrage</activeText>
					<inactiveText>Défaut ordre extérieur de démarrage effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut ordre extérieur de démarrage condition existe.</activeText>
					<inactiveText>Défaut ordre extérieur de démarrage condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4">
				<name>
					<activeText>Défaut arrêt d’urgence</activeText>
					<inactiveText>Défaut arrêt d’urgence effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut arrêt d’urgence condition existe.</activeText>
					<inactiveText>Défaut arrêt d’urgence condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8">
				<name>
					<activeText>Défaut arrêt d’urgence extérieur</activeText>
					<inactiveText>Défaut arrêt d’urgence extérieur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut arrêt d’urgence extérieur condition existe.</activeText>
					<inactiveText>Défaut arrêt d’urgence extérieur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10">
				<name>
					<activeText>Défaut déclenchement contrôleur permanent d’isolement</activeText>
					<inactiveText>Défaut déclenchement contrôleur permanent d’isolement effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut déclenchement contrôleur permanent d’isolement condition existe.</activeText>
					<inactiveText>Défaut déclenchement contrôleur permanent d’isolement condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40">
				<name>
					<activeText>Défaut EJP J-1 </activeText>
					<inactiveText>Défaut EJP J-1  effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut EJP J-1  condition existe.</activeText>
					<inactiveText>Défaut EJP J-1  condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80">
				<name>
					<activeText>Défaut non démarrage</activeText>
					<inactiveText>Défaut non démarrage effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut non démarrage condition existe.</activeText>
					<inactiveText>Défaut non démarrage condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100">
				<name>
					<activeText>Défaut sur vitesse</activeText>
					<inactiveText>Défaut sur vitesse effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut sur vitesse condition existe.</activeText>
					<inactiveText>Défaut sur vitesse condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200">
				<name>
					<activeText>Défaut sous vitesse</activeText>
					<inactiveText>Défaut sous vitesse effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut sous vitesse condition existe.</activeText>
					<inactiveText>Défaut sous vitesse condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400">
				<name>
					<activeText>Défaut bus CAN 1</activeText>
					<inactiveText>Défaut bus CAN 1 effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut bus CAN 1 condition existe.</activeText>
					<inactiveText>Défaut bus CAN 1 condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800">
				<name>
					<activeText>Défaut bus CAN moteur</activeText>
					<inactiveText>Défaut bus CAN moteur effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut bus CAN moteur condition existe.</activeText>
					<inactiveText>Défaut bus CAN moteur condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000">
				<name>
					<activeText>Défaut déclenchement relais différentiel</activeText>
					<inactiveText>Défaut déclenchement relais différentiel effacé</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Défaut déclenchement relais différentiel condition existe.</activeText>
					<inactiveText>Défaut déclenchement relais différentiel condition ne existe plus.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<!--        
		<stateSensor ruleid="generic_alarm1">
            <type>state</type>
            <sensorId>GENERIC_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>0</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Generic Alarm 1</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="spillcont_alarm1">
            <type>state</type>
            <sensorId>SPILLCONT_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>1</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Holding Tank Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="fuelp1trip_alarm1">
            <type>state</type>
            <sensorId>FUELP1TRIP_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>2</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme disjonction pompe fuel Alarm 1</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="fuelp2trip_alarm1">
            <type>state</type>
            <sensorId>FUELP2TRIP_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>3</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme disjonction pompe fuel Alarm 2</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="hfuellev_alarm1">
            <type>state</type>
            <sensorId>HFUELLEV_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>4</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme niveau haut de fuel</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="vhfuellev_alarm1">
            <type>state</type>
            <sensorId>VHFUELLEV_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>5</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Very Alarme niveau haut de fuel</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="dstlowfuellev_alarm1">
            <type>state</type>
            <sensorId>DSTLOWFUELLEV_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>6</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Low Fuel Level in Daily Tank Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="oilpressure_alarm1">
            <type>state</type>
            <sensorId>OILPRESSURE_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>7</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Oil Pressure Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="oilpressuretrans_alarm1">
            <type>state</type>
            <sensorId>OILPRESSURETRANS_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>8</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme transmetteur pression huile</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="oiltemp_alarm1">
            <type>state</type>
            <sensorId>OILTEMP_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>9</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Oil Temperature Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="oiltemptrans_alarm1">
            <type>state</type>
            <sensorId>OILTEMPTRANS_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>10</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme transmetteur température huile</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="lowoillev_alarm1">
            <type>state</type>
            <sensorId>LOWOILLEV_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>11</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme niveau bas huile</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="watertempht_alarm1">
            <type>state</type>
            <sensorId>WATERTEMPHT_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>12</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme température eau HT</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="watertemplt_alarm1">
            <type>state</type>
            <sensorId>WATERTEMPLT_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>13</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme température eau BT</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="watertemptrans_alarm1">
            <type>state</type>
            <sensorId>WATERTEMPTRANS_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>14</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme transmetteur température eau</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="nowaterpreheat_alarm1">
            <type>state</type>
            <sensorId>NOWATERPREHEAT_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>15</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Water Preheating Insufficient Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="lowwaterlev_alarm1">
            <type>state</type>
            <sensorId>LOWWATERLEV_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>16</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Low Water Level Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="interlowwaterlev_alarm1">
            <type>state</type>
            <sensorId>INTERLOWWATERLEV_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>17</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme niveau bas eau aéro-refroidisseur</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="altcharge_alarm1">
            <type>state</type>
            <sensorId>ALTCHARGE_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>18</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Charging Alternator Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="geneng_alarm1">
            <type>state</type>
            <sensorId>GENENG_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>19</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme général moteur</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="overl_alarm1">
            <type>state</type>
            <sensorId>OVERL_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>20</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Overload Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="scoverl_alarm1">
            <type>state</type>
            <sensorId>SCOVERL_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>21</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Short-Circuit Overload Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="apreturn_alarm1">
            <type>state</type>
            <sensorId>APRETURN_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>22</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Active Power Return Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="rpreturn_alarm1">
            <type>state</type>
            <sensorId>RPRETURN_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>23</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme retour puissance réactive</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="minv_alarm1">
            <type>state</type>
            <sensorId>MINV_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>24</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Alarme mini tension alternateur</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="maxv_alarm1">
            <type>state</type>
            <sensorId>MAXV_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>25</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Max Alternator Voltage Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="minf_alarm1">
            <type>state</type>
            <sensorId>MINF_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>26</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Min Alternator Frequency Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="maxf_alarm1">
            <type>state</type>
            <sensorId>MAXF_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>27</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Max Alternator Frequency Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="battminv_alarm1">
            <type>state</type>
            <sensorId>BATTMINV_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>28</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Min Battery Voltage Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="battmaxv_alarm1">
            <type>state</type>
            <sensorId>BATTMAXV_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>29</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Max Battery Voltage Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="prot_alarm1">
            <type>state</type>
            <sensorId>PROT_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>30</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Phase Rotation Problem Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>

        <stateSensor ruleid="ctconnect_alarm1">
            <type>state</type>
            <sensorId>CTCONNECT_ALARM1</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x102</getOid></op>
                                    <op>31</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Current Transformer Connection Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="stack_alarm2">
            <type>state</type>
            <sensorId>STACK_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>0</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Stack Alarm 2</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="eso_alarm2">
            <type>state</type>
            <sensorId>ESO_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>1</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>External Start-up Command Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="es_alarm2">
            <type>state</type>
            <sensorId>ES_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>2</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Emergency Stop Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="ees_alarm2">
            <type>state</type>
            <sensorId>EES_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>3</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>External Emergency Stop Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="imd_alarm2">
            <type>state</type>
            <sensorId>IMD_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>4</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Permanent Isolation Controller Triggering Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="ecu_alarm2">
            <type>state</type>
            <sensorId>ECU_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>5</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>ECU Alarm 2</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="nonstart_alarm2">
            <type>state</type>
            <sensorId>NONSTART_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>7</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Failure to Start Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="ovspeed_alarm2">
            <type>state</type>
            <sensorId>OVSPEED_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>8</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>OverSpeed Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="unspeed_alarm2">
            <type>state</type>
            <sensorId>UNSPEED_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>9</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>UnderSpeed Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="sosocan_alarm2">
            <type>state</type>
            <sensorId>SOSOCAN_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>10</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>CAN 1 Bus Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="engcan_alarm2">
            <type>state</type>
            <sensorId>ENGCAN_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>11</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Engine CAN Bus Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="watchdog_alarm2">
            <type>state</type>
            <sensorId>WATCHDOG_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>12</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>WatchDog Alarm 2</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="differentialactiv_alarm2">
            <type>state</type>
            <sensorId>DIFFERENTIALACTIV_ALARM2</sensorId>
            <value>
                <mapValue mapid="inactive_active-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x104</getOid></op>
                                    <op>13</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Differential Relay Triggering Alarm</label>
            <enum>inactive_active-em</enum>
            <sensorSet>Alarms</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="watertempht_fault">
            <type>state</type>
            <sensorId>WATERTEMPHT_FAULT</sensorId>
            <value>
                <mapValue mapid="ok_fault-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x106</getOid></op>
                                    <op>12</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Défaut température eau HT</label>
            <enum>ok_fault-em</enum>
            <sensorSet>Faults</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="watertemplt_fault">
            <type>state</type>
            <sensorId>WATERTEMPLT_FAULT</sensorId>
            <value>
                <mapValue mapid="ok_fault-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x106</getOid></op>
                                    <op>13</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Défaut température eau BT</label>
            <enum>ok_fault-em</enum>
            <sensorSet>Faults</sensorSet>
        </stateSensor>
		
        <stateSensor ruleid="lowwaterlev_fault">
            <type>state</type>
            <sensorId>LOWWATERLEV_FAULT</sensorId>
            <value>
                <mapValue mapid="ok_fault-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>address0x106</getOid></op>
                                    <op>16</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
            </value>
            <label>Low Water Level Fault</label>
            <enum>ok_fault-em</enum>
            <sensorSet>Faults</sensorSet>
        </stateSensor>
		-->
		
		<numSensor ruleid="oil_pressure">
			<type>pressure</type>
			<sensorId>OIL_PRESSURE</sensorId>
			<value>
				<mult>
					<op>10</op> <!-- 0.1 bar to kPa -->
					<op><getOid>address0x200</getOid></op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Pression huile</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="lub_oil_temp">
			<type>temp</type>
			<sensorId>LUB_OIL_TEMP</sensorId>
			<value>
				<getOid>address0x201</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Température huile</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="ht_coolant_temp">
			<type>temp</type>
			<sensorId>HT_COOLANT_TEMP</sensorId>
			<value>
				<getOid>address0x202</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Température eau HT</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="lt_coolant_temp">
			<type>temp</type>
			<sensorId>LT_COOLANT_TEMP</sensorId>
			<value>
				<getOid>address0x203</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Température eau BT</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="fuel_level">
			<type>num</type>
			<units>percent</units>
			<sensorId>FUEL_LEVEL</sensorId>
			<value>
				<getOid>address0x204</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Niveau fuel</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="battery_ammeter">
			<type>amperage</type>
			<sensorId>BATTERY_AMMETER</sensorId>
			<value>
				<getOid>address0x205</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Ampèremètre batterie</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="battery_voltage">
			<type>voltage</type>
			<sensorId>BATTERY_VOLTAGE</sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getOid>address0x206</getOid></op>
				</mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>Tension batterie</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="current_ph" index="addresses0x207-0x20B">
			<type>amperage</type>
			<sensorId>CURRENT_<mapValue mapid="zerobased2onebased-vm"><rowNumber/></mapValue></sensorId>
			<value>
				<mult>
					<op>0.001</op>
					<op><getRowOid>addresses0x207-0x20B</getRowOid></op>
				</mult>
			</value>
			<valueInc>0.001</valueInc>
			<label>Courant <mapValue mapid="zerobased2onebased-vm"><rowNumber/></mapValue></label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="current_n">
			<type>amperage</type>
			<sensorId>CURRENT_N</sensorId>
			<value>
				<mult>
					<op>0.001</op>
					<op><getOid>address0x20D</getOid></op>
				</mult>
			</value>
			<valueInc>0.001</valueInc>
			<label>Courant N</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="voltage_l2l_ph" index="addresses0x20F-0x213">
			<type>voltage</type>
			<sensorId>VOLTAGE_L2L_<mapValue mapid="zerobased2onebased-vm"><rowNumber/></mapValue></sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getRowOid>addresses0x20F-0x213</getRowOid></op>
				</mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>Tension L2L U<mapValue mapid="linetoline_phase-vm"><rowNumber/></mapValue></label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="voltage_ph" index="addresses0x215-0x219">
			<type>voltage</type>
			<sensorId>VOLTAGE_<mapValue mapid="zerobased2onebased-vm"><rowNumber/></mapValue></sensorId>
			<value>
				<mult>
					<op>0.1</op>
					<op><getRowOid>addresses0x215-0x219</getRowOid></op>
				</mult>
			</value>
			<valueInc>0.1</valueInc>
			<label>Tension <mapValue mapid="zerobased2onebased-vm"><rowNumber/></mapValue></label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="engine_frequency">
			<type>frequency</type>
			<sensorId>ENGINE_FREQUENCY</sensorId>
			<value>
				<mult>
					<op>0.01</op>
					<op><getOid>address0x21B</getOid></op>
				</mult>
			</value>
			<valueInc>0.01</valueInc>
			<label>Fréquence de la tension alternateur</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="engine_speed">
			<type>num</type>
			<units>rpm</units>
			<sensorId>ENGINE_SPEED</sensorId>
			<value>
				<getOid>address0x21C</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Vitesse moteur</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="power_p">
			<type>num/powerKW</type>
			<sensorId>POWER_P</sensorId>
			<value>
				<mult>
					<op>0.0001</op> <!-- 0.1W to kW -->
					<op><getOid>address0x21D</getOid></op>
				</mult>
			</value>
			<valueInc>0.0001</valueInc>
			<label>Puissance réelle (P)</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="power_q">
			<type>num/powerKVAR</type>
			<sensorId>POWER_Q</sensorId>
			<value>
				<mult>
					<op>0.0001</op> <!-- 0.1VAR to kVAR -->
					<op><getOid>address0x21F</getOid></op>
				</mult>
			</value>
			<valueInc>0.0001</valueInc>
			<label>Puissance réactive (Q)</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="power_s">
			<type>num/powerKVA</type>
			<sensorId>POWER_S</sensorId>
			<value>
				<mult>
					<op>0.0001</op> <!-- 0.1VA to kVA -->
					<op><getOid>address0x221</getOid></op>
				</mult>
			</value>
			<valueInc>0.0001</valueInc>
			<label>Puissance apparente (S)</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="powerfactor">
			<type>num/powerfactor</type>
			<sensorId>POWERFACTOR</sensorId>
			<value>
                <formatNumber>
                    <right_shift>
                        <op><getOid>address0x223</getOid></op>
                        <op>8</op>
                    </right_shift>
				</formatNumber>
			</value>
			<valueInc>1</valueInc>
			<label>Facteur de puissance</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>

    <stateSensor ruleid="facteur_de_puissance_inductif_ou_capacitif">
      <type>num</type>
      <sensorId>_FACTEUR_DE_PUISSANCE_INDUCTIF_OU_CAPACITIF</sensorId>
      <value>
        <mapValue mapid="induct_cap_vm">
          <getOid>Function_3_Reg_548</getOid>
        </mapValue>
      </value>
      <label>Facteur de puissance inductif ou capacitif</label>
      <enum>induct_cap_vm</enum>
      <sensorSet>général</sensorSet>
    </stateSensor>
	
		<valueMap ruleid="induct_cap_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="induct_cap_em">
			<label>Inductifnductif</label>
			<label>Capacitif</label>
		</enumMap>			

   <numSensor ruleid="compteur_horaire_partiel">
      <type>timeinsec</type>
      <units />
      <sensorId>_COMPTEUR_HORAIRE_PARTIEL</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_549</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Compteur horaire partiel</label>
      <sensorSet>général</sensorSet>
    </numSensor>
    <numSensor ruleid="compteur_horaire_total">
      <type>timeinsec</type>
      <units />
      <sensorId>_COMPTEUR_HORAIRE_TOTAL</sensorId>
      <value>
        <mult>
          <op>
            <getOid>Function_3_Reg_551</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>Compteur horaire total</label>
      <sensorSet>général</sensorSet>
    </numSensor>		
		
		
		<numSensor ruleid="partial_active_energy_counter">
			<type>num/kwatthr</type>
			<sensorId>PARTIAL_ACTIVE_ENERGY_COUNTER</sensorId>
			<value>
				<getOid>address0x229</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Compteur d’énergie active partiel</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="total_active_energy_counter">
			<type>num/kwatthr</type>
			<sensorId>TOTAL_ACTIVE_ENERGY_COUNTER</sensorId>
			<value>
				<getOid>address0x22B</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Compteur d’énergie active total</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="partial_reactive_energy_counter">
			<type>num/kwatthr</type>
			<sensorId>PARTIAL_REACTIVE_ENERGY_COUNTER</sensorId>
			<value>
				<getOid>address0x22D</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Compteur d’énergie réactive partiel</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
		
		<numSensor ruleid="total_reactive_energy_counter">
			<type>num/kwatthr</type>
			<sensorId>TOTAL_REACTIVE_ENERGY_COUNTER</sensorId>
			<value>
				<getOid>address0x22F</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Compteur d’énergie réactive total</label>
			<sensorSet>Measurements</sensorSet>
		</numSensor>
				
				
    <stateSensor ruleid="elh_01_:_ordre_extérieur_de_démarrage">
      <type>state</type>
      <sensorId>_ELH_01_:_ORDRE_EXTÉRIEUR_DE_DÉMARRAGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 01 : ordre extérieur de démarrage</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_02_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_02_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 02 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_03_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_03_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 03 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_04_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_04_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 04 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_05_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_05_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 05 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_06_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_06_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 06 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_07_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_07_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 07 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_08_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_08_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 08 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_09_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_09_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 09 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_10_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_10_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 10 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_11_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_11_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 11 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_12_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_12_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 12 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_13_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_13_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 13 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_14_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_14_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 14 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_15_:_suivant_configuration">
      <type>state</type>
      <sensorId>_ELH_15_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 15 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_16_:_arrêt_d’urgence">
      <type>state</type>
      <sensorId>_ELH_16_:_ARRÊT_D’URGENCE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 16 : arrêt d’urgence</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="elh_17_:_arrêt_d’urgence_extérieur">
      <type>state</type>
      <sensorId>_ELH_17_:_ARRÊT_D’URGENCE_EXTÉRIEUR</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_768</getOid>
                  </op>
                  <op>16</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Elh 17 : arrêt d’urgence extérieur</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="slh_01_:_suivant_configuration">
      <type>state</type>
      <sensorId>_SLH_01_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_770</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Slh 01 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="slh_02_:_suivant_configuration">
      <type>state</type>
      <sensorId>_SLH_02_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_770</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Slh 02 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="slh_03_:_suivant_configuration">
      <type>state</type>
      <sensorId>_SLH_03_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_770</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Slh 03 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="slh_04_:_suivant_configuration">
      <type>state</type>
      <sensorId>_SLH_04_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_770</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Slh 04 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="slh_05_:_suivant_configuration">
      <type>state</type>
      <sensorId>_SLH_05_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_770</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Slh 05 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="slh_06_:_suivant_configuration">
      <type>state</type>
      <sensorId>_SLH_06_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_770</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Slh 06 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="slh_07_:_suivant_configuration">
      <type>state</type>
      <sensorId>_SLH_07_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_770</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Slh 07 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="slh_08_:_suivant_configuration">
      <type>state</type>
      <sensorId>_SLH_08_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_770</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Slh 08 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="slh_09_:_commande_démarreur_1">
      <type>state</type>
      <sensorId>_SLH_09_:_COMMANDE_DÉMARREUR_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_770</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Slh 09 : commande démarreur 1</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="slh_10_:_suivant_configuration">
      <type>state</type>
      <sensorId>_SLH_10_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_770</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Slh 10 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="slh_11_:_suivant_configuration">
      <type>state</type>
      <sensorId>_SLH_11_:_SUIVANT_CONFIGURATION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_770</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Slh 11 : suivant configuration</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_1_du_module_entrées/sorties_numéro_1">
      <type>state</type>
      <sensorId>_ENTRÉE_1_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 1 du module entrées/sorties numéro 1</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_2_du_module_entrées/sorties_numéro_1">
      <type>state</type>
      <sensorId>_ENTRÉE_2_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 2 du module entrées/sorties numéro 1</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_3_du_module_entrées/sorties_numéro_1">
      <type>state</type>
      <sensorId>_ENTRÉE_3_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 3 du module entrées/sorties numéro 1</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_4_du_module_entrées/sorties_numéro_1">
      <type>state</type>
      <sensorId>_ENTRÉE_4_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 4 du module entrées/sorties numéro 1</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_1_du_module_entrées/sorties_numéro_1">
      <type>state</type>
      <sensorId>_SORTIE_1_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 1 du module entrées/sorties numéro 1</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_2_du_module_entrées/sorties_numéro_1">
      <type>state</type>
      <sensorId>_SORTIE_2_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 2 du module entrées/sorties numéro 1</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_3_du_module_entrées/sorties_numéro_1">
      <type>state</type>
      <sensorId>_SORTIE_3_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 3 du module entrées/sorties numéro 1</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_4_du_module_entrées/sorties_numéro_1">
      <type>state</type>
      <sensorId>_SORTIE_4_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 4 du module entrées/sorties numéro 1</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_5_du_module_entrées/sorties_numéro_1">
      <type>state</type>
      <sensorId>_SORTIE_5_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 5 du module entrées/sorties numéro 1</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_6_du_module_entrées/sorties_numéro_1">
      <type>state</type>
      <sensorId>_SORTIE_6_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_1</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 6 du module entrées/sorties numéro 1</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_1_du_module_entrées/sorties_numéro_2">
      <type>state</type>
      <sensorId>_ENTRÉE_1_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_2</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>16</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 1 du module entrées/sorties numéro 2</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_2_du_module_entrées/sorties_numéro_2">
      <type>state</type>
      <sensorId>_ENTRÉE_2_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_2</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>17</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 2 du module entrées/sorties numéro 2</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_3_du_module_entrées/sorties_numéro_2">
      <type>state</type>
      <sensorId>_ENTRÉE_3_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_2</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>18</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 3 du module entrées/sorties numéro 2</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_4_du_module_entrées/sorties_numéro_2">
      <type>state</type>
      <sensorId>_ENTRÉE_4_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_2</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>19</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 4 du module entrées/sorties numéro 2</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_1_du_module_entrées/sorties_numéro_2">
      <type>state</type>
      <sensorId>_SORTIE_1_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_2</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>20</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 1 du module entrées/sorties numéro 2</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_2_du_module_entrées/sorties_numéro_2">
      <type>state</type>
      <sensorId>_SORTIE_2_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_2</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>21</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 2 du module entrées/sorties numéro 2</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_3_du_module_entrées/sorties_numéro_2">
      <type>state</type>
      <sensorId>_SORTIE_3_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_2</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>22</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 3 du module entrées/sorties numéro 2</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_4_du_module_entrées/sorties_numéro_2">
      <type>state</type>
      <sensorId>_SORTIE_4_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_2</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>23</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 4 du module entrées/sorties numéro 2</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_5_du_module_entrées/sorties_numéro_2">
      <type>state</type>
      <sensorId>_SORTIE_5_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_2</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>24</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 5 du module entrées/sorties numéro 2</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_6_du_module_entrées/sorties_numéro_2">
      <type>state</type>
      <sensorId>_SORTIE_6_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_2</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_772</getOid>
                  </op>
                  <op>25</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 6 du module entrées/sorties numéro 2</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_1_du_module_entrées/sorties_numéro_3">
      <type>state</type>
      <sensorId>_ENTRÉE_1_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_3</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 1 du module entrées/sorties numéro 3</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_2_du_module_entrées/sorties_numéro_3">
      <type>state</type>
      <sensorId>_ENTRÉE_2_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_3</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 2 du module entrées/sorties numéro 3</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_3_du_module_entrées/sorties_numéro_3">
      <type>state</type>
      <sensorId>_ENTRÉE_3_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_3</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 3 du module entrées/sorties numéro 3</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_4_du_module_entrées/sorties_numéro_3">
      <type>state</type>
      <sensorId>_ENTRÉE_4_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_3</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 4 du module entrées/sorties numéro 3</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_1_du_module_entrées/sorties_numéro_3">
      <type>state</type>
      <sensorId>_SORTIE_1_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_3</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 1 du module entrées/sorties numéro 3</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_2_du_module_entrées/sorties_numéro_3">
      <type>state</type>
      <sensorId>_SORTIE_2_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_3</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 2 du module entrées/sorties numéro 3</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_3_du_module_entrées/sorties_numéro_3">
      <type>state</type>
      <sensorId>_SORTIE_3_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_3</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 3 du module entrées/sorties numéro 3</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_4_du_module_entrées/sorties_numéro_3">
      <type>state</type>
      <sensorId>_SORTIE_4_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_3</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 4 du module entrées/sorties numéro 3</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_5_du_module_entrées/sorties_numéro_3">
      <type>state</type>
      <sensorId>_SORTIE_5_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_3</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 5 du module entrées/sorties numéro 3</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_6_du_module_entrées/sorties_numéro_3">
      <type>state</type>
      <sensorId>_SORTIE_6_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_3</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 6 du module entrées/sorties numéro 3</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_1_du_module_entrées/sorties_numéro_4">
      <type>state</type>
      <sensorId>_ENTRÉE_1_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_4</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>16</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 1 du module entrées/sorties numéro 4</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_2_du_module_entrées/sorties_numéro_4">
      <type>state</type>
      <sensorId>_ENTRÉE_2_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_4</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>17</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 2 du module entrées/sorties numéro 4</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_3_du_module_entrées/sorties_numéro_4">
      <type>state</type>
      <sensorId>_ENTRÉE_3_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_4</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>18</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 3 du module entrées/sorties numéro 4</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_4_du_module_entrées/sorties_numéro_4">
      <type>state</type>
      <sensorId>_ENTRÉE_4_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_4</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>19</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 4 du module entrées/sorties numéro 4</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_1_du_module_entrées/sorties_numéro_4">
      <type>state</type>
      <sensorId>_SORTIE_1_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_4</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>20</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 1 du module entrées/sorties numéro 4</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_2_du_module_entrées/sorties_numéro_4">
      <type>state</type>
      <sensorId>_SORTIE_2_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_4</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>21</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 2 du module entrées/sorties numéro 4</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_3_du_module_entrées/sorties_numéro_4">
      <type>state</type>
      <sensorId>_SORTIE_3_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_4</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>22</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 3 du module entrées/sorties numéro 4</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_4_du_module_entrées/sorties_numéro_4">
      <type>state</type>
      <sensorId>_SORTIE_4_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_4</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>23</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 4 du module entrées/sorties numéro 4</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_5_du_module_entrées/sorties_numéro_4">
      <type>state</type>
      <sensorId>_SORTIE_5_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_4</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>24</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 5 du module entrées/sorties numéro 4</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_6_du_module_entrées/sorties_numéro_4">
      <type>state</type>
      <sensorId>_SORTIE_6_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_4</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_774</getOid>
                  </op>
                  <op>25</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 6 du module entrées/sorties numéro 4</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_1_du_module_entrées/sorties_numéro_5">
      <type>state</type>
      <sensorId>_ENTRÉE_1_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_5</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_776</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 1 du module entrées/sorties numéro 5</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_2_du_module_entrées/sorties_numéro_5">
      <type>state</type>
      <sensorId>_ENTRÉE_2_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_5</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_776</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 2 du module entrées/sorties numéro 5</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_3_du_module_entrées/sorties_numéro_5">
      <type>state</type>
      <sensorId>_ENTRÉE_3_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_5</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_776</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 3 du module entrées/sorties numéro 5</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="entrée_4_du_module_entrées/sorties_numéro_5">
      <type>state</type>
      <sensorId>_ENTRÉE_4_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_5</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_776</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Entrée 4 du module entrées/sorties numéro 5</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_1_du_module_entrées/sorties_numéro_5">
      <type>state</type>
      <sensorId>_SORTIE_1_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_5</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_776</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 1 du module entrées/sorties numéro 5</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_2_du_module_entrées/sorties_numéro_5">
      <type>state</type>
      <sensorId>_SORTIE_2_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_5</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_776</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 2 du module entrées/sorties numéro 5</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_3_du_module_entrées/sorties_numéro_5">
      <type>state</type>
      <sensorId>_SORTIE_3_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_5</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_776</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 3 du module entrées/sorties numéro 5</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_4_du_module_entrées/sorties_numéro_5">
      <type>state</type>
      <sensorId>_SORTIE_4_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_5</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_776</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 4 du module entrées/sorties numéro 5</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_5_du_module_entrées/sorties_numéro_5">
      <type>state</type>
      <sensorId>_SORTIE_5_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_5</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_776</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 5 du module entrées/sorties numéro 5</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
    <stateSensor ruleid="sortie_6_du_module_entrées/sorties_numéro_5">
      <type>state</type>
      <sensorId>_SORTIE_6_DU_MODULE_ENTRÉES/SORTIES_NUMÉRO_5</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>Function_3_Reg_776</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Sortie 6 du module entrées/sorties numéro 5</label>
      <enum>true_false_em</enum>
      <sensorSet>capteurs d'état</sensorSet>
    </stateSensor>
				
				
				
	</device>

	<protocol>
		<modbus>
			<!--
			<type_definition type_name="little_endian_uint32">
				<type>uint_32</type>
				<byte_order>0,1,2,3</byte_order>
			</type_definition>
			<type_definition type_name="little_endian_uint16">
				<type>uint_16</type>
				<byte_order>0,1</byte_order>
			</type_definition>
			-->
			
	  <value_ref_id valid="Function_3_Reg_256">
        <function>3</function>
        <start_addr>255</start_addr>
        <quantity>2</quantity>
         <type>uint_32</type>
      </value_ref_id>

      <value_ref_id valid="Function_3_Reg_548">
        <function>3</function>
        <start_addr>547</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="Function_3_Reg_549">
        <function>3</function>
        <start_addr>548</start_addr>
        <quantity>2</quantity>
         <type>uint_32</type>
      </value_ref_id>

      <value_ref_id valid="Function_3_Reg_551">
        <function>3</function>
        <start_addr>550</start_addr>
        <quantity>2</quantity>
         <type>uint_32</type>
		</value_ref_id>

		<value_ref_id valid="Function_3_Reg_768">
        <function>3</function>
        <start_addr>767</start_addr>
        <quantity>2</quantity>
         <type>uint_32</type>
      </value_ref_id>

      <value_ref_id valid="Function_3_Reg_770">
        <function>3</function>
        <start_addr>769</start_addr>
        <quantity>2</quantity>
         <type>uint_32</type>
      </value_ref_id>

      <value_ref_id valid="Function_3_Reg_772">
        <function>3</function>
        <start_addr>771</start_addr>
        <quantity>2</quantity>
         <type>uint_32</type>
      </value_ref_id>

      <value_ref_id valid="Function_3_Reg_774">
        <function>3</function>
        <start_addr>773</start_addr>
        <quantity>2</quantity>
         <type>uint_32</type>
      </value_ref_id>

      <value_ref_id valid="Function_3_Reg_776">
        <function>3</function>
        <start_addr>775</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
			
			
			
			<value_ref_id valid="address0x100"> <!-- AUTSTRTOFFLOADREQ_STATE, AUTSTRTONLOADREQ_STATE, MANTSTRTOFFLOADREQ_STATE, MANTSTRTONLOADREQ_STATE, GSSTOPPED, GSSTARTED, GSSTABILISED, GSONLOAD, GSREADYTOOPERATE -->
				<function>3</function>
				<start_addr>256</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x102"> <!-- GENERIC_ALARM1, SPILLCONT_ALARM1, FUELP1TRIP_ALARM1, FUELP2TRIP_ALARM1, FUELP2TRIP_ALARM1, HFUELLEV_ALARM1, VHFUELLEV_ALARM1, DSTLOWFUELLEV_ALARM1, OILPRESSURE_ALARM1, OILPRESSURETRANS_ALARM1, OILTEMP_ALARM1, OILTEMPTRANS_ALARM1, LOWOILLEV_ALARM1, WATERTEMPHT_ALARM1, WATERTEMPLT_ALARM1, WATERTEMPTRANS_ALARM1, WATERTEMPTRANS_ALARM1, NOWATERPREHEAT_ALARM1, LOWWATERLEV_ALARM1, INTERLOWWATERLEV_ALARM1, ALTCHARGE_ALARM1, GENENG_ALARM1, OVERL_ALARM1, SCOVERL_ALARM1, APRETURN_ALARM1, RPRETURN_ALARM1, MINV_ALARM1, MAXV_ALARM1, MINF_ALARM1, MAXF_ALARM1, BATTMINV_ALARM1, BATTMAXV_ALARM1, PROT_ALARM1, CTCONNECT_ALARM1 -->
				<function>3</function>
				<start_addr>258</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x104"> <!-- STACK_ALARM2, ESO_ALARM2, ES_ALARM2, EES_ALARM2, IMD_ALARM2, ECU_ALARM2, NONSTART_ALARM2, OVSPEED_ALARM2, UNSPEED_ALARM2, SOSOCAN_ALARM2, ENGCAN_ALARM2, WATCHDOG_ALARM2, DIFFERENTIALACTIV_ALARM2 -->
				<function>3</function>
				<start_addr>260</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x106"> <!-- WATERTEMPHT, WATERTEMPLT, LOWWATERLEV -->
				<function>3</function>
				<start_addr>262</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x108"> <!-- WATERTEMPHT, WATERTEMPLT, LOWWATERLEV -->
				<function>3</function>
				<start_addr>264</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>



			<value_ref_id valid="address0x200"> <!-- OIL_PRESSURE -->
				<function>3</function>
				<start_addr>512</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address0x201"> <!-- LUB_OIL_TEMP -->
				<function>3</function>
				<start_addr>513</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address0x202"> <!-- HT_COOLANT_TEMP -->
				<function>3</function>
				<start_addr>514</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address0x203"> <!-- LT_COOLANT_TEMP -->
				<function>3</function>
				<start_addr>515</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address0x204"> <!-- FUEL_LEVEL -->
				<function>3</function>
				<start_addr>516</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address0x205"> <!-- BATTERY_AMMETER -->
				<function>3</function>
				<start_addr>517</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address0x206"> <!-- BATTERY_VOLTAGE -->
				<function>3</function>
				<start_addr>518</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>

			<table_ref_id indexid="addresses0x207-0x20B"> <!-- CURRENT_ph -->
				<entry num="0">address0x207</entry>
				<entry num="1">address0x209</entry>
				<entry num="2">address0x20B</entry>
			</table_ref_id>
			<value_ref_id valid="address0x207">
				<function>3</function>
				<start_addr>519</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x209">
				<function>3</function>
				<start_addr>521</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x20B">
				<function>3</function>
				<start_addr>523</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>

			<value_ref_id valid="address0x20D"> <!-- CURRENT_N -->
				<function>3</function>
				<start_addr>525</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>

			<table_ref_id indexid="addresses0x20F-0x213"> <!-- VOLTAGE_L2L_ph -->
				<entry num="0">address0x20F</entry>
				<entry num="1">address0x211</entry>
				<entry num="2">address0x213</entry>
			</table_ref_id>
			<value_ref_id valid="address0x20F">
				<function>3</function>
				<start_addr>527</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x211">
				<function>3</function>
				<start_addr>529</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x213">
				<function>3</function>
				<start_addr>531</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>

			<table_ref_id indexid="addresses0x215-0x219"> <!-- VOLTAGE_ph -->
				<entry num="0">address0x215</entry>
				<entry num="1">address0x217</entry>
				<entry num="2">address0x219</entry>
			</table_ref_id>
			<value_ref_id valid="address0x215">
				<function>3</function>
				<start_addr>533</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x217">
				<function>3</function>
				<start_addr>535</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x219">
				<function>3</function>
				<start_addr>537</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>

			<value_ref_id valid="address0x21B"> <!-- ENGINE_FREQUENCY -->
				<function>3</function>
				<start_addr>539</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address0x21C"> <!-- ENGINE_SPEED -->
				<function>3</function>
				<start_addr>540</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address0x21D"> <!-- POWER_P -->
				<function>3</function>
				<start_addr>541</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x21F"> <!-- POWER_Q -->
				<function>3</function>
				<start_addr>543</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x221"> <!-- POWER_S -->
				<function>3</function>
				<start_addr>545</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x223"> <!-- POWERFACTOR -->
				<function>3</function>
				<start_addr>547</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="address0x229"> <!-- PARTIAL_ACTIVE_ENERGY_COUNTER -->
				<function>3</function>
				<start_addr>553</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x22B"> <!-- TOTAL_ACTIVE_ENERGY_COUNTER -->
				<function>3</function>
				<start_addr>555</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x22D"> <!-- PARTIAL_REACTIVE_ENERGY_COUNTER -->
				<function>3</function>
				<start_addr>557</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="address0x22F"> <!-- TOTAL_REACTIVE_ENERGY_COUNTER -->
				<function>3</function>
				<start_addr>559</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			
			<packet>
				<function>3</function>
				<start_addr>256</start_addr>
				<quantity>8</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>512</start_addr>
				<quantity>36</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>553</start_addr>
				<quantity>8</quantity>
			</packet>
		</modbus>
	</protocol>
</APC_DDF>
