<?xml version="1.0"?>
<!-- GE ATS -->
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
        ddfid ="ge_mx_150_ats" ddfname="GE MX 150 ATS"
        ddfversion ="1" canremove="yes">
  <schemaVersion>1.6</schemaVersion>

  <device deviceid="ge_mx150_ats_header">
    <oidMustExist oid="MODBUS_OID_MUST_EXIST" ruleid="OIDMustExist_modbusdevicetest"/>
    <setProductData ruleid="typedata" field="type">Transfer Switch</setProductData>
    <setProductData ruleid="vendordata" field="vendor">General Electric</setProductData>
    <setProductData ruleid="modeldata" field="model">MX 150</setProductData>
	<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
  </device>

  <device deviceid="ge_mx150_ats_sensors">
    <oidMustExist oid="MODBUS_OID_MUST_EXIST" ruleid="OIDMustExist_modbusdevicetest"/>

    <numSensor ruleid="voltage_line_12_Sensor" index="voltageTable">
      <type>voltage</type>
      <sensorId><rowIndex/></sensorId>
      <value>
        <getRowOid><rowIndex/></getRowOid>
      </value>
      <label><mapValue mapid="voltageLabel-vm"><rowNumber/></mapValue></label>
      <sensorSet><mapValue mapid="voltageSensorSet-vm"><rowNumber/></mapValue></sensorSet>
    </numSensor>

    <numSensor ruleid="frequency_Sensor" index="frequencyTable">
      <type>frequency</type>
      <sensorId><rowIndex/></sensorId>
      <value>
        <getRowOid><rowIndex/></getRowOid>
      </value>
      <label><mapValue mapid="frequencyLabel-vm"><rowNumber/></mapValue></label>
      <sensorSet><mapValue mapid="frequencySensorSet-vm"><rowNumber/></mapValue></sensorSet>
    </numSensor>

    <stateSensor ruleid="autoTransferRelaySensor">
      <type>state</type>
      <sensorId>AUTOMATIC_TRANSFER_RELAY_STATE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <getOid>mx_status</getOid>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Automatic Transfer Relay Staus</label>
      <enum>onoff-em</enum>
      <sensorSet>MX Status Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="atsNotInAutoSensor">
      <type>state</type>
      <sensorId>ATS_NOT_IN_AUTO_STATE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>mx_status</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ATS Not In Auto Mode</label>
      <enum>automode-em</enum>
      <sensorSet>MX Status Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="genPurposeAlarmSensor">
      <type>state</type>
      <sensorId>GENERAL_PURPOSE_ALARM_STATE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>mx_status</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>General Purpose Alarm Status</label>
      <enum>alarmActive-em</enum>
      <sensorSet>MX Status Sensors</sensorSet>
    </stateSensor>

    <stateSensor ruleid="loadTestRunningSensor">
      <type>state</type>
      <sensorId>TEST_RUNNING_STATE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>mx_status</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Load Test or Fast Load Test Running</label>
      <enum>running-em</enum>
      <sensorSet>MX Status Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="loadNoLoadTestSensor">
      <type>state</type>
      <sensorId>LOAD_NO_LOAD_TEST_STATE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>mx_status</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Load, No Load, Fast Load Test Status</label>
      <enum>running-em</enum>
      <sensorSet>MX Status Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="s2AvailableSensor">
      <type>state</type>
      <sensorId>S2_AVAILABLE_STATE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>mx_status</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>S2 Available Status</label>
      <enum>available-em</enum>
      <sensorSet>MX Status Sensors</sensorSet>
    </stateSensor>
    
    <stateSensor ruleid="s1AvailableSensor">
      <type>state</type>
      <sensorId>S1_AVAILABLE_STATE</sensorId>
      <value>
        <mapValue mapid="status-vm">
          <formatNumber>
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>mx_status</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>S1 Available Status</label>
      <enum>available-em</enum>
      <sensorSet>MX Status Sensors</sensorSet>
    </stateSensor>
    
    <valueMap ruleid="status-vm">
      <valueIn>0</valueIn><valueOut>0</valueOut>
      <valueIn>1</valueIn><valueOut>1</valueOut>
      <valueIn>*</valueIn><valueOut>2</valueOut>
    </valueMap>

    <valueMap ruleid="voltageLabel-vm">
      <valueIn>0</valueIn><valueOut>S1 Voltage Phase A-B</valueOut>
      <valueIn>1</valueIn><valueOut>S1 Voltage Phase B-C</valueOut>
      <valueIn>2</valueIn><valueOut>S1 Voltage Phase C-A</valueOut>
      <valueIn>3</valueIn><valueOut>S2 Voltage Phase A-B</valueOut>
      <valueIn>4</valueIn><valueOut>S2 Voltage Phase B-C</valueOut>
      <valueIn>5</valueIn><valueOut>S2 Voltage Phase C-A</valueOut>
    </valueMap>
    <valueMap ruleid="voltageSensorSet-vm">
      <valueIn>0</valueIn><valueOut>S1 Sensors</valueOut>
      <valueIn>1</valueIn><valueOut>S1 Sensors</valueOut>
      <valueIn>2</valueIn><valueOut>S1 Sensors</valueOut>
      <valueIn>3</valueIn><valueOut>S2 Sensors</valueOut>
      <valueIn>4</valueIn><valueOut>S2 Sensors</valueOut>
      <valueIn>5</valueIn><valueOut>S2 Sensors</valueOut>
    </valueMap>

    <valueMap ruleid="frequencyLabel-vm">
      <valueIn>0</valueIn><valueOut>S1 Frequency</valueOut>
      <valueIn>1</valueIn><valueOut>S2 Frequency</valueOut>
    </valueMap>

    <valueMap ruleid="frequencySensorSet-vm">
      <valueIn>0</valueIn><valueOut>S1 Sensors</valueOut>
      <valueIn>1</valueIn><valueOut>S2 Sensors</valueOut>
    </valueMap>

    <enumMap ruleid="alarmActive-em">
      <label>Normal</label>
      <label>Alarm Active</label>
      <label>Unknown</label>
    </enumMap>

    <enumMap ruleid="onoff-em">
      <label>On</label>
      <label>Off</label>
      <label>Unknown</label>
    </enumMap>

    <enumMap ruleid="automode-em">
      <label>In Auto</label>
      <label>Not In Auto</label>
      <label>Unknown</label>
    </enumMap>

    <enumMap ruleid="running-em">
      <label>Not Running</label>
      <label>Running</label>
      <label>Unknown</label>
    </enumMap>

    <enumMap ruleid="available-em">
      <label>Not Available</label>
      <label>Available</label>
      <label>Unknown</label>
    </enumMap>

  </device>
  <protocol>
    <modbus>
      <table_ref_id indexid="voltageTable">
        <entry num="0">S1_VOLTAGE_PHASE_AB</entry>
        <entry num="1">S1_VOLTAGE_PHASE_BC</entry>
        <entry num="2">S1_VOLTAGE_PHASE_CA</entry>
        <entry num="3">S2_VOLTAGE_PHASE_AB</entry>
        <entry num="4">S2_VOLTAGE_PHASE_BC</entry>
        <entry num="5">S2_VOLTAGE_PHASE_CA</entry>
      </table_ref_id>

      <table_ref_id indexid="frequencyTable">
        <entry num="0">S1_FREQUENCY</entry>
        <entry num="1">S2_FREQUENCY</entry>
      </table_ref_id>

      <value_ref_id valid="mx_status">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="S1_VOLTAGE_PHASE_AB">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="S1_VOLTAGE_PHASE_BC">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="S1_VOLTAGE_PHASE_CA">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="S2_VOLTAGE_PHASE_AB">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="S2_VOLTAGE_PHASE_BC">
        <function>3</function>
        <start_addr>9</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="S2_VOLTAGE_PHASE_CA">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="S1_FREQUENCY">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="S2_FREQUENCY">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>

      <value_ref_id valid="serialnum">
        <function>3</function>
        <start_addr>18</start_addr>
        <quantity>2</quantity>
        <type>uint_16</type>
      </value_ref_id>

<!-- 
      <packet>
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>6</quantity>
      </packet>
 -->
    </modbus>
  </protocol>

</APC_DDF>

