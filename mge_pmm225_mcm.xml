<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="mge_pmm225_mcm"
	ddfname="MGE PMM225 MCM"
	ddfversion="2"
	canremove="yes">
		 
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="mge_pmm225_mcm">

		<setProductData ruleid="vendordata" field="vendor">MGE</setProductData>
		<setProductData ruleid="modeldata" field="model">PMM225 MCM</setProductData>
		<setProductData ruleid="typedata" field="type">PDU</setProductData>
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>

		<numSensor ruleid="ENERGY_CONSUMPTION_SENSOR">
            <type>num/kwatthr</type>
            <sensorId>energy_consumption</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>energyconsumption</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Energy Consumption</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REAL_POWER_SENSOR">
            <type>num/powerKW</type>
            <sensorId>real_power</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>realpower</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Real Power</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REACTIVE_POWER_SENSOR">
            <type>num/powerKVAR</type>
            <sensorId>reactive_power</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>reactivepower</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Reactive Power</label>
            <sensorSet>General</sensorSet>
	</numSensor>

        <numSensor ruleid="APPARENT_POWER_SENSOR">
            <type>num/powerKVA</type>
            <sensorId>apparent_power</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>apparentpower</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Apparent Power</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="TOTAL_POWER_FACTOR_SENSOR">
            <type>num/powerfactor</type>
            <sensorId>total_power_factor</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>totalpowerfactor</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Total Power Factor</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="VOLTAGE,_L-L,_AVG_OF_3_PHASES_SENSOR">
            <type>voltage</type>
            <sensorId>voltage,_l-l,_avg_of_3_phases</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>voltagellavgof3phases</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Voltage, L-L, avg of 3 Phases</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="VOLTAGE,_L-N,_AVG_OF_3_PHASES_SENSOR">
            <type>voltage</type>
            <sensorId>voltage,_l-n,_avg_of_3_phases</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>voltagelnavgof3phases</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Voltage, L-N, avg of 3 Phases</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="CURRENT,_AVERAGE_OF_3_PHASES_SENSOR">
            <type>amperage</type>
            <sensorId>current,_average_of_3_phases</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>currentaverageof3phases</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Current, average of 3 phases</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="FREQUENCY_SENSOR">
            <type>frequency</type>
            <sensorId>frequency</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>frequency</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Frequency</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REAL_POWER,_PHASE_A_SENSOR">
            <type>num/powerKW</type>
            <sensorId>real_power,_phase_a</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>realpowerphasea</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Real Power, phase A</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REAL_POWER,_PHASE_B_SENSOR">
            <type>num/powerKW</type>
            <sensorId>real_power,_phase_b</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>realpowerphaseb</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Real Power, phase B</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="REAL_POWER,_PHASE_C_SENSOR">
            <type>num/powerKW</type>
            <sensorId>real_power,_phase_c</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>realpowerphasec</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Real Power, phase C</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="POWER_FACTOR,_PHASE_A_SENSOR">
            <type>num/powerfactor</type>
            <sensorId>power_factor,_phase_a</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>powerfactorphasea</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Power Factor, phase A</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="POWER_FACTOR,_PHASE_B_SENSOR">
            <type>num/powerfactor</type>
            <sensorId>power_factor,_phase_b</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>powerfactorphaseb</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Power Factor, phase B</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="POWER_FACTOR,_PHASE_C_SENSOR">
            <type>num/powerfactor</type>
            <sensorId>power_factor,_phase_c</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>powerfactorphasec</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Power Factor, phase C</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="VOLTAGE,_PHASE_A-B_SENSOR">
            <type>voltage</type>
            <sensorId>voltage,_phase_a-b</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>voltagephaseab</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Voltage, phase A-B</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="VOLTAGE,_PHASE_B-C_SENSOR">
            <type>voltage</type>
            <sensorId>voltage,_phase_b-c</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>voltagephasebc</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Voltage, phase B-C</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="VOLTAGE,_PHASE_A-C_SENSOR">
            <type>voltage</type>
            <sensorId>voltage,_phase_a-c</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>voltagephaseac</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Voltage, phase A-C</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="VOLTAGE,_PHASE_A-N_SENSOR">
            <type>voltage</type>
            <sensorId>voltage,_phase_a-n</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>voltagephasean</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Voltage, phase A-N</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="VOLTAGE,_PHASE_B-N_SENSOR">
            <type>voltage</type>
            <sensorId>voltage,_phase_b-n</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>voltagephasebn</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Voltage, phase B-N</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="VOLTAGE,_PHASE_C-N_SENSOR">
            <type>voltage</type>
            <sensorId>voltage,_phase_c-n</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>voltagephasecn</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Voltage, phase C-N</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="CURRENT,_PHASE_A_SENSOR">
            <type>amperage</type>
            <sensorId>current,_phase_a</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>currentphasea</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Current, phase A</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="CURRENT,_PHASE_B_SENSOR">
            <type>amperage</type>
            <sensorId>current,_phase_b</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>currentphaseb</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Current, phase B</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="CURRENT,_PHASE_C_SENSOR">
            <type>amperage</type>
            <sensorId>current,_phase_c</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>currentphasec</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Current, phase C</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="CURRENT,_NEUTRAL_SENSOR">
            <type>amperage</type>
            <sensorId>current,_neutral</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>currentneutral</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Current, Neutral</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="AVERAGE_KW_SENSOR">
            <type>num/powerKW</type>
            <sensorId>average_kw</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>averagekw</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Average kW</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="MINIMUM_KW_SENSOR">
            <type>num/powerKW</type>
            <sensorId>minimum_kw</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>minimumkw</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Minimum kW</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="MAXIMUM_KW_SENSOR">
            <type>num/powerKW</type>
            <sensorId>maximum_kw</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>maximumkw</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Maximum kW</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="CT_SCALE_SENSOR">
            <type>num</type>
            <sensorId>ct_scale</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>ctscale</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>CT Scale</label>
            <sensorSet>Integers</sensorSet>
        </numSensor>

        <numSensor ruleid="OVER_VOLTAGE_ALARM_THRESHOLD_SENSOR">
            <type>voltage</type>
            <sensorId>over_voltage_alarm_threshold</sensorId>
			<value>
				<if>
					<op>
						<and>
							<op>
                						<ge>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>1.0</op>
								</ge>
							</op>
							<op>
								<le>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>5.0</op>
								</le>
							</op>
						</and>
					</op>
					<op>
						<mult>
							<op><getOid>overvoltagealarmthreshold</getOid></op>
							<op>.01</op>
						</mult>
					</op>
					<op>
						<if>
							<op>
								<and>
									<op>
		                						<ge>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>6.0</op>
										</ge>
									</op>
									<op>
										<le>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>59.0</op>
										</le>
									</op>
								</and>
							</op>
							<op>
								<mult>
									<op><getOid>overvoltagealarmthreshold</getOid></op>
									<op>.01</op>
								</mult>
							</op>
							<op>
								<if>
									<op>
										<and>
											<op>
				                						<ge>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>60.0</op>
												</ge>
											</op>
											<op>
												<le>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>599.0</op>
												</le>
											</op>
										</and>
									</op>
									<op>
										<mult>
											<op><getOid>overvoltagealarmthreshold</getOid></op>
											<op>.01</op>
										</mult>
									</op>
									<op>
										<if>
											<op>
												<and>
													<op>
						                						<ge>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>600.0</op>
														</ge>
													</op>
													<op>
														<le>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>5999.0</op>
														</le>
													</op>
												</and>
											</op>
											<op>
												<mult>
													<op><getOid>overvoltagealarmthreshold</getOid></op>
													<op>.01</op>
												</mult>
											</op>
											<op>-1</op>
										</if>
									</op>
								</if>
							</op>
						</if>
					</op>
				</if>
            		</value>
            <label>Over Voltage Alarm Threshold</label>
		<valueInc>.001</valueInc>
            <sensorSet>Integers</sensorSet>
        </numSensor>

        <numSensor ruleid="UNDER_VOLTAGE_ALARM_THRESHOLD_SENSOR">
            <type>voltage</type>
            <sensorId>under_voltage_alarm_threshold</sensorId>
            <value>
				<if>
					<op>
						<and>
							<op>
                						<ge>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>1.0</op>
								</ge>
							</op>
							<op>
								<le>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>5.0</op>
								</le>
							</op>
						</and>
					</op>
					<op>
						<mult>
							<op><getOid>undervoltagealarmthreshold</getOid></op>
							<op>.01</op>
						</mult>
					</op>
					<op>
						<if>
							<op>
								<and>
									<op>
		                						<ge>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>6.0</op>
										</ge>
									</op>
									<op>
										<le>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>59.0</op>
										</le>
									</op>
								</and>
							</op>
							<op>
								<mult>
									<op><getOid>undervoltagealarmthreshold</getOid></op>
									<op>.01</op>
								</mult>
							</op>
							<op>
								<if>
									<op>
										<and>
											<op>
				                						<ge>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>60.0</op>
												</ge>
											</op>
											<op>
												<le>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>599.0</op>
												</le>
											</op>
										</and>
									</op>
									<op>
										<mult>
											<op><getOid>undervoltagealarmthreshold</getOid></op>
											<op>.01</op>
										</mult>
									</op>
									<op>
										<if>
											<op>
												<and>
													<op>
						                						<ge>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>600.0</op>
														</ge>
													</op>
													<op>
														<le>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>5999.0</op>
														</le>
													</op>
												</and>
											</op>
											<op>
												<mult>
													<op><getOid>undervoltagealarmthreshold</getOid></op>
													<op>.01</op>
												</mult>
											</op>
											<op>-1</op>
										</if>
									</op>
								</if>
							</op>
						</if>
					</op>
				</if>
            		</value>
            <label>Under Voltage Alarm Threshold</label>
		<valueInc>.001</valueInc>
            <sensorSet>Integers</sensorSet>
        </numSensor>

        <numSensor ruleid="OVER_CURRENT_ALARM_THRESHOLD_SENSOR">
            <type>amperage</type>
            <sensorId>over_current_alarm_threshold</sensorId>
            <value>
				<if>
					<op>
						<and>
							<op>
                						<ge>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>1.0</op>
								</ge>
							</op>
							<op>
								<le>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>5.0</op>
								</le>
							</op>
						</and>
					</op>
					<op>
						<mult>
							<op><getOid>overcurrentalarmthreshold</getOid></op>
							<op>.0001</op>
						</mult>
					</op>
					<op>
						<if>
							<op>
								<and>
									<op>
		                						<ge>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>6.0</op>
										</ge>
									</op>
									<op>
										<le>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>59.0</op>
										</le>
									</op>
								</and>
							</op>
							<op>
								<mult>
									<op><getOid>overcurrentalarmthreshold</getOid></op>
									<op>.001</op>
								</mult>
							</op>
							<op>
								<if>
									<op>
										<and>
											<op>
				                						<ge>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>60.0</op>
												</ge>
											</op>
											<op>
												<le>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>599.0</op>
												</le>
											</op>
										</and>
									</op>
									<op>
										<mult>
											<op><getOid>overcurrentalarmthreshold</getOid></op>
											<op>.01</op>
										</mult>
									</op>
									<op>
										<if>
											<op>
												<and>
													<op>
						                						<ge>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>600.0</op>
														</ge>
													</op>
													<op>
														<le>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>5999.0</op>
														</le>
													</op>
												</and>
											</op>
											<op>
												<mult>
													<op><getOid>overcurrentalarmthreshold</getOid></op>
													<op>.1</op>
												</mult>
											</op>
											<op>-1</op>
										</if>
									</op>
								</if>
							</op>
						</if>
					</op>
				</if>
            		</value>
            <label>Over Current Alarm Threshold</label>
		<valueInc>.001</valueInc>
            <sensorSet>Integers</sensorSet>
        </numSensor>

        <numSensor ruleid="UNDER_CURRENT_ALARM_THRESHOLD_SENSOR">
            <type>amperage</type>
            <sensorId>under_current_alarm_threshold</sensorId>
            <value>
				<if>
					<op>
						<and>
							<op>
                						<ge>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>1.0</op>
								</ge>
							</op>
							<op>
								<le>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>5.0</op>
								</le>
							</op>
						</and>
					</op>
					<op>
						<mult>
							<op><getOid>undercurrentalarmthreshold</getOid></op>
							<op>.0001</op>
						</mult>
					</op>
					<op>
						<if>
							<op>
								<and>
									<op>
		                						<ge>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>6.0</op>
										</ge>
									</op>
									<op>
										<le>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>59.0</op>
										</le>
									</op>
								</and>
							</op>
							<op>
								<mult>
									<op><getOid>undercurrentalarmthreshold</getOid></op>
									<op>.001</op>
								</mult>
							</op>
							<op>
								<if>
									<op>
										<and>
											<op>
				                						<ge>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>60.0</op>
												</ge>
											</op>
											<op>
												<le>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>599.0</op>
												</le>
											</op>
										</and>
									</op>
									<op>
										<mult>
											<op><getOid>undercurrentalarmthreshold</getOid></op>
											<op>.01</op>
										</mult>
									</op>
									<op>
										<if>
											<op>
												<and>
													<op>
						                						<ge>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>600.0</op>
														</ge>
													</op>
													<op>
														<le>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>5999.0</op>
														</le>
													</op>
												</and>
											</op>
											<op>
												<mult>
													<op><getOid>undercurrentalarmthreshold</getOid></op>
													<op>.1</op>
												</mult>
											</op>
											<op>-1</op>
										</if>
									</op>
								</if>
							</op>
						</if>
					</op>
				</if>
            		</value>
            <label>Under Current Alarm Threshold</label>
		<valueInc>.001</valueInc>
            <sensorSet>Integers</sensorSet>
        </numSensor>

        <numSensor ruleid="OVER_KVA_ALARM_THRESHOLD_SENSOR">
            <type>num/powerKVA</type>
            <sensorId>over_kva_alarm_threshold</sensorId>
            <value>
				<if>
					<op>
						<and>
							<op>
                						<ge>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>1.0</op>
								</ge>
							</op>
							<op>
								<le>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>5.0</op>
								</le>
							</op>
						</and>
					</op>
					<op>
						<mult>
							<op><getOid>overkvaalarmthreshold</getOid></op>
							<op>.0001</op>
						</mult>
					</op>
					<op>
						<if>
							<op>
								<and>
									<op>
		                						<ge>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>6.0</op>
										</ge>
									</op>
									<op>
										<le>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>59.0</op>
										</le>
									</op>
								</and>
							</op>
							<op>
								<mult>
									<op><getOid>overkvaalarmthreshold</getOid></op>
									<op>.001</op>
								</mult>
							</op>
							<op>
								<if>
									<op>
										<and>
											<op>
				                						<ge>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>60.0</op>
												</ge>
											</op>
											<op>
												<le>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>599.0</op>
												</le>
											</op>
										</and>
									</op>
									<op>
										<mult>
											<op><getOid>overkvaalarmthreshold</getOid></op>
											<op>.01</op>
										</mult>
									</op>
									<op>
										<if>
											<op>
												<and>
													<op>
						                						<ge>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>600.0</op>
														</ge>
													</op>
													<op>
														<le>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>5999.0</op>
														</le>
													</op>
												</and>
											</op>
											<op>
												<mult>
													<op><getOid>overkvaalarmthreshold</getOid></op>
													<op>.1</op>
												</mult>
											</op>
											<op>-1</op>
										</if>
									</op>
								</if>
							</op>
						</if>
					</op>
				</if>
            		</value>
            <label>Over KVA Alarm Threshold</label>
		<valueInc>.001</valueInc>
            <sensorSet>Integers</sensorSet>
        </numSensor>

        <numSensor ruleid="UNDER_KVA_ALARM_THRESHOLD_SENSOR">
            <type>num/powerKVA</type>
            <sensorId>under_kva_alarm_threshold</sensorId>
          <value>
				<if>
					<op>
						<and>
							<op>
                						<ge>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>1.0</op>
								</ge>
							</op>
							<op>
								<le>
									<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
									<op>5.0</op>
								</le>
							</op>
						</and>
					</op>
					<op>
						<mult>
							<op><getOid>underkvaalarmthreshold</getOid></op>
							<op>.0001</op>
						</mult>
					</op>
					<op>
						<if>
							<op>
								<and>
									<op>
		                						<ge>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>6.0</op>
										</ge>
									</op>
									<op>
										<le>
											<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
											<op>59.0</op>
										</le>
									</op>
								</and>
							</op>
							<op>
								<mult>
									<op><getOid>underkvaalarmthreshold</getOid></op>
									<op>.001</op>
								</mult>
							</op>
							<op>
								<if>
									<op>
										<and>
											<op>
				                						<ge>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>60.0</op>
												</ge>
											</op>
											<op>
												<le>
													<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
													<op>599.0</op>
												</le>
											</op>
										</and>
									</op>
									<op>
										<mult>
											<op><getOid>underkvaalarmthreshold</getOid></op>
											<op>.01</op>
										</mult>
									</op>
									<op>
										<if>
											<op>
												<and>
													<op>
						                						<ge>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>600.0</op>
														</ge>
													</op>
													<op>
														<le>
															<op><mult><op><getOid>ctscale</getOid></op><op>1.0</op></mult></op>
															<op>5999.0</op>
														</le>
													</op>
												</and>
											</op>
											<op>
												<mult>
													<op><getOid>underkvaalarmthreshold</getOid></op>
													<op>.1</op>
												</mult>
											</op>
											<op>-1</op>
										</if>
									</op>
								</if>
							</op>
						</if>
					</op>
				</if>
            		</value>
            <label>Under KVA Alarm Threshold</label>
		<valueInc>.001</valueInc>
            <sensorSet>Integers</sensorSet>
        </numSensor>


		<enumMap ruleid="meteralarmbit0">
			<label>False</label>
			<label>True</label>
			<label>Unknown</label>
		</enumMap>


        <stateSensor ruleid="METER_ALARM_BIT_0_SENSOR">
            <type>state</type>
            <sensorId>meter_alarm_bit_0_status</sensorId>
            <value>
			<bitwise_and>
				<op>
					<right_shift>
						<op><getOid>meteralarmstatus</getOid></op>
						<op>0</op>
					</right_shift>
				</op>
				<op>1</op>
			</bitwise_and>
            </value>
            <label>Over Current</label>
		<enum>meteralarmbit0</enum>
            <sensorSet>Meter Alarm Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="METER_ALARM_BIT_1_SENSOR">
            <type>state</type>
            <sensorId>meter_alarm_bit_1_status</sensorId>
            <value>
			<bitwise_and>
				<op>
					<right_shift>
						<op><getOid>meteralarmstatus</getOid></op>
						<op>1</op>
					</right_shift>
				</op>
				<op>1</op>
			</bitwise_and>
            </value>
            <label>Under Current</label>
		<enum>meteralarmbit0</enum>
            <sensorSet>Meter Alarm Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="METER_ALARM_BIT_2_SENSOR">
            <type>state</type>
            <sensorId>meter_alarm_bit_2_status</sensorId>
            <value>
			<bitwise_and>
				<op>
					<right_shift>
						<op><getOid>meteralarmstatus</getOid></op>
						<op>2</op>
					</right_shift>
				</op>
				<op>1</op>
			</bitwise_and>
            </value>
            <label>Over KVA</label>
		<enum>meteralarmbit0</enum>
            <sensorSet>Meter Alarm Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="METER_ALARM_BIT_3_SENSOR">
            <type>state</type>
            <sensorId>meter_alarm_bit_3_status</sensorId>
            <value>
			<bitwise_and>
				<op>
					<right_shift>
						<op><getOid>meteralarmstatus</getOid></op>
						<op>3</op>
					</right_shift>
				</op>
				<op>1</op>
			</bitwise_and>
            </value>
            <label>Under KVA</label>
		<enum>meteralarmbit0</enum>
            <sensorSet>Meter Alarm Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="METER_ALARM_BIT_4_SENSOR">
            <type>state</type>
            <sensorId>meter_alarm_bit_4_status</sensorId>
            <value>
			<bitwise_and>
				<op>
					<right_shift>
						<op><getOid>meteralarmstatus</getOid></op>
						<op>4</op>
					</right_shift>
				</op>
				<op>1</op>
			</bitwise_and>
            </value>
            <label>Over Voltage</label>
		<enum>meteralarmbit0</enum>
            <sensorSet>Meter Alarm Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="METER_ALARM_BIT_5_SENSOR">
            <type>state</type>
            <sensorId>meter_alarm_bit_5_status</sensorId>
            <value>
			<bitwise_and>
				<op>
					<right_shift>
						<op><getOid>meteralarmstatus</getOid></op>
						<op>5</op>
					</right_shift>
				</op>
				<op>1</op>
			</bitwise_and>
            </value>
            <label>Under Voltage</label>
		<enum>meteralarmbit0</enum>
            <sensorSet>Meter Alarm Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="METER_ALARM_BIT_6_SENSOR">
            <type>state</type>
            <sensorId>meter_alarm_bit_6_status</sensorId>
            <value>
			<bitwise_and>
				<op>
					<right_shift>
						<op><getOid>meteralarmstatus</getOid></op>
						<op>6</op>
					</right_shift>
				</op>
				<op>1</op>
			</bitwise_and>
            </value>
            <label>Phase Loss A</label>
		<enum>meteralarmbit0</enum>
            <sensorSet>Meter Alarm Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="METER_ALARM_BIT_7_SENSOR">
            <type>state</type>
            <sensorId>meter_alarm_bit_7_status</sensorId>
            <value>
			<bitwise_and>
				<op>
					<right_shift>
						<op><getOid>meteralarmstatus</getOid></op>
						<op>7</op>
					</right_shift>
				</op>
				<op>1</op>
			</bitwise_and>
            </value>
            <label>Phase Loss B</label>
		<enum>meteralarmbit0</enum>
            <sensorSet>Meter Alarm Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="METER_ALARM_BIT_8_SENSOR">
            <type>state</type>
            <sensorId>meter_alarm_bit_8_status</sensorId>
            <value>
			<bitwise_and>
				<op>
					<right_shift>
						<op><getOid>meteralarmstatus</getOid></op>
						<op>8</op>
					</right_shift>
				</op>
				<op>1</op>
			</bitwise_and>
            </value>
            <label>Phase Loss C</label>
		<enum>meteralarmbit0</enum>
            <sensorSet>Meter Alarm Status</sensorSet>
        </stateSensor>

        <numSensor ruleid="FIRMWARE_REVISION_RESET_SYSTEM_SENSOR">
            <type>num</type>
            <sensorId>firmware_revision_reset_system</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>firmwarerevisionresetsystem</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Firmware Revision Reset System</label>
            <sensorSet>Firmware</sensorSet>
        </numSensor>
        <numSensor ruleid="FIRMWARE_REVISION_OPERATING_SYSTEM_SENSOR">
            <type>num</type>
            <sensorId>firmware_revision_operating_system</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>firmwarerevisionoperatingsystem</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Firmware Revision Operating System</label>
            <sensorSet>Firmware</sensorSet>
        </numSensor>
        <numSensor ruleid="SERIAL_NUMBER_MSW_SENSOR">
            <type>num</type>
            <sensorId>serial_number_msw</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>serialnumbermsw</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Serial Number MSW</label>
            <sensorSet>Serial Number</sensorSet>
        </numSensor>
        <numSensor ruleid="SERIAL_NUMBER_LSW_SENSOR">
            <type>num</type>
            <sensorId>serial_number_lsw</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>serialnumberlsw</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Serial Number LSW</label>
            <sensorSet>Serial Number</sensorSet>
        </numSensor>
        <numSensor ruleid="ERROR_REGISTER_SENSOR">
            <type>num</type>
            <sensorId>error_register</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>errorregister</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Error Register</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="DEVICE_ID_SENSOR">
            <type>num</type>
            <sensorId>device_id</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>deviceid</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Device ID</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="OVER_VOLTAGE_SET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>over_voltage_set_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>overvoltagesetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Over Voltage Set Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="OVER_VOLTAGE_RESET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>over_voltage_reset_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>overvoltageresetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Over Voltage Reset Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="UNDER_VOLTAGE_SET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>under_voltage_set_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>undervoltagesetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Under Voltage Set Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="UNDER_VOLTAGE_RESET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>under_voltage_reset_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>undervoltageresetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Under Voltage Reset Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        
        <numSensor ruleid="PHASE_LOSS_A_SET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>phase_loss_a_set_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>phaselossasetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Phase Loss A Set Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="PHASE_LOSS_A_RESET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>phase_loss_a_reset_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>phaselossaresetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Phase Loss A Reset Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="PHASE_LOSS_B_SET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>phase_loss_b_set_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>phaselossbsetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Phase Loss B Set Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="PHASE_LOSS_B_RESET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>phase_loss_b_reset_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>phaselossbresetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Phase Loss B Reset Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="PHASE_LOSS_C_SET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>phase_loss_c_set_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>phaselosscsetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Phase Loss C Set Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="PHASE_LOSS_C_RESET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>phase_loss_c_reset_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>phaselosscresetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Phase Loss C Reset Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="OVER_CURRENT_SET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>over_current_set_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>overcurrentsetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Over Current Set Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="OVER_CURRENT_RESET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>over_current_reset_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>overcurrentresetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Over Current Reset Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="UNDER_CURRENT_SET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>under_current_set_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>undercurrentsetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Under Current Set Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="UNDER_CURRENT_RESET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>under_current_reset_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>undercurrentresetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Under Current Reset Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="OVER_KVA_SET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>over_kva_set_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>overkvasetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Over KVA Set Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="OVER_KVA_RESET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>over_kva_reset_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>overkvaresetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Over KVA Reset Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="UNDER_KVA_SET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>under_kva_set_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>underkvasetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Under KVA Set Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="UNDER_KVA_RESET_COUNTER_SENSOR">
            <type>num</type>
            <sensorId>under_kva_reset_counter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>underkvaresetcounter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Under KVA Reset Counter</label>
            <sensorSet>Alarm Counters</sensorSet>
        </numSensor>
        <numSensor ruleid="BAUDRATE_SENSOR">
            <type>num</type>
            <sensorId>baudrate</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>baudrate</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Baudrate</label>
            <sensorSet>General</sensorSet>
        </numSensor>
	</device>
	<protocol>
		<modbus>

            <value_ref_id valid="energyconsumption">
                <function>3</function>
                <start_addr>256</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="realpower">
                <function>3</function>
                <start_addr>260</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="reactivepower">
                <function>3</function>
                <start_addr>262</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="apparentpower">
                <function>3</function>
                <start_addr>264</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="totalpowerfactor">
                <function>3</function>
                <start_addr>266</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="voltagellavgof3phases">
                <function>3</function>
                <start_addr>268</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="voltagelnavgof3phases">
                <function>3</function>
                <start_addr>270</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="currentaverageof3phases">
                <function>3</function>
                <start_addr>272</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="frequency">
                <function>3</function>
                <start_addr>274</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
			<value_ref_id valid="realpowerphasea">
                <function>3</function>
                <start_addr>276</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="realpowerphaseb">
                <function>3</function>
                <start_addr>278</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="realpowerphasec">
                <function>3</function>
                <start_addr>280</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="powerfactorphasea">
                <function>3</function>
                <start_addr>282</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="powerfactorphaseb">
                <function>3</function>
                <start_addr>284</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="powerfactorphasec">
                <function>3</function>
                <start_addr>286</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="voltagephaseab">
                <function>3</function>
                <start_addr>288</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="voltagephasebc">
                <function>3</function>
                <start_addr>290</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="voltagephaseac">
                <function>3</function>
                <start_addr>292</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="voltagephasean">
                <function>3</function>
                <start_addr>294</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="voltagephasebn">
                <function>3</function>
                <start_addr>296</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="voltagephasecn">
                <function>3</function>
                <start_addr>298</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="currentphasea">
                <function>3</function>
                <start_addr>300</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="currentphaseb">
                <function>3</function>
                <start_addr>302</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="currentphasec">
                <function>3</function>
                <start_addr>304</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="currentneutral">
                <function>3</function>
                <start_addr>306</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="averagekw">
                <function>3</function>
                <start_addr>308</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="minimumkw">
                <function>3</function>
                <start_addr>310</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="maximumkw">
                <function>3</function>
                <start_addr>312</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>

            <value_ref_id valid="ctscale">
                <function>3</function>
                <start_addr>28</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>

		<!-- These are the integer registers that need CTScale scaling -->
            <value_ref_id valid="overvoltagealarmthreshold">
                <function>3</function>
                <start_addr>30</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="undervoltagealarmthreshold">
                <function>3</function>
                <start_addr>31</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="overcurrentalarmthreshold">
                <function>3</function>
                <start_addr>32</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="undercurrentalarmthreshold">
                <function>3</function>
                <start_addr>33</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="overkvaalarmthreshold">
                <function>3</function>
                <start_addr>34</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="underkvaalarmthreshold">
                <function>3</function>
                <start_addr>35</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
		<!-- End of scaling integer registers-->


            <value_ref_id valid="meteralarmstatus">
                <function>3</function>
                <start_addr>48</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>

            <value_ref_id valid="firmwarerevisionresetsystem">
                <function>3</function>
                <start_addr>42</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="firmwarerevisionoperatingsystem">
                <function>3</function>
                <start_addr>43</start_addr>
                <quantity>1</quantity>
                <type>int_16</type>
            </value_ref_id>
            <value_ref_id valid="serialnumbermsw">
                <function>3</function>
                <start_addr>44</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="serialnumberlsw">
                <function>3</function>
                <start_addr>44</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="errorregister">
                <function>3</function>
                <start_addr>46</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="deviceid">
                <function>3</function>
                <start_addr>47</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="overvoltagesetcounter">
                <function>3</function>
                <start_addr>49</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="overvoltageresetcounter">
                <function>3</function>
                <start_addr>50</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="undervoltageresetcounter">
                <function>3</function>
                <start_addr>52</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="undervoltagesetcounter">
                <function>3</function>
                <start_addr>51</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="phaselossasetcounter">
                <function>3</function>
                <start_addr>53</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="phaselossaresetcounter">
                <function>3</function>
                <start_addr>54</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="phaselossbsetcounter">
                <function>3</function>
                <start_addr>55</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="phaselossbresetcounter">
                <function>3</function>
                <start_addr>56</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="phaselosscsetcounter">
                <function>3</function>
                <start_addr>57</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="phaselosscresetcounter">
                <function>3</function>
                <start_addr>58</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="overcurrentsetcounter">
                <function>3</function>
                <start_addr>59</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="overcurrentresetcounter">
                <function>3</function>
                <start_addr>60</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="undercurrentsetcounter">
                <function>3</function>
                <start_addr>61</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="undercurrentresetcounter">
                <function>3</function>
                <start_addr>62</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="overkvasetcounter">
                <function>3</function>
                <start_addr>63</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="overkvaresetcounter">
                <function>3</function>
                <start_addr>64</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="underkvasetcounter">
                <function>3</function>
                <start_addr>65</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="underkvaresetcounter">
                <function>3</function>
                <start_addr>66</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
            <value_ref_id valid="baudrate">
                <function>3</function>
                <start_addr>70</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
			


		</modbus>
	</protocol>
</APC_DDF>