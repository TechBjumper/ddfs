<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="SchneiderElectric_ASUPS" ddfname="SchneiderElectric ASUPS" ddfversion="1" canremove="yes">
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="SchneiderElectric_ASUPS">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
		<setProductData ruleid="vendordata" field="vendor">Schneider Electric</setProductData>
		<setProductData ruleid="modeldata" field="model">AS UPS</setProductData>
		<setProductData ruleid="typedata" field="type">Generic Device</setProductData>
		<setDefaultLabel ruleid="labeldata">
			<sysHostname />
      - Slave
			<commSetting field="slaveaddress" />
		</setDefaultLabel>
		<stateSensor ruleid="mccb_20_trip_status">
			<type>state</type>
			<sensorId>_MCCB_20_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_132</getOid>
				</mapValue>
			</value>
			<label>Mccb 20 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_21_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_21_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_133</getOid>
				</mapValue>
			</value>
			<label>Mccb 21 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_21_trip_status">
			<type>state</type>
			<sensorId>_MCCB_21_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_134</getOid>
				</mapValue>
			</value>
			<label>Mccb 21 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_22_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_22_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_135</getOid>
				</mapValue>
			</value>
			<label>Mccb 22 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_22_trip_status">
			<type>state</type>
			<sensorId>_MCCB_22_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_136</getOid>
				</mapValue>
			</value>
			<label>Mccb 22 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_23_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_23_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_137</getOid>
				</mapValue>
			</value>
			<label>Mccb 23 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_23_trip_status">
			<type>state</type>
			<sensorId>_MCCB_23_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_138</getOid>
				</mapValue>
			</value>
			<label>Mccb 23 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_24_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_24_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_139</getOid>
				</mapValue>
			</value>
			<label>Mccb 24 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_24_trip_status">
			<type>state</type>
			<sensorId>_MCCB_24_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_140</getOid>
				</mapValue>
			</value>
			<label>Mccb 24 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_25_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_25_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_141</getOid>
				</mapValue>
			</value>
			<label>Mccb 25 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_25_trip_status">
			<type>state</type>
			<sensorId>_MCCB_25_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_142</getOid>
				</mapValue>
			</value>
			<label>Mccb 25 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_26_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_26_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_143</getOid>
				</mapValue>
			</value>
			<label>Mccb 26 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_26_trip_status">
			<type>state</type>
			<sensorId>_MCCB_26_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_144</getOid>
				</mapValue>
			</value>
			<label>Mccb 26 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_27_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_27_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_145</getOid>
				</mapValue>
			</value>
			<label>Mccb 27 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_27_trip_status">
			<type>state</type>
			<sensorId>_MCCB_27_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_146</getOid>
				</mapValue>
			</value>
			<label>Mccb 27 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_28_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_28_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_147</getOid>
				</mapValue>
			</value>
			<label>Mccb 28 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_28_trip_status">
			<type>state</type>
			<sensorId>_MCCB_28_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_148</getOid>
				</mapValue>
			</value>
			<label>Mccb 28 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_29_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_29_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_149</getOid>
				</mapValue>
			</value>
			<label>Mccb 29 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_29_trip_status">
			<type>state</type>
			<sensorId>_MCCB_29_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_150</getOid>
				</mapValue>
			</value>
			<label>Mccb 29 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_30_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_30_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_151</getOid>
				</mapValue>
			</value>
			<label>Mccb 30 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_30_trip_status">
			<type>state</type>
			<sensorId>_MCCB_30_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_152</getOid>
				</mapValue>
			</value>
			<label>Mccb 30 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_31_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_31_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_153</getOid>
				</mapValue>
			</value>
			<label>Mccb 31 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_31_trip_status">
			<type>state</type>
			<sensorId>_MCCB_31_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_154</getOid>
				</mapValue>
			</value>
			<label>Mccb 31 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_32_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_32_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_155</getOid>
				</mapValue>
			</value>
			<label>Mccb 32 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_32_trip_status">
			<type>state</type>
			<sensorId>_MCCB_32_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_156</getOid>
				</mapValue>
			</value>
			<label>Mccb 32 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_33_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_33_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_157</getOid>
				</mapValue>
			</value>
			<label>Mccb 33 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_33_trip_status">
			<type>state</type>
			<sensorId>_MCCB_33_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_158</getOid>
				</mapValue>
			</value>
			<label>Mccb 33 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_34_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_34_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_159</getOid>
				</mapValue>
			</value>
			<label>Mccb 34 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_34_trip_status">
			<type>state</type>
			<sensorId>_MCCB_34_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_160</getOid>
				</mapValue>
			</value>
			<label>Mccb 34 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_35_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_35_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_161</getOid>
				</mapValue>
			</value>
			<label>Mccb 35 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_35_trip_status">
			<type>state</type>
			<sensorId>_MCCB_35_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_162</getOid>
				</mapValue>
			</value>
			<label>Mccb 35 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_36_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_36_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_163</getOid>
				</mapValue>
			</value>
			<label>Mccb 36 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_36_trip_status">
			<type>state</type>
			<sensorId>_MCCB_36_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_164</getOid>
				</mapValue>
			</value>
			<label>Mccb 36 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_37_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_37_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_165</getOid>
				</mapValue>
			</value>
			<label>Mccb 37 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_37_trip_status">
			<type>state</type>
			<sensorId>_MCCB_37_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_166</getOid>
				</mapValue>
			</value>
			<label>Mccb 37 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_38_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_38_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_167</getOid>
				</mapValue>
			</value>
			<label>Mccb 38 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_38_trip_status">
			<type>state</type>
			<sensorId>_MCCB_38_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_168</getOid>
				</mapValue>
			</value>
			<label>Mccb 38 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_39_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_39_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_169</getOid>
				</mapValue>
			</value>
			<label>Mccb 39 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_39_trip_status">
			<type>state</type>
			<sensorId>_MCCB_39_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_170</getOid>
				</mapValue>
			</value>
			<label>Mccb 39 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_40_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_40_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_171</getOid>
				</mapValue>
			</value>
			<label>Mccb 40 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_40_trip_status">
			<type>state</type>
			<sensorId>_MCCB_40_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_172</getOid>
				</mapValue>
			</value>
			<label>Mccb 40 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_41_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_41_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_173</getOid>
				</mapValue>
			</value>
			<label>Mccb 41 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_41_trip_status">
			<type>state</type>
			<sensorId>_MCCB_41_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_174</getOid>
				</mapValue>
			</value>
			<label>Mccb 41 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_42_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_42_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_175</getOid>
				</mapValue>
			</value>
			<label>Mccb 42 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_42_trip_status">
			<type>state</type>
			<sensorId>_MCCB_42_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_176</getOid>
				</mapValue>
			</value>
			<label>Mccb 42 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_43_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_43_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_177</getOid>
				</mapValue>
			</value>
			<label>Mccb 43 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_43_trip_status">
			<type>state</type>
			<sensorId>_MCCB_43_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_178</getOid>
				</mapValue>
			</value>
			<label>Mccb 43 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_44_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_44_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_179</getOid>
				</mapValue>
			</value>
			<label>Mccb 44 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_44_trip_status">
			<type>state</type>
			<sensorId>_MCCB_44_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_180</getOid>
				</mapValue>
			</value>
			<label>Mccb 44 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_45_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_45_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_181</getOid>
				</mapValue>
			</value>
			<label>Mccb 45 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_45_trip_status">
			<type>state</type>
			<sensorId>_MCCB_45_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_182</getOid>
				</mapValue>
			</value>
			<label>Mccb 45 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_46_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_46_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_183</getOid>
				</mapValue>
			</value>
			<label>Mccb 46 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_46_trip_status">
			<type>state</type>
			<sensorId>_MCCB_46_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_184</getOid>
				</mapValue>
			</value>
			<label>Mccb 46 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_47_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_47_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_185</getOid>
				</mapValue>
			</value>
			<label>Mccb 47 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_47_trip_status">
			<type>state</type>
			<sensorId>_MCCB_47_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_186</getOid>
				</mapValue>
			</value>
			<label>Mccb 47 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_48_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_48_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_187</getOid>
				</mapValue>
			</value>
			<label>Mccb 48 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_48_trip_status">
			<type>state</type>
			<sensorId>_MCCB_48_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_188</getOid>
				</mapValue>
			</value>
			<label>Mccb 48 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_49_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_49_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_189</getOid>
				</mapValue>
			</value>
			<label>Mccb 49 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_49_trip_status">
			<type>state</type>
			<sensorId>_MCCB_49_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_190</getOid>
				</mapValue>
			</value>
			<label>Mccb 49 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_50_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_50_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_191</getOid>
				</mapValue>
			</value>
			<label>Mccb 50 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_50_trip_status">
			<type>state</type>
			<sensorId>_MCCB_50_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_192</getOid>
				</mapValue>
			</value>
			<label>Mccb 50 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_51_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_51_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_193</getOid>
				</mapValue>
			</value>
			<label>Mccb 51 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_51_trip_status">
			<type>state</type>
			<sensorId>_MCCB_51_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_194</getOid>
				</mapValue>
			</value>
			<label>Mccb 51 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_52_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_52_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_195</getOid>
				</mapValue>
			</value>
			<label>Mccb 52 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_52_trip_status">
			<type>state</type>
			<sensorId>_MCCB_52_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_196</getOid>
				</mapValue>
			</value>
			<label>Mccb 52 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_53_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_53_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_197</getOid>
				</mapValue>
			</value>
			<label>Mccb 53 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_53_trip_status">
			<type>state</type>
			<sensorId>_MCCB_53_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_198</getOid>
				</mapValue>
			</value>
			<label>Mccb 53 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_54_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_54_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_199</getOid>
				</mapValue>
			</value>
			<label>Mccb 54 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_54_trip_status">
			<type>state</type>
			<sensorId>_MCCB_54_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_200</getOid>
				</mapValue>
			</value>
			<label>Mccb 54 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_55_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_55_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_201</getOid>
				</mapValue>
			</value>
			<label>Mccb 55 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_55_trip_status">
			<type>state</type>
			<sensorId>_MCCB_55_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_202</getOid>
				</mapValue>
			</value>
			<label>Mccb 55 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_56_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_56_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_203</getOid>
				</mapValue>
			</value>
			<label>Mccb 56 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_56_trip_status">
			<type>state</type>
			<sensorId>_MCCB_56_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_204</getOid>
				</mapValue>
			</value>
			<label>Mccb 56 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_57_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_57_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_205</getOid>
				</mapValue>
			</value>
			<label>Mccb 57 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_57_trip_status">
			<type>state</type>
			<sensorId>_MCCB_57_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_206</getOid>
				</mapValue>
			</value>
			<label>Mccb 57 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_58_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_58_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_207</getOid>
				</mapValue>
			</value>
			<label>Mccb 58 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_58_trip_status">
			<type>state</type>
			<sensorId>_MCCB_58_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_208</getOid>
				</mapValue>
			</value>
			<label>Mccb 58 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_59_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_59_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_209</getOid>
				</mapValue>
			</value>
			<label>Mccb 59 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_59_trip_status">
			<type>state</type>
			<sensorId>_MCCB_59_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_210</getOid>
				</mapValue>
			</value>
			<label>Mccb 59 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_60_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_60_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_211</getOid>
				</mapValue>
			</value>
			<label>Mccb 60 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_60_trip_status">
			<type>state</type>
			<sensorId>_MCCB_60_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_212</getOid>
				</mapValue>
			</value>
			<label>Mccb 60 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_61_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_61_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_213</getOid>
				</mapValue>
			</value>
			<label>Mccb 61 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_61_trip_status">
			<type>state</type>
			<sensorId>_MCCB_61_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_214</getOid>
				</mapValue>
			</value>
			<label>Mccb 61 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_62_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_62_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_215</getOid>
				</mapValue>
			</value>
			<label>Mccb 62 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_62_trip_status">
			<type>state</type>
			<sensorId>_MCCB_62_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_216</getOid>
				</mapValue>
			</value>
			<label>Mccb 62 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb_63_on/off_status">
			<type>state</type>
			<sensorId>_MCCB_63_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_217</getOid>
				</mapValue>
			</value>
			<label>Mccb 63 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb63_trip_status">
			<type>state</type>
			<sensorId>_MCCB63_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_218</getOid>
				</mapValue>
			</value>
			<label>Mccb63 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb64_on/off_status">
			<type>state</type>
			<sensorId>_MCCB64_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_219</getOid>
				</mapValue>
			</value>
			<label>Mccb64 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb64_trip_status">
			<type>state</type>
			<sensorId>_MCCB64_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_220</getOid>
				</mapValue>
			</value>
			<label>Mccb64 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb65_on/off_status">
			<type>state</type>
			<sensorId>_MCCB65_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_221</getOid>
				</mapValue>
			</value>
			<label>Mccb65 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb65_trip_status">
			<type>state</type>
			<sensorId>_MCCB65_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_222</getOid>
				</mapValue>
			</value>
			<label>Mccb65 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb66_on/off_status">
			<type>state</type>
			<sensorId>_MCCB66_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_223</getOid>
				</mapValue>
			</value>
			<label>Mccb66 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb66_trip_status">
			<type>state</type>
			<sensorId>_MCCB66_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_224</getOid>
				</mapValue>
			</value>
			<label>Mccb66 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb67_on/off_status">
			<type>state</type>
			<sensorId>_MCCB67_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_225</getOid>
				</mapValue>
			</value>
			<label>Mccb67 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb67_trip_status">
			<type>state</type>
			<sensorId>_MCCB67_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_226</getOid>
				</mapValue>
			</value>
			<label>Mccb67 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb68_on/off_status">
			<type>state</type>
			<sensorId>_MCCB68_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_227</getOid>
				</mapValue>
			</value>
			<label>Mccb68 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb68_trip_status">
			<type>state</type>
			<sensorId>_MCCB68_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_228</getOid>
				</mapValue>
			</value>
			<label>Mccb68 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb69_on/off_status">
			<type>state</type>
			<sensorId>_MCCB69_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_229</getOid>
				</mapValue>
			</value>
			<label>Mccb69 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb69_trip_status">
			<type>state</type>
			<sensorId>_MCCB69_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_230</getOid>
				</mapValue>
			</value>
			<label>Mccb69 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb70_on/off_status">
			<type>state</type>
			<sensorId>_MCCB70_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_231</getOid>
				</mapValue>
			</value>
			<label>Mccb70 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb70_trip_status">
			<type>state</type>
			<sensorId>_MCCB70_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_232</getOid>
				</mapValue>
			</value>
			<label>Mccb70 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb71_on/off_status">
			<type>state</type>
			<sensorId>_MCCB71_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_233</getOid>
				</mapValue>
			</value>
			<label>Mccb71 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb71_trip_status">
			<type>state</type>
			<sensorId>_MCCB71_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_234</getOid>
				</mapValue>
			</value>
			<label>Mccb71 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb72_on/off_status">
			<type>state</type>
			<sensorId>_MCCB72_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_235</getOid>
				</mapValue>
			</value>
			<label>Mccb72 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb72_trip_status">
			<type>state</type>
			<sensorId>_MCCB72_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_236</getOid>
				</mapValue>
			</value>
			<label>Mccb72 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb73_on/off_status">
			<type>state</type>
			<sensorId>_MCCB73_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_237</getOid>
				</mapValue>
			</value>
			<label>Mccb73 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb73_trip_status">
			<type>state</type>
			<sensorId>_MCCB73_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_238</getOid>
				</mapValue>
			</value>
			<label>Mccb73 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb74_on/off_status">
			<type>state</type>
			<sensorId>_MCCB74_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_239</getOid>
				</mapValue>
			</value>
			<label>Mccb74 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb74_trip_status">
			<type>state</type>
			<sensorId>_MCCB74_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_240</getOid>
				</mapValue>
			</value>
			<label>Mccb74 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb75_on/off_status">
			<type>state</type>
			<sensorId>_MCCB75_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_241</getOid>
				</mapValue>
			</value>
			<label>Mccb75 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb75_trip_status">
			<type>state</type>
			<sensorId>_MCCB75_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_242</getOid>
				</mapValue>
			</value>
			<label>Mccb75 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb76_on/off_status">
			<type>state</type>
			<sensorId>_MCCB76_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_243</getOid>
				</mapValue>
			</value>
			<label>Mccb76 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb76_trip_status">
			<type>state</type>
			<sensorId>_MCCB76_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_244</getOid>
				</mapValue>
			</value>
			<label>Mccb76 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb77_on/off_status">
			<type>state</type>
			<sensorId>_MCCB77_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_245</getOid>
				</mapValue>
			</value>
			<label>Mccb77 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb77_trip_status">
			<type>state</type>
			<sensorId>_MCCB77_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_246</getOid>
				</mapValue>
			</value>
			<label>Mccb77 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb78_on/off_status">
			<type>state</type>
			<sensorId>_MCCB78_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_247</getOid>
				</mapValue>
			</value>
			<label>Mccb78 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb78_trip_status">
			<type>state</type>
			<sensorId>_MCCB78_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_248</getOid>
				</mapValue>
			</value>
			<label>Mccb78 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb79_on/off_status">
			<type>state</type>
			<sensorId>_MCCB79_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_249</getOid>
				</mapValue>
			</value>
			<label>Mccb79 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb79_trip_status">
			<type>state</type>
			<sensorId>_MCCB79_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_250</getOid>
				</mapValue>
			</value>
			<label>Mccb79 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb80_on/off_status">
			<type>state</type>
			<sensorId>_MCCB80_ON/OFF_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_251</getOid>
				</mapValue>
			</value>
			<label>Mccb80 on/off status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="mccb80_trip_status">
			<type>state</type>
			<sensorId>_MCCB80_TRIP_STATUS</sensorId>
			<value>
				<mapValue mapid="truefalse_vm">
					<getOid>Function_2_Reg_252</getOid>
				</mapValue>
			</value>
			<label>Mccb80 trip status</label>
			<enum>truefalse_em</enum>
			<sensorSet>Status</sensorSet>
		</stateSensor>
		<alarmFlags ruleid="ups_1_battery_discharge_alarm">
			<value>
				<getOid>Function_2_Reg_53</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 1 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 1 Battery Discharge Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 1 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 1 Battery Discharge Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_1_battery_low_voltage">
			<value>
				<getOid>Function_2_Reg_54</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 1 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 1 Battery Low Voltage Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 1 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 1 Battery Low Voltage Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_1_load_on_bypass">
			<value>
				<getOid>Function_2_Reg_55</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 1 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 1 Load on Bypass Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 1 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 1 Load on Bypass Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_1_incoming_power_fail_(rectifier_input-voltage_abnormal)">
			<value>
				<getOid>Function_2_Reg_56</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 1 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 1 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 1 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 1 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_1_common_alarm">
			<value>
				<getOid>Function_2_Reg_57</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 1 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 1 Common Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 1 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 1 Common Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_2_battery_discharge_alarm">
			<value>
				<getOid>Function_2_Reg_58</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 2 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 2 Battery Discharge Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 2 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 2 Battery Discharge Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_2_battery_low_voltage">
			<value>
				<getOid>Function_2_Reg_59</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 2 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 2 Battery Low Voltage Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 2 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 2 Battery Low Voltage Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_2_load_on_bypass">
			<value>
				<getOid>Function_2_Reg_60</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 2 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 2 Load on Bypass Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 2 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 2 Load on Bypass Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_2_incoming_power_fail_(rectifier_input-voltage_abnormal)">
			<value>
				<getOid>Function_2_Reg_61</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 2 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 2 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 2 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 2 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_2_common_alarm">
			<value>
				<getOid>Function_2_Reg_62</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 2 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 2 Common Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 2 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 2 Common Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_3_battery_discharge_alarm">
			<value>
				<getOid>Function_2_Reg_63</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 3 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 3 Battery Discharge Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 3 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 3 Battery Discharge Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_3_battery_low_voltage">
			<value>
				<getOid>Function_2_Reg_64</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 3 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 3 Battery Low Voltage Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 3 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 3 Battery Low Voltage Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_3_load_on_bypass">
			<value>
				<getOid>Function_2_Reg_65</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 3 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 3 Load on Bypass Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 3 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 3 Load on Bypass Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_3_incoming_power_fail_(rectifier_input-voltage_abnormal)">
			<value>
				<getOid>Function_2_Reg_66</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 3 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 3 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 3 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 3 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_3_common_alarm">
			<value>
				<getOid>Function_2_Reg_67</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 3 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 3 Common Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 3 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 3 Common Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_4_battery_discharge_alarm">
			<value>
				<getOid>Function_2_Reg_68</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 4 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 4 Battery Discharge Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 4 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 4 Battery Discharge Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_4_battery_low_voltage">
			<value>
				<getOid>Function_2_Reg_69</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 4 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 4 Battery Low Voltage Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 4 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 4 Battery Low Voltage Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_4_load_on_bypass">
			<value>
				<getOid>Function_2_Reg_70</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 4 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 4 Load on Bypass Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 4 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 4 Load on Bypass Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_4_incoming_power_fail_(rectifier_input-voltage_abnormal)">
			<value>
				<getOid>Function_2_Reg_71</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 4 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 4 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 4 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 4 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_4_common_alarm">
			<value>
				<getOid>Function_2_Reg_72</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 4 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 4 Common Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 4 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 4 Common Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_5_battery_discharge_alarm">
			<value>
				<getOid>Function_2_Reg_73</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 5 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 5 Battery Discharge Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 5 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 5 Battery Discharge Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_5_battery_low_voltage">
			<value>
				<getOid>Function_2_Reg_74</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 5 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 5 Battery Low Voltage Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 5 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 5 Battery Low Voltage Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_5_load_on_bypass">
			<value>
				<getOid>Function_2_Reg_75</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 5 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 5 Load on Bypass Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 5 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 5 Load on Bypass Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_5_incoming_power_fail_(rectifier_input-voltage_abnormal)">
			<value>
				<getOid>Function_2_Reg_76</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 5 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 5 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 5 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 5 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_5_common_alarm">
			<value>
				<getOid>Function_2_Reg_77</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 5 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 5 Common Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 5 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 5 Common Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_6_battery_discharge_alarm">
			<value>
				<getOid>Function_2_Reg_78</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 6 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 6 Battery Discharge Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 6 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 6 Battery Discharge Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_6_battery_low_voltage">
			<value>
				<getOid>Function_2_Reg_79</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 6 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 6 Battery Low Voltage Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 6 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 6 Battery Low Voltage Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_6_load_on_bypass">
			<value>
				<getOid>Function_2_Reg_80</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 6 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 6 Load on Bypass Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 6 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 6 Load on Bypass Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_6_incoming_power_fail_(rectifier_input-voltage_abnormal)">
			<value>
				<getOid>Function_2_Reg_81</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 6 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 6 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 6 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 6 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_6_common_alarm">
			<value>
				<getOid>Function_2_Reg_82</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 6 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 6 Common Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 6 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 6 Common Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_7_battery_discharge_alarm">
			<value>
				<getOid>Function_2_Reg_83</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 7 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 7 Battery Discharge Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 7 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 7 Battery Discharge Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_7_battery_low_voltage">
			<value>
				<getOid>Function_2_Reg_84</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 7 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 7 Battery Low Voltage Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 7 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 7 Battery Low Voltage Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_7_load_on_bypass">
			<value>
				<getOid>Function_2_Reg_85</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 7 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 7 Load on Bypass Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 7 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 7 Load on Bypass Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_7_incoming_power_fail_(rectifier_input-voltage_abnormal)">
			<value>
				<getOid>Function_2_Reg_86</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 7 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 7 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 7 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 7 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_7_common_alarm">
			<value>
				<getOid>Function_2_Reg_87</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 7 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 7 Common Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 7 Common Alarm Condition Present</activeText>
					<inactiveText>UPS 7 Common Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_8_battery_discharge_alarm">
			<value>
				<getOid>Function_2_Reg_88</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 8 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 8 Battery Discharge Alarm Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 8 Battery Discharge Alarm Condition Present</activeText>
					<inactiveText>UPS 8 Battery Discharge Alarm Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_8_battery_low_voltage">
			<value>
				<getOid>Function_2_Reg_89</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 8 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 8 Battery Low Voltage Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 8 Battery Low Voltage Condition Present</activeText>
					<inactiveText>UPS 8 Battery Low Voltage Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_8_load_on_bypass">
			<value>
				<getOid>Function_2_Reg_90</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 8 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 8 Load on Bypass Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 8 Load on Bypass Condition Present</activeText>
					<inactiveText>UPS 8 Load on Bypass Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="ups_8_incoming_power_fail_(rectifier_input-voltage_abnormal)">
			<value>
				<getOid>Function_2_Reg_91</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>UPS 8 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 8 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>system</category>
				<description>
					<activeText>UPS 8 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Present</activeText>
					<inactiveText>UPS 8 Incoming Power Fail (Rectifier Input
Voltage Abnormal) Condition Cleared</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<valueMap ruleid="truefalse_vm">
			<valueIn>0</valueIn>
			<valueOut>0</valueOut>
			<valueIn>1</valueIn>
			<valueOut>1</valueOut>
			<valueIn>*</valueIn>
			<valueOut>0</valueOut>
		</valueMap>

		<enumMap ruleid="truefalse_em">
			<label>false</label>
			<label>true</label>
		</enumMap>
	</device>
	<protocol>
		<modbus>
			<value_ref_id valid="Function_2_Reg_230">
				<function>2</function>
				<start_addr>229</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_55">
				<function>2</function>
				<start_addr>54</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_71">
				<function>2</function>
				<start_addr>70</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_78">
				<function>2</function>
				<start_addr>77</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_134">
				<function>2</function>
				<start_addr>133</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_155">
				<function>2</function>
				<start_addr>154</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_216">
				<function>2</function>
				<start_addr>215</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_237">
				<function>2</function>
				<start_addr>236</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_176">
				<function>2</function>
				<start_addr>175</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_64">
				<function>2</function>
				<start_addr>63</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_202">
				<function>2</function>
				<start_addr>201</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_159">
				<function>2</function>
				<start_addr>158</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_223">
				<function>2</function>
				<start_addr>222</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_186">
				<function>2</function>
				<start_addr>185</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_244">
				<function>2</function>
				<start_addr>243</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_87">
				<function>2</function>
				<start_addr>86</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_182">
				<function>2</function>
				<start_addr>181</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_138">
				<function>2</function>
				<start_addr>137</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_161">
				<function>2</function>
				<start_addr>160</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_190">
				<function>2</function>
				<start_addr>189</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_53">
				<function>2</function>
				<start_addr>52</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_227">
				<function>2</function>
				<start_addr>226</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_240">
				<function>2</function>
				<start_addr>239</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_187">
				<function>2</function>
				<start_addr>186</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_248">
				<function>2</function>
				<start_addr>247</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_149">
				<function>2</function>
				<start_addr>148</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_213">
				<function>2</function>
				<start_addr>212</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_166">
				<function>2</function>
				<start_addr>165</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_145">
				<function>2</function>
				<start_addr>144</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_206">
				<function>2</function>
				<start_addr>205</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_62">
				<function>2</function>
				<start_addr>61</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_175">
				<function>2</function>
				<start_addr>174</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_196">
				<function>2</function>
				<start_addr>195</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_89">
				<function>2</function>
				<start_addr>88</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_234">
				<function>2</function>
				<start_addr>233</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_210">
				<function>2</function>
				<start_addr>209</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_140">
				<function>2</function>
				<start_addr>139</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_171">
				<function>2</function>
				<start_addr>170</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_238">
				<function>2</function>
				<start_addr>237</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_154">
				<function>2</function>
				<start_addr>153</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_139">
				<function>2</function>
				<start_addr>138</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_251">
				<function>2</function>
				<start_addr>250</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_201">
				<function>2</function>
				<start_addr>200</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_224">
				<function>2</function>
				<start_addr>223</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_177">
				<function>2</function>
				<start_addr>176</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_135">
				<function>2</function>
				<start_addr>134</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_185">
				<function>2</function>
				<start_addr>184</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_243">
				<function>2</function>
				<start_addr>242</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_162">
				<function>2</function>
				<start_addr>161</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_59">
				<function>2</function>
				<start_addr>58</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_67">
				<function>2</function>
				<start_addr>66</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_91">
				<function>2</function>
				<start_addr>90</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_158">
				<function>2</function>
				<start_addr>157</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_219">
				<function>2</function>
				<start_addr>218</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_73">
				<function>2</function>
				<start_addr>72</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_220">
				<function>2</function>
				<start_addr>219</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_181">
				<function>2</function>
				<start_addr>180</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_247">
				<function>2</function>
				<start_addr>246</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_61">
				<function>2</function>
				<start_addr>60</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_80">
				<function>2</function>
				<start_addr>79</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_144">
				<function>2</function>
				<start_addr>143</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_205">
				<function>2</function>
				<start_addr>204</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_233">
				<function>2</function>
				<start_addr>232</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_66">
				<function>2</function>
				<start_addr>65</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_148">
				<function>2</function>
				<start_addr>147</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_54">
				<function>2</function>
				<start_addr>53</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_153">
				<function>2</function>
				<start_addr>152</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_214">
				<function>2</function>
				<start_addr>213</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_228">
				<function>2</function>
				<start_addr>227</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_167">
				<function>2</function>
				<start_addr>166</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_85">
				<function>2</function>
				<start_addr>84</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_172">
				<function>2</function>
				<start_addr>171</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_209">
				<function>2</function>
				<start_addr>208</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_195">
				<function>2</function>
				<start_addr>194</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_63">
				<function>2</function>
				<start_addr>62</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_90">
				<function>2</function>
				<start_addr>89</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_132">
				<function>2</function>
				<start_addr>131</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_191">
				<function>2</function>
				<start_addr>190</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_86">
				<function>2</function>
				<start_addr>85</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_56">
				<function>2</function>
				<start_addr>55</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_72">
				<function>2</function>
				<start_addr>71</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_178">
				<function>2</function>
				<start_addr>177</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_242">
				<function>2</function>
				<start_addr>241</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_199">
				<function>2</function>
				<start_addr>198</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_252">
				<function>2</function>
				<start_addr>251</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_157">
				<function>2</function>
				<start_addr>156</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_204">
				<function>2</function>
				<start_addr>203</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_221">
				<function>2</function>
				<start_addr>220</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_79">
				<function>2</function>
				<start_addr>78</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_246">
				<function>2</function>
				<start_addr>245</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_225">
				<function>2</function>
				<start_addr>224</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_239">
				<function>2</function>
				<start_addr>238</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_142">
				<function>2</function>
				<start_addr>141</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_218">
				<function>2</function>
				<start_addr>217</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_163">
				<function>2</function>
				<start_addr>162</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_150">
				<function>2</function>
				<start_addr>149</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_184">
				<function>2</function>
				<start_addr>183</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_136">
				<function>2</function>
				<start_addr>135</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_60">
				<function>2</function>
				<start_addr>59</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_65">
				<function>2</function>
				<start_addr>64</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_81">
				<function>2</function>
				<start_addr>80</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_143">
				<function>2</function>
				<start_addr>142</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_68">
				<function>2</function>
				<start_addr>67</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_84">
				<function>2</function>
				<start_addr>83</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_168">
				<function>2</function>
				<start_addr>167</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_232">
				<function>2</function>
				<start_addr>231</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_189">
				<function>2</function>
				<start_addr>188</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_58">
				<function>2</function>
				<start_addr>57</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_74">
				<function>2</function>
				<start_addr>73</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_215">
				<function>2</function>
				<start_addr>214</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_241">
				<function>2</function>
				<start_addr>240</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_236">
				<function>2</function>
				<start_addr>235</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_211">
				<function>2</function>
				<start_addr>210</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_77">
				<function>2</function>
				<start_addr>76</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_152">
				<function>2</function>
				<start_addr>151</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_229">
				<function>2</function>
				<start_addr>228</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_160">
				<function>2</function>
				<start_addr>159</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_194">
				<function>2</function>
				<start_addr>193</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_147">
				<function>2</function>
				<start_addr>146</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_208">
				<function>2</function>
				<start_addr>207</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_173">
				<function>2</function>
				<start_addr>172</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_180">
				<function>2</function>
				<start_addr>179</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_192">
				<function>2</function>
				<start_addr>191</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_250">
				<function>2</function>
				<start_addr>249</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_133">
				<function>2</function>
				<start_addr>132</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_70">
				<function>2</function>
				<start_addr>69</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_198">
				<function>2</function>
				<start_addr>197</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_222">
				<function>2</function>
				<start_addr>221</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_179">
				<function>2</function>
				<start_addr>178</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_203">
				<function>2</function>
				<start_addr>202</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_137">
				<function>2</function>
				<start_addr>136</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_164">
				<function>2</function>
				<start_addr>163</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_156">
				<function>2</function>
				<start_addr>155</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_217">
				<function>2</function>
				<start_addr>216</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_141">
				<function>2</function>
				<start_addr>140</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_183">
				<function>2</function>
				<start_addr>182</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_245">
				<function>2</function>
				<start_addr>244</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_75">
				<function>2</function>
				<start_addr>74</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_83">
				<function>2</function>
				<start_addr>82</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_57">
				<function>2</function>
				<start_addr>56</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_170">
				<function>2</function>
				<start_addr>169</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_88">
				<function>2</function>
				<start_addr>87</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_249">
				<function>2</function>
				<start_addr>248</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_200">
				<function>2</function>
				<start_addr>199</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_226">
				<function>2</function>
				<start_addr>225</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_165">
				<function>2</function>
				<start_addr>164</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_76">
				<function>2</function>
				<start_addr>75</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_231">
				<function>2</function>
				<start_addr>230</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_188">
				<function>2</function>
				<start_addr>187</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_212">
				<function>2</function>
				<start_addr>211</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_169">
				<function>2</function>
				<start_addr>168</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_82">
				<function>2</function>
				<start_addr>81</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_197">
				<function>2</function>
				<start_addr>196</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_235">
				<function>2</function>
				<start_addr>234</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_174">
				<function>2</function>
				<start_addr>173</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_146">
				<function>2</function>
				<start_addr>145</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_207">
				<function>2</function>
				<start_addr>206</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_193">
				<function>2</function>
				<start_addr>192</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_69">
				<function>2</function>
				<start_addr>68</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="Function_2_Reg_151">
				<function>2</function>
				<start_addr>150</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>
