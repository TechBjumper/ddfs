<?xml version="1.0"?>
<APC_DDF 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
    ddfid="unitronics_c2000" 
	ddfname="Unitronics C2000" 
	ddfversion="1" 
	canremove="yes">
  <schemaVersion>1.6</schemaVersion>

  <device deviceid="unitronics_c2000">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

    <setProductData ruleid="vendordata" field="vendor">Unitronics</setProductData>
    <setProductData ruleid="modeldata" field="model">C2000</setProductData>
    <setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
	<setProductData ruleid="hardware" field="revision"><getOid>HW_VERSION</getOid></setProductData>
	<setProductData ruleid="software" field="appversion"><getOid>SOFTWARE_VERSION</getOid></setProductData>
	
	<numSensor ruleid="voltage_between_phase_a_and_b_of_source_1">
		  <type>voltage</type>
		  <sensorId>VOLTAGE_BETWEEN_PHASE_A_AND_B_OF_SOURCE_1</sensorId>
		  <value>
			<getOid>VOLTAGE_BETWEEN_PHASE_A_AND_B_OF_SOURCE_1</getOid>
		  </value>
		  <label>Voltage between Phase A and B of Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="voltage_between_phase_b_and_c_of_source_1">
		  <type>voltage</type>
		  <sensorId>VOLTAGE_BETWEEN_PHASE_B_AND_C_OF_SOURCE_1</sensorId>
		  <value>
			<getOid>VOLTAGE_BETWEEN_PHASE_B_AND_C_OF_SOURCE_1</getOid>
          </value>
		  <label>Voltage between Phase B and C of Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="voltage_between_phase_c_and_a_of_source_1">
		  <type>voltage</type>
		  <sensorId>VOLTAGE_BETWEEN_PHASE_C_AND_A_OF_SOURCE_1</sensorId>
		  <value>
			<getOid>VOLTAGE_BETWEEN_PHASE_C_AND_A_OF_SOURCE_1</getOid>
          </value>
		  <label>Voltage between Phase C and A of Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="frequency_of_source_1">
		  <type>frequency</type>
		  <sensorId>FREQUENCY_OF_SOURCE_1</sensorId>
		  <value>
			<div>
				<op><getOid>FREQUENCY_OF_SOURCE_1</getOid></op>
				<op>0.1</op>
			</div>
		  </value>
		  <label>Frequency of Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="voltage_between_phase_a_and_b_of_source_2">
		  <type>voltage</type>
		  <sensorId>VOLTAGE_BETWEEN_PHASE_A_AND_B_OF_SOURCE_2</sensorId>
		  <value>
			<getOid>VOLTAGE_BETWEEN_PHASE_A_AND_B_OF_SOURCE_2</getOid>
		  </value>
		  <label>Voltage between Phase A and B of Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="voltage_between_phase_b_and_c_of_source_2">
		  <type>voltage</type>
		  <sensorId>VOLTAGE_BETWEEN_PHASE_B_AND_C_OF_SOURCE_2</sensorId>
		  <value>
			<getOid>VOLTAGE_BETWEEN_PHASE_B_AND_C_OF_SOURCE_2</getOid>
          </value>
		  <label>Voltage between Phase B and C of Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="voltage_between_phase_c_and_a_of_source_2">
		  <type>voltage</type>
		  <sensorId>VOLTAGE_BETWEEN_PHASE_C_AND_A_OF_SOURCE_2</sensorId>
		  <value>
			<getOid>VOLTAGE_BETWEEN_PHASE_C_AND_A_OF_SOURCE_2</getOid>
          </value>
		  <label>Voltage between Phase C and A of Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="frequency_of_source_2">
		  <type>frequency</type>
		  <sensorId>FREQUENCY_OF_SOURCE_2</sensorId>
		  <value>
			<div>
				<op><getOid>FREQUENCY_OF_SOURCE_2</getOid></op>
				<op>0.1</op>
			</div>
		  </value>
		  <label>Frequency of Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="unbalance_of_source_1">
		  <type>pctofcapacity</type>
		  <sensorId>UNBALANCE_OF_SOURCE_1</sensorId>
		  <value>
			<getOid>UNBALANCE_OF_SOURCE_1</getOid>
		  </value>
		  <label>Unbalance of Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="unbalance_of_source_2">
		  <type>pctofcapacity</type>
		  <sensorId>UNBALANCE_OF_SOURCE_2</sensorId>
		  <value>
			<getOid>UNBALANCE_OF_SOURCE_2</getOid>
		  </value>
		  <label>Unbalance of Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="temperature_of_controller">
		  <type>temp</type>
		  <sensorId>TEMPERATURE_OF_CONTROLLER</sensorId>
		  <value>
			<getOid>TEMPERATURE_OF_CONTROLLER</getOid>
		  </value>
		  <label>Temperature of Controller</label>
		  <sensorSet>Controller</sensorSet>
	  </numSensor>
	  <numSensor ruleid="degree_gap_between_vab_1_and_vbc_1">
		  <type>num</type>
		  <units>degreesAngle</units>
		  <sensorId>DEGREE_GAP_BETWEEN_VAB_1_AND_VBC_1</sensorId>
		  <value>
			<getOid>DEGREE_GAP_BETWEEN_VAB_1_AND_VBC_1</getOid>
		  </value>
		  <label>Degree Gap VAB 1 - VBC 1</label>
		  <sensorSet>Gap</sensorSet>
	  </numSensor>
	  <numSensor ruleid="degree_gap_between_vbc_1_and_vca_1">
		  <type>num</type>
		  <units>degreesAngle</units>
		  <sensorId>DEGREE_GAP_BETWEEN_VBC_1_AND_VCA_1</sensorId>
		  <value>
			<getOid>DEGREE_GAP_BETWEEN_VBC_1_AND_VCA_1</getOid>
		  </value>
		  <label>Degree Gap VBC 1 - VCA 1</label>
		  <sensorSet>Gap</sensorSet>
	  </numSensor>
	  <numSensor ruleid="degree_gap_between_vca_1_and_vab_1">
		  <type>num</type>
		  <units>degreesAngle</units>
		  <sensorId>DEGREE_GAP_BETWEEN_VCA_1_AND_VAB_1</sensorId>
		  <value>
			<getOid>DEGREE_GAP_BETWEEN_VCA_1_AND_VAB_1</getOid>
		  </value>
		  <label>Degree Gap VCA 1 - VAB 1</label>
		  <sensorSet>Gap</sensorSet>
	  </numSensor>
	  <numSensor ruleid="degree_gap_between_vab_2_and_vbc_2">
		  <type>num</type>
		  <units>degreesAngle</units>
		  <sensorId>DEGREE_GAP_BETWEEN_VAB_2_AND_VBC_2</sensorId>
		  <value>
			<getOid>DEGREE_GAP_BETWEEN_VAB_2_AND_VBC_2</getOid>
		  </value>
		  <label>Degree Gap VAB 2 - VBC 2</label>
		  <sensorSet>Gap</sensorSet>
	  </numSensor>
	  <numSensor ruleid="degree_gap_between_vbc_2_and_vca_2">
		  <type>num</type>
		  <units>degreesAngle</units>
		  <sensorId>DEGREE_GAP_BETWEEN_VBC_2_AND_VCA_2</sensorId>
		  <value>
			<getOid>DEGREE_GAP_BETWEEN_VBC_2_AND_VCA_2</getOid>
		  </value>
		  <label>Degree Gap VBC 2 - VCA 2</label>
		  <sensorSet>Gap</sensorSet>
	  </numSensor>
	  <numSensor ruleid="degree_gap_between_vca_2_and_vab_2">
		  <type>num</type>
		  <units>degreesAngle</units>
		  <sensorId>DEGREE_GAP_BETWEEN_VCA_2_AND_VAB_2</sensorId>
		  <value>
			<getOid>DEGREE_GAP_BETWEEN_VCA_2_AND_VAB_2</getOid>
		  </value>
		  <label>Degree Gap VCA 2 - VAB 2</label>
		  <sensorSet>Gap</sensorSet>
	  </numSensor>
	  <numSensor ruleid="rated_voltage">
		  <type>voltage</type>
		  <sensorId>RATED_VOLTAGE</sensorId>
		  <value>
			<getOid>RATED_VOLTAGE</getOid>
		  </value>
		  <label>Rated Voltage</label>
		  <sensorSet>General</sensorSet>
	  </numSensor>
	  <numSensor ruleid="rated_frequency">
		  <type>frequency</type>
		  <sensorId>RATED_FREQUENCY</sensorId>
		  <value>
			<getOid>RATED_FREQUENCY</getOid>
		  </value>
		  <label>Rated Frequency</label>
		  <sensorSet>General</sensorSet>
	  </numSensor>
	  <numSensor ruleid="time_delay_to_center_off_position">
		  <type>timeinsec</type>
		  <sensorId>TIME_DELAY_TO_CENTER_OFF_POSITION</sensorId>
		  <value>
			<getOid>TIME_DELAY_TO_CENTER_OFF_POSITION</getOid>
		  </value>
		  <label>Time Delay to Center Off Position</label>
		  <sensorSet>General</sensorSet>
	  </numSensor>
	  <numSensor ruleid="over_trip_voltage_source_1">
		  <type>pctofcapacity</type>
		  <sensorId>OVER_TRIP_VOLTAGE_SOURCE_1</sensorId>
		  <value>
			<getOid>OVER_TRIP_VOLTAGE_SOURCE_1</getOid>
		  </value>
		  <label>Over Trip Voltage - Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="over_trip_return_voltage_source_1">
		  <type>voltage</type>
		  <sensorId>OVER_TRIP_RETURN_VOLTAGE_SOURCE_1</sensorId>
		  <value>
			<getOid>OVER_TRIP_RETURN_VOLTAGE_SOURCE_1</getOid>
		  </value>
		  <label>Over Trip Return Voltage - Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="drop_out_voltage_source_1">
		  <type>pctofcapacity</type>
		  <sensorId>DROP_OUT_VOLTAGE_SOURCE_1</sensorId>
		  <value>
			<getOid>DROP_OUT_VOLTAGE_SOURCE_1</getOid>
		  </value>
		  <label>Drop Out Voltage - Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="drop_out_return_voltage_source_1">
		  <type>pctofcapacity</type>
		  <sensorId>DROP_OUT_RETURN_VOLTAGE_SOURCE_1</sensorId>
		  <value>
			<getOid>DROP_OUT_RETURN_VOLTAGE_SOURCE_1</getOid>
		  </value>
		  <label>Drop Out Return Voltage - Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="over_trip_frequency_source_1">
		  <type>pctofcapacity</type>
		  <sensorId>OVER_TRIP_FREQUENCY_SOURCE_1</sensorId>
		  <value>
			<getOid>OVER_TRIP_FREQUENCY_SOURCE_1</getOid>
		  </value>
		  <label>Over Trip Frequency - Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="over_trip_return_frequency_source_1">
		  <type>frequency</type>
		  <sensorId>OVER_TRIP_RETURN_FREQUENCY_SOURCE_1</sensorId>
		  <value>
			<getOid>OVER_TRIP_RETURN_FREQUENCY_SOURCE_1</getOid>
		  </value>
		  <label>Over Trip Return Frequency - Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="drop_out_frequency_source_1">
		  <type>pctofcapacity</type>
		  <sensorId>DROP_OUT_FREQUENCY_SOURCE_1</sensorId>
		  <value>
			<getOid>DROP_OUT_FREQUENCY_SOURCE_1</getOid>
		  </value>
		  <label>Drop Out Frequency - Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="drop_out_return_frequency_source_1">
		  <type>pctofcapacity</type>
		  <sensorId>DROP_OUT_RETURN_FREQUENCY_SOURCE_1</sensorId>
		  <value>
			<getOid>DROP_OUT_RETURN_FREQUENCY_SOURCE_1</getOid>
		  </value>
		  <label>Drop Out Return Frequency - Source 1</label>
		  <sensorSet>Source 1</sensorSet>
	  </numSensor>
	  <numSensor ruleid="over_trip_voltage_source_2">
		  <type>pctofcapacity</type>
		  <sensorId>OVER_TRIP_VOLTAGE_SOURCE_2</sensorId>
		  <value>
			<getOid>OVER_TRIP_VOLTAGE_SOURCE_2</getOid>
		  </value>
		  <label>Over Trip Voltage - Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="over_trip_return_voltage_source_2">
		  <type>voltage</type>
		  <sensorId>OVER_TRIP_RETURN_VOLTAGE_SOURCE_2</sensorId>
		  <value>
			<getOid>OVER_TRIP_RETURN_VOLTAGE_SOURCE_2</getOid>
		  </value>
		  <label>Over Trip Return Voltage - Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="drop_out_voltage_source_2">
		  <type>pctofcapacity</type>
		  <sensorId>DROP_OUT_VOLTAGE_SOURCE_2</sensorId>
		  <value>
			<getOid>DROP_OUT_VOLTAGE_SOURCE_2</getOid>
		  </value>
		  <label>Drop Out Voltage - Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="drop_out_return_voltage_source_2">
		  <type>pctofcapacity</type>
		  <sensorId>DROP_OUT_RETURN_VOLTAGE_SOURCE_2</sensorId>
		  <value>
			<getOid>DROP_OUT_RETURN_VOLTAGE_SOURCE_2</getOid>
		  </value>
		  <label>Drop Out Return Voltage - Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="over_trip_frequency_source_2">
		  <type>pctofcapacity</type>
		  <sensorId>OVER_TRIP_FREQUENCY_SOURCE_2</sensorId>
		  <value>
			<getOid>OVER_TRIP_FREQUENCY_SOURCE_2</getOid>
		  </value>
		  <label>Over Trip Frequency - Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="over_trip_return_frequency_source_2">
		  <type>frequency</type>
		  <sensorId>OVER_TRIP_RETURN_FREQUENCY_SOURCE_2</sensorId>
		  <value>
			<getOid>OVER_TRIP_RETURN_FREQUENCY_SOURCE_2</getOid>
		  </value>
		  <label>Over Trip Return Frequency - Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="drop_out_frequency_source_2">
		  <type>pctofcapacity</type>
		  <sensorId>DROP_OUT_FREQUENCY_SOURCE_2</sensorId>
		  <value>
			<getOid>DROP_OUT_FREQUENCY_SOURCE_2</getOid>
		  </value>
		  <label>Drop Out Frequency - Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="drop_out_return_frequency_source_2">
		  <type>pctofcapacity</type>
		  <sensorId>DROP_OUT_RETURN_FREQUENCY_SOURCE_2</sensorId>
		  <value>
			<getOid>DROP_OUT_RETURN_FREQUENCY_SOURCE_2</getOid>
		  </value>
		  <label>Drop Out Return Frequency - Source 2</label>
		  <sensorSet>Source 2</sensorSet>
	  </numSensor>
	  <numSensor ruleid="time_delay_source_1_detection">
		  <type>timeinsec</type>
		  <sensorId>TIME_DELAY_SOURCE_1_DETECTION</sensorId>
		  <value>
			<getOid>TIME_DELAY_SOURCE_1_DETECTION</getOid>
		  </value>
		  <label>Time Delay - Source 1 Detection</label>
		  <sensorSet>Time Delay</sensorSet>
	  </numSensor>
	  <numSensor ruleid="transfer_time_delay_position_1_to_2">
		  <type>timeinsec</type>
		  <sensorId>TRANSFER_TIME_DELAY_POSITION_1_TO_2</sensorId>
		  <value>
			<getOid>TRANSFER_TIME_DELAY_POSITION_1_TO_2</getOid>
		  </value>
		  <label>Transfer Time Delay Position 1 - 2</label>
		  <sensorSet>Time Delay</sensorSet>
	  </numSensor>
	  <numSensor ruleid="time_delay_source_2_detection">
		  <type>timeinsec</type>
		  <sensorId>TIME_DELAY_SOURCE_2_DETECTION</sensorId>
		  <value>
			<getOid>TIME_DELAY_SOURCE_2_DETECTION</getOid>
		  </value>
		  <label>Time Delay - Source 2 Detection</label>
		  <sensorSet>Time Delay</sensorSet>
	  </numSensor>
	  <numSensor ruleid="time_delay_center_to_off">
		  <type>timeinsec</type>
		  <sensorId>TIME_DELAY_CENTER_TO_OFF</sensorId>
		  <value>
			<getOid>TIME_DELAY_CENTER_TO_OFF</getOid>
		  </value>
		  <label>Time Delay Center - Off</label>
		  <sensorSet>Time Delay</sensorSet>
	  </numSensor>
	  <numSensor ruleid="source_1_priority_transfer_time_delay_position_2_to_1">
		  <type>timeinsec</type>
		  <sensorId>SOURCE_1_PRIORITY_TRANSFER_TIME_DELAY_POSITION_2_TO_1</sensorId>
		  <value>
			<getOid>SOURCE_1_PRIORITY_TRANSFER_TIME_DELAY_POSITION_2_TO_1</getOid>
		  </value>
		  <label>Source 1 Priority Transfer Time Delay Position 2 - 1</label>
		  <sensorSet>Time Delay</sensorSet>
	  </numSensor>
	  <numSensor ruleid="generator_off_time_delay">
		  <type>timeinsec</type>
		  <sensorId>GENERATOR_OFF_TIME_DELAY</sensorId>
		  <value>
			<getOid>GENERATOR_OFF_TIME_DELAY</getOid>
		  </value>
		  <label>Generator Off Time Delay</label>
		  <sensorSet>Time Delay</sensorSet>
	  </numSensor>
	  
	<stateSensor ruleid="position_of_switch">
		<type>state</type>
		<sensorId>POSITION_OF_SWITCH</sensorId>
		<value>
			<mapValue mapid="pos_of_switch-vm">
				<getOid>POSITION_OF_SWITCH</getOid>
			</mapValue>
		</value>
		<label>Position of Switch</label>
		<enum>pos_of_switch-em</enum>
		<sensorSet>Switch</sensorSet>
	</stateSensor>
	<stateSensor ruleid="fire_alarm_1">
		<type>state</type>
		<sensorId>FIRE_ALARM_1</sensorId>
		<value>
			<mapValue mapid="no_yes-vm">
				<getOid>FIRE_ALARM_1</getOid>
			</mapValue>
		</value>
		<label>Fire Alarm 1</label>
		<enum>no_yes-em</enum>
		<sensorSet>Fire Alarm</sensorSet>
	</stateSensor>
	<stateSensor ruleid="control_mode">
		<type>state</type>
		<sensorId>CONTROL_MODE</sensorId>
		<value>
			<mapValue mapid="auto_man-vm">
				<getOid>CONTROL_MODE</getOid>
			</mapValue>
		</value>
		<label>Control Mode</label>
		<enum>auto_man-em</enum>
		<sensorSet>Mode</sensorSet>
	</stateSensor>
	<stateSensor ruleid="generator_status">
		<type>state</type>
		<sensorId>GENERATOR_STATUS</sensorId>
		<value>
			<mapValue mapid="run_stop-vm">
				<getOid>GENERATOR_STATUS</getOid>
			</mapValue>
		</value>
		<label>Generator Status</label>
		<enum>run_stop-em</enum>
		<sensorSet>Generator</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_a_and_b_of_source_1_over_voltage">
        <type>state</type>
        <sensorId>PHASE_A_AND_B_OF_SOURCE_1_OVER_VOLTAGE</sensorId>
        <value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_15</getOid>
                                </op>
                                <op>0</op> 
                            </right_shift>
                        </op>
                        <op>1</op> 
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
        <label>Source 1 Phase A-B Over Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
    </stateSensor>
	<stateSensor ruleid="phase_a_and_b_of_source_1_under_voltage">
        <type>state</type>
        <sensorId>PHASE_A_AND_B_OF_SOURCE_1_UNDER_VOLTAGE</sensorId>
        <value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_15</getOid>
                                </op>
                                <op>1</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
        <label>Source 1 Phase A-B Under Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
    </stateSensor>
	<stateSensor ruleid="phase_a_and_b_of_source_1_over_frequency">
		<type>state</type>
		<sensorId>PHASE_A_AND_B_OF_SOURCE_1_OVER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_15</getOid>
                                </op>
                                <op>4</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Phase A-B Over Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_a_and_b_of_source_1_under_frequency">
		<type>state</type>
		<sensorId>PHASE_A_AND_B_OF_SOURCE_1_UNDER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_15</getOid>
                                </op>
                                <op>5</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Phase A-B Under Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_b_and_c_of_source_1_over_voltage">
		<type>state</type>
		<sensorId>PHASE_B_AND_C_OF_SOURCE_1_OVER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_16</getOid>
                                </op>
                                <op>0</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Phase B-C Over Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_b_and_c_of_source_1_under_voltage">
		<type>state</type>
		<sensorId>PHASE_B_AND_C_OF_SOURCE_1_UNDER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_16</getOid>
                                </op>
                                <op>1</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Phase B-C Under Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_b_and_c_of_source_1_over_frequency">
		<type>state</type>
		<sensorId>PHASE_B_AND_C_OF_SOURCE_1_OVER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_16</getOid>
                                </op>
                                <op>4</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Phase B-C Over Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_b_and_c_of_source_1_under_frequency">
		<type>state</type>
		<sensorId>PHASE_B_AND_C_OF_SOURCE_1_UNDER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_16</getOid>
                                </op>
                                <op>5</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Phase B-C Under Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_c_and_a_of_source_1_over_voltage">
		<type>state</type>
		<sensorId>PHASE_C_AND_A_OF_SOURCE_1_OVER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_17</getOid>
                                </op>
                                <op>0</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Phase C-A Over Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_c_and_a_of_source_1_under_voltage">
		<type>state</type>
		<sensorId>PHASE_C_AND_A_OF_SOURCE_1_UNDER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_17</getOid>
                                </op>
                                <op>1</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Phase C-A Under Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_c_and_a_of_source_1_over_frequency">
		<type>state</type>
		<sensorId>PHASE_C_AND_A_OF_SOURCE_1_OVER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_17</getOid>
                                </op>
                                <op>4</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Phase C-A Over Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_c_and_a_of_source_1_under_frequency">
		<type>state</type>
		<sensorId>PHASE_C_AND_A_OF_SOURCE_1_UNDER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_17</getOid>
                                </op>
                                <op>5</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Phase C-A Under Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_1_lost_phase_reg17">
		<type>state</type>
		<sensorId>SOURCE_1_LOST_PHASE_REG17</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_17</getOid>
                                </op>
                                <op>8</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Lost Phase REG17</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_1_is_acceptable">
		<type>state</type>
		<sensorId>SOURCE_1_IS_ACCEPTABLE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_17</getOid>
                                </op>
                                <op>15</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 is Acceptable</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_order_status_of_source_1">
		<type>state</type>
		<sensorId>PHASE_ORDER_STATUS_OF_SOURCE_1</sensorId>
		<value>
			<mapValue mapid="fault_ok-vm">
				<getOid>PHASE_ORDER_STATUS_OF_SOURCE_1</getOid>
			</mapValue>
		</value>
		<label>Phase Order Status of Source 1</label>
		<enum>fault_ok-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="unbalance_of_source_1_state">
		<type>state</type>
		<sensorId>UNBALANCE_OF_SOURCE_1_STATE</sensorId>
		<value>
			<mapValue mapid="fault_ok-vm">
				<getOid>UNBALANCE_OF_SOURCE_1_STATE</getOid>
			</mapValue>
		</value>
		<label>Unbalance of Source 1 State</label>
		<enum>fault_ok-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_a_and_b_of_source_2_over_voltage">
        <type>state</type>
        <sensorId>PHASE_A_AND_B_OF_SOURCE_2_OVER_VOLTAGE</sensorId>
        <value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_20</getOid>
                                </op>
                                <op>0</op> 
                            </right_shift>
                        </op>
                        <op>1</op> 
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
        <label>Source 2 Phase A-B Over Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
    </stateSensor>
	<stateSensor ruleid="phase_a_and_b_of_source_2_under_voltage">
        <type>state</type>
        <sensorId>PHASE_A_AND_B_OF_SOURCE_2_UNDER_VOLTAGE</sensorId>
        <value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_20</getOid>
                                </op>
                                <op>1</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
        <label>Source 2 Phase A-B Under Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
    </stateSensor>
	<stateSensor ruleid="phase_a_and_b_of_source_2_over_frequency">
		<type>state</type>
		<sensorId>PHASE_A_AND_B_OF_SOURCE_2_OVER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_20</getOid>
                                </op>
                                <op>4</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Phase A-B Over Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_a_and_b_of_source_2_under_frequency">
		<type>state</type>
		<sensorId>PHASE_A_AND_B_OF_SOURCE_2_UNDER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_20</getOid>
                                </op>
                                <op>5</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Phase A-B Under Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_b_and_c_of_source_2_over_voltage">
		<type>state</type>
		<sensorId>PHASE_B_AND_C_OF_SOURCE_2_OVER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_21</getOid>
                                </op>
                                <op>0</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Phase B-C Over Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_b_and_c_of_source_2_under_voltage">
		<type>state</type>
		<sensorId>PHASE_B_AND_C_OF_SOURCE_2_UNDER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_21</getOid>
                                </op>
                                <op>1</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Phase B-C Under Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_b_and_c_of_source_2_over_frequency">
		<type>state</type>
		<sensorId>PHASE_B_AND_C_OF_SOURCE_2_OVER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_21</getOid>
                                </op>
                                <op>4</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Phase B-C Over Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_b_and_c_of_source_2_under_frequency">
		<type>state</type>
		<sensorId>PHASE_B_AND_C_OF_SOURCE_2_UNDER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_21</getOid>
                                </op>
                                <op>5</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Phase B-C Under Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_c_and_a_of_source_2_over_voltage">
		<type>state</type>
		<sensorId>PHASE_C_AND_A_OF_SOURCE_2_OVER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_22</getOid>
                                </op>
                                <op>0</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Phase C-A Over Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_c_and_a_of_source_2_under_voltage">
		<type>state</type>
		<sensorId>PHASE_C_AND_A_OF_SOURCE_2_UNDER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_22</getOid>
                                </op>
                                <op>1</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Phase C-A Under Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_c_and_a_of_source_2_over_frequency">
		<type>state</type>
		<sensorId>PHASE_C_AND_A_OF_SOURCE_2_OVER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_22</getOid>
                                </op>
                                <op>4</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Phase C-A Over Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_c_and_a_of_source_2_under_frequency">
		<type>state</type>
		<sensorId>PHASE_C_AND_A_OF_SOURCE_2_UNDER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_22</getOid>
                                </op>
                                <op>5</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Phase C-A Under Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_2_lost_phase">
		<type>state</type>
		<sensorId>SOURCE_2_LOST_PHASE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_22</getOid>
                                </op>
                                <op>8</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Lost Phase</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_2_is_acceptable">
		<type>state</type>
		<sensorId>SOURCE_2_IS_ACCEPTABLE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_22</getOid>
                                </op>
                                <op>15</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 is Acceptable</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_order_status_of_source_2">
		<type>state</type>
		<sensorId>PHASE_ORDER_STATUS_OF_SOURCE_2</sensorId>
		<value>
			<mapValue mapid="fault_ok-vm">
				<getOid>PHASE_ORDER_STATUS_OF_SOURCE_2</getOid>
			</mapValue>
		</value>
		<label>Phase Order Status of Source 2</label>
		<enum>fault_ok-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="unbalance_of_source_2_state">
		<type>state</type>
		<sensorId>UNBALANCE_OF_SOURCE_2_STATE</sensorId>
		<value>
			<mapValue mapid="fault_ok-vm">
				<getOid>UNBALANCE_OF_SOURCE_2_STATE</getOid>
			</mapValue>
		</value>
		<label>Unbalance of Source 2 State</label>
		<enum>fault_ok-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_order_source_1">
		<type>state</type>
		<sensorId>PHASE_ORDER_SOURCE_1</sensorId>
		<value>
			<mapValue mapid="phase_order-vm">
				<getOid>PHASE_ORDER_SOURCE_1</getOid>
			</mapValue>
		</value>
		<label>Phase Order - Source 1</label>
		<enum>phase_order-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_order_source_2">
		<type>state</type>
		<sensorId>PHASE_ORDER_SOURCE_2</sensorId>
		<value>
			<mapValue mapid="phase_order-vm">
				<getOid>PHASE_ORDER_SOURCE_2</getOid>
			</mapValue>
		</value>
		<label>Phase Order - Source 2</label>
		<enum>phase_order-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="position_0_detection_failed">
		<type>state</type>
		<sensorId>POSITION_0_DETECTION_FAILED</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_34</getOid>
                                </op>
                                <op>0</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Position 0 Detection Failed</label>
		<enum>no_yes-em</enum>
		<sensorSet>Detection</sensorSet>
	</stateSensor>
	<stateSensor ruleid="position_1_detection_failed">
		<type>state</type>
		<sensorId>POSITION_1_DETECTION_FAILED</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_34</getOid>
                                </op>
                                <op>1</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Position 1 Detection Failed</label>
		<enum>no_yes-em</enum>
		<sensorSet>Detection</sensorSet>
	</stateSensor>
	<stateSensor ruleid="position_2_detection_failed">
		<type>state</type>
		<sensorId>POSITION_2_DETECTION_FAILED</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_34</getOid>
                                </op>
                                <op>2</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Position 2 Detection Failed</label>
		<enum>no_yes-em</enum>
		<sensorSet>Detection</sensorSet>
	</stateSensor>
	<stateSensor ruleid="fire_alarm_2">
		<type>state</type>
		<sensorId>FIRE_ALARM_2</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_34</getOid>
                                </op>
                                <op>3</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Fire Alarm 2</label>
		<enum>no_yes-em</enum>
		<sensorSet>Fire Alarm</sensorSet>
	</stateSensor>
	<stateSensor ruleid="signal_detection_failed">
		<type>state</type>
		<sensorId>SIGNAL_DETECTION_FAILED</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_34</getOid>
                                </op>
                                <op>4</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Signal Detection Failed</label>
		<enum>no_yes-em</enum>
		<sensorSet>Detection</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_1_under_voltage">
		<type>state</type>
		<sensorId>SOURCE_1_UNDER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>0</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Under Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_1_over_voltage">
		<type>state</type>
		<sensorId>SOURCE_1_OVER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>1</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Over Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_1_lost_phase_reg35">
		<type>state</type>
		<sensorId>SOURCE_1_LOST_PHASE_REG35</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>2</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Lost Phase REG35</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_1_lost_power">
		<type>state</type>
		<sensorId>SOURCE_1_LOST_POWER</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>3</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Lost Power</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_1_under_frequency">
		<type>state</type>
		<sensorId>SOURCE_1_UNDER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>4</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Under Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_1_over_frequency">
		<type>state</type>
		<sensorId>SOURCE_1_OVER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>5</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 1 Over Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 1</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_2_under_voltage">
		<type>state</type>
		<sensorId>SOURCE_2_UNDER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>8</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Under Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_2_over_voltage">
		<type>state</type>
		<sensorId>SOURCE_2_OVER_VOLTAGE</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>9</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Over Voltage</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_2_lost_phase_reg35">
		<type>state</type>
		<sensorId>SOURCE_2_LOST_PHASE_REG35</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>10</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Lost Phase REG35</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_2_lost_power">
		<type>state</type>
		<sensorId>SOURCE_2_LOST_POWER</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>11</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Lost Power</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_2_under_frequency">
		<type>state</type>
		<sensorId>SOURCE_2_UNDER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>12</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Under Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="source_2_over_frequency">
		<type>state</type>
		<sensorId>SOURCE_2_OVER_FREQUENCY</sensorId>
		<value>
            <mapValue mapid="no_yes-vm">
                <formatNumber printffmt="%1.0f">
                    <bitwise_and>
                        <op>
                            <right_shift>
                                <op>
                                    <getOid>REGISTER_35</getOid>
                                </op>
                                <op>13</op>
                            </right_shift>
                        </op>
                        <op>1</op>
                    </bitwise_and>
                </formatNumber>
            </mapValue>
        </value>
		<label>Source 2 Over Frequency</label>
		<enum>no_yes-em</enum>
		<sensorSet>Source 2</sensorSet>
	</stateSensor>
	<stateSensor ruleid="input_type">
		<type>state</type>
		<sensorId>INPUT_TYPE</sensorId>
		<value>
			<mapValue mapid="input_type-vm">
				<getOid>INPUT_TYPE</getOid>
			</mapValue>
		</value>
		<label>Input Type</label>
		<enum>input_type-em</enum>
		<sensorSet>General</sensorSet>
	</stateSensor>
	<stateSensor ruleid="control_type">
		<type>state</type>
		<sensorId>CONTROL_TYPE</sensorId>
		<value>
			<mapValue mapid="control_type-vm">
				<getOid>CONTROL_TYPE</getOid>
			</mapValue>
		</value>
		<label>Control Type</label>
		<enum>control_type-em</enum>
		<sensorSet>General</sensorSet>
	</stateSensor>
	<stateSensor ruleid="position_protection">
		<type>state</type>
		<sensorId>POSITION_PROTECTION</sensorId>
		<value>
			<mapValue mapid="position_protection-vm">
				<getOid>POSITION_PROTECTION</getOid>
			</mapValue>
		</value>
		<label>Position Protection</label>
		<enum>position_protection-em</enum>
		<sensorSet>General</sensorSet>
	</stateSensor>
	<stateSensor ruleid="over_trip_enable">
		<type>state</type>
		<sensorId>OVER_TRIP_ENABLE</sensorId>
		<value>
			<mapValue mapid="disable_enable-vm">
				<getOid>OVER_TRIP_ENABLE</getOid>
			</mapValue>
		</value>
		<label>Over Trip Enable</label>
		<enum>disable_enable-em</enum>
		<sensorSet>General</sensorSet>
	</stateSensor>
	<stateSensor ruleid="phase_order_setting">
		<type>state</type>
		<sensorId>PHASE_ORDER_SETTING</sensorId>
		<value>
			<mapValue mapid="phase_order-vm">
				<getOid>PHASE_ORDER_SETTING</getOid>
			</mapValue>
		</value>
		<label>Phase Order Setting</label>
		<enum>phase_order-em</enum>
		<sensorSet>General</sensorSet>
	</stateSensor>
	<stateSensor ruleid="unbalance_setting">
		<type>state</type>
		<sensorId>UNBALANCE_SETTING</sensorId>
		<value>
			<mapValue mapid="unbalance_setting-vm">
				<getOid>UNBALANCE_SETTING</getOid>
			</mapValue>
		</value>
		<label>Unbalance Setting</label>
		<enum>unbalance_setting-em</enum>
		<sensorSet>General</sensorSet>
	</stateSensor>
	<stateSensor ruleid="ts_mode">
		<type>state</type>
		<sensorId>TS_MODE</sensorId>
		<value>
			<mapValue mapid="auto_man-vm">
				<getOid>TS_MODE</getOid>
			</mapValue>
		</value>
		<label>TS Mode</label>
		<enum>auto_man-em</enum>
		<sensorSet>Mode</sensorSet>
	</stateSensor>
	
	<!-- Value Maps -->
	
	<valueMap ruleid="pos_of_switch-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>2</valueIn><valueOut>2</valueOut>
	</valueMap>

	<enumMap ruleid="pos_of_switch-em">
		<label>POS 0</label>
		<label>POS 1</label>
		<label>POS 2</label>
	</enumMap>
	
	<valueMap ruleid="no_yes-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<enumMap ruleid="no_yes-em">
		<label>No</label>
		<label>Yes</label>
	</enumMap>
	
	<valueMap ruleid="auto_man-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<enumMap ruleid="auto_man-em">
		<label>Auto</label>
		<label>Manual</label>
	</enumMap>
	
	<valueMap ruleid="run_stop-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<enumMap ruleid="run_stop-em">
		<label>Run</label>
		<label>Stop</label>
	</enumMap>
	
	<valueMap ruleid="fault_ok-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<enumMap ruleid="fault_ok-em">
		<label>Fault</label>
		<label>Ok</label>
	</enumMap>
	
	<valueMap ruleid="phase_order-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>2</valueIn><valueOut>2</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<enumMap ruleid="phase_order-em">
		<label>Unknown</label>
		<label>Positive</label>
		<label>Reversed</label>
	</enumMap>
	
	<valueMap ruleid="input_type-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<enumMap ruleid="input_type-em">
		<label>L1L2L3/L1L2L3LN</label>
		<label>LN/L1L2/L1L2N</label>
	</enumMap>
	
	<valueMap ruleid="control_type-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>2</valueIn><valueOut>2</valueOut>
		<valueIn>3</valueIn><valueOut>3</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<enumMap ruleid="control_type-em">
		<label>Source 1 Priority</label>
		<label>No Source Priority</label>
		<label>Remote</label>
		<label>Manual</label>
	</enumMap>
	
	<valueMap ruleid="position_protection-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<enumMap ruleid="position_protection-em">
		<label>No Central Position Protection</label>
		<label>Central Position Protection</label>
	</enumMap>
	
	<valueMap ruleid="disable_enable-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<enumMap ruleid="disable_enable-em">
		<label>Disable</label>
		<label>Enable</label>
	</enumMap>
	
	<valueMap ruleid="phase_order-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>1</valueIn><valueOut>1</valueOut>
		<valueIn>2</valueIn><valueOut>2</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<enumMap ruleid="phase_order-em">
		<label>Disable</label>
		<label>ABC</label>
		<label>CBA</label>
	</enumMap>
	
	<valueMap ruleid="unbalance_setting-vm">
		<valueIn>0</valueIn><valueOut>0</valueOut>
		<valueIn>8</valueIn><valueOut>1</valueOut>
		<valueIn>15</valueIn><valueOut>2</valueOut>
		<valueIn>25</valueIn><valueOut>3</valueOut>
		<valueIn>*</valueIn><valueOut>0</valueOut>
	</valueMap>

	<enumMap ruleid="unbalance_setting-em">
		<label>Disable</label>
		<label>Unbalanced Value 08</label>
		<label>Unbalanced Value 15</label>
		<label>Unbalanced Value 25</label>
	</enumMap>

	<!-- -->
	
  </device>


  <protocol>
    <modbus>
      <value_ref_id valid="VOLTAGE_BETWEEN_PHASE_A_AND_B_OF_SOURCE_1">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="VOLTAGE_BETWEEN_PHASE_B_AND_C_OF_SOURCE_1">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="VOLTAGE_BETWEEN_PHASE_C_AND_A_OF_SOURCE_1">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="FREQUENCY_OF_SOURCE_1">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="VOLTAGE_BETWEEN_PHASE_A_AND_B_OF_SOURCE_2">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="VOLTAGE_BETWEEN_PHASE_B_AND_C_OF_SOURCE_2">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="VOLTAGE_BETWEEN_PHASE_C_AND_A_OF_SOURCE_2">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="FREQUENCY_OF_SOURCE_2">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="POSITION_OF_SWITCH">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="FIRE_ALARM_1">
        <function>3</function>
        <start_addr>9</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="CONTROL_MODE">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="GENERATOR_STATUS">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="UNBALANCE_OF_SOURCE_1">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="UNBALANCE_OF_SOURCE_2">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="TEMPERATURE_OF_CONTROLLER">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="REGISTER_15">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="REGISTER_16">
        <function>3</function>
        <start_addr>16</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="REGISTER_17">
        <function>3</function>
        <start_addr>17</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="PHASE_ORDER_STATUS_OF_SOURCE_1">
        <function>3</function>
        <start_addr>18</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="UNBALANCE_OF_SOURCE_1_STATE">
        <function>3</function>
        <start_addr>19</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="REGISTER_20">
        <function>3</function>
        <start_addr>20</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="REGISTER_21">
        <function>3</function>
        <start_addr>21</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="REGISTER_22">
        <function>3</function>
        <start_addr>22</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="PHASE_ORDER_STATUS_OF_SOURCE_2">
        <function>3</function>
        <start_addr>23</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="UNBALANCE_OF_SOURCE_2_STATE">
        <function>3</function>
        <start_addr>24</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="PHASE_ORDER_SOURCE_1">
        <function>3</function>
        <start_addr>25</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="PHASE_ORDER_SOURCE_2">
        <function>3</function>
        <start_addr>26</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DEGREE_GAP_BETWEEN_VAB_1_AND_VBC_1">
        <function>3</function>
        <start_addr>27</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DEGREE_GAP_BETWEEN_VBC_1_AND_VCA_1">
        <function>3</function>
        <start_addr>28</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DEGREE_GAP_BETWEEN_VCA_1_AND_VAB_1">
        <function>3</function>
        <start_addr>29</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DEGREE_GAP_BETWEEN_VAB_2_AND_VBC_2">
        <function>3</function>
        <start_addr>30</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DEGREE_GAP_BETWEEN_VBC_2_AND_VCA_2">
        <function>3</function>
        <start_addr>31</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DEGREE_GAP_BETWEEN_VCA_2_AND_VAB_2">
        <function>3</function>
        <start_addr>32</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="REGISTER_34">
        <function>3</function>
        <start_addr>34</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="REGISTER_35">
        <function>3</function>
        <start_addr>35</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="HW_VERSION">
        <function>3</function>
        <start_addr>43</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="SOFTWARE_VERSION">
        <function>3</function>
        <start_addr>44</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="RATED_VOLTAGE">
        <function>3</function>
        <start_addr>53</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="RATED_FREQUENCY">
        <function>3</function>
        <start_addr>54</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="INPUT_TYPE">
        <function>3</function>
        <start_addr>55</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="CONTROL_TYPE">
        <function>3</function>
        <start_addr>56</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="POSITION_PROTECTION">
        <function>3</function>
        <start_addr>57</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="TIME_DELAY_TO_CENTER_OFF_POSITION">
        <function>3</function>
        <start_addr>58</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="OVER_TRIP_ENABLE">
        <function>3</function>
        <start_addr>59</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="PHASE_ORDER_SETTING">
        <function>3</function>
        <start_addr>60</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="UNBALANCE_SETTING">
        <function>3</function>
        <start_addr>61</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="OVER_TRIP_VOLTAGE_SOURCE_1">
        <function>3</function>
        <start_addr>62</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="OVER_TRIP_RETURN_VOLTAGE_SOURCE_1">
        <function>3</function>
        <start_addr>63</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DROP_OUT_VOLTAGE_SOURCE_1">
        <function>3</function>
        <start_addr>64</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DROP_OUT_RETURN_VOLTAGE_SOURCE_1">
        <function>3</function>
        <start_addr>65</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="OVER_TRIP_FREQUENCY_SOURCE_1">
        <function>3</function>
        <start_addr>66</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="OVER_TRIP_RETURN_FREQUENCY_SOURCE_1">
        <function>3</function>
        <start_addr>67</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DROP_OUT_FREQUENCY_SOURCE_1">
        <function>3</function>
        <start_addr>68</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DROP_OUT_RETURN_FREQUENCY_SOURCE_1">
        <function>3</function>
        <start_addr>69</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="OVER_TRIP_VOLTAGE_SOURCE_2">
        <function>3</function>
        <start_addr>70</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="OVER_TRIP_RETURN_VOLTAGE_SOURCE_2">
        <function>3</function>
        <start_addr>71</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DROP_OUT_VOLTAGE_SOURCE_2">
        <function>3</function>
        <start_addr>72</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DROP_OUT_RETURN_VOLTAGE_SOURCE_2">
        <function>3</function>
        <start_addr>73</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="OVER_TRIP_FREQUENCY_SOURCE_2">
        <function>3</function>
        <start_addr>74</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="OVER_TRIP_RETURN_FREQUENCY_SOURCE_2">
        <function>3</function>
        <start_addr>75</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DROP_OUT_FREQUENCY_SOURCE_2">
        <function>3</function>
        <start_addr>76</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="DROP_OUT_RETURN_FREQUENCY_SOURCE_2">
        <function>3</function>
        <start_addr>77</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="TIME_DELAY_SOURCE_1_DETECTION">
        <function>3</function>
        <start_addr>78</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="TRANSFER_TIME_DELAY_POSITION_1_TO_2">
        <function>3</function>
        <start_addr>79</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="TIME_DELAY_SOURCE_2_DETECTION">
        <function>3</function>
        <start_addr>80</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="TIME_DELAY_CENTER_TO_OFF">
        <function>3</function>
        <start_addr>81</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="SOURCE_1_PRIORITY_TRANSFER_TIME_DELAY_POSITION_2_TO_1">
        <function>3</function>
        <start_addr>82</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="GENERATOR_OFF_TIME_DELAY">
        <function>3</function>
        <start_addr>83</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
	  <value_ref_id valid="TS_MODE">
        <function>3</function>
        <start_addr>85</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
     </modbus>
  </protocol>
</APC_DDF>
