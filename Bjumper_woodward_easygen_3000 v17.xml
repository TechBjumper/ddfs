<?xml version="1.0" encoding="UTF-8"?>
<!-- Oleksiy O. Loktev spezialist@email.ua Date: 27.05.2014 -->

<!-- Test Modbus related information -->
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="Bjumper_woodward_easygen_3000" ddfname="Bjumper_woodward_easygen_3000" ddfversion="17" canremove="yes">
	<schemaVersion>1.6</schemaVersion>

	<device deviceid="woodward_easygen-3000">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<setDefaultLabel ruleid="labeldata">Generating Set<commSetting field="slaveaddress"/>(<sysHostname/>)</setDefaultLabel>

		<setProductData ruleid="vendordata" field="vendor">Woodward</setProductData>
		<setProductData ruleid="modeldata" field="model">EasYgen-3000</setProductData>
		<setProductData ruleid="typedata" field="type">Generator</setProductData>
		<!--		<setProductData ruleid="mac_addrdata" field="mac_addr">xx:xx:xx:xx:xx:xx</setProductData> -->
		<!--		<setProductData ruleid="appversiondata" field="appversion">myVersion</setProductData> -->
		<!--		<setProductData ruleid="serial_numdata" field="serial_num">myS/N</setProductData> -->

		<!--		<setLocationData ruleid="namedata" field="SYSNAME">myName</setLocationData> -->
		<!--		<setLocationData ruleid="locationdata" field="LOCATION">myLocation</setLocationData> -->
		<!--		<setLocationData ruleid="contactdata" field="CONTACT">myContact</setLocationData> -->
		<!--		<setLocationData ruleid="descdata" field="NOTES">myNotes</setLocationData> -->

		<normalCondition>
			<name>Online: No Alarms Present</name>
			<description>The device is operating normally.</description>
			<normalRecommendedActions>
				<recommendedActionId>No action required.</recommendedActionId>
			</normalRecommendedActions>
		</normalCondition>

		<valueMap ruleid="skip_missing_sensor">
			<valueIn>32767</valueIn>
			<valueOut>[false]</valueOut>
			<valueIn>*</valueIn>
			<valueOut>[true]</valueOut>
		</valueMap>

		<!-- Data Protocol 5003 for Generator -->
		<numSensor ruleid="sensor_register_50001">
			<type>num</type>
			<units>rpm</units>
			<sensorId>id_register_50001</sensorId>
			<value>
				<getOid>register_50001</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Generator speed</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50003">
			<type>num/powerfactor</type>
			<sensorId>id_register_50003</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50003</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Generator power factor</label>
			<sensorSet>Generator Power Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50004">
			<type>voltage</type>
			<sensorId>id_register_50004</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50004</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Average generator Wye-Voltage</label>
			<sensorSet>Generator Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50006">
			<type>frequency</type>
			<sensorId>id_register_50006</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50006</getOid>
					</op>
					<op>.01</op>
				</mult>
			</value>
			<valueInc>.01</valueInc>
			<label>Generator frequency</label>
			<sensorSet>Generator Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50007">
			<type>voltage</type>
			<sensorId>id_register_50007</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50007</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Average generator Delta-Voltage</label>
			<sensorSet>Generator Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50009">
			<type>frequency</type>
			<sensorId>id_register_50009</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50009</getOid>
					</op>
					<op>.01</op>
				</mult>
			</value>
			<valueInc>.01</valueInc>
			<label>Mains frequency</label>
			<sensorSet>Mains Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50010">
			<type>voltage</type>
			<sensorId>id_register_50010</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50010</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Average mains Wye-Voltage</label>
			<sensorSet>Mains Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50012">
			<type>num/powerfactor</type>
			<sensorId>id_register_50012</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50012</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Mains power factor</label>
			<sensorSet>Mains Power Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50013">
			<type>voltage</type>
			<sensorId>id_register_50013</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50013</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Average mains Delta-Voltage</label>
			<sensorSet>Mains Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50015">
			<type>frequency</type>
			<sensorId>id_register_50015</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50015</getOid>
					</op>
					<op>.01</op>
				</mult>
			</value>
			<valueInc>.01</valueInc>
			<label>Busbar1 frequency</label>
			<sensorSet>Busbar1 Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50016">
			<type>voltage</type>
			<sensorId>id_register_50016</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50016</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Average busbar1 Delta-Voltage</label>
			<sensorSet>Busbar1 Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50021">
			<type>voltage</type>
			<sensorId>id_register_50021</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50021</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Battery voltage</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50022">
			<type>amperage</type>
			<sensorId>id_register_50022</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50022</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Average mains current</label>
			<sensorSet>Mains Current Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50025">
			<type>amperage</type>
			<sensorId>id_register_50025</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50025</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Average generator current</label>
			<sensorSet>Generator Current Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50028">
			<type>amperage</type>
			<sensorId>id_register_50028</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50028</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Measured ground current</label>
			<sensorSet>Generator Current Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50031">
			<type>amperage</type>
			<sensorId>id_register_50031</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50031</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Calculated ground current</label>
			<sensorSet>Generator Current Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50034">
			<type>amperage</type>
			<sensorId>id_register_50034</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50034</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Generator current, I1</label>
			<sensorSet>Generator Current Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50037">
			<type>amperage</type>
			<sensorId>id_register_50037</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50037</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Generator current, I2</label>
			<sensorSet>Generator Current Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50040">
			<type>amperage</type>
			<sensorId>id_register_50040</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50040</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Generator current, I3</label>
			<sensorSet>Generator Current Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50043">
			<type>amperage</type>
			<sensorId>id_register_50043</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50043</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Mains/ground current</label>
			<sensorSet>Mains Current Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50052">
			<type>num/powerKW</type>
			<sensorId>id_register_50052</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50052</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Total generator active power</label>
			<sensorSet>Generator Power Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50055">
			<type>num/powerKW</type>
			<sensorId>id_register_50055</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50055</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Total mains active power</label>
			<sensorSet>Mains Power Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50058">
			<type>num/powerKVAR</type>
			<sensorId>id_register_50058</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50058</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Total generator reactive power</label>
			<sensorSet>Generator Power Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50060">
			<type>voltage</type>
			<sensorId>id_register_50060</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50060</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>AI Auxiliary excitation D+</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50061">
			<type>num/powerKVAR</type>
			<sensorId>id_register_50061</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50061</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Total mains reactive power</label>
			<sensorSet>Mains Power Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50064">
			<type>voltage</type>
			<sensorId>id_register_50064</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50064</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Busbar1 phase to phase voltage, U12</label>
			<sensorSet>Busbar1 Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50073">
			<type>voltage</type>
			<sensorId>id_register_50073</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50073</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Generator phase to phase voltage, U12</label>
			<sensorSet>Generator Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50076">
			<type>voltage</type>
			<sensorId>id_register_50076</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50076</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Generator phase to neutral voltage, V1</label>
			<sensorSet>Generator Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50079">
			<type>voltage</type>
			<sensorId>id_register_50079</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50079</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Generator phase to phase voltage, U23</label>
			<sensorSet>Generator Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50082">
			<type>voltage</type>
			<sensorId>id_register_50082</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50082</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Generator phase to neutral voltage, V2</label>
			<sensorSet>Generator Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50085">
			<type>voltage</type>
			<sensorId>id_register_50085</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50085</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Generator phase to phase voltage, U31</label>
			<sensorSet>Generator Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50088">
			<type>voltage</type>
			<sensorId>id_register_50088</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50088</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Generator phase to neutral voltage, V3</label>
			<sensorSet>Generator Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50091">
			<type>voltage</type>
			<sensorId>id_register_50091</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50091</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Mains phase to phase voltage, U12</label>
			<sensorSet>Mains Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50094">
			<type>voltage</type>
			<sensorId>id_register_50094</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50094</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Mains phase to neutral voltage, V1</label>
			<sensorSet>Mains Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50097">
			<type>voltage</type>
			<sensorId>id_register_50097</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50097</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Mains phase to phase voltage, U23</label>
			<sensorSet>Mains Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50100">
			<type>voltage</type>
			<sensorId>id_register_50100</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50100</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Mains phase to neutral voltage, V2</label>
			<sensorSet>Mains Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50103">
			<type>voltage</type>
			<sensorId>id_register_50103</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50103</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Mains phase to phase voltage, U31</label>
			<sensorSet>Mains Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50106">
			<type>voltage</type>
			<sensorId>id_register_50106</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50106</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Mains phase to neutral voltage, V3</label>
			<sensorSet>Mains Voltage Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50121">
			<type>num/kwatthr</type>
			<sensorId>id_register_50121</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50121</getOid>
					</op>
					<op>10</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator active energy</label>
			<sensorSet>Generator Energy Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50123">
			<type>num</type>
			<sensorId>id_register_50123</sensorId>
			<value>
				<getOid>register_50123</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Engine total number of start requests</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50124">
			<type>num/kVARhr</type>
			<sensorId>id_register_50124</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50124</getOid>
					</op>
					<op>10</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Generator positive reactive energy</label>
			<sensorSet>Generator Energy Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50126">
			<type>timeinhrs</type>
			<sensorId>id_register_50126</sensorId>
			<value>
				<getOid>register_50126</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Hours until next maintenance</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50127">
			<type>timeinhrs</type>
			<sensorId>id_register_50127</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50127</getOid>
					</op>
					<op>.01</op>
				</mult>
			</value>
			<valueInc>.01</valueInc>
			<label>Generator hours of operation</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50129">
			<type>frequency</type>
			<sensorId>id_register_50129</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50129</getOid>
					</op>
					<op>.01</op>
				</mult>
			</value>
			<valueInc>.01</valueInc>
			<label>Setpoint frequency</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50130">
			<type>num/powerKW</type>
			<sensorId>id_register_50130</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50130</getOid>
					</op>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Setpoint active power</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50132">
			<type>voltage</type>
			<sensorId>id_register_50132</sensorId>
			<value>
				<getOid>register_50132</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Setpoint voltage</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50134">
			<type>num/powerfactor</type>
			<sensorId>id_register_50134</sensorId>
			<value>
				<mult>
					<op>
						<getOid>register_50134</getOid>
					</op>
					<op>.001</op>
				</mult>
			</value>
			<valueInc>.001</valueInc>
			<label>Setpoint power factor</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50166">
			<type>num/powerKW</type>
			<sensorId>id_register_50166</sensorId>
			<value>
				<getOid>register_50166</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Nominal active power in system (in own segment)</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50169">
			<type>num/powerKW</type>
			<sensorId>id_register_50169</sensorId>
			<value>
				<getOid>register_50169</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Active power in system (in own segment)</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50171">
			<type>temp</type>
			<sensorId>id_register_50171</sensorId>
			<value>
				<getOid>register_50171</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Different outlet-inlet temperature (ANIN10-ANIN9)</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50172">
			<type>num/powerKW</type>
			<sensorId>id_register_50172</sensorId>
			<value>
				<getOid>register_50172</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Active power reserve in system (in own segment)</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50174">
			<type>num</type>
			<sensorId>id_register_50174</sensorId>
			<value>
				<getOid>register_50174</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>J1939 MTU ADEC ECU failure codes</label>
			<sensorSet>Other Sensors</sensorSet>
		</numSensor>
		<!-- Data Protocol 5003 for Engine J1939 ECU -->
		<numSensor ruleid="sensor_register_50246">
			<type>num</type>
			<units>rpm</units>
			<sensorId>id_register_50246</sensorId>
			<value>
				<mult>
					<getOid>register_50246</getOid>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Engine speed</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50248">
			<type>temp</type>
			<sensorId>id_register_50248</sensorId>
			<value>
				<getOid>register_50248</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Engine coolant temperature</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50249">
			<type>timeinhrs</type>
			<sensorId>id_register_50249</sensorId>
			<value>
				<getOid>register_50249</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Total engine hours</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50251">
			<type>temp</type>
			<sensorId>id_register_50251</sensorId>
			<value>
				<getOid>register_50251</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Fuel temperature</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50252">
			<type>temp</type>
			<sensorId>id_register_50252</sensorId>
			<value>
				<mult>
					<getOid>register_50252</getOid>
					<op>.01</op>
				</mult>
			</value>
			<valueInc>.01</valueInc>
			<label>Engine oil temperature</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50254">
			<type>pressure</type>
			<sensorId>id_register_50254</sensorId>
			<value>
				<getOid>register_50254</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Engine oil pressure</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50255">
			<type>num</type>
			<sensorId>id_register_50255</sensorId>
			<value>
				<mult>
					<getOid>register_50255</getOid>
					<op>.01</op>
				</mult>
			</value>
			<valueInc>.01</valueInc>
			<label>Fuel rate, L/h</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50257">
			<type>num</type>
			<units>percent</units>
			<sensorId>id_register_50257</sensorId>
			<value>
				<mult>
					<getOid>register_50257</getOid>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Coolant level</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50258">
			<type>num</type>
			<units>percent</units>
			<sensorId>id_register_50258</sensorId>
			<value>
				<mult>
					<getOid>register_50258</getOid>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Throttle position</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50259">
			<type>num</type>
			<units>percent</units>
			<sensorId>id_register_50259</sensorId>
			<value>
				<getOid>register_50259</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Load at current speed</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50260">
			<type>num</type>
			<units>percent</units>
			<sensorId>id_register_50260</sensorId>
			<value>
				<mult>
					<getOid>register_50260</getOid>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Engine oil level</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50261">
			<type>pressure</type>
			<sensorId>id_register_50261</sensorId>
			<value>
				<getOid>register_50261</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Boost pressure</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50262">
			<type>temp</type>
			<sensorId>id_register_50262</sensorId>
			<value>
				<getOid>register_50262</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Intake manifold temperature</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50263">
			<type>pressure</type>
			<sensorId>id_register_50263</sensorId>
			<value>
				<mult>
					<getOid>register_50263</getOid>
					<op>.1</op>
				</mult>
			</value>
			<valueInc>.1</valueInc>
			<label>Barometric pressure</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50264">
			<type>temp</type>
			<sensorId>id_register_50264</sensorId>
			<value>
				<getOid>register_50264</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Air inlet temperature</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50265">
			<type>num</type>
			<units>percent</units>
			<sensorId>id_register_50265</sensorId>
			<value>
				<getOid>register_50265</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Actual engine torque</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>
		<numSensor ruleid="sensor_register_50267">
			<type>temp</type>
			<sensorId>id_register_50267</sensorId>
			<value>
				<mult>
					<getOid>register_50267</getOid>
					<op>.01</op>
				</mult>
			</value>
			<valueInc>.01</valueInc>
			<label>Exhaust gas temperature</label>
			<sensorSet>Engine Sensors</sensorSet>
		</numSensor>

		<valueMap ruleid="inactive_active-vm">
			<valueIn>0</valueIn>
			<valueOut>0</valueOut>
			<valueIn>*</valueIn>
			<valueOut>1</valueOut>
		</valueMap>
		<enumMap ruleid="inactive_active-em">
			<label>Not Activated</label>
			<label>Activated</label>
		</enumMap>
		<enumMap ruleid="deenergiz_energiz-em">
			<label>Not Energized</label>
			<label>Energized</label>
		</enumMap>
		<enumMap ruleid="no_yes-em">
			<label>No</label>
			<label>Yes</label>
		</enumMap>

		<!-- Data Protocol 5003 state sensors for genset -->
		<stateSensor ruleid="sensor_register_50002">
			<type>state</type>
			<sensorId>id_register_50002</sensorId>
			<value>
				<mapValue mapid="register_50002-vm">
					<formatNumber>
						<getOid>register_50002</getOid>
					</formatNumber>
				</mapValue>
			</value>
			<enum>register_50002-em</enum>
			<label>Control mode</label>
			<sensorSet>Other Sensors</sensorSet>
		</stateSensor>
		<valueMap ruleid="register_50002-vm">
			<valueIn>3601</valueIn>
			<valueOut>0</valueOut>
			<valueIn>3362</valueIn>
			<valueOut>1</valueOut>
			<valueIn>2884</valueIn>
			<valueOut>2</valueOut>
		</valueMap>
		<enumMap ruleid="register_50002-em">
			<label>AUTO</label>
			<label>STOP</label>
			<label>MANUALLY</label>
		</enumMap>
		<stateSensor ruleid="sensor_register_internal_DI1">
			<type>state</type>
			<sensorId>id_register_internal_DI1</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 1 (Emergency stop)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI2">
			<type>state</type>
			<sensorId>id_register_internal_DI2</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 2 (Start request in AUTO)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI3">
			<type>state</type>
			<sensorId>id_register_internal_DI3</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 3 (Low oil pressure)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI4">
			<type>state</type>
			<sensorId>id_register_internal_DI4</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 4 (Coolant temperature)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI5">
			<type>state</type>
			<sensorId>id_register_internal_DI5</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 5 (Alarm acknowledge)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI6">
			<type>state</type>
			<sensorId>id_register_internal_DI6</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 6 (Enable MCB)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI7">
			<type>state</type>
			<sensorId>id_register_internal_DI7</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 7 (Reply: MCB open)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI8">
			<type>state</type>
			<sensorId>id_register_internal_DI8</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 8 (Reply: GCB open)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI9">
			<type>state</type>
			<sensorId>id_register_internal_DI9</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 9 (Reply: GGB open)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI10">
			<type>state</type>
			<sensorId>id_register_internal_DI10</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 10 (Load busbar is dead)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI11">
			<type>state</type>
			<sensorId>id_register_internal_DI11</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit5 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 11</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI12">
			<type>state</type>
			<sensorId>id_register_internal_DI12</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit4 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50084</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 12 (Neutral contactor (NC) feedback)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI13">
			<type>state</type>
			<sensorId>id_register_internal_DI13</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50087</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 13</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI14">
			<type>state</type>
			<sensorId>id_register_internal_DI14</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50087</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 14</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI15">
			<type>state</type>
			<sensorId>id_register_internal_DI15</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50087</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 15</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI16">
			<type>state</type>
			<sensorId>id_register_internal_DI16</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50087</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 16</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI17">
			<type>state</type>
			<sensorId>id_register_internal_DI17</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50087</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 17</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI18">
			<type>state</type>
			<sensorId>id_register_internal_DI18</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50087</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 18</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI19">
			<type>state</type>
			<sensorId>id_register_internal_DI19</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50087</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 19</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI20">
			<type>state</type>
			<sensorId>id_register_internal_DI20</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50087</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 20</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI21">
			<type>state</type>
			<sensorId>id_register_internal_DI21</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50087</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 21</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI22">
			<type>state</type>
			<sensorId>id_register_internal_DI22</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50087</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 22</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DI23">
			<type>state</type>
			<sensorId>id_register_internal_DI23</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit5 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50087</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete internal input 23</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI1">
			<type>state</type>
			<sensorId>id_register_external_DI1</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit0 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 1</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI2">
			<type>state</type>
			<sensorId>id_register_external_DI2</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit1 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 2</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI3">
			<type>state</type>
			<sensorId>id_register_external_DI3</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit2 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 3</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI4">
			<type>state</type>
			<sensorId>id_register_external_DI4</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit3 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 4</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI5">
			<type>state</type>
			<sensorId>id_register_external_DI5</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit4 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 5</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI6">
			<type>state</type>
			<sensorId>id_register_external_DI6</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit5 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 6</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI7">
			<type>state</type>
			<sensorId>id_register_external_DI7</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 7</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI8">
			<type>state</type>
			<sensorId>id_register_external_DI8</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 8</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI9">
			<type>state</type>
			<sensorId>id_register_external_DI9</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 9</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI10">
			<type>state</type>
			<sensorId>id_register_external_DI10</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 10</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI11">
			<type>state</type>
			<sensorId>id_register_external_DI11</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 11</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI12">
			<type>state</type>
			<sensorId>id_register_external_DI12</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 12</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI13">
			<type>state</type>
			<sensorId>id_register_external_DI13</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 13</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI14">
			<type>state</type>
			<sensorId>id_register_external_DI14</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 14</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI15">
			<type>state</type>
			<sensorId>id_register_external_DI15</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 15</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI16">
			<type>state</type>
			<sensorId>id_register_external_DI16</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50090</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 16</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO1">
			<type>state</type>
			<sensorId>id_register_internal_DO1</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output (inverted) to Relay 1 (Ready for operation OFF)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO2">
			<type>state</type>
			<sensorId>id_register_internal_DO2</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 2 (Centralized alarm (horn))</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO3">
			<type>state</type>
			<sensorId>id_register_internal_DO3</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 3 (Engine crank)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO4">
			<type>state</type>
			<sensorId>id_register_internal_DO4</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 4 (Fuel solenoid)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO5">
			<type>state</type>
			<sensorId>id_register_internal_DO5</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 5 (Preglow/ignition)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO6">
			<type>state</type>
			<sensorId>id_register_internal_DO6</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 6 (Close GCB)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO7">
			<type>state</type>
			<sensorId>id_register_internal_DO7</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 7 (Open GCB)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO8">
			<type>state</type>
			<sensorId>id_register_internal_DO8</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 8 (Close MCB)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO9">
			<type>state</type>
			<sensorId>id_register_internal_DO9</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 9 (Open MCB)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO10">
			<type>state</type>
			<sensorId>id_register_internal_DO10</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 10 (Auxiliary services)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO11">
			<type>state</type>
			<sensorId>id_register_internal_DO11</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit5 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 11 (Warning alarm class active)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO12">
			<type>state</type>
			<sensorId>id_register_internal_DO12</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit4 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50111</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 12 (Shutdown alarm class active)</label>
			<sensorSet>Device Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO13">
			<type>state</type>
			<sensorId>id_register_internal_DO13</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 13</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO14">
			<type>state</type>
			<sensorId>id_register_internal_DO14</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 14</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO15">
			<type>state</type>
			<sensorId>id_register_internal_DO15</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 15</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO16">
			<type>state</type>
			<sensorId>id_register_internal_DO16</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 16</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO17">
			<type>state</type>
			<sensorId>id_register_internal_DO17</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 17</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO18">
			<type>state</type>
			<sensorId>id_register_internal_DO18</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 18</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO19">
			<type>state</type>
			<sensorId>id_register_internal_DO19</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 19</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO20">
			<type>state</type>
			<sensorId>id_register_internal_DO20</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 20</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO21">
			<type>state</type>
			<sensorId>id_register_internal_DO21</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 21</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_DO22">
			<type>state</type>
			<sensorId>id_register_internal_DO22</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to Relay 22</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_SO2">
			<type>state</type>
			<sensorId>id_register_internal_SO2</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit1 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Open collector output 2</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_internal_SO1">
			<type>state</type>
			<sensorId>id_register_internal_SO1</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit0 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50112</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Open collector output 1</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO1">
			<type>state</type>
			<sensorId>id_register_external_DO1</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit0 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 1</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO2">
			<type>state</type>
			<sensorId>id_register_external_DO2</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit1 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 2</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO3">
			<type>state</type>
			<sensorId>id_register_external_DO3</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit2 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 3</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO4">
			<type>state</type>
			<sensorId>id_register_external_DO4</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit3 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 4</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO5">
			<type>state</type>
			<sensorId>id_register_external_DO5</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit4 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 5</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO6">
			<type>state</type>
			<sensorId>id_register_external_DO6</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit5 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 6</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO7">
			<type>state</type>
			<sensorId>id_register_external_DO7</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 7</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO8">
			<type>state</type>
			<sensorId>id_register_external_DO8</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 8</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO9">
			<type>state</type>
			<sensorId>id_register_external_DO9</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 9</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO10">
			<type>state</type>
			<sensorId>id_register_external_DO10</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 10</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO11">
			<type>state</type>
			<sensorId>id_register_external_DO11</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 11</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO12">
			<type>state</type>
			<sensorId>id_register_external_DO12</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 12</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO13">
			<type>state</type>
			<sensorId>id_register_external_DO13</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 13</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO14">
			<type>state</type>
			<sensorId>id_register_external_DO14</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 14</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO15">
			<type>state</type>
			<sensorId>id_register_external_DO15</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 15</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO16">
			<type>state</type>
			<sensorId>id_register_external_DO16</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50113</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 16</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50120">
			<type>state</type>
			<sensorId>id_register_50120</sensorId>
			<value>
				<mapValue mapid="register_50120-vm">
					<formatNumber>
						<getOid>register_50120</getOid>
					</formatNumber>
				</mapValue>
			</value>
			<enum>register_50120-em</enum>
			<label>Operation mode</label>
			<sensorSet>Other Sensors</sensorSet>
		</stateSensor>
		<valueMap ruleid="register_50120-vm">
			<valueIn>13200</valueIn>
			<valueOut>0</valueOut>
			<valueIn>13201</valueIn>
			<valueOut>1</valueOut>
			<valueIn>13202</valueIn>
			<valueOut>2</valueOut>
			<valueIn>13203</valueIn>
			<valueOut>3</valueOut>
			<valueIn>13204</valueIn>
			<valueOut>4</valueOut>
			<valueIn>13205</valueIn>
			<valueOut>5</valueOut>
			<valueIn>13206</valueIn>
			<valueOut>6</valueOut>
			<valueIn>13207</valueIn>
			<valueOut>7</valueOut>
			<valueIn>13208</valueIn>
			<valueOut>8</valueOut>
			<valueIn>13209</valueIn>
			<valueOut>9</valueOut>
			<valueIn>13210</valueIn>
			<valueOut>10</valueOut>
			<valueIn>13211</valueIn>
			<valueOut>11</valueOut>
			<valueIn>13212</valueIn>
			<valueOut>12</valueOut>
			<valueIn>13213</valueIn>
			<valueOut>13</valueOut>
			<valueIn>13214</valueIn>
			<valueOut>14</valueOut>
			<valueIn>13215</valueIn>
			<valueOut>15</valueOut>
			<valueIn>13216</valueIn>
			<valueOut>16</valueOut>
			<valueIn>13250</valueIn>
			<valueOut>17</valueOut>
			<valueIn>13251</valueIn>
			<valueOut>18</valueOut>
			<valueIn>13252</valueIn>
			<valueOut>19</valueOut>
			<valueIn>13253</valueIn>
			<valueOut>20</valueOut>
			<valueIn>13254</valueIn>
			<valueOut>21</valueOut>
			<valueIn>13255</valueIn>
			<valueOut>22</valueOut>
			<valueIn>13256</valueIn>
			<valueOut>23</valueOut>
			<valueIn>13257</valueIn>
			<valueOut>24</valueOut>
			<valueIn>13258</valueIn>
			<valueOut>25</valueOut>
			<valueIn>13259</valueIn>
			<valueOut>26</valueOut>
			<valueIn>13260</valueIn>
			<valueOut>27</valueOut>
			<valueIn>13261</valueIn>
			<valueOut>28</valueOut>
			<valueIn>13262</valueIn>
			<valueOut>29</valueOut>
			<valueIn>13263</valueIn>
			<valueOut>30</valueOut>
			<valueIn>13264</valueIn>
			<valueOut>31</valueOut>
			<valueIn>13265</valueIn>
			<valueOut>32</valueOut>
			<valueIn>13266</valueIn>
			<valueOut>33</valueOut>
			<valueIn>13267</valueIn>
			<valueOut>34</valueOut>
			<valueIn>13268</valueIn>
			<valueOut>35</valueOut>
			<valueIn>13269</valueIn>
			<valueOut>36</valueOut>
			<valueIn>13270</valueIn>
			<valueOut>37</valueOut>
			<valueIn>13271</valueIn>
			<valueOut>38</valueOut>
			<valueIn>13273</valueIn>
			<valueOut>39</valueOut>
			<valueIn>13281</valueIn>
			<valueOut>40</valueOut>
			<valueIn>13282</valueIn>
			<valueOut>41</valueOut>
			<valueIn>13283</valueIn>
			<valueOut>42</valueOut>
			<valueIn>13284</valueIn>
			<valueOut>43</valueOut>
			<valueIn>13311</valueIn>
			<valueOut>44</valueOut>
		</valueMap>
		<enumMap ruleid="register_50120-em">
			<label>Auxiliary services postrun</label>
			<label>Auxiliary services prerun</label>
			<label>Critical mode</label>
			<label>Stop engine</label>
			<label>Cool down</label>
			<label>Mains settling</label>
			<label>Engine start</label>
			<label>Start  Pause</label>
			<label>Preglow</label>
			<label>GCB dead bus close</label>
			<label>MCB dead bus close</label>
			<label>Emergency run</label>
			<label>Turning</label>
			<label>Ignition</label>
			<label>Crank protect</label>
			<label>Emergency/Critical</label>
			<label>Idle run active</label>
			<label>Gen. stable time</label>
			<label>In operation</label>
			<label>Power limited prerun</label>
			<label>AUTO mode ready</label>
			<label>Ramp to rated</label>
			<label>GCB open</label>
			<label>Unloading generator</label>
			<label>MCB open</label>
			<label>Loading generator</label>
			<label>Synchronization GCB</label>
			<label>Synchronization MCB</label>
			<label>GCB -> MCB delay</label>
			<label>MCB -> GCB delay</label>
			<label>Start w/o load</label>
			<label>Unloading mains</label>
			<label>Synchronization permissive</label>
			<label>Synchronization check</label>
			<label>Synchronization off</label>
			<label>GGB open</label>
			<label>Synchronization GGB</label>
			<label>GGB dead busbar closure</label>
			<label>Run-up synchronization</label>
			<label>MCB -> GGB delay</label>
			<label>Derating active</label>
			<label>Unloading LS-5</label>
			<label>LS-5 synchronization</label>
			<label>Inhibit cranking</label>
			<label>Inhibit dead bus closure</label>
		</enumMap>
		<stateSensor ruleid="sensor_register_50135_0">
			<type>state</type>
			<sensorId>id_register_50135_0</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit0 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Lamp test</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_1">
			<type>state</type>
			<sensorId>id_register_50135_1</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit1 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Auxiliary services postrun</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_2">
			<type>state</type>
			<sensorId>id_register_50135_2</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit2 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Auxiliary services prerun</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_3">
			<type>state</type>
			<sensorId>id_register_50135_3</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit3 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Engine is released (speed governor is enabled)</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_4">
			<type>state</type>
			<sensorId>id_register_50135_4</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit4 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Critical mode is active in automatic mode</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_5">
			<type>state</type>
			<sensorId>id_register_50135_5</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit5 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Engine start is requested</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_6">
			<type>state</type>
			<sensorId>id_register_50135_6</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Breaker delay timer has expired</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_7">
			<type>state</type>
			<sensorId>id_register_50135_7</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Engine monitoring delay timer has expired</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_8">
			<type>state</type>
			<sensorId>id_register_50135_8</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Auxiliary services generally</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_9">
			<type>state</type>
			<sensorId>id_register_50135_9</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Cooldown</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_10">
			<type>state</type>
			<sensorId>id_register_50135_10</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>A manual STOP has been requested</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_11">
			<type>state</type>
			<sensorId>id_register_50135_11</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>A manual START has been requested</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_13">
			<type>state</type>
			<sensorId>id_register_50135_13</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Start without closing GCB</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_14">
			<type>state</type>
			<sensorId>id_register_50135_14</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Idle mode</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50135_15">
			<type>state</type>
			<sensorId>id_register_50135_15</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50135</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Idle mode (suppresses undervolt, underfreq,..)</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_0">
			<type>state</type>
			<sensorId>id_register_50136_0</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit0 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Increment engine start counter</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_1">
			<type>state</type>
			<sensorId>id_register_50136_1</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit1 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Free PID controller 1: raise command</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_2">
			<type>state</type>
			<sensorId>id_register_50136_2</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit2 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Free PID controller 1: lower command</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_3">
			<type>state</type>
			<sensorId>id_register_50136_3</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit3 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>The genset runs mains parallel</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_4">
			<type>state</type>
			<sensorId>id_register_50136_4</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit4 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Excitation AVR (run-up synchronization)</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_5">
			<type>state</type>
			<sensorId>id_register_50136_5</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit5 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Stopping magnet</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_6">
			<type>state</type>
			<sensorId>id_register_50136_6</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Free PID controller 2: raise command</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_7">
			<type>state</type>
			<sensorId>id_register_50136_7</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Free PID controller 2: lower command</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_8">
			<type>state</type>
			<sensorId>id_register_50136_8</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Free PID controller 3: raise command</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_9">
			<type>state</type>
			<sensorId>id_register_50136_9</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Free PID controller 3: lower command</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_11">
			<type>state</type>
			<sensorId>id_register_50136_11</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Emergency mode</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_12">
			<type>state</type>
			<sensorId>id_register_50136_12</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Mains settling timer</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_13">
			<type>state</type>
			<sensorId>id_register_50136_13</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Preglow/ignition</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_14">
			<type>state</type>
			<sensorId>id_register_50136_14</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Operating magnet/gasrelay</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50136_15">
			<type>state</type>
			<sensorId>id_register_50136_15</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50136</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Crank (starter)</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_0">
			<type>state</type>
			<sensorId>id_register_50137_0</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit0 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Power limited prerun</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_1">
			<type>state</type>
			<sensorId>id_register_50137_1</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit1 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Unloading mains is active</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_2">
			<type>state</type>
			<sensorId>id_register_50137_2</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit2 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Unloading generator is active</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_3">
			<type>state</type>
			<sensorId>id_register_50137_3</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit3 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Closing MCB</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_4">
			<type>state</type>
			<sensorId>id_register_50137_4</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit4 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Opening MCB</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_5">
			<type>state</type>
			<sensorId>id_register_50137_5</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit5 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Synchronisation MCB</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_6">
			<type>state</type>
			<sensorId>id_register_50137_6</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Closing GCB</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_7">
			<type>state</type>
			<sensorId>id_register_50137_7</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Opening GCB</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_8">
			<type>state</type>
			<sensorId>id_register_50137_8</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Synchronisation GCB</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_9">
			<type>state</type>
			<sensorId>id_register_50137_9</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Derating</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_10">
			<type>state</type>
			<sensorId>id_register_50137_10</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>MCB is closed</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_11">
			<type>state</type>
			<sensorId>id_register_50137_11</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>GCB is closed</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_12">
			<type>state</type>
			<sensorId>id_register_50137_12</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>3-position controller Volt./ReactPow lower</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_13">
			<type>state</type>
			<sensorId>id_register_50137_13</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>3-position controller Volt./ReactPow raise</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_14">
			<type>state</type>
			<sensorId>id_register_50137_14</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>3-position controller Freq./Power lower</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50137_15">
			<type>state</type>
			<sensorId>id_register_50137_15</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50137</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>3-position controller Freq./Power raise</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_0">
			<type>state</type>
			<sensorId>id_register_50138_0</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit0 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>AUTOMATIC run: switch to operating mode STOP</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_1">
			<type>state</type>
			<sensorId>id_register_50138_1</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit1 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>The critical mode postrun</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_2">
			<type>state</type>
			<sensorId>id_register_50138_2</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit2 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>LDSS: the LDSS function</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_3">
			<type>state</type>
			<sensorId>id_register_50138_3</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit3 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>LDSS: minimum running time</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_4">
			<type>state</type>
			<sensorId>id_register_50138_4</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit4 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>LDSS: the engine is stopped, if possible</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_5">
			<type>state</type>
			<sensorId>id_register_50138_5</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit5 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>LDSS: the engine shall stop</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_6">
			<type>state</type>
			<sensorId>id_register_50138_6</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>LDSS: the engine shall start</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_7">
			<type>state</type>
			<sensorId>id_register_50138_7</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Generator with a closed GCB is requested</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_8">
			<type>state</type>
			<sensorId>id_register_50138_8</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Reactive power load share</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_9">
			<type>state</type>
			<sensorId>id_register_50138_9</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Active power load share</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_10">
			<type>state</type>
			<sensorId>id_register_50138_10</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Dead busbar closure request for GCB, MCB or GGB</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_11">
			<type>state</type>
			<sensorId>id_register_50138_11</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Closing GGB</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_12">
			<type>state</type>
			<sensorId>id_register_50138_12</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Opening GGB</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_13">
			<type>state</type>
			<sensorId>id_register_50138_13</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Synchronisation GGB</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_14">
			<type>state</type>
			<sensorId>id_register_50138_14</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>GGB is released</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50138_15">
			<type>state</type>
			<sensorId>id_register_50138_15</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50138</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>GGB is closed</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI17">
			<type>state</type>
			<sensorId>id_register_external_DI17</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit0 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 17</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI18">
			<type>state</type>
			<sensorId>id_register_external_DI18</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit1 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 18</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI19">
			<type>state</type>
			<sensorId>id_register_external_DI19</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit2 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 19</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI20">
			<type>state</type>
			<sensorId>id_register_external_DI20</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit3 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 20</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI21">
			<type>state</type>
			<sensorId>id_register_external_DI21</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit4 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 21</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI22">
			<type>state</type>
			<sensorId>id_register_external_DI22</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit5 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 22</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI23">
			<type>state</type>
			<sensorId>id_register_external_DI23</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 23</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI24">
			<type>state</type>
			<sensorId>id_register_external_DI24</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 24</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI25">
			<type>state</type>
			<sensorId>id_register_external_DI25</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 25</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI26">
			<type>state</type>
			<sensorId>id_register_external_DI26</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 26</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI27">
			<type>state</type>
			<sensorId>id_register_external_DI27</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 27</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI28">
			<type>state</type>
			<sensorId>id_register_external_DI28</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 28</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI29">
			<type>state</type>
			<sensorId>id_register_external_DI29</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 29</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI30">
			<type>state</type>
			<sensorId>id_register_external_DI30</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 30</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI31">
			<type>state</type>
			<sensorId>id_register_external_DI31</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 31</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DI32">
			<type>state</type>
			<sensorId>id_register_external_DI32</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50140</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>deenergiz_energiz-em</enum>
			<label>Discrete external input 32</label>
			<sensorSet>Input Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO17">
			<type>state</type>
			<sensorId>id_register_external_DO17</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit0 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>0</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 17</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO18">
			<type>state</type>
			<sensorId>id_register_external_DO18</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit1 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>1</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 18</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO19">
			<type>state</type>
			<sensorId>id_register_external_DO19</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit2 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>2</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 19</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO20">
			<type>state</type>
			<sensorId>id_register_external_DO20</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit3 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>3</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 20</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO21">
			<type>state</type>
			<sensorId>id_register_external_DO21</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit4 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>4</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 21</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO22">
			<type>state</type>
			<sensorId>id_register_external_DO22</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit5 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>5</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 22</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO23">
			<type>state</type>
			<sensorId>id_register_external_DO23</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit6 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>6</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 23</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO24">
			<type>state</type>
			<sensorId>id_register_external_DO24</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit7 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>7</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 24</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO25">
			<type>state</type>
			<sensorId>id_register_external_DO25</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 25</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO26">
			<type>state</type>
			<sensorId>id_register_external_DO26</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 26</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO27">
			<type>state</type>
			<sensorId>id_register_external_DO27</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 27</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO28">
			<type>state</type>
			<sensorId>id_register_external_DO28</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 28</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO29">
			<type>state</type>
			<sensorId>id_register_external_DO29</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 29</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO30">
			<type>state</type>
			<sensorId>id_register_external_DO30</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 30</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO31">
			<type>state</type>
			<sensorId>id_register_external_DO31</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 31</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_external_DO32">
			<type>state</type>
			<sensorId>id_register_external_DO32</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50141</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Discrete output to external CAN-I/O Relay 32</label>
			<sensorSet>Output Sensors</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50168_15">
			<type>state</type>
			<sensorId>id_register_50168_15</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit15 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50168</getOid>
									</op>
									<op>15</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Command to CB-control 1 (OR)</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50168_14">
			<type>state</type>
			<sensorId>id_register_50168_14</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit14 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50168</getOid>
									</op>
									<op>14</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Command to CB-control 2 (OR)</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50168_13">
			<type>state</type>
			<sensorId>id_register_50168_13</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit13 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50168</getOid>
									</op>
									<op>13</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Command to CB-control 3 (OR)</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50168_12">
			<type>state</type>
			<sensorId>id_register_50168_12</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit12 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50168</getOid>
									</op>
									<op>12</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Command to CB-control 4 (OR)</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50168_11">
			<type>state</type>
			<sensorId>id_register_50168_11</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit11 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50168</getOid>
									</op>
									<op>11</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Command to CB-control 5 (OR)</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50168_10">
			<type>state</type>
			<sensorId>id_register_50168_10</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit10 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50168</getOid>
									</op>
									<op>10</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Command to CB-control 6 (OR)</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50168_9">
			<type>state</type>
			<sensorId>id_register_50168_9</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit9 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50168</getOid>
									</op>
									<op>9</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Generator excitation limit</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>
		<stateSensor ruleid="sensor_register_50168_8">
			<type>state</type>
			<sensorId>id_register_50168_8</sensorId>
			<value>
				<mapValue mapid="inactive_active-vm">
					<formatNumber>
						<!-- Determined by bit8 -->
						<bitwise_and>
							<op>
								<right_shift>
									<op>
										<getOid>register_50168</getOid>
									</op>
									<op>8</op>
								</right_shift>
							</op>
							<op>1</op>
						</bitwise_and>
					</formatNumber>
				</mapValue>
			</value>
			<enum>inactive_active-em</enum>
			<label>Neutral interlocking closed NC</label>
			<sensorSet>Operation Status</sensorSet>
		</stateSensor>

		<!-- Data Protocol 5003 alarm sensors for Generator -->
		<alarmFlags ruleid="alarm_register_50002">
			<value>
				<mapValue mapid="register_50002-vm">
					<formatNumber>
						<getOid>register_50002</getOid>
					</formatNumber>
				</mapValue>
			</value>
			<alarmFlagsTest match="1" log="no">
				<name>
					<activeText>STOP Operating mode!</activeText>
					<inactiveText>AUTOMATIC Operating mode.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>STOP Operating mode!</activeText>
					<inactiveText>AUTOMATIC Operating mode.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						When STOP is selected, the engine is stopped.
						 The STOP mode is indicated in the lower left corner of the display by the [STOP] symbol.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest match="2" log="no">
				<name>
					<activeText>MANUAL Operating mode.</activeText>
					<inactiveText>AUTOMATIC Operating mode.</inactiveText>
				</name>
				<severity>information</severity>
				<category>Device</category>
				<description>
					<activeText>MANUAL Operating mode.</activeText>
					<inactiveText>AUTOMATIC Operating mode.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						When MANUAL is selected, all engine and breaker control is performed manually via the softkeys along the bottom of the display.
						 The MANUAL mode is indicated in the lower left corner of the display by the [MAN] symbol.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50063">
			<value>
				<getOid>register_50063</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1" log="no">
				<name>
					<activeText>Alarm interface alarm CANopen on CAN bus 1 occurred.</activeText>
					<inactiveText>Alarm interface alarm CANopen on CAN bus 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Communication</category>
				<description>
					<activeText>Alarm interface alarm CANopen on CAN bus 1 occurred.</activeText>
					<inactiveText>Alarm interface alarm CANopen on CAN bus 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						No Receive Process Data Object (RPDO) is received within the configured time.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>Alarm maintenance hours exceeded occurred.</activeText>
					<inactiveText>Alarm maintenance hours exceeded is no longer exists.</inactiveText>
				</name>
				<severity>information</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm maintenance hours exceeded occurred.</activeText>
					<inactiveText>Alarm maintenance hours exceeded is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator run time has exceeded the configured number of operating hours since the last maintenance period. Additionally, the alarm has not been acknowledged.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>Alarm maintenance days exceeded occurred.</activeText>
					<inactiveText>Alarm maintenance days exceeded is no longer exists.</inactiveText>
				</name>
				<severity>information</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm maintenance days exceeded occurred.</activeText>
					<inactiveText>Alarm maintenance days exceeded is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator run time has exceeded the configured number of days since the last maintenance pe-riod. Additionally, the alarm has not been acknowledged.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>Alarm failure of engine to start occurred.</activeText>
					<inactiveText>Alarm failure of engine to start is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm failure of engine to start occurred.</activeText>
					<inactiveText>Alarm failure of engine to start is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator set has failed to start after the configured number of attempts. Depending on the configuration, no more start attempt will be carried out until the alarm is acknowledged.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10" log="no">
				<name>
					<activeText>Alarm interface alarm J1939 occurred.</activeText>
					<inactiveText>Alarm interface alarm J1939 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Communication</category>
				<description>
					<activeText>Alarm interface alarm J1939 occurred.</activeText>
					<inactiveText>Alarm interface alarm J1939 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The communication with the ECU via the CAN bus interface has been interrupted and no data can be transmitted or received over the bus within the configured time.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>Alarm failed MCB open occurred.</activeText>
					<inactiveText>Alarm failed MCB open is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm failed MCB open occurred.</activeText>
					<inactiveText>Alarm failed MCB open is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen is still receiving the reply "MCB closed after the MCB open monitoring timer has expired.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40" log="no">
				<name>
					<activeText>Alarm MCB failed to close occurred.</activeText>
					<inactiveText>Alarm MCB failed to close is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm MCB failed to close occurred.</activeText>
					<inactiveText>Alarm MCB failed to close is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen has attempted to close the MCB the configured maximum number of attempts and failed.
						 Depending on the configuration, the easYgen will continue to attempt to close the GCB as long as the conditions for closing the MCB are fulfilled.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80" log="no">
				<name>
					<activeText>Alarm GCB failed to open occurred.</activeText>
					<inactiveText>Alarm GCB failed to open is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm GCB failed to open occurred.</activeText>
					<inactiveText>Alarm GCB failed to open is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen is still receiving the reply "GCB closed" after the GCB open monitoring timer has expired.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100" log="no">
				<name>
					<activeText>Alarm GCB failed to close occurred.</activeText>
					<inactiveText>Alarm GCB failed to close is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm GCB failed to close occurred.</activeText>
					<inactiveText>Alarm GCB failed to close is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen has attempted to close the GCB the configured maximum number of attempts and failed.
						 Depending on the configuration, the easYgen will continue to attempt to close the GCB as long as the conditions for closing the GCB are fulfilled.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200" log="no">
				<name>
					<activeText>Alarm stop alarm of the engine occurred.</activeText>
					<inactiveText>Alarm stop alarm of the engine is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm stop alarm of the engine occurred.</activeText>
					<inactiveText>Alarm stop alarm of the engine is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The engine failed to stop when given the stop command. When a stop command is issued a timer starts a countdown. If speed is still detected when this timer expires the controller recognizes an unsuccessful stop of the engine.
						 An unsuccessful stop of the engine is determined if speed (measured by the generator frequency, the MPU, or the LogicsManager "ignition speed") is detected within the configured time after the stop signal has been issued.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400" log="no">
				<name>
					<activeText>Alarm difference in frequency/speed measurement occurred.</activeText>
					<inactiveText>Alarm difference in frequency/speed measurement is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm difference in frequency/speed measurement occurred.</activeText>
					<inactiveText>Alarm difference in frequency/speed measurement is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The speed differential between the generator frequency (ascertained by the generator voltage measurement) and the engine speed (measured by the MPU) has exceeded the configured limit value / differential frequency for at least the configured time and has not fallen below the value of the hysteresis.
						 The alarm may also be triggered if the LogicsManager "ignition speed" is enabled and no electrical frequency is detected as well as the other way round.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800" log="no">
				<name>
					<activeText>Alarm unintended stop occurred.</activeText>
					<inactiveText>Alarm unintended stop is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm unintended stop occurred.</activeText>
					<inactiveText>Alarm unintended stop is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen expects the generator to be running but a sudden underrun of the ignition speed has been detected.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000" log="no">
				<name>
					<activeText>Alarm engine underspeed, limit value 2 occurred.</activeText>
					<inactiveText>Alarm engine underspeed, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm engine underspeed, limit value 2 occurred.</activeText>
					<inactiveText>Alarm engine underspeed, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The engine speed has fallen below the limit value 2 for engine underspeed and has not ex-ceeded the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000" log="no">
				<name>
					<activeText>Alarm engine underspeed, limit value 1 occurred.</activeText>
					<inactiveText>Alarm engine underspeed, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm engine underspeed, limit value 1 occurred.</activeText>
					<inactiveText>Alarm engine underspeed, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The engine speed has fallen below the limit value 1 for engine underspeed and has not ex-ceeded the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000" log="no">
				<name>
					<activeText>Alarm engine overspeed, limit value 2 occurred.</activeText>
					<inactiveText>Alarm engine overspeed, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm engine overspeed, limit value 2 occurred.</activeText>
					<inactiveText>Alarm engine overspeed, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The engine speed has exceeded the limit value 2 for engine overspeed for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000" log="no">
				<name>
					<activeText>Alarm engine overspeed, limit value 1 occurred.</activeText>
					<inactiveText>Alarm engine overspeed, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm engine overspeed, limit value 1 occurred.</activeText>
					<inactiveText>Alarm engine overspeed, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The engine speed has exceeded the limit value 1 for engine overspeed for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50066">
			<value>
				<getOid>register_50066</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1" log="no">
				<name>
					<activeText>Alarm amber warning lamp, J1939 interface occurred.</activeText>
					<inactiveText>Alarm amber warning lamp, J1939 interface is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm amber warning lamp, J1939 interface occurred.</activeText>
					<inactiveText>Alarm amber warning lamp, J1939 interface is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						This watchdogs monitors, whether a specific alarm bit is received from the CAN J1939 interface. This enables to configure the control in a way that a reaction is caused by this bit (e.g. warning, shutdown).
						 No alarm can be indicated if the CAN communication fails.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>Alarm red stop lamp, J1939 interface occurred.</activeText>
					<inactiveText>Alarm red stop lamp, J1939 interface is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm red stop lamp, J1939 interface occurred.</activeText>
					<inactiveText>Alarm red stop lamp, J1939 interface is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						This watchdog monitors, whether a specific alarm bit is received from the CAN J1939 interface. This enables to configure the control in a way that a reaction is caused by this bit (e.g. warning, shutdown).
						 No alarm can be indicated if the CAN communication fails.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>Alarm the EEPROM checksum is corrupted occurred.</activeText>
					<inactiveText>Alarm the EEPROM checksum is corrupted is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm the EEPROM checksum is corrupted occurred.</activeText>
					<inactiveText>Alarm the EEPROM checksum is corrupted is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The EEPROM check at startup has resulted a defective EEPROM.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>Alarm missing load share members detected occurred.</activeText>
					<inactiveText>Alarm missing load share members detected is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm missing load share members detected occurred.</activeText>
					<inactiveText>Alarm missing load share members detected is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen has detected that the number of available units for load sharing does not correspond with the configured number of members.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10" log="no">
				<name>
					<activeText>Alarm LDSS parameter mismatch detected occurred.</activeText>
					<inactiveText>Alarm LDSS parameter mismatch detected is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm LDSS parameter mismatch detected occurred.</activeText>
					<inactiveText>Alarm LDSS parameter mismatch detected is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen has detected that not all LDSS parameters are configured identically at all participating units.
						 Refer to the "Multi-unit configuration check" section in the "Parameters" chapter of the Configuration Manual 37427 for a list of all monitored parameters.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>Alarm interface alarm CANopen on CAN bus 2 occurred.</activeText>
					<inactiveText>Alarm interface alarm CANopen on CAN bus 2 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Communication</category>
				<description>
					<activeText>Alarm interface alarm CANopen on CAN bus 2 occurred.</activeText>
					<inactiveText>Alarm interface alarm CANopen on CAN bus 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						No message is received from the external expansion board (Node ID) within the configured time.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800" log="no">
				<name>
					<activeText>Alarm generator/busbar/mains phase rotation different occurred.</activeText>
					<inactiveText>Alarm generator/busbar/mains phase rotation different is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator/busbar/mains phase rotation different occurred.</activeText>
					<inactiveText>Alarm generator/busbar/mains phase rotation different is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						Generator, busbar or mains have different rotating fields. A CB closure is blocked.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000" log="no">
				<name>
					<activeText>Alarm charging alternator voltage low occurred.</activeText>
					<inactiveText>Alarm charging alternator voltage low is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm charging alternator voltage low occurred.</activeText>
					<inactiveText>Alarm charging alternator voltage low is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The charging alternator voltage has fallen below the critical limit for at least the configured time and has not exceeded the value of the hysteresis (the critical limit is 9 V for 12 V systems and 20 V for 24 V systems).
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000" log="no">
				<name>
					<activeText>Alarm GGB synchronization time exceeded occurred.</activeText>
					<inactiveText>Alarm GGB synchronization time exceeded is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm GGB synchronization time exceeded occurred.</activeText>
					<inactiveText>Alarm GGB synchronization time exceeded is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen has failed to synchronize the GGB within the configured synchronization time.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000" log="no">
				<name>
					<activeText>Alarm MCB synchronization time exceeded occurred.</activeText>
					<inactiveText>Alarm MCB synchronization time exceeded is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm MCB synchronization time exceeded occurred.</activeText>
					<inactiveText>Alarm MCB synchronization time exceeded is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen has failed to synchronize the MCB within the configured synchronization time.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000" log="no">
				<name>
					<activeText>Alarm GCB synchronization time exceeded occurred.</activeText>
					<inactiveText>Alarm GCB synchronization time exceeded is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm GCB synchronization time exceeded occurred.</activeText>
					<inactiveText>Alarm GCB synchronization time exceeded is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen has failed to synchronize the GCB within the configured synchronization time.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50069">
			<value>
				<getOid>register_50069</getOid>
			</value>
			<alarmFlagsTest mask="10" match="10" log="no">
				<name>
					<activeText>Alarm missing member VDE-AR-N 4105 occurred.</activeText>
					<inactiveText>Alarm missing member VDE-AR-N 4105 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm missing member VDE-AR-N 4105 occurred.</activeText>
					<inactiveText>Alarm missing member VDE-AR-N 4105 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen has detected missing communication with devices(s) beeing member(s) of the VDE-AR-N 4105 system.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>Alarm VDE-AR-N 4105 parameter mismatch detected occurred.</activeText>
					<inactiveText>Alarm VDE-AR-N 4105 parameter mismatch detected is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm VDE-AR-N 4105 parameter mismatch detected occurred.</activeText>
					<inactiveText>Alarm VDE-AR-N 4105 parameter mismatch detected is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen has detected that the parameter aliignment between the communication devices(s) of the VDE-AR-N 4105 system is active.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40" log="no">
				<name>
					<activeText>Alarm measurement difference between devices VDE-AR-N 4105 occurred.</activeText>
					<inactiveText>Alarm measurement difference between devices VDE-AR-N 4105 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm measurement difference between devices VDE-AR-N 4105 occurred.</activeText>
					<inactiveText>Alarm measurement difference between devices VDE-AR-N 4105 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen has detected that the measurement difference between the communication devices(s) of the VDE-AR-N 4105 system differ more than allowed.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80" log="no">
				<name>
					<activeText>Alarm decoupling GCB -> MCB occurred.</activeText>
					<inactiveText>Alarm decoupling GCB -> MCB is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm decoupling GCB -> MCB occurred.</activeText>
					<inactiveText>Alarm decoupling GCB -> MCB is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						When the mains decoupling function detects a breaker open failure, the according breaker alarm will be triggered as long the monitoring function is activated.
						 Additionally in cases where the decoupling mode has to change over to the other breaker, (GCB -> MCB, MCB -> GCB), this alarm text is indicated.
						 The breaker open alarm already occurres after the mains decoupling feedback delay.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100" log="no">
				<name>
					<activeText>Alarm neutral contactor reply mismatch occurred.</activeText>
					<inactiveText>Alarm neutral contactor reply mismatch is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm neutral contactor reply mismatch occurred.</activeText>
					<inactiveText>Alarm neutral contactor reply mismatch is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						When the mains decoupling function detects a breaker open failure, the according breaker alarm will be triggered as long the monitoring function is activated.
						 Additionally in cases where the decoupling mode has to change over to the other breaker, (GCB -> MCB, MCB -> GCB), this alarm text is indicated.
						 The breaker open alarm already occurres after the mains decoupling feedback delay.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400" log="no">
				<name>
					<activeText>Alarm Free alarm 1 occurred.</activeText>
					<inactiveText>Alarm Free alarm 1 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Fault</category>
				<description>
					<activeText>Alarm Free alarm 1 occurred.</activeText>
					<inactiveText>Alarm Free alarm 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						Free configurable alarms 1.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800" log="no">
				<name>
					<activeText>Alarm Free alarm 2 occurred.</activeText>
					<inactiveText>Alarm Free alarm 2 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Fault</category>
				<description>
					<activeText>Alarm Free alarm 2 occurred.</activeText>
					<inactiveText>Alarm Free alarm 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						Free configurable alarms 2.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000" log="no">
				<name>
					<activeText>Alarm Free alarm 3 occurred.</activeText>
					<inactiveText>Alarm Free alarm 3 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Fault</category>
				<description>
					<activeText>Alarm Free alarm 3 occurred.</activeText>
					<inactiveText>Alarm Free alarm 3 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						Free configurable alarms 3.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000" log="no">
				<name>
					<activeText>Alarm Free alarm 4 occurred.</activeText>
					<inactiveText>Alarm Free alarm 4 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Fault</category>
				<description>
					<activeText>Alarm Free alarm 4 occurred.</activeText>
					<inactiveText>Alarm Free alarm 4 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						Free configurable alarms 4.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50072">
			<value>
				<getOid>register_50072</getOid>
			</value>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>Alarm generator overload IOP, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overload IOP, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overload IOP, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overload IOP, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator power has exceeded the limit value 2 for generator overload in isolated operation (MCB is open) for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>Alarm generator overload IOP, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overload IOP, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overload IOP, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overload IOP, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator power has exceeded the limit value 1 for generator overload in isolated operation (MCB is open) for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>Alarm generator reverse/reduced power, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator reverse/reduced power, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator reverse/reduced power, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator reverse/reduced power, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator power has exceeded the limit value 2 for generator reverse power / generator reduced power for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10" log="no">
				<name>
					<activeText>Alarm generator reverse/reduced power, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator reverse/reduced power, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator reverse/reduced power, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator reverse/reduced power, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator power has exceeded the limit value 1 for generator reverse power / generator reduced power for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>Alarm generator overcurrent, limit value 3 occurred.</activeText>
					<inactiveText>Alarm generator overcurrent, limit value 3 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overcurrent, limit value 3 occurred.</activeText>
					<inactiveText>Alarm generator overcurrent, limit value 3 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator current has exceeded the limit value 3 for the generator overcurrent for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40" log="no">
				<name>
					<activeText>Alarm generator overcurrent, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overcurrent, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overcurrent, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overcurrent, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator current has exceeded the limit value 2 for the generator overcurrent for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80" log="no">
				<name>
					<activeText>Alarm generator overcurrent, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overcurrent, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overcurrent, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overcurrent, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator current has exceeded the limit value 1 for the generator overcurrent for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100" log="no">
				<name>
					<activeText>Alarm generator undervoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator undervoltage, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator undervoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator undervoltage, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator voltage has fallen below the limit value 2 for generator undervoltage for at least the configured time and has not exceeded the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200" log="no">
				<name>
					<activeText>Alarm generator undervoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator undervoltage, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator undervoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator undervoltage, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator voltage has fallen below the limit value 1 for generator undervoltage for at least the configured time and has not exceeded the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400" log="no">
				<name>
					<activeText>Alarm generator overvoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overvoltage, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overvoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overvoltage, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator voltage has exceeded the limit value 2 for generator overvoltage for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800" log="no">
				<name>
					<activeText>Alarm generator overvoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overvoltage, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overvoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overvoltage, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator voltage has exceeded the limit value 1 for generator overvoltage for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000" log="no">
				<name>
					<activeText>Alarm generator underfrequency, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator underfrequency, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator underfrequency, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator underfrequency, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator frequency has fallen below the limit value 2 for generator underfrequency for at least the configured time and has not exceeded the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000" log="no">
				<name>
					<activeText>Alarm generator underfrequency, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator underfrequency, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator underfrequency, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator underfrequency, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator frequency has fallen below the limit value 1 for generator underfrequency for at least the configured time and has not exceeded the value of the hysteresis.
						 Additionally, the alarm has not been acknowledged (unless the "Self acknowledgement" is configured YES).
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000" log="no">
				<name>
					<activeText>Alarm generator overfrequency, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overfrequency, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overfrequency, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overfrequency, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator frequency has exceeded the limit value 2 for generator overfrequency for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000" log="no">
				<name>
					<activeText>Alarm generator overfrequency, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overfrequency, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overfrequency, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overfrequency, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator frequency has exceeded the limit value 1 for generator overfrequency for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50075">
			<value>
				<getOid>register_50075</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1" log="no">
				<name>
					<activeText>Alarm generator underexcited, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator underexcited, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator underexcited, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator underexcited, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The power factor limit 2 has fallen below at the generator towards capacitive (i.e. the current is leading) for at least the configured time and did not exceed the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>Alarm generator underexcited, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator underexcited, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator underexcited, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator underexcited, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The power factor limit 1 has fallen below at the generator towards capacitive (i.e. the current is leading) for at least the configured time and did not exceed the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>Alarm generator overexcited, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overexcited, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overexcited, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overexcited, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The power factor limit 2 has been exceeded at the generator towards inductive (i.e. the current is lagging) for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>Alarm generator overexcited, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overexcited, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overexcited, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overexcited, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The power factor limit 1 has been exceeded at the generator towards inductive (i.e. the current is lagging) for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10" log="no">
				<name>
					<activeText>Alarm generator overload MOP, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overload MOP, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overload MOP, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator overload MOP, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator power has exceeded the limit value 2 for generator overload in mains parallel operation (GCB and MCB are closed) for at least the configured time
						 and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>Alarm generator overload MOP, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overload MOP, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator overload MOP, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator overload MOP, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator power has exceeded the limit value 1 for generator overload in mains parallel operation (GCB and MCB are closed) for at least the configured time
						 and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40" log="no">
				<name>
					<activeText>Alarm measured values not within operating range occurred.</activeText>
					<inactiveText>Alarm measured values not within operating range is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm measured values not within operating range occurred.</activeText>
					<inactiveText>Alarm measured values not within operating range is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						An alarm will be issued if ignition speed is exceeded and the measured values for generator and/or mains are not within the configured operating range.
						 No alarm will be issued in idle mode.
						 The exact tripping conditions for this monitoring functions are described in the configuration manual 37427 in the section "Configure Monitoring: Engine, Operating Range Failure".
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80" log="no">
				<name>
					<activeText>Alarm generator inverse time-overcurrent occurred.</activeText>
					<inactiveText>Alarm generator inverse time-overcurrent is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator inverse time-overcurrent occurred.</activeText>
					<inactiveText>Alarm generator inverse time-overcurrent is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						Current monitoring with tripping time depending on the measured current. The higher the current is the faster the tripping time according to a defined curve.
						 According to IEC255 three different cha-racteristics are available: normal, highly, and extremely inverse.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100" log="no">
				<name>
					<activeText>Alarm generator unloading mismatch occurred.</activeText>
					<inactiveText>Alarm generator unloading mismatch is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator unloading mismatch occurred.</activeText>
					<inactiveText>Alarm generator unloading mismatch is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen failed to reduce the generator power below the configured unload limit within the con-figured time.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200" log="no">
				<name>
					<activeText>Alarm generator active power mismatch occurred.</activeText>
					<inactiveText>Alarm generator active power mismatch is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator active power mismatch occurred.</activeText>
					<inactiveText>Alarm generator active power mismatch is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The deviation between the generator power and the active power set point has exceeded the limit for at least the configured time.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400" log="no">
				<name>
					<activeText>Alarm generator rotating field mismatch occurred.</activeText>
					<inactiveText>Alarm generator rotating field mismatch is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator rotating field mismatch occurred.</activeText>
					<inactiveText>Alarm generator rotating field mismatch is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator rotating field does not correspond with the configured direction.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800" log="no">
				<name>
					<activeText>Alarm generator ground current, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator ground current, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator ground current, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator ground current, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The measured or calculated ground current has exceeded the limit value 2 for the generator ground current for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000" log="no">
				<name>
					<activeText>Alarm generator ground current, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator ground current, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator ground current, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator ground current, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The measured or calculated ground current has exceeded the limit value 1 for the generator ground current for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000" log="no">
				<name>
					<activeText>Alarm generator voltage asymmetry occurred.</activeText>
					<inactiveText>Alarm generator voltage asymmetry is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator voltage asymmetry occurred.</activeText>
					<inactiveText>Alarm generator voltage asymmetry is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator phase-to-phase voltages have higher differences between each other than the configured limit value.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000" log="no">
				<name>
					<activeText>Alarm generator unbalanced load, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator unbalanced load, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator unbalanced load, limit value 2 occurred.</activeText>
					<inactiveText>Alarm generator unbalanced load, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator current has exceeded the limit value 2 for generator unbalanced load for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000" log="no">
				<name>
					<activeText>Alarm generator unbalanced load, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator unbalanced load, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm generator unbalanced load, limit value 1 occurred.</activeText>
					<inactiveText>Alarm generator unbalanced load, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator current has exceeded the limit value 1 for generator unbalanced load for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50078">
			<value>
				<getOid>register_50078</getOid>
			</value>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>Alarm mains rotating field mismatch occurred.</activeText>
					<inactiveText>Alarm mains rotating field mismatch is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains rotating field mismatch occurred.</activeText>
					<inactiveText>Alarm mains rotating field mismatch is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains rotating field does not correspond with the configured direction.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40" log="no">
				<name>
					<activeText>Alarm mains/busbar decoupling triggered occurred.</activeText>
					<inactiveText>Alarm mains/busbar decoupling triggered is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains/busbar decoupling triggered occurred.</activeText>
					<inactiveText>Alarm mains/busbar decoupling triggered is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						One or more monitoring function(s) considered for the mains decoupling functionality has triggered.
						 The mains decoupling function has recognized a mains failure and tripped the breaker.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80" log="no">
				<name>
					<activeText>Alarm mains/busbar phase shift for mains decoupling occurred.</activeText>
					<inactiveText>Alarm mains/busbar phase shift for mains decoupling is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains/busbar phase shift for mains decoupling occurred.</activeText>
					<inactiveText>Alarm mains/busbar phase shift for mains decoupling is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						A mains phase shift, which has exceeded the configured limit, has occurred.
						 Triggering this monitoring function causes the mains decoupling function to trigger.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100" log="no">
				<name>
					<activeText>Alarm mains/busbar undervoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains/busbar undervoltage, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains/busbar undervoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains/busbar undervoltage, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains voltage has fallen below the limit value 2 for mains undervoltage for at least the configured time and has not exceeded the value of the hysteresis.
						 Triggering this monitoring function causes the mains decoupling function to trigger.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200" log="no">
				<name>
					<activeText>Alarm mains/busbar undervoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains/busbar undervoltage, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains/busbar undervoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains/busbar undervoltage, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains voltage has fallen below the limit value 1 for mains undervoltage for at least the configured time and has not exceeded the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400" log="no">
				<name>
					<activeText>Alarm mains/busbar overvoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains/busbar overvoltage, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains/busbar overvoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains/busbar overvoltage, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains voltage has exceeded the limit value 2 for mains overvoltage for at least the configured time and did not fall below the value of the hysteresis.
						 Triggering this monitoring function causes the mains decoupling function to trigger.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800" log="no">
				<name>
					<activeText>Alarm mains/busbar overvoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains/busbar overvoltage, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains/busbar overvoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains/busbar overvoltage, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains voltage has exceeded the limit value 1 for mains overvoltage for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000" log="no">
				<name>
					<activeText>Alarm mains/busbar underfrequency, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains/busbar underfrequency, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains/busbar underfrequency, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains/busbar underfrequency, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains frequency has fallen below the limit value 2 for mains underfrequency for at least the configured time and has not exceeded the value of the hysteresis.
						 Triggering this monitoring function causes the mains decoupling function to trigger.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000" log="no">
				<name>
					<activeText>Alarm mains/busbar underfrequency, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains/busbar underfrequency, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains/busbar underfrequency, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains/busbar underfrequency, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains frequency has fallen below the limit value 1 for mains underfrequency for at least the configured time and has not exceeded the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000" log="no">
				<name>
					<activeText>Alarm mains/busbar overfrequency, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains/busbar overfrequency, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains/busbar overfrequency, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains/busbar overfrequency, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains frequency has exceeded the limit value 2 for mains overfrequency for at least the configured time and did not fall below the value of the hysteresis.
						 Triggering this monitoring function causes the mains decoupling function to trigger.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000" log="no">
				<name>
					<activeText>Alarm mains/busbar overfrequency, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains/busbar overfrequency, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains/busbar overfrequency, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains/busbar overfrequency, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains frequency has exceeded the limit value 1 for mains overfrequency for at least the configured time and did not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50081">
			<value>
				<getOid>register_50081</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1" log="no">
				<name>
					<activeText>Alarm mains QV monitoring, delay time 2 occurred.</activeText>
					<inactiveText>Alarm mains QV monitoring, delay time 2 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains QV monitoring, delay time 2 occurred.</activeText>
					<inactiveText>Alarm mains QV monitoring, delay time 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator reactive power has exceeded the limit for at least the configured delay time 2.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>Alarm mains QV monitoring, delay time 1 occurred.</activeText>
					<inactiveText>Alarm mains QV monitoring, delay time 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains QV monitoring, delay time 1 occurred.</activeText>
					<inactiveText>Alarm mains QV monitoring, delay time 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The generator reactive power has exceeded the limit for at least the configured delay time 1.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>Alarm mains voltage increase occurred.</activeText>
					<inactiveText>Alarm mains voltage increase is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains voltage increase occurred.</activeText>
					<inactiveText>Alarm mains voltage increase is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains voltage has exceeded for a longer time period the voltage increase criteria.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>Alarm time-dependent voltage occurred.</activeText>
					<inactiveText>Alarm time-dependent voltage is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm time-dependent voltage occurred.</activeText>
					<inactiveText>Alarm time-dependent voltage is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The measured voltage falls below/exceeds the configured criteria.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40" log="no">
				<name>
					<activeText>Alarm mains active power mismatch occurred.</activeText>
					<inactiveText>Alarm mains active power mismatch is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains active power mismatch occurred.</activeText>
					<inactiveText>Alarm mains active power mismatch is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The deviation between the import/export power and the active import/export power set point has ex-ceeded the limit for at least the configured time.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80" log="no">
				<name>
					<activeText>Alarm mains df/dt (ROCOF) occurred.</activeText>
					<inactiveText>Alarm mains df/dt (ROCOF) is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains df/dt (ROCOF) occurred.</activeText>
					<inactiveText>Alarm mains df/dt (ROCOF) is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						A mains df/dt, which has exceeded the configured limit, has occurred. Triggering this monitoring function causes the mains decoupling function to trigger.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100" log="no">
				<name>
					<activeText>Alarm mains underexcited, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains underexcited, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains underexcited, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains underexcited, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The power factor limit 2 has fallen below at the mains interchange point towards capacitive (i.e. the current is leading) for at least the configured time and does not exceed the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200" log="no">
				<name>
					<activeText>Alarm mains underexcited, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains underexcited, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains underexcited, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains underexcited, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The power factor limit 1 has fallen below at the mains interchange point towards capacitive (i.e. the current is leading) for at least the configured time and does not exceed the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400" log="no">
				<name>
					<activeText>Alarm mains overexcited, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains overexcited, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains overexcited, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains overexcited, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The power factor limit 2 has been exceeded at the mains interchange point towards inductive (i.e. the current is lagging) for at least the configured time and does not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800" log="no">
				<name>
					<activeText>Alarm mains overexcited, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains overexcited, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains overexcited, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains overexcited, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The power factor limit 1 has been exceeded at the mains interchange point towards inductive (i.e. the current is lagging) for at least the configured time and does not fall below the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000" log="no">
				<name>
					<activeText>Alarm mains export power, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains export power, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains export power, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains export power, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains export power has exceeded or fallen below the limit value 2 for mains export power for at least the configured time and does not fall below or exceed the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000" log="no">
				<name>
					<activeText>Alarm mains export power, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains export power, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains export power, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains export power, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains export power has exceeded or fallen below the limit value 1 for mains export power for at least the configured time and does not fall below or exceed the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000" log="no">
				<name>
					<activeText>Alarm mains import power, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains import power, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains import power, limit value 2 occurred.</activeText>
					<inactiveText>Alarm mains import power, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains import power has exceeded or fallen below the limit value 2 for mains import power for at least the configured time and does not fall below or exceed the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000" log="no">
				<name>
					<activeText>Alarm mains import power, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains import power, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm mains import power, limit value 1 occurred.</activeText>
					<inactiveText>Alarm mains import power, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The mains import power has exceeded or fallen below the limit value 1 for mains import power for at least the configured time and does not fall below or exceed the value of the hysteresis.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50093">
			<value>
				<getOid>register_50093</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1" log="no">
				<name>
					<activeText>Alarm flexible limit 1 occurred.</activeText>
					<inactiveText>Alarm flexible limit 1 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 1 occurred.</activeText>
					<inactiveText>Alarm flexible limit 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>Alarm flexible limit 2 occurred.</activeText>
					<inactiveText>Alarm flexible limit 2 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 2 occurred.</activeText>
					<inactiveText>Alarm flexible limit 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>Alarm flexible limit 3 occurred.</activeText>
					<inactiveText>Alarm flexible limit 3 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 3 occurred.</activeText>
					<inactiveText>Alarm flexible limit 3 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>Alarm flexible limit 4 occurred.</activeText>
					<inactiveText>Alarm flexible limit 4 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 4 occurred.</activeText>
					<inactiveText>Alarm flexible limit 4 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10" log="no">
				<name>
					<activeText>Alarm flexible limit 5 occurred.</activeText>
					<inactiveText>Alarm flexible limit 5 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 5 occurred.</activeText>
					<inactiveText>Alarm flexible limit 5 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>Alarm flexible limit 6 occurred.</activeText>
					<inactiveText>Alarm flexible limit 6 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 6 occurred.</activeText>
					<inactiveText>Alarm flexible limit 6 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40" log="no">
				<name>
					<activeText>Alarm flexible limit 7 occurred.</activeText>
					<inactiveText>Alarm flexible limit 7 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 7 occurred.</activeText>
					<inactiveText>Alarm flexible limit 7 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80" log="no">
				<name>
					<activeText>Alarm flexible limit 8 occurred.</activeText>
					<inactiveText>Alarm flexible limit 8 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 8 occurred.</activeText>
					<inactiveText>Alarm flexible limit 8 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100" log="no">
				<name>
					<activeText>Alarm flexible limit 9 occurred.</activeText>
					<inactiveText>Alarm flexible limit 9 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 9 occurred.</activeText>
					<inactiveText>Alarm flexible limit 9 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200" log="no">
				<name>
					<activeText>Alarm flexible limit 10 occurred.</activeText>
					<inactiveText>Alarm flexible limit 10 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 10 occurred.</activeText>
					<inactiveText>Alarm flexible limit 10 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400" log="no">
				<name>
					<activeText>Alarm flexible limit 11 occurred.</activeText>
					<inactiveText>Alarm flexible limit 11 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 11 occurred.</activeText>
					<inactiveText>Alarm flexible limit 11 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800" log="no">
				<name>
					<activeText>Alarm flexible limit 12 occurred.</activeText>
					<inactiveText>Alarm flexible limit 12 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 12 occurred.</activeText>
					<inactiveText>Alarm flexible limit 12 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000" log="no">
				<name>
					<activeText>Alarm flexible limit 13 occurred.</activeText>
					<inactiveText>Alarm flexible limit 13 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 13 occurred.</activeText>
					<inactiveText>Alarm flexible limit 13 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000" log="no">
				<name>
					<activeText>Alarm flexible limit 14 occurred.</activeText>
					<inactiveText>Alarm flexible limit 14 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 14 occurred.</activeText>
					<inactiveText>Alarm flexible limit 14 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000" log="no">
				<name>
					<activeText>Alarm flexible limit 15 occurred.</activeText>
					<inactiveText>Alarm flexible limit 15 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 15 occurred.</activeText>
					<inactiveText>Alarm flexible limit 15 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000" log="no">
				<name>
					<activeText>Alarm flexible limit 16 occurred.</activeText>
					<inactiveText>Alarm flexible limit 16 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 16 occurred.</activeText>
					<inactiveText>Alarm flexible limit 16 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50096">
			<value>
				<getOid>register_50096</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1" log="no">
				<name>
					<activeText>Alarm flexible limit 17 occurred.</activeText>
					<inactiveText>Alarm flexible limit 17 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 17 occurred.</activeText>
					<inactiveText>Alarm flexible limit 17 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>Alarm flexible limit 18 occurred.</activeText>
					<inactiveText>Alarm flexible limit 18 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 18 occurred.</activeText>
					<inactiveText>Alarm flexible limit 18 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>Alarm flexible limit 19 occurred.</activeText>
					<inactiveText>Alarm flexible limit 19 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 19 occurred.</activeText>
					<inactiveText>Alarm flexible limit 19 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>Alarm flexible limit 20 occurred.</activeText>
					<inactiveText>Alarm flexible limit 20 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 20 occurred.</activeText>
					<inactiveText>Alarm flexible limit 20 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10" log="no">
				<name>
					<activeText>Alarm flexible limit 21 occurred.</activeText>
					<inactiveText>Alarm flexible limit 21 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 21 occurred.</activeText>
					<inactiveText>Alarm flexible limit 21 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>Alarm flexible limit 22 occurred.</activeText>
					<inactiveText>Alarm flexible limit 22 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 22 occurred.</activeText>
					<inactiveText>Alarm flexible limit 22 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40" log="no">
				<name>
					<activeText>Alarm flexible limit 23 occurred.</activeText>
					<inactiveText>Alarm flexible limit 23 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 23 occurred.</activeText>
					<inactiveText>Alarm flexible limit 23 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80" log="no">
				<name>
					<activeText>Alarm flexible limit 24 occurred.</activeText>
					<inactiveText>Alarm flexible limit 24 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 24 occurred.</activeText>
					<inactiveText>Alarm flexible limit 24 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100" log="no">
				<name>
					<activeText>Alarm flexible limit 25 occurred.</activeText>
					<inactiveText>Alarm flexible limit 25 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 25 occurred.</activeText>
					<inactiveText>Alarm flexible limit 25 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200" log="no">
				<name>
					<activeText>Alarm flexible limit 26 occurred.</activeText>
					<inactiveText>Alarm flexible limit 26 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 26 occurred.</activeText>
					<inactiveText>Alarm flexible limit 26 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400" log="no">
				<name>
					<activeText>Alarm flexible limit 27 occurred.</activeText>
					<inactiveText>Alarm flexible limit 27 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 27 occurred.</activeText>
					<inactiveText>Alarm flexible limit 27 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800" log="no">
				<name>
					<activeText>Alarm flexible limit 28 occurred.</activeText>
					<inactiveText>Alarm flexible limit 28 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 28 occurred.</activeText>
					<inactiveText>Alarm flexible limit 28 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000" log="no">
				<name>
					<activeText>Alarm flexible limit 29 occurred.</activeText>
					<inactiveText>Alarm flexible limit 29 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 29 occurred.</activeText>
					<inactiveText>Alarm flexible limit 29 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000" log="no">
				<name>
					<activeText>Alarm flexible limit 30 occurred.</activeText>
					<inactiveText>Alarm flexible limit 30 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 30 occurred.</activeText>
					<inactiveText>Alarm flexible limit 30 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000" log="no">
				<name>
					<activeText>Alarm flexible limit 31 occurred.</activeText>
					<inactiveText>Alarm flexible limit 31 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 31 occurred.</activeText>
					<inactiveText>Alarm flexible limit 31 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000" log="no">
				<name>
					<activeText>Alarm flexible limit 32 occurred.</activeText>
					<inactiveText>Alarm flexible limit 32 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 32 occurred.</activeText>
					<inactiveText>Alarm flexible limit 32 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50099">
			<value>
				<getOid>register_50099</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1" log="no">
				<name>
					<activeText>Alarm flexible limit 33 occurred.</activeText>
					<inactiveText>Alarm flexible limit 33 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 33 occurred.</activeText>
					<inactiveText>Alarm flexible limit 33 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>Alarm flexible limit 34 occurred.</activeText>
					<inactiveText>Alarm flexible limit 34 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 34 occurred.</activeText>
					<inactiveText>Alarm flexible limit 34 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>Alarm flexible limit 35 occurred.</activeText>
					<inactiveText>Alarm flexible limit 35 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 35 occurred.</activeText>
					<inactiveText>Alarm flexible limit 35 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>Alarm flexible limit 36 occurred.</activeText>
					<inactiveText>Alarm flexible limit 36 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 36 occurred.</activeText>
					<inactiveText>Alarm flexible limit 36 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10" log="no">
				<name>
					<activeText>Alarm flexible limit 37 occurred.</activeText>
					<inactiveText>Alarm flexible limit 37 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 37 occurred.</activeText>
					<inactiveText>Alarm flexible limit 37 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>Alarm flexible limit 38 occurred.</activeText>
					<inactiveText>Alarm flexible limit 38 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 38 occurred.</activeText>
					<inactiveText>Alarm flexible limit 38 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40" log="no">
				<name>
					<activeText>Alarm flexible limit 39 occurred.</activeText>
					<inactiveText>Alarm flexible limit 39 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 39 occurred.</activeText>
					<inactiveText>Alarm flexible limit 39 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80" log="no">
				<name>
					<activeText>Alarm flexible limit 40 occurred.</activeText>
					<inactiveText>Alarm flexible limit 40 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Alarm flexible limit 40 occurred.</activeText>
					<inactiveText>Alarm flexible limit 40 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The actual value of the monitored analog value has exceeded/fallen below the threshold
						 (depending on the configuration) for at least the configured time and did not fall below/exceed
						 the value of the hysteresis. This text may be assigned customer defined.
						 The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50102">
			<value>
				<getOid>register_50102</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1" log="no">
				<name>
					<activeText>Alarm battery undervoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm battery undervoltage, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Battery</category>
				<description>
					<activeText>Alarm battery undervoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm battery undervoltage, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The battery voltage has fallen below the limit value 1 for battery undervoltage for at least the configured time
						 and has not exceeded the value of the hysteresis.
						 The default monitoring limit for battery undervoltage is 24 Vdc after 60 seconds.
						 This is because in normal operation the terminal voltage is approximately 26 Vdc (alternator charged battery).
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>Alarm battery overvoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm battery overvoltage, limit value 1 is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Battery</category>
				<description>
					<activeText>Alarm battery overvoltage, limit value 1 occurred.</activeText>
					<inactiveText>Alarm battery overvoltage, limit value 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The battery voltage has exceeded the limit value 1 for battery overvoltage for at least the configured time
						 and did not fall below the value of the hysteresis.
						 The default monitoring limit for battery overvoltage is 32 Vdc after 5 seconds.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>Alarm battery undervoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm battery undervoltage, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Battery</category>
				<description>
					<activeText>Alarm battery undervoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm battery undervoltage, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The battery voltage has fallen below the limit value 2 for battery undervoltage for at least the configured time
						 and has not exceeded the value of the hysteresis.
						 The default monitoring limit for battery undervoltage is 20 Vdc after 10 seconds.
						 This is because in normal operation the terminal voltage is approximately 26 Vdc (alternator charged battery).
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>Alarm battery overvoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm battery overvoltage, limit value 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Battery</category>
				<description>
					<activeText>Alarm battery overvoltage, limit value 2 occurred.</activeText>
					<inactiveText>Alarm battery overvoltage, limit value 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The battery voltage has exceeded the limit value 2 for battery overvoltage for at least the configured time
						 and did not fall below the value of the hysteresis.
						 The default monitoring limit for battery overvoltage is 35 Vdc after 1 seconds.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50105">
			<value>
				<getOid>register_50105</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1" log="no">
				<name>
					<activeText>Alarm class A occurred.</activeText>
					<inactiveText>Alarm class A is no longer exists.</inactiveText>
				</name>
				<severity>information</severity>
				<category>Warning Alarm</category>
				<description>
					<activeText>Alarm class A occurred.</activeText>
					<inactiveText>Alarm class A is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						This alarm does not interrupt the unit operation. A message output without a centralized alarm occurs.
						 -> Alarm text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>Alarm class B occurred.</activeText>
					<inactiveText>Alarm class B is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Warning Alarm</category>
				<description>
					<activeText>Alarm class B occurred.</activeText>
					<inactiveText>Alarm class B is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						This alarm does not interrupt the unit operation. An output of the centralized alarm occurs and the command variable 3.05 (horn) is issued.
						 -> Alarm text + flashing LED "Alarm" + Relay centralized alarm (horn).
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>Alarm class C occurred.</activeText>
					<inactiveText>Alarm class C is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Fault</category>
				<description>
					<activeText>Alarm class C occurred.</activeText>
					<inactiveText>Alarm class C is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						With this alarm the GCB is opened and the engine is stopped. Coasting occurs.
						 -> Alarm text + flashing LED "Alarm" + Relay centralized alarm (horn) + GCB open + Coasting + Engine stop.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>Alarm class D occurred.</activeText>
					<inactiveText>Alarm class D is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Fault</category>
				<description>
					<activeText>Alarm class D occurred.</activeText>
					<inactiveText>Alarm class D is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						With this alarm the GCB is opened and the engine is stopped. Coasting occurs.
						 -> Alarm text + flashing LED "Alarm" + Relay centralized alarm (horn) + GCB open + Coasting + Engine stop.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10" log="no">
				<name>
					<activeText>Alarm class E occurred.</activeText>
					<inactiveText>Alarm class E is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Fault</category>
				<description>
					<activeText>Alarm class E occurred.</activeText>
					<inactiveText>Alarm class E is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						With this alarm the GCB is opened immediately and the engine is stopped.
						 -> Alarm text + flashing LED "Alarm" + Relay centralized alarm (horn) + GCB open + Engine stop.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>Alarm class F occurred.</activeText>
					<inactiveText>Alarm class F is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Fault</category>
				<description>
					<activeText>Alarm class F occurred.</activeText>
					<inactiveText>Alarm class F is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						With this alarm the GCB is opened immediately and the engine is stopped.
						 ->  Alarm text + flashing LED "Alarm" + Relay centralized alarm (horn) + GCB open + Engine stop.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50108">
			<value>
				<getOid>register_50108</getOid>
			</value>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>Analog input 1, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 1, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Analog input 1, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 1, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>Analog input 2, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 2, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Analog input 2, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 2, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>Analog input 3, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 3, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Analog input 3, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 3, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10" log="no">
				<name>
					<activeText>Analog input 4, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 4, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Analog input 4, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 4, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>Analog input 5, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 5, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Analog input 5, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 5, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40" log="no">
				<name>
					<activeText>Analog input 6, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 6, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Analog input 6, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 6, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80" log="no">
				<name>
					<activeText>Analog input 7, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 7, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Analog input 7, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 7, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100" log="no">
				<name>
					<activeText>Analog input 8, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 8, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Analog input 8, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 8, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200" log="no">
				<name>
					<activeText>Analog input 9, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 9, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Analog input 9, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 9, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400" log="no">
				<name>
					<activeText>Analog input 10, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 10, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>Analog input 10, wire break or shortcut occurred.</activeText>
					<inactiveText>Analog input 10, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50110">
			<value>
				<getOid>register_50110</getOid>
			</value>
			<alarmFlagsTest mask="1" match="1" log="no">
				<name>
					<activeText>External analog input 1, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 1, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 1, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 1, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2" match="2" log="no">
				<name>
					<activeText>External analog input 2, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 2, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 2, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 2, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4" log="no">
				<name>
					<activeText>External analog input 3, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 3, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 3, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 3, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8" log="no">
				<name>
					<activeText>External analog input 4, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 4, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 4, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 4, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10" log="no">
				<name>
					<activeText>External analog input 5, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 5, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 5, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 5, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20" log="no">
				<name>
					<activeText>External analog input 6, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 6, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 6, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 6, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40" log="no">
				<name>
					<activeText>External analog input 7, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 7, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 7, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 7, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80" log="no">
				<name>
					<activeText>External analog input 8, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 8, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 8, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 8, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="100" match="100" log="no">
				<name>
					<activeText>External analog input 9, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 9, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 9, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 9, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="200" match="200" log="no">
				<name>
					<activeText>External analog input 10, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 10, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 10, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 10, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400" log="no">
				<name>
					<activeText>External analog input 11, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 11, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 11, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 11, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800" log="no">
				<name>
					<activeText>External analog input 12, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 12, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 12, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 12, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="1000" match="1000" log="no">
				<name>
					<activeText>External analog input 13, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 13, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 13, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 13, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="2000" match="2000" log="no">
				<name>
					<activeText>External analog input 14, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 14, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 14, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 14, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000" log="no">
				<name>
					<activeText>External analog input 15, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 15, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 15, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 15, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000" log="no">
				<name>
					<activeText>External analog input 16, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 16, wire break or shortcut is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Input</category>
				<description>
					<activeText>External analog input 16, wire break or shortcut occurred.</activeText>
					<inactiveText>External analog input 16, wire break or shortcut is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						During measurement of the external analog input a wire break was detected.
						 This text may be assigned customer defined. The text in angular brackets is the default text.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50165">
			<value>
				<getOid>register_50165</getOid>
			</value>
			<alarmFlagsTest mask="200" match="200" log="no">
				<name>
					<activeText>Alarm cylinder temperature monitoring wire is broken occurred.</activeText>
					<inactiveText>Alarm cylinder temperature monitoring wire is broken is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Temperature</category>
				<description>
					<activeText>Alarm cylinder temperature monitoring wire is broken occurred.</activeText>
					<inactiveText>Alarm cylinder temperature monitoring wire is broken is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						Cylinder temperature monitoring wire is detected as broken.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="400" match="400" log="no">
				<name>
					<activeText>Alarm cylinder temperature level 2 occurred.</activeText>
					<inactiveText>Alarm cylinder temperature level 2 is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Temperature</category>
				<description>
					<activeText>Alarm cylinder temperature level 2 occurred.</activeText>
					<inactiveText>Alarm cylinder temperature level 2 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						Cylinder temperature level 2.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="800" match="800" log="no">
				<name>
					<activeText>Alarm cylinder temperature level 1 occurred.</activeText>
					<inactiveText>Alarm cylinder temperature level 1 is no longer exists.</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Temperature</category>
				<description>
					<activeText>Alarm cylinder temperature level 1 occurred.</activeText>
					<inactiveText>Alarm cylinder temperature level 1 is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						Cylinder temperature level 1.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4000" match="4000" log="no">
				<name>
					<activeText>Alarm GGB fail to open occurred.</activeText>
					<inactiveText>Alarm GGB fail to open is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm GGB fail to open occurred.</activeText>
					<inactiveText>Alarm GGB fail to open is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen is still receiving the reply "GGB closed" after the GGB open monitoring timer has expired.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8000" match="8000" log="no">
				<name>
					<activeText>Alarm GGB fail to close occurred.</activeText>
					<inactiveText>Alarm GGB fail to close is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Power</category>
				<description>
					<activeText>Alarm GGB fail to close occurred.</activeText>
					<inactiveText>Alarm GGB fail to close is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The easYgen has attempted to close the GGB the configured maximum number of attempts and failed. Depending on the configuration, the easYgen will continue to attempt to close the GGB as long as the conditions for closing the GGB are fulfilled.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<!-- Data Protocol 5003 alarm sensors for Engine J1939 ECU -->
		<alarmFlags ruleid="alarm_register_50246">
			<value>
				<if>
					<op>
						<gt>
							<op>
								<getOid>register_50246</getOid>
							</op>
							<op>20500</op>
						</gt>
					</op>
					<op>1</op>
					<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1" log="no">
				<name>
					<activeText>Alarm engine overspeed occurred.</activeText>
					<inactiveText>Alarm engine overspeed is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm engine overspeed occurred.</activeText>
					<inactiveText>Alarm engine overspeed is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The range for the engine speed is under 2000rpm. If engine speed over 2050rpm, STOP the engine. Engine damage can result.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_water_heater">
			<value>
				<if>
					<op>
						<lt>
							<op>
								<getOid>register_50251</getOid>
							</op>
							<op>10</op>
						</lt>
					</op>
					<op>
						<!-- If fuel temperature < 10C (ambient temperature < 0C), then the low threshold for engine coolant temperature is 20C -->
						<if>
							<op>
								<lt>
									<op>
										<getOid>register_50248</getOid>
									</op>
									<op>20</op>
								</lt>
							</op>
							<op>1</op>
							<op>0</op>
						</if>
					</op>
					<op>
						<!-- Else (ambient temperature > 0C), the low threshold for engine coolant temperature is 30C -->
						<if>
							<op>
								<lt>
									<op>
										<getOid>register_50248</getOid>
									</op>
									<op>30</op>
								</lt>
							</op>
							<op>1</op>
							<op>0</op>
						</if>
					</op>
				</if>
			</value>
			<alarmFlagsTest match="1" log="no">
				<name>
					<activeText>Alarm low engine coolant temperature occurred.</activeText>
					<inactiveText>Alarm low engine coolant temperature is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Temperature</category>
				<description>
					<activeText>Alarm low engine coolant temperature occurred.</activeText>
					<inactiveText>Alarm low engine coolant temperature is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						Check the operation of jacket water heater. For an ambient temperature of 0C, the heater should maintain the jacket water coolant temperature at approximately 32C.
						 Jacket water heaters help to improve startability in ambient temperatures that are below 21C. All installations that require automatic starting should have jacket water heaters.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50248">
			<value>
				<if>
					<op>
						<gt>
							<op>
								<getOid>register_50248</getOid>
							</op>
							<op>105</op>
						</gt>
					</op>
					<op>1</op>
					<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1" log="no">
				<name>
					<activeText>Alarm high engine coolant temperature occurred.</activeText>
					<inactiveText>Alarm high engine coolant temperature is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Temperature</category>
				<description>
					<activeText>Alarm high engine coolant temperature occurred.</activeText>
					<inactiveText>Alarm high engine coolant temperature is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						Typical water temperature into the engine is 88C. Higher temperatures may occur under certain conditions. The water temperature reading may vary according to load. The reading should never exceed 107C.
						 If maximum coolant temperature is exceeded, STOP the engine. Engine damage can result.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_oil_pressure">
			<value>
				<if>
					<op>
						<and>
							<gt>
								<op>
									<getOid>register_50246</getOid>
								</op>
								<op>12500</op>
							</gt>
							<lt>
								<op>
									<getOid>register_50254</getOid>
								</op>
								<op>200</op>
							</lt>
						</and>
					</op>
					<op>1</op>
					<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1" log="no">
				<name>
					<activeText>Alarm low engine oil pressure occurred.</activeText>
					<inactiveText>Alarm low engine oil pressure is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm low engine oil pressure occurred.</activeText>
					<inactiveText>Alarm low engine oil pressure is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The range for the engine oil pressure is 200...420kPa (2,0...4,2bar). If no oil pressure is indicated, STOP the engine. Engine damage can result.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50251">
			<value>
				<if>
					<op>
						<gt>
							<op>
								<getOid>register_50251</getOid>
							</op>
							<op>60</op>
						</gt>
					</op>
					<op>1</op>
					<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1" log="no">
				<name>
					<activeText>Alarm high fuel supply temperature occurred.</activeText>
					<inactiveText>Alarm high fuel supply temperature is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Temperature</category>
				<description>
					<activeText>Alarm high fuel supply temperature occurred.</activeText>
					<inactiveText>Alarm high fuel supply temperature is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The range for the fuel supply temperature is under 68C.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50255">
			<value>
				<if>
					<op>
						<gt>
							<op>
								<getOid>register_50255</getOid>
							</op>
							<op>10</op>
						</gt>
					</op>
					<op>1</op>
					<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1" log="no">
				<name>
					<activeText>The genset is in regular operation.</activeText>
					<inactiveText>Automatic mode ready for start.</inactiveText>
				</name>
				<severity>information</severity>
				<category>Device</category>
				<description>
					<activeText>The genset is in regular operation.</activeText>
					<inactiveText>Automatic mode ready for start.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The genset is in regular operation and is ready for supplying load.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50261">
			<value>
				<if>
					<op>
						<gt>
							<op>
								<getOid>register_50261</getOid>
							</op>
							<op>300</op>
						</gt>
					</op>
					<op>1</op>
					<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1" log="no">
				<name>
					<activeText>Alarm high boost pressure occurred.</activeText>
					<inactiveText>Alarm high boost pressure is no longer exists.</inactiveText>
				</name>
				<severity>error</severity>
				<category>Device</category>
				<description>
					<activeText>Alarm high boost pressure occurred.</activeText>
					<inactiveText>Alarm high boost pressure is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The range for the boost pressure is under 300kPa. The intake manifold pressure sensor measures boost pressure in the intake manifold.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="alarm_register_50262">
			<value>
				<if>
					<op>
						<gt>
							<op>
								<getOid>register_50262</getOid>
							</op>
							<op>75</op>
						</gt>
					</op>
					<op>1</op>
					<op>0</op>
				</if>
			</value>
			<alarmFlagsTest match="1" log="no">
				<name>
					<activeText>Alarm high engine intake manifold air temperature occurred.</activeText>
					<inactiveText>Alarm high engine intake manifold air temperature is no longer exists.</inactiveText>
				</name>
				<severity>critical</severity>
				<category>Temperature</category>
				<description>
					<activeText>Alarm high engine intake manifold air temperature occurred.</activeText>
					<inactiveText>Alarm high engine intake manifold air temperature is no longer exists.</inactiveText>
				</description>
				<alarmRecommendedActions>
					<recommendedActionId>
						The range for the engine intake manifold air temperature is under 78C. The intake manifold air temperature sensor measures the intake air temperature.
					</recommendedActionId>
				</alarmRecommendedActions>
			</alarmFlagsTest>
		</alarmFlags>
	</device>

	<protocol>
		<modbus>
			<!-- Data Protocol 5003 for Generator -->
			<value_ref_id valid="register_50001">
				<!-- Generator speed, rpm -->
				<function>3</function>
				<start_addr>50001</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50002">
				<!-- Control mode (STOP/AUTO/MANUALLY) -->
				<function>3</function>
				<start_addr>50002</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50003">
				<!-- Generator power factor (- leading, + lagging), 0.001*PF -->
				<function>3</function>
				<start_addr>50003</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50004">
				<!-- Average generator Wye-Voltage, 0.1*V -->
				<function>3</function>
				<start_addr>50004</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50006">
				<!-- Generator frequency, 0.01*Hz -->
				<function>3</function>
				<start_addr>50006</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50007">
				<!-- Average generator Delta-Voltage, 0.1*V -->
				<function>3</function>
				<start_addr>50007</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50009">
				<!-- Mains frequency, 0.01*Hz -->
				<function>3</function>
				<start_addr>50009</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50010">
				<!-- Average mains Wye-Voltage, 0.1*V -->
				<function>3</function>
				<start_addr>50010</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50012">
				<!-- Mains power factor (- leading, + lagging), 0.001*PF -->
				<function>3</function>
				<start_addr>50012</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50013">
				<!-- Average mains Delta-Voltage, 0.1*V -->
				<function>3</function>
				<start_addr>50013</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50015">
				<!-- Busbar1 frequency, 0.01*Hz -->
				<function>3</function>
				<start_addr>50015</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50016">
				<!-- Average busbar1 Delta-Voltage, 0.1*V -->
				<function>3</function>
				<start_addr>50016</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50021">
				<!-- Battery voltage, 0.1*V -->
				<function>3</function>
				<start_addr>50021</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50022">
				<!-- Average mains current, 0.001*A -->
				<function>3</function>
				<start_addr>50022</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50025">
				<!-- Average generator current, 0.001*A -->
				<function>3</function>
				<start_addr>50025</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50028">
				<!-- Measured ground current, 0.001*A -->
				<function>3</function>
				<start_addr>50028</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50031">
				<!-- Calculated ground current, 0.001*A -->
				<function>3</function>
				<start_addr>50031</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50034">
				<!-- Generator current I1, 0.001*A -->
				<function>3</function>
				<start_addr>50034</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50037">
				<!-- Generator current I2, 0.001*A -->
				<function>3</function>
				<start_addr>50037</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50040">
				<!-- Generator current I3, 0.001*A -->
				<function>3</function>
				<start_addr>50040</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50043">
				<!-- Mains/ground current, 0.001*A -->
				<function>3</function>
				<start_addr>50043</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50052">
				<!-- Total generator active power, W -->
				<function>3</function>
				<start_addr>50052</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50055">
				<!-- Total mains active power, W -->
				<function>3</function>
				<start_addr>50055</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50058">
				<!-- Total generator reactive power, VAr -->
				<function>3</function>
				<start_addr>50058</start_addr>
				<quantity>2</quantity>
				<type>int_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50060">
				<!-- AI Auxiliary excitation D+, 0.1*V -->
				<function>3</function>
				<start_addr>50060</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50061">
				<!-- Total mains reactive power, VAr -->
				<function>3</function>
				<start_addr>50061</start_addr>
				<quantity>2</quantity>
				<type>int_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50063">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50063</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50064">
				<!-- Busbar1 phase to phase voltage U12, 0.1*V -->
				<function>3</function>
				<start_addr>50064</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50066">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50066</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50069">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50069</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50072">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50072</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50073">
				<!-- Generator phase to phase voltage U12, 0.1*V -->
				<function>3</function>
				<start_addr>50073</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50075">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50075</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50076">
				<!-- Generator phase to neutral voltage V1, 0.1*V -->
				<function>3</function>
				<start_addr>50076</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50078">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50078</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50079">
				<!-- Generator phase to phase voltage U23, 0.1*V -->
				<function>3</function>
				<start_addr>50079</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50081">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50081</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50082">
				<!-- Generator phase to neutral voltage V2, 0.1*V -->
				<function>3</function>
				<start_addr>50082</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50084">
				<!-- State internal Digital Inputs 1-12 -->
				<function>3</function>
				<start_addr>50084</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50085">
				<!-- Generator phase to phase voltage U31, 0.1*V -->
				<function>3</function>
				<start_addr>50085</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50087">
				<!-- State internal Digital Inputs 13-23 (for P2 model only) -->
				<function>3</function>
				<start_addr>50087</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50088">
				<!-- Generator phase to neutral voltage V3, 0.1*V -->
				<function>3</function>
				<start_addr>50088</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50090">
				<!-- State external Digital Inputs 1-16 -->
				<function>3</function>
				<start_addr>50090</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50091">
				<!-- Mains phase to phase voltage U12, 0.1*V -->
				<function>3</function>
				<start_addr>50091</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50093">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50093</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50094">
				<!-- Mains phase to neutral voltage V1, 0.1*V -->
				<function>3</function>
				<start_addr>50094</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50096">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50096</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50097">
				<!-- Mains phase to phase voltage U23, 0.1*V -->
				<function>3</function>
				<start_addr>50097</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50099">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50099</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50100">
				<!-- Mains phase to neutral voltage V2, 0.1*V -->
				<function>3</function>
				<start_addr>50100</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50102">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50102</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50103">
				<!-- Mains phase to phase voltage U31, 0.1*V -->
				<function>3</function>
				<start_addr>50103</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50105">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50105</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50106">
				<!-- Mains phase to neutral voltage V3, 0.1*V -->
				<function>3</function>
				<start_addr>50106</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50108">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50108</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50110">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50110</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50111">
				<!-- State internal Digital Outputs 1-12 -->
				<function>3</function>
				<start_addr>50111</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50112">
				<!-- State internal Digital Outputs 13-22 (for P2 model only) -->
				<function>3</function>
				<start_addr>50112</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50113">
				<!-- State external Digital Outputs 1-16 -->
				<function>3</function>
				<start_addr>50113</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50120">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50120</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50121">
				<!-- Generator active energy, 0.01*MWh -->
				<function>3</function>
				<start_addr>50121</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50123">
				<!-- Engine, total number of start requests -->
				<function>3</function>
				<start_addr>50123</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50124">
				<!-- Generator positive reactive energy, 0.01*MVArh -->
				<function>3</function>
				<start_addr>50124</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50126">
				<!-- Hours until next maintenance, h -->
				<function>3</function>
				<start_addr>50126</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50127">
				<!-- Generator hours of operation, 0.01*h -->
				<function>3</function>
				<start_addr>50127</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50129">
				<!-- Setpoint frequency, 0.01*Hz -->
				<function>3</function>
				<start_addr>50129</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50130">
				<!-- Setpoint active power, 0.1*kW -->
				<function>3</function>
				<start_addr>50130</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50132">
				<!-- Setpoint voltage, V -->
				<function>3</function>
				<start_addr>50132</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50134">
				<!-- Setpoint power factor (- leading, + lagging), 0.001*PF -->
				<function>3</function>
				<start_addr>50134</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50135">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50135</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50136">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50136</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50137">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50137</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50138">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50138</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50140">
				<!-- State external Digital Inputs 17-32 (for P2 model only) -->
				<function>3</function>
				<start_addr>50140</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50141">
				<!-- State external Digital Outputs 17-32 (for P2 model only) -->
				<function>3</function>
				<start_addr>50141</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50165">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50165</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50166">
				<!-- Nominal active power in system (in own segment), kW -->
				<function>3</function>
				<start_addr>50166</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50168">
				<!-- Bit register for status and alarms -->
				<function>3</function>
				<start_addr>50168</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50169">
				<!-- Active power in system (in own segment), kW -->
				<function>3</function>
				<start_addr>50169</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50171">
				<!-- Different outlet-inlet temperature (ANIN10-ANIN9), C (for option K36 only) -->
				<function>3</function>
				<start_addr>50171</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50172">
				<!-- Active power reserve in system (in own segment), kW -->
				<function>3</function>
				<start_addr>50172</start_addr>
				<quantity>2</quantity>
				<type>uint_32</type>
			</value_ref_id>
			<value_ref_id valid="register_50174">
				<!-- J1939 MTU ADEC ECU failure codes -->
				<function>3</function>
				<start_addr>50174</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<!-- Data Protocol 5003 alarm sensors for Engine J1939 ECU -->
			<value_ref_id valid="register_50246">
				<!-- Engine speed, 0.1*rpm -->
				<function>3</function>
				<start_addr>50246</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50248">
				<!-- Engine coolant temperature, C -->
				<function>3</function>
				<start_addr>50248</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50249">
				<!-- Total engine hours, h -->
				<function>3</function>
				<start_addr>50249</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50251">
				<!-- Fuel temperature, C -->
				<function>3</function>
				<start_addr>50251</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50252">
				<!-- Engine oil temperature, 0.01*C -->
				<function>3</function>
				<start_addr>50252</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50254">
				<!-- Engine oil pressure, kPa -->
				<function>3</function>
				<start_addr>50254</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50255">
				<!-- Fuel rate, 0.01*L/h -->
				<function>3</function>
				<start_addr>50255</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50257">
				<!-- Coolant level, 0.1*% -->
				<function>3</function>
				<start_addr>50257</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50258">
				<!-- Throttle position, 0.1*% -->
				<function>3</function>
				<start_addr>50258</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50259">
				<!-- Load at current speed, % -->
				<function>3</function>
				<start_addr>50259</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50260">
				<!-- Engine oil level, 0.1*% -->
				<function>3</function>
				<start_addr>50260</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50261">
				<!-- Boost pressure, kPa -->
				<function>3</function>
				<start_addr>50261</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50262">
				<!-- Intake manifold temperature, C -->
				<function>3</function>
				<start_addr>50262</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50263">
				<!-- Barometric pressure, 0.1*kPa -->
				<function>3</function>
				<start_addr>50263</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50264">
				<!-- Air inlet temperature, C -->
				<function>3</function>
				<start_addr>50264</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50265">
				<!-- Actual engine torque, % -->
				<function>3</function>
				<start_addr>50265</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>
			<value_ref_id valid="register_50267">
				<!-- Exhaust gas temperature, 0.01*C -->
				<function>3</function>
				<start_addr>50267</start_addr>
				<quantity>1</quantity>
				<type>int_16</type>
			</value_ref_id>

			<!--
Bulk read for performance. Recommended max 30 registers to ensure RTU timing...

Remember, the packets length, i.e., the greater the number of registers read simultaneously, the lower immunity
(more CRC errors occurred). Simultaneously, the greater the number of registers to be read individually, the
more time is required for the polling devices.

In my case, no more three to five registers in the packet - a compromise between the minimum amount of CRC errors
and minimum time polling devices on non-quality link.
-->
			<packet>
				<function>3</function>
				<start_addr>50001</start_addr>
				<quantity>17</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50021</start_addr>
				<quantity>3</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50025</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50028</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50031</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50034</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50037</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50040</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50043</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50052</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50055</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50058</start_addr>
				<quantity>9</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50069</start_addr>
				<quantity>1</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50072</start_addr>
				<quantity>30</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50102</start_addr>
				<quantity>7</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50110</start_addr>
				<quantity>4</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50120</start_addr>
				<quantity>19</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50140</start_addr>
				<quantity>2</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50165</start_addr>
				<quantity>10</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50246</start_addr>
				<quantity>20</quantity>
			</packet>
			<packet>
				<function>3</function>
				<start_addr>50267</start_addr>
				<quantity>2</quantity>
			</packet>
		</modbus>
	</protocol>
</APC_DDF>
