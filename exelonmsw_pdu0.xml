<?xml version="1.0" encoding="utf-8"?>
<APC_DDF 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" 
    ddfid="exelonmsw_pdu0" 
    ddfname="EXELONMSW PDU0" 
    ddfversion="2" 
    canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="exelonmsw_pdu0">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">EXELONMSW</setProductData>
    <setProductData ruleid="modeldata" field="model">PDU0</setProductData>
    <setProductData ruleid="typedata" field="type">PDU</setProductData>
    <setProductData ruleid="inputphasecount" field="inputphasecount">3</setProductData> 
    <setProductData ruleid="outputphasecount" field="outputphasecount">3</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />- Slave<commSetting field="slaveaddress" /></setDefaultLabel>
    <numSensor ruleid="alarm_i">
      <type>num</type>
      <sensorId>ALARM_I</sensorId>
      <value>
        <getOid>ALARM_I</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>Alarm I</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="alarm_ii">
      <type>num</type>
      <sensorId>ALARM_II</sensorId>
      <value>
        <getOid>ALARM_II</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>Alarm II</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <alarmFlags ruleid="custom_1">
      <value>
        <getOid>CUSTOM_1</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Custom 1 Condition Present</activeText>
          <inactiveText>Custom 1 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Custom 1 Condition Exists.</activeText>
          <inactiveText>Custom 1 Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="custom_2">
      <value>
        <getOid>CUSTOM_2</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Custom 2 Condition Present</activeText>
          <inactiveText>Custom 2 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Custom 2 Condition Exists.</activeText>
          <inactiveText>Custom 2 Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="datawave_overtemperature">
      <value>
        <getOid>DATAWAVE_OVERTEMPERATURE</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Datawave Overtemperature Condition Present</activeText>
          <inactiveText>Datawave Overtemperature Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Datawave Overtemperature Condition Exists.</activeText>
          <inactiveText>Datawave Overtemperature Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="emergency_power_off">
      <value>
        <getOid>EMERGENCY_POWER_OFF</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Emergency Power Off Condition Present</activeText>
          <inactiveText>Emergency Power Off Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Emergency Power Off Condition Exists.</activeText>
          <inactiveText>Emergency Power Off Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <numSensor ruleid="frequency">
      <type>frequency</type>
      <sensorId>FREQUENCY</sensorId>
      <value>
        <getOid>FREQUENCY</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>Frequency</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <alarmFlags ruleid="frequency_deviation">
      <value>
        <getOid>FREQUENCY_DEVIATION</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Frequency Deviation Condition Present</activeText>
          <inactiveText>Frequency Deviation Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Frequency Deviation Condition Exists.</activeText>
          <inactiveText>Frequency Deviation Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <numSensor ruleid="ground_current">
      <type>amperage</type>
      <sensorId>GROUND_CURRENT</sensorId>
      <value>
        <getOid>GROUND_CURRENT</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>Ground Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <alarmFlags ruleid="ground_failure">
      <value>
        <getOid>GROUND_FAILURE</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Ground Failure Condition Present</activeText>
          <inactiveText>Ground Failure Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Ground Failure Condition Exists.</activeText>
          <inactiveText>Ground Failure Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="ground_fault">
      <value>
        <getOid>GROUND_FAULT</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Ground Fault Condition Present</activeText>
          <inactiveText>Ground Fault Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Ground Fault Condition Exists.</activeText>
          <inactiveText>Ground Fault Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="ground_overcurrent">
      <value>
        <getOid>GROUND_OVERCURRENT</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Ground Overcurrent Condition Present</activeText>
          <inactiveText>Ground Overcurrent Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Ground Overcurrent Condition Exists.</activeText>
          <inactiveText>Ground Overcurrent Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <numSensor ruleid="iout_x">
      <type>amperage</type>
      <sensorId>_OUTPUT_CURRENT_1</sensorId>
      <value>
        <getOid>IOUT_X</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>IOUT X</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="iout_y">
      <type>amperage</type>
      <sensorId>_OUTPUT_CURRENT_2</sensorId>
      <value>
        <getOid>IOUT_Y</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>IOUT Y</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="iout_z">
      <type>amperage</type>
      <sensorId>_OUTPUT_CURRENT_3</sensorId>
      <value>
        <getOid>IOUT_Z</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>IOUT Z</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="kva">
      <type>num/powerKVA</type>
      <sensorId>_PDU_POWER_KVA_1</sensorId>
      <value>
        <getOid>KVA</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>kVA</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="kw">
      <type>num/powerKW</type>
      <sensorId>kw_OUTPUT_POWER_TOTAL</sensorId>
      <value>
        <getOid>KW</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>kW</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <alarmFlags ruleid="liquid_detected">
      <value>
        <getOid>LIQUID_DETECTED</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Liquid Detected Condition Present</activeText>
          <inactiveText>Liquid Detected Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Liquid Detected Condition Exists.</activeText>
          <inactiveText>Liquid Detected Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="load_on_bypass">
      <value>
        <getOid>LOAD_ON_BYPASS</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Load On Bypass Condition Present</activeText>
          <inactiveText>Load On Bypass Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Load On Bypass Condition Exists.</activeText>
          <inactiveText>Load On Bypass Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="local_alarm_1">
      <value>
        <getOid>LOCAL_ALARM_1</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Local Alarm 1 Condition Present</activeText>
          <inactiveText>Local Alarm 1 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Local Alarm 1 Condition Exists.</activeText>
          <inactiveText>Local Alarm 1 Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="local_alarm_2">
      <value>
        <getOid>LOCAL_ALARM_2</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Local Alarm 2 Condition Present</activeText>
          <inactiveText>Local Alarm 2 Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Local Alarm 2 Condition Exists.</activeText>
          <inactiveText>Local Alarm 2 Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="loss_of_communication">
      <value>
        <getOid>LOSS_OF_COMMUNICATION</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Loss of Communication Condition Present</activeText>
          <inactiveText>Loss of Communication Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Loss of Communication Condition Exists.</activeText>
          <inactiveText>Loss of Communication Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <numSensor ruleid="mw_hours">
      <type>num/kwatthr</type>
      <sensorId>_PDU_UNIT_STATUS_ENERGY1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>MW_HOURS</getOid>
          </op>
          <op>1000</op>
        </mult>
      </value>
      <valueInc>1</valueInc>
      <label>MW Hours</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="neutral_current">
      <type>amperage</type>
      <sensorId>_NEUTRAL_CURRENT</sensorId>
      <value>
        <getOid>NEUTRAL_CURRENT</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>Neutral Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <alarmFlags ruleid="output_overcurrent">
      <value>
        <getOid>OUTPUT_OVERCURRENT</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Output Overcurrent Condition Present</activeText>
          <inactiveText>Output Overcurrent Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Output Overcurrent Condition Exists.</activeText>
          <inactiveText>Output Overcurrent Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="output_overvoltage">
      <value>
        <getOid>OUTPUT_OVERVOLTAGE</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Output Overvoltage Condition Present</activeText>
          <inactiveText>Output Overvoltage Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Output Overvoltage Condition Exists.</activeText>
          <inactiveText>Output Overvoltage Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="output_undervoltage">
      <value>
        <getOid>OUTPUT_UNDERVOLTAGE</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Output Undervoltage Condition Present</activeText>
          <inactiveText>Output Undervoltage Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Output Undervoltage Condition Exists.</activeText>
          <inactiveText>Output Undervoltage Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="output_voltage_thd">
      <value>
        <getOid>OUTPUT_VOLTAGE_THD</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Output Voltage THD Condition Present</activeText>
          <inactiveText>Output Voltage THD Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Output Voltage THD Condition Exists.</activeText>
          <inactiveText>Output Voltage THD Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="phase_rotation_loss">
      <value>
        <getOid>PHASE_ROTATION_LOSS</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Phase Rotation Loss Condition Present</activeText>
          <inactiveText>Phase Rotation Loss Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Phase Rotation Loss Condition Exists.</activeText>
          <inactiveText>Phase Rotation Loss Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <numSensor ruleid="power_factor">
      <type>num/powerfactor</type>
      <sensorId>PDU_INPUT_PHASE_STATUS_POWER_FACTOR1</sensorId>
      <value>
        <getOid>POWER_FACTOR</getOid>
      </value>
      <valueInc>0.01</valueInc>
      <label>Power Factor</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="prcnt_cap_x">
      <type>pctofcapacity</type>
      <sensorId>PRCNT_CAP_X</sensorId>
      <value>
        <getOid>PRCNT_CAP_X</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>prcnt CAP X</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="prcnt_cap_y">
      <type>pctofcapacity</type>
      <sensorId>PRCNT_CAP_Y</sensorId>
      <value>
        <getOid>PRCNT_CAP_Y</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>prcnt CAP Y</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="prcnt_cap_z">
      <type>pctofcapacity</type>
      <sensorId>PRCNT_CAP_Z</sensorId>
      <value>
        <getOid>PRCNT_CAP_Z</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>prcnt CAP Z</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <alarmFlags ruleid="security_alarm">
      <value>
        <getOid>SECURITY_ALARM</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Security Alarm Condition Present</activeText>
          <inactiveText>Security Alarm Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Security Alarm Condition Exists.</activeText>
          <inactiveText>Security Alarm Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <alarmFlags ruleid="transformer_overtemperature">
      <value>
        <getOid>TRANSFORMER_OVERTEMPERATURE</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Transformer Overtemperature Condition Present</activeText>
          <inactiveText>Transformer Overtemperature Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Transformer Overtemperature Condition Exists.</activeText>
          <inactiveText>Transformer Overtemperature Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
    <numSensor ruleid="vin_a_b">
      <type>voltage</type>
      <sensorId>_MAIN_INPUT_VOLTAGE_L2L_1</sensorId>
      <value>
        <getOid>VIN_A_B</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>VIN A B</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="vin_b_c">
      <type>voltage</type>
      <sensorId>_MAIN_INPUT_VOLTAGE_L2L_2</sensorId>
      <value>
        <getOid>VIN_B_C</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>VIN B C</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="vin_c_a">
      <type>voltage</type>
      <sensorId>_MAIN_INPUT_VOLTAGE_L2L_3</sensorId>
      <value>
        <getOid>VIN_C_A</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>VIN C A</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="vout_x_n">
      <type>voltage</type>
      <sensorId>_OUTPUT_VOLTAGE_L2N_1</sensorId>
      <value>
        <getOid>VOUT_X_N</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>VOUT X N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="vout_x_y">
      <type>voltage</type>
      <sensorId>_OUTPUT_VOLTAGE_L2L_1</sensorId>
      <value>
        <getOid>VOUT_X_Y</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>VOUT X Y</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="vout_x_z">
      <type>voltage</type>
      <sensorId>_OUTPUT_VOLTAGE_L2L_3</sensorId>
      <value>
        <getOid>VOUT_X_Z</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>VOUT X Z</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="vout_y_n">
      <type>voltage</type>
      <sensorId>_OUTPUT_VOLTAGE_L2N_2</sensorId>
      <value>
        <getOid>VOUT_Y_N</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>VOUT Y N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="vout_y_z">
      <type>voltage</type>
      <sensorId>_OUTPUT_VOLTAGE_L2L_2</sensorId>
      <value>
        <getOid>VOUT_Y_Z</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>VOUT Y Z</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="vout_z_n">
      <type>voltage</type>
      <sensorId>_OUTPUT_VOLTAGE_L2N_3</sensorId>
      <value>
        <getOid>VOUT_Z_N</getOid>
      </value>
      <valueInc>1</valueInc>
      <label>VOUT Z N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <alarmFlags ruleid="y_n_reading_in_mwhr">
      <value>
        <getOid>Y_N_READING_IN_MWHR</getOid>
      </value>
      <alarmFlagsTest mask="1" match="1">
        <name>
          <activeText>Y N Reading in MWHr Condition Present</activeText>
          <inactiveText>Y N Reading in MWHr Condition Cleared</inactiveText>
        </name>
        <severity>warning</severity>
        <category>system</category>
        <description>
          <activeText>Y N Reading in MWHr Condition Exists.</activeText>
          <inactiveText>Y N Reading in MWHr Condition no Longer Exists.</inactiveText>
        </description>
      </alarmFlagsTest>
    </alarmFlags>
  </device>
  <protocol>
    <modbus>
      <value_ref_id valid="ALARM_I">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ALARM_II">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CUSTOM_1">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CUSTOM_2">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DATAWAVE_OVERTEMPERATURE">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="EMERGENCY_POWER_OFF">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FREQUENCY">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FREQUENCY_DEVIATION">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GROUND_CURRENT">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GROUND_FAILURE">
        <function>3</function>
        <start_addr>9</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GROUND_FAULT">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GROUND_OVERCURRENT">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="IOUT_X">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="IOUT_Y">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="IOUT_Z">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="KVA">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="KW">
        <function>3</function>
        <start_addr>16</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LIQUID_DETECTED">
        <function>3</function>
        <start_addr>17</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LOAD_ON_BYPASS">
        <function>3</function>
        <start_addr>18</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LOCAL_ALARM_1">
        <function>3</function>
        <start_addr>19</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LOCAL_ALARM_2">
        <function>3</function>
        <start_addr>20</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="LOSS_OF_COMMUNICATION">
        <function>3</function>
        <start_addr>21</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MW_HOURS">
        <function>3</function>
        <start_addr>22</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NEUTRAL_CURRENT">
        <function>3</function>
        <start_addr>23</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="OUTPUT_OVERCURRENT">
        <function>3</function>
        <start_addr>24</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="OUTPUT_OVERVOLTAGE">
        <function>3</function>
        <start_addr>25</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="OUTPUT_UNDERVOLTAGE">
        <function>3</function>
        <start_addr>26</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="OUTPUT_VOLTAGE_THD">
        <function>3</function>
        <start_addr>27</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="PHASE_ROTATION_LOSS">
        <function>3</function>
        <start_addr>28</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="POWER_FACTOR">
        <function>3</function>
        <start_addr>29</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="PRCNT_CAP_X">
        <function>3</function>
        <start_addr>30</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="PRCNT_CAP_Y">
        <function>3</function>
        <start_addr>31</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="PRCNT_CAP_Z">
        <function>3</function>
        <start_addr>32</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="SECURITY_ALARM">
        <function>3</function>
        <start_addr>33</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TRANSFORMER_OVERTEMPERATURE">
        <function>3</function>
        <start_addr>34</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VIN_A_B">
        <function>3</function>
        <start_addr>35</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VIN_B_C">
        <function>3</function>
        <start_addr>36</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VIN_C_A">
        <function>3</function>
        <start_addr>37</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOUT_X_N">
        <function>3</function>
        <start_addr>38</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOUT_X_Y">
        <function>3</function>
        <start_addr>39</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOUT_X_Z">
        <function>3</function>
        <start_addr>40</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOUT_Y_N">
        <function>3</function>
        <start_addr>41</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOUT_Y_Z">
        <function>3</function>
        <start_addr>42</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="VOUT_Z_N">
        <function>3</function>
        <start_addr>43</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="Y_N_READING_IN_MWHR">
        <function>3</function>
        <start_addr>44</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>