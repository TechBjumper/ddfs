<?xml version="1.0" encoding="UTF-8"?>
<APC_DDF xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd" ddfid="SIMATIC_S71500" ddfname="SIMATIC S71500" ddfversion="5" canremove="yes">
  <schemaVersion>1.6</schemaVersion>
  <device deviceid="simatic_s71500">
    <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST" />
    <setProductData ruleid="vendordata" field="vendor">SIMATIC</setProductData>
    <setProductData ruleid="modeldata" field="model">S71500</setProductData>
    <setProductData ruleid="typedata" field="type">Generic Device</setProductData>
    <setDefaultLabel ruleid="labeldata">
      <sysHostname />
      - Slave
      <commSetting field="slaveaddress" />
    </setDefaultLabel>
    <numSensor ruleid="nscc_pcu_1_return_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_1_RETURN_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_1_RETURN_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 1 Return Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_1_supply_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_1_SUPPLY_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_1_SUPPLY_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 1 Supply Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_1_relative_humidity_">
      <type>humidity</type>
      <units />
      <sensorId>_NSCC_PCU_1_RELATIVE_HUMIDITY_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_1_RELATIVE_HUMIDITY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 1 Relative Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_1_chilled_water_valve">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_1_CHILLED_WATER_VALVE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_1_CHILLED_WATER_VALVE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 1 Chilled Water Valve</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_1_air_flow">
      <type>airflow</type>
      <units>feet3permin</units>
      <sensorId>_NSCC_PCU_1_AIR_FLOW</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_1_AIR_FLOW</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 1 Air Flow</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_1_fan_speed">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_1_FAN_SPEED</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_1_FAN_SPEED</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 1 Fan Speed</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_2_return_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_2_RETURN_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_2_RETURN_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 2 Return Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_2_supply_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_2_SUPPLY_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_2_SUPPLY_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 2 Supply Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_2_relative_humidity_">
      <type>humidity</type>
      <units />
      <sensorId>_NSCC_PCU_2_RELATIVE_HUMIDITY_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_2_RELATIVE_HUMIDITY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 2 Relative Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_2_chilled_water_valve">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_2_CHILLED_WATER_VALVE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_2_CHILLED_WATER_VALVE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 2 Chilled Water Valve</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_2_air_flow">
      <type>airflow</type>
      <units>feet3permin</units>
      <sensorId>_NSCC_PCU_2_AIR_FLOW</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_2_AIR_FLOW</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 2 Air Flow</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_2_fan_speed">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_2_FAN_SPEED</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_2_FAN_SPEED</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 2 Fan Speed</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_3_return_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_3_RETURN_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_3_RETURN_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 3 Return Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_3_supply_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_3_SUPPLY_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_3_SUPPLY_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 3 Supply Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_3_relative_humidity_">
      <type>humidity</type>
      <units />
      <sensorId>_NSCC_PCU_3_RELATIVE_HUMIDITY_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_3_RELATIVE_HUMIDITY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 3 Relative Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_3_chilled_water_valve">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_3_CHILLED_WATER_VALVE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_3_CHILLED_WATER_VALVE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 3 Chilled Water Valve</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_3_air_flow">
      <type>airflow</type>
      <units>feet3permin</units>
      <sensorId>_NSCC_PCU_3_AIR_FLOW</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_3_AIR_FLOW</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 3 Air Flow</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_3_fan_speed">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_3_FAN_SPEED</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_3_FAN_SPEED</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 3 Fan Speed</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_4_return_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_4_RETURN_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_4_RETURN_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 4 Return Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_4_supply_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_4_SUPPLY_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_4_SUPPLY_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 4 Supply Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_4_relative_humidity_">
      <type>humidity</type>
      <units />
      <sensorId>_NSCC_PCU_4_RELATIVE_HUMIDITY_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_4_RELATIVE_HUMIDITY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 4 Relative Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_4_chilled_water_valve">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_4_CHILLED_WATER_VALVE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_4_CHILLED_WATER_VALVE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 4 Chilled Water Valve</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_4_air_flow">
      <type>airflow</type>
      <units>feet3permin</units>
      <sensorId>_NSCC_PCU_4_AIR_FLOW</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_4_AIR_FLOW</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 4 Air Flow</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_4_fan_speed">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_4_FAN_SPEED</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_4_FAN_SPEED</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 4 Fan Speed</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_5_return_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_5_RETURN_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_5_RETURN_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 5 Return Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_5_supply_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_5_SUPPLY_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_5_SUPPLY_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 5 Supply Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_5_relative_humidity_">
      <type>humidity</type>
      <units />
      <sensorId>_NSCC_PCU_5_RELATIVE_HUMIDITY_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_5_RELATIVE_HUMIDITY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 5 Relative Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_5_chilled_water_valve">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_5_CHILLED_WATER_VALVE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_5_CHILLED_WATER_VALVE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 5 Chilled Water Valve</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_5_air_flow">
      <type>airflow</type>
      <units>feet3permin</units>
      <sensorId>_NSCC_PCU_5_AIR_FLOW</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_5_AIR_FLOW</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 5 Air Flow</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_5_fan_speed">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_5_FAN_SPEED</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_5_FAN_SPEED</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 5 Fan Speed</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_6_return_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_6_RETURN_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_6_RETURN_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 6 Return Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_6_supply_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_6_SUPPLY_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_6_SUPPLY_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 6 Supply Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_6_relative_humidity_">
      <type>humidity</type>
      <units />
      <sensorId>_NSCC_PCU_6_RELATIVE_HUMIDITY_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_6_RELATIVE_HUMIDITY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 6 Relative Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_6_chilled_water_valve">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_6_CHILLED_WATER_VALVE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_6_CHILLED_WATER_VALVE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 6 Chilled Water valve</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_6_air_flow">
      <type>airflow</type>
      <units>feet3permin</units>
      <sensorId>_NSCC_PCU_6_AIR_FLOW</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_6_AIR_FLOW</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 6 Air Flow</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_6_fan_speed">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_6_FAN_SPEED</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_6_FAN_SPEED</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 6 Fan Speed</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_7_return_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_7_RETURN_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_7_RETURN_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 7 Return Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_7_supply_air_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_PCU_7_SUPPLY_AIR_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_7_SUPPLY_AIR_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 7 Supply Air Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_7_relative_humidity_">
      <type>humidity</type>
      <units />
      <sensorId>_NSCC_PCU_7_RELATIVE_HUMIDITY_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_7_RELATIVE_HUMIDITY_</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 7 Relative Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_7_chilled_water_valve">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_7_CHILLED_WATER_VALVE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_7_CHILLED_WATER_VALVE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 7 Chilled Water valve</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_7_air_flow">
      <type>airflow</type>
      <units>feet3permin</units>
      <sensorId>_NSCC_PCU_7_AIR_FLOW</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_7_AIR_FLOW</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 7 Air Flow</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pcu_7_fan_speed">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PCU_7_FAN_SPEED</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PCU_7_FAN_SPEED</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PCU 7 Fan Speed</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_1_primary_temperature_t1">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_1_PRIMARY_TEMPERATURE_T1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_1_PRIMARY_TEMPERATURE_T1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 1 Primary Temperature T1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_1_secondary_temperature_t2a">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_1_SECONDARY_TEMPERATURE_T2A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_1_SECONDARY_TEMPERATURE_T2A</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 1 Secondary Temperature T2a</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_1_secondary_temperature_t2b">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_1_SECONDARY_TEMPERATURE_T2B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_1_SECONDARY_TEMPERATURE_T2B</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 1 Secondary Temperature T2b</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_1_secondary_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_1_SECONDARY_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_1_SECONDARY_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 1 Secondary Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_1_room_temperature_t3">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_1_ROOM_TEMPERATURE_T3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_1_ROOM_TEMPERATURE_T3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 1 Room Temperature T3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_1_dew_point">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_1_DEW_POINT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_1_DEW_POINT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 1 Dew Point</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_1_pump_differential_pressure">
      <type>num</type>
      <units />
      <sensorId>_NSCC_CDU_1_PUMP_DIFFERENTIAL_PRESSURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_1_PUMP_DIFFERENTIAL_PRESSURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 1 Pump Differential Pressure - In Bar</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_1_primary_flow_rate">
      <type>volairflow</type>
      <units />
      <sensorId>_NSCC_CDU_1_PRIMARY_FLOW_RATE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_1_PRIMARY_FLOW_RATE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 1 Primary Flow Rate</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_2_primary_temperature_t1">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_2_PRIMARY_TEMPERATURE_T1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_2_PRIMARY_TEMPERATURE_T1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 2 Primary Temperature T1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_2_secondary_temperature_t2a">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_2_SECONDARY_TEMPERATURE_T2A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_2_SECONDARY_TEMPERATURE_T2A</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 2 Secondary Temperature T2a</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_2_secondary_temperature_t2b">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_2_SECONDARY_TEMPERATURE_T2B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_2_SECONDARY_TEMPERATURE_T2B</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 2 Secondary Temperature T2b</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_2_secondary_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_2_SECONDARY_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_2_SECONDARY_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 2 Secondary Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_2_room_temperature_t3">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_2_ROOM_TEMPERATURE_T3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_2_ROOM_TEMPERATURE_T3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 2 Room Temperature T3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_2_dew_point">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_2_DEW_POINT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_2_DEW_POINT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 2 Dew Point</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_2_pump_differential_pressure">
      <type>num</type>
      <units />
      <sensorId>_NSCC_CDU_2_PUMP_DIFFERENTIAL_PRESSURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_2_PUMP_DIFFERENTIAL_PRESSURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 2 Pump Differential Pressure - In Bar</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_2_primary_flow_rate">
      <type>volairflow</type>
      <units />
      <sensorId>_NSCC_CDU_2_PRIMARY_FLOW_RATE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_2_PRIMARY_FLOW_RATE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 2 Primary Flow Rate</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_3_primary_temperature_t1">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_3_PRIMARY_TEMPERATURE_T1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_3_PRIMARY_TEMPERATURE_T1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 3 Primary Temperature T1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_3_secondary_temperature_t2a">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_3_SECONDARY_TEMPERATURE_T2A</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_3_SECONDARY_TEMPERATURE_T2A</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 3 Secondary Temperature T2a</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_3_secondary_temperature_t2b">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_3_SECONDARY_TEMPERATURE_T2B</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_3_SECONDARY_TEMPERATURE_T2B</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 3 Secondary Temperature T2b</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_3_secondary_temperature">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_3_SECONDARY_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_3_SECONDARY_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 3 Secondary Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_3_room_temperature_t3">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_3_ROOM_TEMPERATURE_T3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_3_ROOM_TEMPERATURE_T3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 3 Room Temperature T3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_3_dew_point">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_CDU_3_DEW_POINT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_3_DEW_POINT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 3 Dew Point</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_3_pump_differential_pressure">
      <type>num</type>
      <units />
      <sensorId>_NSCC_CDU_3_PUMP_DIFFERENTIAL_PRESSURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_3_PUMP_DIFFERENTIAL_PRESSURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 3 Pump Differential Pressure - In Bar</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_cdu_3_primary_flow_rate">
      <type>volairflow</type>
      <units />
      <sensorId>_NSCC_CDU_3_PRIMARY_FLOW_RATE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_CDU_3_PRIMARY_FLOW_RATE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC CDU 3 Primary Flow Rate</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_1a_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_1A_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_1A_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 1A Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_1a_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_1A_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_1A_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 1A Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_1b_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_1B_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_1B_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 1B Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_1b_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_1B_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_1B_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 1B Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_1c_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_1C_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_1C_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 1C Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_1c_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_1C_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_1C_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 1C Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_1d_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_1D_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_1D_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 1D Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_1d_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_1D_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_1D_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 1D Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_2a_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_2A_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_2A_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 2A Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_2a_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_2A_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_2A_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 2A Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_2b_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_2B_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_2B_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 2B Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_2b_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_2B_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_2B_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 2B Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_2c_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_2C_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_2C_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 2C Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_2c_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_2C_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_2C_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 2C Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_2d_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_2D_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_2D_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 2D Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_2d_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_2D_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_2D_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 2D Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_3a_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_3A_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_3A_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 3A Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_3a_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_3A_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_3A_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 3A Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_3b_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_3B_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_3B_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 3B Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_3b_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_3B_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_3B_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 3B Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_3c_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_3C_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_3C_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 3C Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_3c_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_3C_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_3C_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 3C Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_3d_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_3D_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_3D_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 3D Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_3d_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_3D_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_3D_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 3D Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_4a_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_4A_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_4A_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 4A Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_4a_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_4A_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_4A_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 4A Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_4b_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_4B_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_4B_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 4B Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_4b_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_4B_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_4B_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 4B Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_4c_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_4C_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_4C_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 4C Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_4c_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_4C_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_4C_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 4C Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_4d_probe_1_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_4D_PROBE_1_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_4D_PROBE_1_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 4D Probe 1 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_dc_4d_probe_2_temperature_reading">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_DC_4D_PROBE_2_TEMPERATURE_READING</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_DC_4D_PROBE_2_TEMPERATURE_READING</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC DC 4D Probe 2 Temperature Reading</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_temperature_1">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_TEMPERATURE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_TEMPERATURE_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Temperature 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pressure_1">
      <type>pressure</type>
      <units />
      <sensorId>_ACRC_PRESSURE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PRESSURE_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Pressure 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_humidity_1">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_ACRC_HUMIDITY_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_HUMIDITY_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Humidity 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_temperature_2">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_TEMPERATURE_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_TEMPERATURE_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Temperature 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pressure_2">
      <type>pressure</type>
      <units />
      <sensorId>_ACRC_PRESSURE_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PRESSURE_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Pressure 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_humidity_2">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_ACRC_HUMIDITY_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_HUMIDITY_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Humidity 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_new_crach_1_supply_air_temp">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_NEW_CRACH_1_SUPPLY_AIR_TEMP</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_NEW_CRACH_1_SUPPLY_AIR_TEMP</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC New CRACH 1 Supply Air Temp</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_new_crach_1_return_dew_point">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_NEW_CRACH_1_RETURN_DEW_POINT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_NEW_CRACH_1_RETURN_DEW_POINT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC New CRACH 1 Return Dew Point</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_existing_crach_1_supply_air_temp">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_EXISTING_CRACH_1_SUPPLY_AIR_TEMP</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_EXISTING_CRACH_1_SUPPLY_AIR_TEMP</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Existing CRACH 1 Supply Air Temp</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_existing_crach_1_return_air_humidity">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_EXISTING_CRACH_1_RETURN_AIR_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_EXISTING_CRACH_1_RETURN_AIR_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Existing CRACH 1 Return Air Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_new_crach_2_supply_air_temp">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_NEW_CRACH_2_SUPPLY_AIR_TEMP</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_NEW_CRACH_2_SUPPLY_AIR_TEMP</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC New CRACH 2 Supply Air Temp</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_new_crach_2_return_dew_point">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_NEW_CRACH_2_RETURN_DEW_POINT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_NEW_CRACH_2_RETURN_DEW_POINT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC New CRACH 2 Return Dew Point</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_new_crach_3_supply_air_temp">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_NEW_CRACH_3_SUPPLY_AIR_TEMP</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_NEW_CRACH_3_SUPPLY_AIR_TEMP</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC New CRACH 3 Supply Air Temp</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_new_crach_3_return_dew_point">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_NEW_CRACH_3_RETURN_DEW_POINT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_NEW_CRACH_3_RETURN_DEW_POINT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC New CRACH 3 Return Dew Point</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_existing_crach_2_supply_air_temp">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_EXISTING_CRACH_2_SUPPLY_AIR_TEMP</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_EXISTING_CRACH_2_SUPPLY_AIR_TEMP</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Existing CRACH 2 Supply Air Temp</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_existing_crach_2_return_air_humidity">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_EXISTING_CRACH_2_RETURN_AIR_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_EXISTING_CRACH_2_RETURN_AIR_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Existing CRACH 2 Return Air Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_wds_first_leak_location">
      <type>num</type>
      <units />
      <sensorId>_ACRC_WDS_FIRST_LEAK_LOCATION</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_WDS_FIRST_LEAK_LOCATION</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC WDS First Leak Location</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_wds_second_leak_location">
      <type>num</type>
      <units />
      <sensorId>_ACRC_WDS_SECOND_LEAK_LOCATION</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_WDS_SECOND_LEAK_LOCATION</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC WDS Second Leak Location</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_fcu_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_FCU_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_FCU_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC FCU Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_fcu_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_FCU_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_FCU_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC FCU Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_btu_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_BTU_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_BTU_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC BTU Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_btu_accumulated_energy">
      <type>num/kwatthr</type>
      <units />
      <sensorId>_ACRC_BTU_ACCUMULATED_ENERGY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_BTU_ACCUMULATED_ENERGY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC BTU Accumulated Energy</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_btu_volumn_flow">
      <type>num</type>
      <units />
      <sensorId>_ACRC_BTU_VOLUMN_FLOW</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_BTU_VOLUMN_FLOW</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC BTU Volumn Flow</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_btu_accumulated_volume">
      <type>volairflow</type>
      <units />
      <sensorId>_ACRC_BTU_ACCUMULATED_VOLUME</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_BTU_ACCUMULATED_VOLUME</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC BTU Accumulated Volume</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_btu_supply_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_BTU_SUPPLY_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_BTU_SUPPLY_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC BTU Supply Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_btu_return_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_BTU_RETURN_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_BTU_RETURN_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC BTU Return Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_a_current_1">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_PDU_A_CURRENT_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_A_CURRENT_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU A Current 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_a_current_2">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_PDU_A_CURRENT_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_A_CURRENT_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU A Current 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_a_current_3">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_PDU_A_CURRENT_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_A_CURRENT_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU A Current 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_a_voltage_1">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_PDU_A_VOLTAGE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_A_VOLTAGE_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU A Voltage 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_a_voltage_2">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_PDU_A_VOLTAGE_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_A_VOLTAGE_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU A Voltage 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_a_voltage_3">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_PDU_A_VOLTAGE_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_A_VOLTAGE_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU A Voltage 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_a_reactive_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_PDU_A_REACTIVE_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_A_REACTIVE_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU A Reactive Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_b_current_1">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_PDU_B_CURRENT_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_B_CURRENT_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU B Current 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_b_current_2">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_PDU_B_CURRENT_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_B_CURRENT_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU B Current 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_b_current_3">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_PDU_B_CURRENT_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_B_CURRENT_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU B Current 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_b_voltage_1">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_PDU_B_VOLTAGE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_B_VOLTAGE_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU B Voltage 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_b_voltage_2">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_PDU_B_VOLTAGE_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_B_VOLTAGE_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU B Voltage 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_b_voltage_3">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_PDU_B_VOLTAGE_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_B_VOLTAGE_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU B Voltage 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_b_reactive_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_PDU_B_REACTIVE_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_B_REACTIVE_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU B Reactive Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_1_current_1">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_PDU_1_CURRENT_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_1_CURRENT_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU 1 Current 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_1_current_2">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_PDU_1_CURRENT_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_1_CURRENT_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU 1 Current 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_1_current_3">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_PDU_1_CURRENT_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_1_CURRENT_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU 1 Current 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_1_voltage_1">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_PDU_1_VOLTAGE_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_1_VOLTAGE_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU 1 Voltage 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_1_voltage_2">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_PDU_1_VOLTAGE_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_1_VOLTAGE_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU 1 Voltage 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_1_voltage_3">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_PDU_1_VOLTAGE_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_1_VOLTAGE_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU 1 Voltage 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_pdu_1_active_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_PDU_1_ACTIVE_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_PDU_1_ACTIVE_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC PDU 1 Active Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a2_1_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_A2_1_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A2_1_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A2_1 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a2_1_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_A2_1_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A2_1_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A2_1 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a2_1_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_A2_1_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A2_1_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A2_1 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a2_1_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_A2_1_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A2_1_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A2_1 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a2_1_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_A2_1_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A2_1_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A2_1 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a3_1_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_A3_1_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A3_1_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A3_1 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a3_1_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_A3_1_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A3_1_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A3_1 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a3_1_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_A3_1_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A3_1_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A3_1 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a3_1_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_A3_1_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A3_1_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A3_1 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a3_1_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_A3_1_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A3_1_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A3_1 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a7_1_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_A7_1_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A7_1_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A7_1 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a7_1_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_A7_1_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A7_1_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A7_1 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a7_1_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_A7_1_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A7_1_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A7_1 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a7_1_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_A7_1_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A7_1_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A7_1 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a7_1_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_A7_1_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A7_1_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A7_1 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a8_1_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_A8_1_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A8_1_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A8_1 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a8_1_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_A8_1_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A8_1_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A8_1 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a8_1_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_A8_1_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A8_1_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A8_1 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a8_1_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_A8_1_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A8_1_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A8_1 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a8_1_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_A8_1_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A8_1_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A8_1 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a9_1_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_A9_1_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A9_1_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A9_1 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a9_1_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_A9_1_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A9_1_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A9_1 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a9_1_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_A9_1_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A9_1_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A9_1 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a9_1_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_A9_1_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A9_1_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A9_1 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a9_1_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_A9_1_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A9_1_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A9_1 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b1_1_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_B1_1_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B1_1_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B1_1 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b1_1_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_B1_1_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B1_1_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B1_1 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b1_1_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_B1_1_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B1_1_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B1_1 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b1_1_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_B1_1_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B1_1_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B1_1 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b1_1_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_B1_1_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B1_1_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B1_1 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b4_1_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_B4_1_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B4_1_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B4_1 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b4_1_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_B4_1_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B4_1_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B4_1 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b4_1_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_B4_1_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B4_1_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B4_1 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b4_1_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_B4_1_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B4_1_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B4_1 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b4_1_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_B4_1_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B4_1_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B4_1 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b7_1_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_B7_1_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B7_1_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B7_1 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b7_1_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_B7_1_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B7_1_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B7_1 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b7_1_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_B7_1_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B7_1_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B7_1 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b7_1_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_B7_1_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B7_1_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B7_1 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b7_1_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_B7_1_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B7_1_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B7_1 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b10_1_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_B10_1_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B10_1_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B10_1 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b10_1_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_B10_1_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B10_1_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B10_1 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b10_1_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_B10_1_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B10_1_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B10_1 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b10_1_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_B10_1_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B10_1_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B10_1 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b10_1_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_B10_1_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B10_1_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B10_1 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a2_2_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_A2_2_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A2_2_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A2_2 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a2_2_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_A2_2_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A2_2_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A2_2 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a2_2_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_A2_2_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A2_2_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A2_2 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a2_2_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_A2_2_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A2_2_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A2_2 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a2_2_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_A2_2_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A2_2_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A2_2 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a3_2_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_A3_2_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A3_2_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A3_2 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a3_2_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_A3_2_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A3_2_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A3_2 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a3_2_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_A3_2_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A3_2_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A3_2 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a3_2_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_A3_2_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A3_2_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A3_2 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a3_2_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_A3_2_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A3_2_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A3_2 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a7_2_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_A7_2_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A7_2_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A7_2 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a7_2_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_A7_2_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A7_2_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A7_2 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a7_2_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_A7_2_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A7_2_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A7_2 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a7_2_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_A7_2_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A7_2_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A7_2 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a7_2_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_A7_2_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A7_2_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A7_2 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a8_2_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_A8_2_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A8_2_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A8_2 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a8_2_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_A8_2_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A8_2_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A8_2 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a8_2_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_A8_2_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A8_2_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A8_2 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a8_2_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_A8_2_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A8_2_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A8_2 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a8_2_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_A8_2_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A8_2_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A8_2 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a9_2_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_A9_2_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A9_2_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A9_2 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a9_2_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_A9_2_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A9_2_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A9_2 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a9_2_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_A9_2_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A9_2_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A9_2 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a9_2_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_A9_2_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A9_2_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A9_2 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_a9_2_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_A9_2_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_A9_2_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack A9_2 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b1_2_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_B1_2_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B1_2_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B1_2 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b1_2_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_B1_2_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B1_2_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B1_2 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b1_2_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_B1_2_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B1_2_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B1_2 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b1_2_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_B1_2_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B1_2_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B1_2 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b1_2_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_B1_2_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B1_2_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B1_2 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b4_2_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_B4_2_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B4_2_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B4_2 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b4_2_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_B4_2_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B4_2_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B4_2 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b4_2_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_B4_2_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B4_2_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B4_2 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b4_2_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_B4_2_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B4_2_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B4_2 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b4_2_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_B4_2_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B4_2_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B4_2 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b7_2_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_B7_2_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B7_2_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B7_2 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b7_2_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_B7_2_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B7_2_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B7_2 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b7_2_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_B7_2_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B7_2_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B7_2 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b7_2_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_B7_2_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B7_2_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B7_2 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b7_2_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_B7_2_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B7_2_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B7_2 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b10_2_temperature">
      <type>temp</type>
      <units />
      <sensorId>_ACRC_RACK_B10_2_TEMPERATURE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B10_2_TEMPERATURE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B10_2 Temperature</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b10_2_humidity">
      <type>humidity</type>
      <units />
      <sensorId>_ACRC_RACK_B10_2_HUMIDITY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B10_2_HUMIDITY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B10_2 Humidity</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b10_2_voltage">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_RACK_B10_2_VOLTAGE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B10_2_VOLTAGE</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B10_2 Voltage</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b10_2_current">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_RACK_B10_2_CURRENT</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B10_2_CURRENT</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B10_2 Current</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_rack_b10_2_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_RACK_B10_2_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_RACK_B10_2_POWER</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC Rack B10_2 Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="pue_">
      <type>num</type>
      <units />
      <sensorId>_PUE_</sensorId>
      <value>
        <mult>
          <op>
            <getOid>PUE_</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <label>PUE</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_l1-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1A_L1-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_L1N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A L1-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_l2-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1A_L2-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_L2N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A L2-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_l3-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1A_L3-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_L3N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A L3-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_l1-l2">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1A_L1-L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_L1L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A L1-L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_l2-l3">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1A_L2-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_L2L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A L2-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_l3-l1">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1A_L3-L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_L3L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A L3-L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_current_l1">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_PDU_1A_CURRENT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_CURRENT_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Current L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_current_l2">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_PDU_1A_CURRENT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_CURRENT_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Current L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_current_l3">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_PDU_1A_CURRENT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_CURRENT_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Current L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_current_sum">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_PDU_1A_CURRENT_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_CURRENT_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Current Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_real_power_1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1A_REAL_POWER_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_REAL_POWER_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Real Power 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_real_power_2">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1A_REAL_POWER_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_REAL_POWER_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Real Power 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_real_power_3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1A_REAL_POWER_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_REAL_POWER_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Real Power 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_real_power_sum">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1A_REAL_POWER_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_REAL_POWER_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Real Power Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_power_factor_l1">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_PDU_1A_POWER_FACTOR_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_POWER_FACTOR_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Power Factor L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_power_factor_l2">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_PDU_1A_POWER_FACTOR_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_POWER_FACTOR_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Power Factor L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_power_factor_l3">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_PDU_1A_POWER_FACTOR_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_POWER_FACTOR_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Power Factor L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_NSCC_PDU_1A_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_FREQUENCY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Frequency</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_harmonics_thd_l1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1A_HARMONICS_THD_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_HARMONICS_THD_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Harmonics THD L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_harmonics_thd_l2">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PDU_1A_HARMONICS_THD_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_HARMONICS_THD_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Harmonics THD L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_harmonics_thd_l3">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PDU_1A_HARMONICS_THD_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_HARMONICS_THD_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Harmonics THD L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_l1-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1B_L1-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_L1N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B L1-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_l2-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1B_L2-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_L2N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B L2-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_l3-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1B_L3-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_L3N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B L3-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_l1-l2">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1B_L1-L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_L1L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B L1-L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_l2-l3">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1B_L2-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_L2L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B L2-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_l3-l1">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_PDU_1B_L3-L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_L3L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B L3-L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_current_l1">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_PDU_1B_CURRENT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_CURRENT_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Current L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_current_l2">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_PDU_1B_CURRENT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_CURRENT_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Current L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_current_l3">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_PDU_1B_CURRENT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_CURRENT_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Current L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_current_sum">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_PDU_1B_CURRENT_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_CURRENT_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Current Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_real_power_1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1B_REAL_POWER_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_REAL_POWER_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Real Power 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_real_power_2">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1B_REAL_POWER_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_REAL_POWER_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Real Power 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_real_power_3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1B_REAL_POWER_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_REAL_POWER_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Real Power 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_real_power_sum">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1B_REAL_POWER_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_REAL_POWER_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Real Power Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_power_factor_l1">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_PDU_1B_POWER_FACTOR_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_POWER_FACTOR_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Power Factor L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_power_factor_l2">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_PDU_1B_POWER_FACTOR_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_POWER_FACTOR_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Power Factor L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_power_factor_l3">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_PDU_1B_POWER_FACTOR_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_POWER_FACTOR_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Power Factor L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_NSCC_PDU_1B_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_FREQUENCY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Frequency</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_harmonics_thd_l1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1B_HARMONICS_THD_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_HARMONICS_THD_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Harmonics THD L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_harmonics_thd_l2">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PDU_1B_HARMONICS_THD_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_HARMONICS_THD_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Harmonics THD L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_harmonics_thd_l3">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_PDU_1B_HARMONICS_THD_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_HARMONICS_THD_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Harmonics THD L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_l1-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_L1-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_L1N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A L1-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_l2-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_L2-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_L2N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A L2-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_l3-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_L3-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_L3N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A L3-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_l1-l2">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_L1-L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_L1L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A L1-L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_l2-l3">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_L2-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_L2L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A L2-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_l3-l1">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_L3-L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_L3L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A L3-L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_current_l1">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_CURRENT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_CURRENT_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Current L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_current_l2">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_CURRENT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_CURRENT_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Current L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_current_l3">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_CURRENT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_CURRENT_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Current L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_current_sum">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_CURRENT_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_CURRENT_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Current Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_real_power_1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_REAL_POWER_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_REAL_POWER_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Real Power 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_real_power_2">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_REAL_POWER_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_REAL_POWER_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Real Power 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_real_power_3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_REAL_POWER_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_REAL_POWER_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Real Power 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_real_power_sum">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_REAL_POWER_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_REAL_POWER_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Real Power Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_power_factor_l1">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_POWER_FACTOR_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_POWER_FACTOR_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Power Factor L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_power_factor_l2">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_POWER_FACTOR_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_POWER_FACTOR_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Power Factor L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_power_factor_l3">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_POWER_FACTOR_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_POWER_FACTOR_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Power Factor L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_FREQUENCY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Frequency</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_harmonics_thd_l1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_HARMONICS_THD_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_HARMONICS_THD_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Harmonics THD L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_harmonics_thd_l2">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_HARMONICS_THD_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_HARMONICS_THD_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Harmonics THD L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_harmonics_thd_l3">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_HARMONICS_THD_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_HARMONICS_THD_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Harmonics THD L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_l1-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_L1-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_L1N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B L1-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_l2-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_L2-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_L2N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B L2-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_l3-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_L3-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_L3N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B L3-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_l1-l2">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_L1-L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_L1L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B L1-L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_l2-l3">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_L2-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_L2L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B L2-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_l3-l1">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_L3-L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_L3L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B L3-L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_current_l1">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_CURRENT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_CURRENT_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Current L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_current_l2">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_CURRENT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_CURRENT_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Current L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_current_l3">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_CURRENT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_CURRENT_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Current L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_current_sum">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_CURRENT_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_CURRENT_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Current Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_real_power_1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_REAL_POWER_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_REAL_POWER_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Real Power 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_real_power_2">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_REAL_POWER_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_REAL_POWER_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Real Power 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_real_power_3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_REAL_POWER_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_REAL_POWER_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Real Power 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_real_power_sum">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_REAL_POWER_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_REAL_POWER_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Real Power Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_power_factor_l1">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_POWER_FACTOR_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_POWER_FACTOR_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Power Factor L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_power_factor_l2">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_POWER_FACTOR_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_POWER_FACTOR_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Power Factor L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_power_factor_l3">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_POWER_FACTOR_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_POWER_FACTOR_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Power Factor L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_FREQUENCY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Frequency</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_harmonics_thd_l1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_HARMONICS_THD_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_HARMONICS_THD_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Harmonics THD L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_harmonics_thd_l2">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_HARMONICS_THD_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_HARMONICS_THD_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Harmonics THD L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_harmonics_thd_l3">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_HARMONICS_THD_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_HARMONICS_THD_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Harmonics THD L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_l1-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_L1-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_L1N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C L1-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_l2-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_L2-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_L2N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C L2-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_l3-n">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_L3-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_L3N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C L3-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_l1-l2">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_L1-L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_L1L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C L1-L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_l2-l3">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_L2-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_L2L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C L2-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_l3-l1">
      <type>voltage</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_L3-L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_L3L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C L3-L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_current_l1">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Current L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_current_l2">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Current L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_current_l3">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Current L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_current_sum">
      <type>amperage</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Current Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_real_power_1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Real Power 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_real_power_2">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Real Power 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_real_power_3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Real Power 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_real_power_sum">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Real Power Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_power_factor_l1">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_POWER_FACTOR_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_POWER_FACTOR_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Power Factor L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_power_factor_l2">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_POWER_FACTOR_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_POWER_FACTOR_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Power Factor L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_power_factor_l3">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_POWER_FACTOR_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_POWER_FACTOR_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Power Factor L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_FREQUENCY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Frequency</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_harmonics_thd_l1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_HARMONICS_THD_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_HARMONICS_THD_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Harmonics THD L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_harmonics_thd_l2">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_HARMONICS_THD_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_HARMONICS_THD_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Harmonics THD L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_harmonics_thd_l3">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_HARMONICS_THD_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_HARMONICS_THD_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Harmonics THD L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_l1-n">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_L1-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_L1N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC L1-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_l2-n">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_L2-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_L2N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC L2-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_l3-n">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_L3-N</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_L3N</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC L3-N</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_l1-l2">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_L1-L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_L1L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC L1-L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_l2-l3">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_L2-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_L2L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC L2-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_l3-l1">
      <type>voltage</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_L3-L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_L3L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC L3-L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_current_l1">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Current L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_current_l2">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Current L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_current_l3">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Current L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_current_sum">
      <type>amperage</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Current Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_real_power_1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Real Power 1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_real_power_2">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Real Power 2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_real_power_3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Real Power 3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_real_power_sum">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_SUM</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_SUM</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Real Power Sum</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_power_factor_l1">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_POWER_FACTOR_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_POWER_FACTOR_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Power Factor L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_power_factor_l2">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_POWER_FACTOR_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_POWER_FACTOR_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Power Factor L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_power_factor_l3">
      <type>num/powerfactor</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_POWER_FACTOR_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_POWER_FACTOR_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Power Factor L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_frequency">
      <type>frequency</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_FREQUENCY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_FREQUENCY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Frequency</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_harmonics_thd_l1">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_HARMONICS_THD_L1</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_HARMONICS_THD_L1</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Harmonics THD L1</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_harmonics_thd_l2">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_HARMONICS_THD_L2</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_HARMONICS_THD_L2</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Harmonics THD L2</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_harmonics_thd_l3">
      <type>pctofcapacity</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_HARMONICS_THD_L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_HARMONICS_THD_L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Harmonics THD L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1a_real_energy_l1-l3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1A_REAL_ENERGY_L1-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1A_REAL_ENERGY_L1L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1A Real Energy L1-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_pdu_1b_real_energy_l1-l3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_PDU_1B_REAL_ENERGY_L1-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_PDU_1B_REAL_ENERGY_L1L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC PDU 1B Real Energy L1-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5a_real_energy_l1-l3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5A_REAL_ENERGY_L1-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5A_REAL_ENERGY_L1L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5A Real Energy L1-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_ups_pdu_5b_real_energy_l1-l3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_UPS_PDU_5B_REAL_ENERGY_L1-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_UPS_PDU_5B_REAL_ENERGY_L1L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC UPS PDU 5B Real Energy L1-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_new_power_rm_3_msb_c_real_energy_l1-l3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_REAL_ENERGY_L1-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_NEW_POWER_RM_3_MSB_C_REAL_ENERGY_L1L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC New Power Rm 3 MSB C Real Energy L1-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="acrc_and_nscc_power_rm_2_db_ac_real_energy_l1-l3">
      <type>num/powerKW</type>
      <units />
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_ENERGY_L1-L3</sensorId>
      <value>
        <mult>
          <op>
            <getOid>ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_ENERGY_L1L3</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>ACRC and NSCC Power Rm 2 DB AC Real Energy L1-L3</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_btu_total_energy">
      <type>num/kwatthr</type>
      <units />
      <sensorId>_NSCC_BTU_TOTAL_ENERGY</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_BTU_TOTAL_ENERGY</getOid>
          </op>
          <op>1</op>
        </mult>
      </value>
      <label>NSCC BTU Total Energy</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_btu_total_power">
      <type>num/powerKW</type>
      <units />
      <sensorId>_NSCC_BTU_TOTAL_POWER</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_BTU_TOTAL_POWER</getOid>
          </op>
          <op>.01</op>
        </mult>
      </value>
      <label>NSCC BTU Total Power</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_btu_flow_rate">
      <type>volairflow</type>
      <units />
      <sensorId>_NSCC_BTU_FLOW_RATE</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_BTU_FLOW_RATE</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <label>NSCC BTU Flow Rate</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_btu_chws_temp">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_BTU_CHWS_TEMP</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_BTU_CHWS_TEMP</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <label>NSCC BTU CHWS Temp</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <numSensor ruleid="nscc_btu_chwr_temp">
      <type>temp</type>
      <units />
      <sensorId>_NSCC_BTU_CHWR_TEMP</sensorId>
      <value>
        <mult>
          <op>
            <getOid>NSCC_BTU_CHWR_TEMP</getOid>
          </op>
          <op>0.01</op>
        </mult>
      </value>
      <label>NSCC BTU CHWR Temp</label>
      <sensorSet>General</sensorSet>
    </numSensor>
    <stateSensor ruleid="db_for_drycooler">
      <type>state</type>
      <sensorId>_DB_FOR_DRYCOOLER</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DB_FOR_DRYCOOLER</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>DB for Drycooler</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dry_cooler_1_status">
      <type>state</type>
      <sensorId>_DRY_COOLER_1_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DRY_COOLER_1_STATUS</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Dry Cooler 1 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dry_cooler_2_status">
      <type>state</type>
      <sensorId>_DRY_COOLER_2_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DRY_COOLER_2_STATUS</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Dry Cooler 2 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dry_cooler_3_status">
      <type>state</type>
      <sensorId>_DRY_COOLER_3_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DRY_COOLER_3_STATUS</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Dry Cooler 3 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dry_cooler_4_status">
      <type>state</type>
      <sensorId>_DRY_COOLER_4_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DRY_COOLER_4_STATUS</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Dry Cooler 4 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="water_pump_1_status">
      <type>state</type>
      <sensorId>_WATER_PUMP_1_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>WATER_PUMP_1_STATUS</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Water Pump 1 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="water_pump_2_status">
      <type>state</type>
      <sensorId>_WATER_PUMP_2_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>WATER_PUMP_2_STATUS</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Water Pump 2 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="water_pump_trip">
      <type>state</type>
      <sensorId>_WATER_PUMP_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>WATER_PUMP_TRIP</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Water Pump Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pdu_5a_trip">
      <type>state</type>
      <sensorId>_NSCC_PDU_5A_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PDU_5A_TRIP</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PDU 5A Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pdu_5b_trip">
      <type>state</type>
      <sensorId>_NSCC_PDU_5B_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PDU_5B_TRIP</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PDU 5B Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pdu_1a_trip">
      <type>state</type>
      <sensorId>_NSCC_PDU_1A_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PDU_1A_TRIP</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PDU 1A Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pdu_1b_trip">
      <type>state</type>
      <sensorId>_NSCC_PDU_1B_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PDU_1B_TRIP</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PDU 1B Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_cdu_1_fault">
      <type>state</type>
      <sensorId>_NSCC_CDU_1_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_CDU_1_FAULT</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC CDU 1 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_cdu_1_power_loss">
      <type>state</type>
      <sensorId>_NSCC_CDU_1_POWER_LOSS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_CDU_1_POWER_LOSS</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC CDU 1 Power Loss</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_cdu_2_fault">
      <type>state</type>
      <sensorId>_NSCC_CDU_2_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_CDU_2_FAULT</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC CDU 2 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_cdu_2_power_loss">
      <type>state</type>
      <sensorId>_NSCC_CDU_2_POWER_LOSS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_CDU_2_POWER_LOSS</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC CDU 2 Power Loss</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_cdu_3_fault">
      <type>state</type>
      <sensorId>_NSCC_CDU_3_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_CDU_3_FAULT</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC CDU 3 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_cdu_3_power_loss">
      <type>state</type>
      <sensorId>_NSCC_CDU_3_POWER_LOSS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_CDU_3_POWER_LOSS</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC CDU 3 Power Loss</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_1_fault">
      <type>state</type>
      <sensorId>_NSCC_PCU_1_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_1_FAULT</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 1 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_1_status">
      <type>state</type>
      <sensorId>_NSCC_PCU_1_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_1_STATUS</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 1 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_1_power_loss">
      <type>state</type>
      <sensorId>_NSCC_PCU_1_POWER_LOSS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_1_POWER_LOSS</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 1 Power Loss</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_2_fault">
      <type>state</type>
      <sensorId>_NSCC_PCU_2_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_2_FAULT</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 2 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_2_status">
      <type>state</type>
      <sensorId>_NSCC_PCU_2_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_2_STATUS</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 2 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_2_power_loss">
      <type>state</type>
      <sensorId>_NSCC_PCU_2_POWER_LOSS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_2_POWER_LOSS</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 2 Power Loss</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_3_fault">
      <type>state</type>
      <sensorId>_NSCC_PCU_3_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_3_FAULT</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 3 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_3_status">
      <type>state</type>
      <sensorId>_NSCC_PCU_3_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_3_STATUS</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 3 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_3_power_loss">
      <type>state</type>
      <sensorId>_NSCC_PCU_3_POWER_LOSS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_3_POWER_LOSS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 3 Power Loss</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_4_fault">
      <type>state</type>
      <sensorId>_NSCC_PCU_4_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_4_FAULT</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 4 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_4_status">
      <type>state</type>
      <sensorId>_NSCC_PCU_4_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_4_STATUS</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 4 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_4_power_loss">
      <type>state</type>
      <sensorId>_NSCC_PCU_4_POWER_LOSS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_4_POWER_LOSS</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 4 Power Loss</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_5_fault">
      <type>state</type>
      <sensorId>_NSCC_PCU_5_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_5_FAULT</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 5 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_5_status">
      <type>state</type>
      <sensorId>_NSCC_PCU_5_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_5_STATUS</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 5 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_5_power_loss">
      <type>state</type>
      <sensorId>_NSCC_PCU_5_POWER_LOSS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_5_POWER_LOSS</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 5 Power Loss</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_6_fault">
      <type>state</type>
      <sensorId>_NSCC_PCU_6_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_6_FAULT</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 6 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_6_status">
      <type>state</type>
      <sensorId>_NSCC_PCU_6_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_6_STATUS</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 6 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_6_power_loss">
      <type>state</type>
      <sensorId>_NSCC_PCU_6_POWER_LOSS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_6_POWER_LOSS</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 6 Power Loss</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_7_fault">
      <type>state</type>
      <sensorId>_NSCC_PCU_7_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_7_FAULT</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 7 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_7_status">
      <type>state</type>
      <sensorId>_NSCC_PCU_7_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_7_STATUS</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 7 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_7_power_loss">
      <type>state</type>
      <sensorId>_NSCC_PCU_7_POWER_LOSS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_7_POWER_LOSS</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 7 Power Loss</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_water_detection_leak_alarm_01">
      <type>state</type>
      <sensorId>_NSCC_WATER_DETECTION_LEAK_ALARM_01</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_WATER_DETECTION_LEAK_ALARM_01</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC Water Detection Leak Alarm 01</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_door_1_alarm">
      <type>state</type>
      <sensorId>_NSCC_DOOR_1_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DOOR_1_ALARM</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC Door 1 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_door_2_alarm">
      <type>state</type>
      <sensorId>_NSCC_DOOR_2_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DOOR_2_ALARM</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC Door 2 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_door_3_alarm">
      <type>state</type>
      <sensorId>_NSCC_DOOR_3_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DOOR_3_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC Door 3 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_vesda_fault_01">
      <type>state</type>
      <sensorId>_NSCC_VESDA_FAULT_01</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_VESDA_FAULT_01</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC Vesda Fault 01</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_vesda_alert_01">
      <type>state</type>
      <sensorId>_NSCC_VESDA_ALERT_01</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_VESDA_ALERT_01</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC Vesda Alert 01</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_vesda_fault_02">
      <type>state</type>
      <sensorId>_NSCC_VESDA_FAULT_02</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_VESDA_FAULT_02</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC Vesda Fault 02</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_vesda_alert_02">
      <type>state</type>
      <sensorId>_NSCC_VESDA_ALERT_02</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_VESDA_ALERT_02</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC Vesda Alert 02</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_vesda_fault_03">
      <type>state</type>
      <sensorId>_NSCC_VESDA_FAULT_03</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_VESDA_FAULT_03</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC Vesda Fault 03</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_vesda_alert_03">
      <type>state</type>
      <sensorId>_NSCC_VESDA_ALERT_03</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_VESDA_ALERT_03</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC Vesda Alert 03</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mist_control_panel_jockey_pump_trip">
      <type>state</type>
      <sensorId>_MIST_CONTROL_PANEL_JOCKEY_PUMP_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MIST_CONTROL_PANEL_JOCKEY_PUMP_TRIP</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mist Control Panel Jockey Pump Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mist_control_panel_trip">
      <type>state</type>
      <sensorId>_MIST_CONTROL_PANEL_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MIST_CONTROL_PANEL_TRIP</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mist Control Panel Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mist_water_pump_1_trip">
      <type>state</type>
      <sensorId>_MIST_WATER_PUMP_1_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MIST_WATER_PUMP_1_TRIP</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mist Water Pump 1 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mist_water_pump_2_trip">
      <type>state</type>
      <sensorId>_MIST_WATER_PUMP_2_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MIST_WATER_PUMP_2_TRIP</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mist Water Pump 2 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mist_water_tank_high_level">
      <type>state</type>
      <sensorId>_MIST_WATER_TANK_HIGH_LEVEL</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MIST_WATER_TANK_HIGH_LEVEL</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Mist Water Tank High Level</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="water_mist_detection_system_alarm_01">
      <type>state</type>
      <sensorId>_WATER_MIST_DETECTION_SYSTEM_ALARM_01</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>WATER_MIST_DETECTION_SYSTEM_ALARM_01</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Water Mist Detection System Alarm 01</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="water_mist_detection_system_alarm_02">
      <type>state</type>
      <sensorId>_WATER_MIST_DETECTION_SYSTEM_ALARM_02</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>WATER_MIST_DETECTION_SYSTEM_ALARM_02</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Water Mist Detection System Alarm 02</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="water_mist_detection_system_fault">
      <type>state</type>
      <sensorId>_WATER_MIST_DETECTION_SYSTEM_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>WATER_MIST_DETECTION_SYSTEM_FAULT</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Water Mist Detection System Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_msb_c_trip">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_MSB_C_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_MSB_C_TRIP</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Power Rm 3 MSB C Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_vesda_04_alert">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_VESDA_04_ALERT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_VESDA_04_ALERT</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Power Rm 3 Vesda Alert</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_vesda_04_alarm">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_VESDA_04_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_VESDA_04_ALARM</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Power Rm 3 Vesda Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_fm200_01_alarm_01_fault">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_FM200_01_ALARM_01_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_FM200_01_ALARM_01_FAULT</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Power Rm 3 FM200 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_fm200_01_alarm_02_1st_alarm">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_FM200_01_ALARM_02_1ST_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_FM200_01_ALARM_02_1ST_ALARM</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Power Rm 3 FM200 1st Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_fm200_gas_discharge_01">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_FM200_GAS_DISCHARGE_01</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_FM200_GAS_DISCHARGE_01</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Power Rm 3 FM200 Gas Discharge</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_fcu_01_status">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_FCU_01_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_FCU_01_STATUS</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC New Power Rm 3 FCU 01 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_fcu_01_mode">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_FCU_01_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_FCU_01_MODE</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC New Power Rm 3 FCU 01 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_fcu_01_trip">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_FCU_01_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_FCU_01_TRIP</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC New Power Rm 3 FCU 01 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_fcu_02_status">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_FCU_02_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_FCU_02_STATUS</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC New Power Rm 3 FCU 02 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_fcu_02_mode">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_FCU_02_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_FCU_02_MODE</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC New Power Rm 3 FCU 02 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_fcu_02_trip">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_FCU_02_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_FCU_02_TRIP</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC New Power Rm 3 FCU 02 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_door_alarm">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_DOOR_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_DOOR_ALARM</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC New Power Rm 3 Door Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_ups_b1_fault">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_UPS_B1_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_UPS_B1_FAULT</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 UPS B1 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_ups_b1_battery_discharge">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_UPS_B1_BATTERY_DISCHARGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_UPS_B1_BATTERY_DISCHARGE</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 UPS B1 Battery Discharge</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_ups_b2_fault">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_UPS_B2_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_UPS_B2_FAULT</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 UPS B2 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_ups_b2_battery_discharge">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_UPS_B2_BATTERY_DISCHARGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_UPS_B2_BATTERY_DISCHARGE</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 UPS B2 Battery Discharge</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_ups_b3_fault">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_UPS_B3_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_UPS_B3_FAULT</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 UPS B3 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_ups_b3_battery_discharge">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_UPS_B3_BATTERY_DISCHARGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_UPS_B3_BATTERY_DISCHARGE</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 UPS B3 Battery Discharge</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_door_alarm">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DOOR_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_DOOR_ALARM</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 Door Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_dc_ac_2_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DC_AC_2_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_DC_AC_2_TRIP</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 DC AC 2 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_dc_ac_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_DC_AC_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_DC_AC_TRIP</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 DC AC Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_msb_b_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_MSB_B_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_MSB_B_TRIP</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 MSB B Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_vesda_05_alert">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_VESDA_05_ALERT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_VESDA_05_ALERT</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 Vesda 05 Alert</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_vesda_05_alarm">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_VESDA_05_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_VESDA_05_ALARM</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 Vesda 05 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fm_200_02_alarm_03_fault">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FM_200_02_ALARM_03_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FM_200_02_ALARM_03_FAULT</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Power Rm 2 FM 200 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fm_200_02_alarm_04_1st_alarm">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FM_200_02_ALARM_04_1ST_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FM_200_02_ALARM_04_1ST_ALARM</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Power Rm 2 FM 200 1st Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fm200_02_gas_discharge_02">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FM200_02_GAS_DISCHARGE_02</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FM200_02_GAS_DISCHARGE_02</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FM200 02 Gas Discharge 02</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_03_status">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_03_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_03_STATUS</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 03 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_03_mode">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_03_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_03_MODE</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 03 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_03_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_03_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_03_TRIP</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 03 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_04_status">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_04_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_04_STATUS</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 04 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_04_mode">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_04_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_04_MODE</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 04 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_04_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_04_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_04_TRIP</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 04 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_05_status">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_05_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_05_STATUS</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 05 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_05_mode">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_05_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_05_MODE</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 05 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_05_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_05_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_05_TRIP</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 05 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_water_detection_leak_alarm_02">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_WATER_DETECTION_LEAK_ALARM_02</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_WATER_DETECTION_LEAK_ALARM_02</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 Water Detection Leak Alarm 02</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_vesda_06_alert">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_VESDA_06_ALERT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_VESDA_06_ALERT</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm Vesda 06 Alert</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_vesda_06_alarm">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_VESDA_06_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_VESDA_06_ALARM</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm Vesda 06 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fm200_10_alarm_05_fault">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FM200_10_ALARM_05_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FM200_10_ALARM_05_FAULT</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Battery Rm FM200 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fm200_10_alarm_06_1st_alarm">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FM200_10_ALARM_06_1ST_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FM200_10_ALARM_06_1ST_ALARM</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Battery Rm FM200 1st Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fm200_10_gas_discharge_03">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FM200_10_GAS_DISCHARGE_03</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FM200_10_GAS_DISCHARGE_03</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm FM200 10 Gas Discharge 03</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_door_alarm">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_DOOR_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_DOOR_ALARM</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm Door Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fcu_06_status">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FCU_06_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FCU_06_STATUS</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm FCU 06 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fcu_06_mode">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FCU_06_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FCU_06_MODE</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm FCU 06 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fcu_06_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FCU_06_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FCU_06_TRIP</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm FCU 06 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fcu_07_status">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FCU_07_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FCU_07_STATUS</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm FCU 07 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fcu_07_mode">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FCU_07_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FCU_07_MODE</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm FCU 07 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fcu_07_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FCU_07_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FCU_07_TRIP</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm FCU 07 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_exhaust_fan_01_status">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_EXHAUST_FAN_01_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_EXHAUST_FAN_01_STATUS</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm Exhaust Fan 01 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_exhaust_fan_01_alarm">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_EXHAUST_FAN_01_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_EXHAUST_FAN_01_ALARM</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm Exhaust Fan 01 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fresh_air_fan_01_status">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FRESH_AIR_FAN_01_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FRESH_AIR_FAN_01_STATUS</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm Fresh Air Fan 01 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fresh_air_fan_01_alarm">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FRESH_AIR_FAN_01_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FRESH_AIR_FAN_01_ALARM</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm Fresh Air Fan 01 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_hydrogen_detection">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_HYDROGEN_DETECTION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_HYDROGEN_DETECTION</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm Hydrogen Detection</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_ups_a1_fault">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_UPS_A1_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_UPS_A1_FAULT</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 UPS A1 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_ups_a1_battery_discharge">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_UPS_A1_BATTERY_DISCHARGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_UPS_A1_BATTERY_DISCHARGE</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 UPS A1 Battery Discharge</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_ups_a2_fault">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_UPS_A2_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_UPS_A2_FAULT</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 UPS A2 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_ups_a2_battery_discharge">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_UPS_A2_BATTERY_DISCHARGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_UPS_A2_BATTERY_DISCHARGE</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 UPS A2 Battery Discharge</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_ups_a3_fault">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_UPS_A3_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_UPS_A3_FAULT</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 UPS A3 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_ups_a3_battery_discharge">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_UPS_A3_BATTERY_DISCHARGE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_UPS_A3_BATTERY_DISCHARGE</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 UPS A3 Battery Discharge</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_door_alarm">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_DOOR_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_DOOR_ALARM</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 Door Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_msb_a_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_MSB_A_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_MSB_A_TRIP</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 MSB A Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_vesda_07_alert">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_VESDA_07_ALERT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_VESDA_07_ALERT</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 Vesda 07 Alert</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_vesda_07_alarm">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_VESDA_07_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_VESDA_07_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 Vesda 07 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fm_200_04_alarm_07_fault">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FM_200_04_ALARM_07_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FM_200_04_ALARM_07_FAULT</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Power Rm 1 FM 200 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fm_200_04_alarm_08_alarm">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FM_200_04_ALARM_08_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FM_200_04_ALARM_08_ALARM</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Power Rm 1 FM 200 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fm_200_04_gas_discharge_04">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FM_200_04_GAS_DISCHARGE_04</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FM_200_04_GAS_DISCHARGE_04</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FM 200 04 Gas Discharge 04</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_08_status">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_08_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_08_STATUS</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 08 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_08_mode">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_08_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_08_MODE</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 08 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_08_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_08_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_08_TRIP</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 08 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_09_status">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_09_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_09_STATUS</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 09 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_09_mode">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_09_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_09_MODE</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 09 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_09_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_09_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_09_TRIP</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 09 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_10_status">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_10_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_10_STATUS</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 10 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_10_mode">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_10_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_10_MODE</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 10 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_10_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_10_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_10_TRIP</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 10 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_water_detection_leak_alarm_03">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_WATER_DETECTION_LEAK_ALARM_03</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_WATER_DETECTION_LEAK_ALARM_03</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 Water Detection Leak Alarm 03</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_server_room_door_1_alarm">
      <type>state</type>
      <sensorId>_ACRC_SERVER_ROOM_DOOR_1_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_SERVER_ROOM_DOOR_1_ALARM</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC Server Room Door 1 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_server_room_door_2_alarm">
      <type>state</type>
      <sensorId>_ACRC_SERVER_ROOM_DOOR_2_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_SERVER_ROOM_DOOR_2_ALARM</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC Server Room Door 2 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="itss_server_room_door_1_alarm">
      <type>state</type>
      <sensorId>_ITSS_SERVER_ROOM_DOOR_1_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ITSS_SERVER_ROOM_DOOR_1_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ITSS Server Room Door 1 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="itss_server_room_door_2_alarm">
      <type>state</type>
      <sensorId>_ITSS_SERVER_ROOM_DOOR_2_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ITSS_SERVER_ROOM_DOOR_2_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ITSS Server Room Door 2 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="itss_server_room_vesda_8_alert">
      <type>state</type>
      <sensorId>_ITSS_SERVER_ROOM_VESDA_8_ALERT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ITSS_SERVER_ROOM_VESDA_8_ALERT</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ITSS Server Room Vesda 8 Alert</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="itss_server_room_vesda_8_alarm">
      <type>state</type>
      <sensorId>_ITSS_SERVER_ROOM_VESDA_8_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ITSS_SERVER_ROOM_VESDA_8_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ITSS Server Room Vesda 8 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="itss_server_room_fm200_05_alarm_09_fault">
      <type>state</type>
      <sensorId>_ITSS_SERVER_ROOM_FM200_05_ALARM_09_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ITSS_SERVER_ROOM_FM200_05_ALARM_09_FAULT</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ITSS Server Room FM200 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="itss_server_room_fm200_05_alarm_10_11st_alarm">
      <type>state</type>
      <sensorId>_ITSS_SERVER_ROOM_FM200_05_ALARM_10_11ST_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ITSS_SERVER_ROOM_FM200_05_ALARM_10_11ST_ALARM</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ITSS Server Room FM200 1st Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="itss_server_room_fm_200_05_gas_discharge_05">
      <type>state</type>
      <sensorId>_ITSS_SERVER_ROOM_FM_200_05_GAS_DISCHARGE_05</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ITSS_SERVER_ROOM_FM_200_05_GAS_DISCHARGE_05</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ITSS Server Room FM 200 05 Gas Discharge 05</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="itss_server_room_water_detection_leak_04_alarm">
      <type>state</type>
      <sensorId>_ITSS_SERVER_ROOM_WATER_DETECTION_LEAK_04_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ITSS_SERVER_ROOM_WATER_DETECTION_LEAK_04_ALARM</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ITSS Server Room Water Detection Leak 04 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="itss_server_room_water_detection_leak_05_alarm">
      <type>state</type>
      <sensorId>_ITSS_SERVER_ROOM_WATER_DETECTION_LEAK_05_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ITSS_SERVER_ROOM_WATER_DETECTION_LEAK_05_ALARM</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ITSS Server Room Water Detection Leak 05 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="comp_room_door_alarm">
      <type>state</type>
      <sensorId>_COMP_ROOM_DOOR_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>COMP_ROOM_DOOR_ALARM</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Comp Room Door Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="comp_room_vesda_alert_09">
      <type>state</type>
      <sensorId>_COMP_ROOM_VESDA_ALERT_09</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>COMP_ROOM_VESDA_ALERT_09</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Comp Room Vesda Alert 09</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="comp_room_vesda_alarm_09">
      <type>state</type>
      <sensorId>_COMP_ROOM_VESDA_ALARM_09</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>COMP_ROOM_VESDA_ALARM_09</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Comp Room Vesda Alarm 09</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="comp_room_fm_200_06_alarm_11_fault">
      <type>state</type>
      <sensorId>_COMP_ROOM_FM_200_06_ALARM_11_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>COMP_ROOM_FM_200_06_ALARM_11_FAULT</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Comp Room FM 200 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="comp_room_fm_200_06_alarm_12_1st_alarm">
      <type>state</type>
      <sensorId>_COMP_ROOM_FM_200_06_ALARM_12_1ST_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>COMP_ROOM_FM_200_06_ALARM_12_1ST_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Comp Room FM 200 1st Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="comp_room_fm_200_06_gas_discharge_06">
      <type>state</type>
      <sensorId>_COMP_ROOM_FM_200_06_GAS_DISCHARGE_06</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>COMP_ROOM_FM_200_06_GAS_DISCHARGE_06</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Comp Room FM 200 Gas Discharge</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="network_room_1_door_alarm">
      <type>state</type>
      <sensorId>_NETWORK_ROOM_1_DOOR_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETWORK_ROOM_1_DOOR_ALARM</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Network Room 1 Door Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="network_room_1_vesda_alert_10">
      <type>state</type>
      <sensorId>_NETWORK_ROOM_1_VESDA_ALERT_10</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETWORK_ROOM_1_VESDA_ALERT_10</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Network Room 1 Vesda Alert</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="network_room_1_vesda_alarm_10">
      <type>state</type>
      <sensorId>_NETWORK_ROOM_1_VESDA_ALARM_10</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETWORK_ROOM_1_VESDA_ALARM_10</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Network Room 1 Vesda Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="network_room_1_fm_200_07_alarm_13_fault">
      <type>state</type>
      <sensorId>_NETWORK_ROOM_1_FM_200_07_ALARM_13_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETWORK_ROOM_1_FM_200_07_ALARM_13_FAULT</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Network Room 1 FM 200 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="network_room_1_fm_200_07_alarm_14_1st_alarm">
      <type>state</type>
      <sensorId>_NETWORK_ROOM_1_FM_200_07_ALARM_14_1ST_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETWORK_ROOM_1_FM_200_07_ALARM_14_1ST_ALARM</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Network Room 1 FM 200 1st Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="network_room_1_fm_200_07_gas_discharge_07">
      <type>state</type>
      <sensorId>_NETWORK_ROOM_1_FM_200_07_GAS_DISCHARGE_07</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETWORK_ROOM_1_FM_200_07_GAS_DISCHARGE_07</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Network Room 1 FM 200 07 Gas Discharge 07</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="netowrk_room_2_door_alarm">
      <type>state</type>
      <sensorId>_NETOWRK_ROOM_2_DOOR_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETOWRK_ROOM_2_DOOR_ALARM</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Netowrk Room 2 Door Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="network_room_2_vesda_alert_11">
      <type>state</type>
      <sensorId>_NETWORK_ROOM_2_VESDA_ALERT_11</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETWORK_ROOM_2_VESDA_ALERT_11</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Network Room 2 Vesda Alert</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="network_room_2_vesda_alarm_11">
      <type>state</type>
      <sensorId>_NETWORK_ROOM_2_VESDA_ALARM_11</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETWORK_ROOM_2_VESDA_ALARM_11</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Network Room 2 Vesda Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="network_room_2_fm_200_8_alarm_15_fault">
      <type>state</type>
      <sensorId>_NETWORK_ROOM_2_FM_200_8_ALARM_15_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETWORK_ROOM_2_FM_200_8_ALARM_15_FAULT</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Network Room 2 FM 200 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="network_room_2_fm_200_08_alarm_16_1st_alarm">
      <type>state</type>
      <sensorId>_NETWORK_ROOM_2_FM_200_08_ALARM_16_1ST_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETWORK_ROOM_2_FM_200_08_ALARM_16_1ST_ALARM</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Network Room 2 FM 200 1st Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="network_room_2_fm_200_08_gas_discharge_08">
      <type>state</type>
      <sensorId>_NETWORK_ROOM_2_FM_200_08_GAS_DISCHARGE_08</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NETWORK_ROOM_2_FM_200_08_GAS_DISCHARGE_08</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Network Room 2 FM 200 Gas Discharge</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="noc_fcu_1_status">
      <type>state</type>
      <sensorId>_NOC_FCU_1_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NOC_FCU_1_STATUS</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NOC FCU 1 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="noc_fcu_1_mode">
      <type>state</type>
      <sensorId>_NOC_FCU_1_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NOC_FCU_1_MODE</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NOC FCU 1 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="noc_fcu_1_trip">
      <type>state</type>
      <sensorId>_NOC_FCU_1_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NOC_FCU_1_TRIP</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NOC FCU 1 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="noc_fcu_2_status">
      <type>state</type>
      <sensorId>_NOC_FCU_2_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NOC_FCU_2_STATUS</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NOC FCU 2 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="noc_fcu_2_mode">
      <type>state</type>
      <sensorId>_NOC_FCU_2_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NOC_FCU_2_MODE</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NOC FCU 2 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="noc_fcu_2_trip">
      <type>state</type>
      <sensorId>_NOC_FCU_2_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NOC_FCU_2_TRIP</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NOC FCU 2 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="boa_fcu_1_status">
      <type>state</type>
      <sensorId>_BOA_FCU_1_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>BOA_FCU_1_STATUS</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>BOA FCU 1 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="boa_fcu_1_mode">
      <type>state</type>
      <sensorId>_BOA_FCU_1_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>BOA_FCU_1_MODE</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>BOA FCU 1 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="boa_fcu_1_trip">
      <type>state</type>
      <sensorId>_BOA_FCU_1_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>BOA_FCU_1_TRIP</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>BOA FCU 1 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mtg_fcu_1_status">
      <type>state</type>
      <sensorId>_MTG_FCU_1_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MTG_FCU_1_STATUS</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>MTG FCU 1 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mtg_fcu_1_mode">
      <type>state</type>
      <sensorId>_MTG_FCU_1_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MTG_FCU_1_MODE</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>MTG FCU 1 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mtg_fcu_1_trip">
      <type>state</type>
      <sensorId>_MTG_FCU_1_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MTG_FCU_1_TRIP</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>MTG FCU 1 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_15_status">
      <type>state</type>
      <sensorId>_FCU_15_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_15_STATUS</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 15 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_15_mode">
      <type>state</type>
      <sensorId>_FCU_15_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_15_MODE</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 15 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_15_trip">
      <type>state</type>
      <sensorId>_FCU_15_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_15_TRIP</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 15 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_16_status">
      <type>state</type>
      <sensorId>_FCU_16_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_16_STATUS</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 16 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_16_mode">
      <type>state</type>
      <sensorId>_FCU_16_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_16_MODE</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 16 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_16_trip">
      <type>state</type>
      <sensorId>_FCU_16_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_16_TRIP</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 16 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_17_status">
      <type>state</type>
      <sensorId>_FCU_17_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_17_STATUS</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 17 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_17_mode">
      <type>state</type>
      <sensorId>_FCU_17_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_17_MODE</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 17 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_17_trip">
      <type>state</type>
      <sensorId>_FCU_17_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_17_TRIP</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 17 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="main_fire_alarm">
      <type>state</type>
      <sensorId>_MAIN_FIRE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MAIN_FIRE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Main Fire Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="pre_action_sprinkler_alarm">
      <type>state</type>
      <sensorId>_PRE_ACTION_SPRINKLER_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>PRE_ACTION_SPRINKLER_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Pre Action Sprinkler Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="pre_action_sprinkler_fault">
      <type>state</type>
      <sensorId>_PRE_ACTION_SPRINKLER_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>PRE_ACTION_SPRINKLER_FAULT</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Pre Action Sprinkler Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="generator_trip_01">
      <type>state</type>
      <sensorId>_GENERATOR_TRIP_01</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>GENERATOR_TRIP_01</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Generator Trip 01</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="generator_trip_02">
      <type>state</type>
      <sensorId>_GENERATOR_TRIP_02</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>GENERATOR_TRIP_02</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Generator Trip 02</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="generator_trip_03">
      <type>state</type>
      <sensorId>_GENERATOR_TRIP_03</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>GENERATOR_TRIP_03</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Generator Trip 03</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dvr_signal_loss_01">
      <type>state</type>
      <sensorId>_DVR_SIGNAL_LOSS_01</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DVR_SIGNAL_LOSS_01</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>DVR Signal Loss 01</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dvr_signal_loss_02">
      <type>state</type>
      <sensorId>_DVR_SIGNAL_LOSS_02</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DVR_SIGNAL_LOSS_02</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>DVR Signal Loss 02</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dvr_signal_loss_03">
      <type>state</type>
      <sensorId>_DVR_SIGNAL_LOSS_03</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DVR_SIGNAL_LOSS_03</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>DVR Signal Loss 03</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dvr_signal_loss_04">
      <type>state</type>
      <sensorId>_DVR_SIGNAL_LOSS_04</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DVR_SIGNAL_LOSS_04</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>DVR Signal Loss 04</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dvr_signal_loss_05">
      <type>state</type>
      <sensorId>_DVR_SIGNAL_LOSS_05</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DVR_SIGNAL_LOSS_05</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>DVR Signal Loss 05</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dvr_signal_loss_06">
      <type>state</type>
      <sensorId>_DVR_SIGNAL_LOSS_06</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DVR_SIGNAL_LOSS_06</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>DVR Signal Loss 06</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dvr_signal_loss_07">
      <type>state</type>
      <sensorId>_DVR_SIGNAL_LOSS_07</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DVR_SIGNAL_LOSS_07</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>DVR Signal Loss 07</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dvr_signal_loss_08">
      <type>state</type>
      <sensorId>_DVR_SIGNAL_LOSS_08</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DVR_SIGNAL_LOSS_08</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>DVR Signal Loss 08</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="chilled_water_flow_alarm">
      <type>state</type>
      <sensorId>_CHILLED_WATER_FLOW_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>CHILLED_WATER_FLOW_ALARM</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Chilled Water Flow Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_vesda_alert_12">
      <type>state</type>
      <sensorId>_TAPE_ROOM_VESDA_ALERT_12</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_VESDA_ALERT_12</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room Vesda Alert 12</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_vesda_alarm_12">
      <type>state</type>
      <sensorId>_TAPE_ROOM_VESDA_ALARM_12</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_VESDA_ALARM_12</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room Vesda Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_fm200_09_alarm_17_fault">
      <type>state</type>
      <sensorId>_TAPE_ROOM_FM200_09_ALARM_17_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_FM200_09_ALARM_17_FAULT</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room FM200 Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_fm_200_09_alarm_18_1st_alarm">
      <type>state</type>
      <sensorId>_TAPE_ROOM_FM_200_09_ALARM_18_1ST_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_FM_200_09_ALARM_18_1ST_ALARM</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room FM 200 Alarm 1st Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_fm_200_09_gas_discharge_09">
      <type>state</type>
      <sensorId>_TAPE_ROOM_FM_200_09_GAS_DISCHARGE_09</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_FM_200_09_GAS_DISCHARGE_09</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room FM 200 09 Gas Discharge 09</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_fcu_18_status">
      <type>state</type>
      <sensorId>_TAPE_ROOM_FCU_18_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_FCU_18_STATUS</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room FCU 18 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_fcu_18_mode">
      <type>state</type>
      <sensorId>_TAPE_ROOM_FCU_18_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_FCU_18_MODE</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room FCU 18 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_fcu_18_trip">
      <type>state</type>
      <sensorId>_TAPE_ROOM_FCU_18_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_FCU_18_TRIP</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room FCU 18 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_fcu_19_status">
      <type>state</type>
      <sensorId>_TAPE_ROOM_FCU_19_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_FCU_19_STATUS</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room FCU 19 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_fcu_19_mode">
      <type>state</type>
      <sensorId>_TAPE_ROOM_FCU_19_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_FCU_19_MODE</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room FCU 19 Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_fcu_19_trip">
      <type>state</type>
      <sensorId>_TAPE_ROOM_FCU_19_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_FCU_19_TRIP</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room FCU 19 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_door_1_alarm">
      <type>state</type>
      <sensorId>_TAPE_ROOM_DOOR_1_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_DOOR_1_ALARM</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room Door 1 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_door_2_alarm">
      <type>state</type>
      <sensorId>_TAPE_ROOM_DOOR_2_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_DOOR_2_ALARM</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room Door 2 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_door_3_alarm">
      <type>state</type>
      <sensorId>_TAPE_ROOM_DOOR_3_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_DOOR_3_ALARM</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room Door 3 Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_1_return_air_temperature_high_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_1_RETURN_AIR_TEMPERATURE_HIGH_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_1_RETURN_AIR_TEMPERATURE_HIGH_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 1 Return Air Temperature High Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_1_return_air_temperature_low_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_1_RETURN_AIR_TEMPERATURE_LOW_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_1_RETURN_AIR_TEMPERATURE_LOW_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 1 Return Air Temperature Low Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_2_return_air_temperature_high_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_2_RETURN_AIR_TEMPERATURE_HIGH_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_2_RETURN_AIR_TEMPERATURE_HIGH_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 2 Return Air Temperature High Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_2_return_air_temperature_low_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_2_RETURN_AIR_TEMPERATURE_LOW_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_2_RETURN_AIR_TEMPERATURE_LOW_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 2 Return Air Temperature Low Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_3_return_air_temperature_high_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_3_RETURN_AIR_TEMPERATURE_HIGH_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_3_RETURN_AIR_TEMPERATURE_HIGH_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 3 Return Air Temperature High Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_3_return_air_temperature_low_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_3_RETURN_AIR_TEMPERATURE_LOW_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_3_RETURN_AIR_TEMPERATURE_LOW_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 3 Return Air Temperature Low Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_4_return_air_temperature_high_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_4_RETURN_AIR_TEMPERATURE_HIGH_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_4_RETURN_AIR_TEMPERATURE_HIGH_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 4 Return Air Temperature High Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_4_return_air_temperature_low_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_4_RETURN_AIR_TEMPERATURE_LOW_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_4_RETURN_AIR_TEMPERATURE_LOW_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 4 Return Air Temperature Low Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_5_return_air_temperature_high_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_5_RETURN_AIR_TEMPERATURE_HIGH_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_5_RETURN_AIR_TEMPERATURE_HIGH_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 5 Return Air Temperature High Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_5_return_air_temperature_low_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_5_RETURN_AIR_TEMPERATURE_LOW_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_5_RETURN_AIR_TEMPERATURE_LOW_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 5 Return Air Temperature Low Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_6_return_air_temperature_high_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_6_RETURN_AIR_TEMPERATURE_HIGH_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_6_RETURN_AIR_TEMPERATURE_HIGH_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 6 Return Air Temperature High Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_6_return_air_temperature_low_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_6_RETURN_AIR_TEMPERATURE_LOW_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_6_RETURN_AIR_TEMPERATURE_LOW_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 6 Return Air Temperature Low Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_7_return_air_temperature_high_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_7_RETURN_AIR_TEMPERATURE_HIGH_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_7_RETURN_AIR_TEMPERATURE_HIGH_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 7 Return Air Temperature High Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_pcu_7_return_air_temperature_low_alarm">
      <type>state</type>
      <sensorId>_NSCC_PCU_7_RETURN_AIR_TEMPERATURE_LOW_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_PCU_7_RETURN_AIR_TEMPERATURE_LOW_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC PCU 7 Return Air Temperature Low Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_1a_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_1A_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_1A_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 1A Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_1a_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_1A_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_1A_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 1A Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_1b_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_1B_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_1B_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 1B Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_1b_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_1B_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_1B_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 1B Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_1c_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_1C_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_1C_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 1C Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_1c_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_1C_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_1C_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 1C Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_1d_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_1D_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_1D_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 1D Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_1d_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_1D_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_1D_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 1D Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_2a_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_2A_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_2A_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 2A Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_2a_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_2A_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_2A_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 2A Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_2b_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_2B_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_2B_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 2B Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_2b_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_2B_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_2B_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 2B Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_2c_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_2C_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_2C_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 2C Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_2c_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_2C_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_2C_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 2C Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_2d_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_2D_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_2D_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 2D Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_2d_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_2D_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_2D_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 2D Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_3a_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_3A_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_3A_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 3A Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_3a_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_3A_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_3A_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 3A Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_3b_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_3B_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_3B_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 3B Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_3b_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_3B_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_3B_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 3B Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_3c_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_3C_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_3C_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 3C Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_3c_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_3C_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_3C_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 3C Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_3d_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_3D_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_3D_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 3D Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_3d_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_3D_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_3D_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 3D Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_4a_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_4A_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_4A_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 4A Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_4a_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_4A_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_4A_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 4A Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_4b_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_4B_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_4B_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 4B Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_4b_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_4B_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_4B_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 4B Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_4c_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_4C_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_4C_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 4C Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_4c_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_4C_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_4C_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 4C Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_4d_probe_1_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_4D_PROBE_1_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_4D_PROBE_1_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 4D Probe 1 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_dc_4d_probe_2_high_temperature_alarm">
      <type>state</type>
      <sensorId>_NSCC_DC_4D_PROBE_2_HIGH_TEMPERATURE_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_DC_4D_PROBE_2_HIGH_TEMPERATURE_ALARM</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC DC 4D Probe 2 High Temperature Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_wmcs_first_alarm">
      <type>state</type>
      <sensorId>_ACRC_WMCS_FIRST_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_WMCS_FIRST_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC WMCS First Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_wmcs_second_alarm">
      <type>state</type>
      <sensorId>_ACRC_WMCS_SECOND_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_WMCS_SECOND_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC WMCS Second Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_wmcs_fault">
      <type>state</type>
      <sensorId>_ACRC_WMCS_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_WMCS_FAULT</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC WMCS Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_wmcs_flow_switch_activated">
      <type>state</type>
      <sensorId>_ACRC_WMCS_FLOW_SWITCH_ACTIVATED</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_WMCS_FLOW_SWITCH_ACTIVATED</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC WMCS Flow Switch Activated</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_edfs_fault">
      <type>state</type>
      <sensorId>_ACRC_EDFS_FAULT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_EDFS_FAULT</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC EDFS Fault</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_edfs_alert">
      <type>state</type>
      <sensorId>_ACRC_EDFS_ALERT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_EDFS_ALERT</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC EDFS Alert</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_edfs_action">
      <type>state</type>
      <sensorId>_ACRC_EDFS_ACTION</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_EDFS_ACTION</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC EDFS Action</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_edfs_fire">
      <type>state</type>
      <sensorId>_ACRC_EDFS_FIRE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_EDFS_FIRE</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC EDFS Fire</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_xdp_run_status">
      <type>state</type>
      <sensorId>_ACRC_XDP_RUN_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_XDP_RUN_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC XDP Run Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_xdp_alarm">
      <type>state</type>
      <sensorId>_ACRC_XDP_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_XDP_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC XDP Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_cdu_run_status">
      <type>state</type>
      <sensorId>_ACRC_CDU_RUN_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_CDU_RUN_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC CDU Run Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_pdu_1_a1_status">
      <type>state</type>
      <sensorId>_ACRC_PDU_1_A1_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_PDU_1_A1_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC PDU 1 A1 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_pdu_a_a1_status">
      <type>state</type>
      <sensorId>_ACRC_PDU_A_A1_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_PDU_A_A1_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC PDU A A1 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_pdu_a_a3_status">
      <type>state</type>
      <sensorId>_ACRC_PDU_A_A3_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_PDU_A_A3_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC PDU A A3 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_pdu_a_a3_trip">
      <type>state</type>
      <sensorId>_ACRC_PDU_A_A3_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_PDU_A_A3_TRIP</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC PDU A A3 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_pdu_b_a1_status">
      <type>state</type>
      <sensorId>_ACRC_PDU_B_A1_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_PDU_B_A1_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC PDU B A1 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_pdu_b_a3_status">
      <type>state</type>
      <sensorId>_ACRC_PDU_B_A3_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_PDU_B_A3_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC PDU B A3 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_pdu_b_a3_trip">
      <type>state</type>
      <sensorId>_ACRC_PDU_B_A3_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_PDU_B_A3_TRIP</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC PDU B A3 Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_new_crah_1_status">
      <type>state</type>
      <sensorId>_ACRC_NEW_CRAH_1_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_NEW_CRAH_1_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC New CRAH 1 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_new_crah_1_general_aggregated_alarm">
      <type>state</type>
      <sensorId>_ACRC_NEW_CRAH_1_GENERAL_AGGREGATED_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_NEW_CRAH_1_GENERAL_AGGREGATED_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC New CRAH 1 General Aggregated Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_existing_crah_1_status">
      <type>state</type>
      <sensorId>_ACRC_EXISTING_CRAH_1_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_EXISTING_CRAH_1_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC Existing CRAH 1 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_existing_crah_1_general_aggregated_alarm">
      <type>state</type>
      <sensorId>_ACRC_EXISTING_CRAH_1_GENERAL_AGGREGATED_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_EXISTING_CRAH_1_GENERAL_AGGREGATED_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC Existing CRAH 1 General Aggregated Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_new_crah_2_status">
      <type>state</type>
      <sensorId>_ACRC_NEW_CRAH_2_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_NEW_CRAH_2_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC New CRAH 2 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_new_crah_2_general_aggregated_alarm">
      <type>state</type>
      <sensorId>_ACRC_NEW_CRAH_2_GENERAL_AGGREGATED_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_NEW_CRAH_2_GENERAL_AGGREGATED_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC New CRAH 2 General Aggregated Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_new_crah_3_status">
      <type>state</type>
      <sensorId>_ACRC_NEW_CRAH_3_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_NEW_CRAH_3_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC New CRAH 3 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_new_crah_3_general_aggregated_alarm">
      <type>state</type>
      <sensorId>_ACRC_NEW_CRAH_3_GENERAL_AGGREGATED_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_NEW_CRAH_3_GENERAL_AGGREGATED_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC New CRAH 3 General Aggregated Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_existing_crah_2_status">
      <type>state</type>
      <sensorId>_ACRC_EXISTING_CRAH_2_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_EXISTING_CRAH_2_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC Existing CRAH 2 Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_existing_crach_2_general_aggregated_alarm">
      <type>state</type>
      <sensorId>_ACRC_EXISTING_CRACH_2_GENERAL_AGGREGATED_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_EXISTING_CRACH_2_GENERAL_AGGREGATED_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC Existing CRACH 2 General Aggregated Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_wds_cable_break">
      <type>state</type>
      <sensorId>_ACRC_WDS_CABLE_BREAK</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_WDS_CABLE_BREAK</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC WDS Cable Break</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_wds_first_leak_alarm">
      <type>state</type>
      <sensorId>_ACRC_WDS_FIRST_LEAK_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_WDS_FIRST_LEAK_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC WDS First Leak Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_wds_second_leak_alarm">
      <type>state</type>
      <sensorId>_ACRC_WDS_SECOND_LEAK_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_WDS_SECOND_LEAK_ALARM</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC WDS Second Leak Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_fcu_status">
      <type>state</type>
      <sensorId>_ACRC_FCU_STATUS</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_FCU_STATUS</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC FCU Status</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_fcu_trip">
      <type>state</type>
      <sensorId>_ACRC_FCU_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_FCU_TRIP</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC FCU Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dehumidifier_trip">
      <type>state</type>
      <sensorId>_DEHUMIDIFIER_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DEHUMIDIFIER_TRIP</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Dehumidifier Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dehumidifier_alarm">
      <type>state</type>
      <sensorId>_DEHUMIDIFIER_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DEHUMIDIFIER_ALARM</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Dehumidifier Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="dehumidifier_mode">
      <type>state</type>
      <sensorId>_DEHUMIDIFIER_MODE</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DEHUMIDIFIER_MODE</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Dehumidifier Mode</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="db_staging_trip">
      <type>state</type>
      <sensorId>_DB_STAGING_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>DB_STAGING_TRIP</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>DB Staging Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_emsb_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_EMSB_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_EMSB_TRIP</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 EMSB Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_db_l/p_trip">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_DB_L/P_TRIP</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_DB_LP_TRIP</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 DB L/P Trip</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_fcu_01_output">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_FCU_01_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_FCU_01_OUTPUT</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC New Power Rm 3 FCU 01 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_new_power_rm_3_fcu_02_output">
      <type>state</type>
      <sensorId>_NSCC_NEW_POWER_RM_3_FCU_02_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_NEW_POWER_RM_3_FCU_02_OUTPUT</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC New Power Rm 3 FCU 02 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_03_output">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_03_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_03_OUTPUT</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 03 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_04_output">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_04_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_04_OUTPUT</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 04 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_2_fcu_05_output">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_2_FCU_05_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_2_FCU_05_OUTPUT</getOid>
                  </op>
                  <op>5</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 2 FCU 05 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fcu_06_output">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FCU_06_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FCU_06_OUTPUT</getOid>
                  </op>
                  <op>6</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm FCU 06 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_battery_rm_fcu_07_output">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_BATTERY_RM_FCU_07_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_BATTERY_RM_FCU_07_OUTPUT</getOid>
                  </op>
                  <op>7</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Battery Rm FCU 07 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_08_output">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_08_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_08_OUTPUT</getOid>
                  </op>
                  <op>8</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 08 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_09_output">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_09_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_09_OUTPUT</getOid>
                  </op>
                  <op>9</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 09 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="acrc_and_nscc_power_rm_1_fcu_10_output">
      <type>state</type>
      <sensorId>_ACRC_AND_NSCC_POWER_RM_1_FCU_10_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>ACRC_AND_NSCC_POWER_RM_1_FCU_10_OUTPUT</getOid>
                  </op>
                  <op>10</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>ACRC and NSCC Power Rm 1 FCU 10 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="noc_fcu_1_output">
      <type>state</type>
      <sensorId>_NOC_FCU_1_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NOC_FCU_1_OUTPUT</getOid>
                  </op>
                  <op>11</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NOC FCU 1 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="noc_fcu_2_output">
      <type>state</type>
      <sensorId>_NOC_FCU_2_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NOC_FCU_2_OUTPUT</getOid>
                  </op>
                  <op>12</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NOC FCU 2 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="boa_fcu_1_output">
      <type>state</type>
      <sensorId>_BOA_FCU_1_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>BOA_FCU_1_OUTPUT</getOid>
                  </op>
                  <op>13</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>BOA FCU 1 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="mtg_fcu_1_output">
      <type>state</type>
      <sensorId>_MTG_FCU_1_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>MTG_FCU_1_OUTPUT</getOid>
                  </op>
                  <op>14</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>MTG FCU 1 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_15_output">
      <type>state</type>
      <sensorId>_FCU_15_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_15_OUTPUT</getOid>
                  </op>
                  <op>15</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 15 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_16_output">
      <type>state</type>
      <sensorId>_FCU_16_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_16_OUTPUT</getOid>
                  </op>
                  <op>0</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 16 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="fcu_17_output">
      <type>state</type>
      <sensorId>_FCU_17_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>FCU_17_OUTPUT</getOid>
                  </op>
                  <op>1</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>FCU 17 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_fcu_18_output">
      <type>state</type>
      <sensorId>_TAPE_ROOM_FCU_18_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_FCU_18_OUTPUT</getOid>
                  </op>
                  <op>2</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room FCU 18 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="tape_room_fcu_19_output">
      <type>state</type>
      <sensorId>_TAPE_ROOM_FCU_19_OUTPUT</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>TAPE_ROOM_FCU_19_OUTPUT</getOid>
                  </op>
                  <op>3</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>Tape Room FCU 19 Output</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
    <stateSensor ruleid="nscc_fire_lift_door_alarm">
      <type>state</type>
      <sensorId>_NSCC_FIRE_LIFT_DOOR_ALARM</sensorId>
      <value>
        <mapValue mapid="true_false_vm">
          <formatNumber printffmt="%1.0f">
            <bitwise_and>
              <op>
                <right_shift>
                  <op>
                    <getOid>NSCC_FIRE_LIFT_DOOR_ALARM</getOid>
                  </op>
                  <op>4</op>
                </right_shift>
              </op>
              <op>1</op>
            </bitwise_and>
          </formatNumber>
        </mapValue>
      </value>
      <label>NSCC Fire Lift Door Alarm</label>
      <enum>true_false_em</enum>
      <sensorSet>General</sensorSet>
    </stateSensor>
	

		<valueMap ruleid="true_false_vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>
		<enumMap ruleid="true_false_em">
			<label>False</label>
			<label>True</label>
		</enumMap>	
	
	
  </device>
  <protocol>
    <modbus>
	
      <value_ref_id valid="TAPE_ROOM_FCU_18_TRIP">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_7_CHILLED_WATER_VALVE">
        <function>3</function>
        <start_addr>62</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_6_FAN_SPEED">
        <function>3</function>
        <start_addr>57</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRAH_2_STATUS">
        <function>3</function>
        <start_addr>188</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NOC_FCU_2_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_L3">
        <function>3</function>
        <start_addr>426</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_VESDA_05_ALARM">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ITSS_SERVER_ROOM_VESDA_8_ALARM">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FM_200_02_ALARM_04_1ST_ALARM">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_TRIP_02">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_CDU_RUN_STATUS">
        <function>3</function>
        <start_addr>166</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A8_1_HUMIDITY">
        <function>3</function>
        <start_addr>252</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FCU_06_TRIP">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_6_STATUS">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_03_MODE">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_L1N">
        <function>3</function>
        <start_addr>440</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FCU_06_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A7_1_HUMIDITY">
        <function>3</function>
        <start_addr>247</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_16_OUTPUT">
        <function>3</function>
        <start_addr>328</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="COMP_ROOM_FM_200_06_ALARM_12_1ST_ALARM">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_2_AIR_FLOW">
        <function>3</function>
        <start_addr>28</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_VESDA_06_ALARM">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_L2N">
        <function>3</function>
        <start_addr>331</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_CURRENT_SUM">
        <function>3</function>
        <start_addr>339</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_3_STATUS">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B1_1_TEMPERATURE">
        <function>3</function>
        <start_addr>261</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_5_STATUS">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_16_TRIP">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_1_FAULT">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_6_FAULT">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETWORK_ROOM_1_FM_200_07_ALARM_14_1ST_ALARM">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A9_2_VOLTAGE">
        <function>3</function>
        <start_addr>303</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DOOR_2_ALARM">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="BOA_FCU_1_TRIP">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EDFS_FIRE">
        <function>3</function>
        <start_addr>163</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4C_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>150</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_6_SUPPLY_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>53</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="COMP_ROOM_FM_200_06_ALARM_11_FAULT">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A9_1_VOLTAGE">
        <function>3</function>
        <start_addr>258</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_HARMONICS_THD_L2">
        <function>3</function>
        <start_addr>438</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_FM200_01_ALARM_02_1ST_ALARM">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_3_SECONDARY_TEMPERATURE_T2B">
        <function>3</function>
        <start_addr>85</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_BTU_CHWR_TEMP">
        <function>3</function>
        <start_addr>478</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1B_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>98</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B10_2_VOLTAGE">
        <function>3</function>
        <start_addr>323</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_3_RELATIVE_HUMIDITY_">
        <function>3</function>
        <start_addr>33</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FRESH_AIR_FAN_01_ALARM">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_09_MODE">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_VESDA_06_ALERT">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_L1L2">
        <function>3</function>
        <start_addr>333</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_CURRENT_L2">
        <function>3</function>
        <start_addr>403</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1C_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>100</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_UPS_B2_FAULT">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2A_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>108</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_6_RETURN_AIR_TEMPERATURE_HIGH_ALARM">
        <function>3</function>
        <start_addr>51</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_BTU_POWER">
        <function>3</function>
        <start_addr>209</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_VESDA_04_ALARM">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4A_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>142</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_A_CURRENT_2">
        <function>3</function>
        <start_addr>216</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_FCU_HUMIDITY">
        <function>3</function>
        <start_addr>208</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FM200_02_GAS_DISCHARGE_02">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ITSS_SERVER_ROOM_FM200_05_ALARM_09_FAULT">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_3_DEW_POINT">
        <function>3</function>
        <start_addr>89</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_A_REACTIVE_POWER">
        <function>3</function>
        <start_addr>221</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_SUM">
        <function>3</function>
        <start_addr>453</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_1_FAULT">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_FCU_02_MODE">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B10_1_VOLTAGE">
        <function>3</function>
        <start_addr>278</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_REAL_POWER_3">
        <function>3</function>
        <start_addr>342</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_3_POWER_LOSS">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_UPS_A1_FAULT">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_7_STATUS">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_3_SECONDARY_TEMPERATURE_T2A">
        <function>3</function>
        <start_addr>84</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NOC_FCU_2_STATUS">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_BTU_SUPPLY_TEMPERATURE">
        <function>3</function>
        <start_addr>213</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_UPS_B3_BATTERY_DISCHARGE">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4A_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>141</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A2_2_TEMPERATURE">
        <function>3</function>
        <start_addr>281</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B4_1_CURRENT">
        <function>3</function>
        <start_addr>269</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_2_PUMP_DIFFERENTIAL_PRESSURE">
        <function>3</function>
        <start_addr>81</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4C_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>148</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_WDS_CABLE_BREAK">
        <function>3</function>
        <start_addr>200</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_3_SUPPLY_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>32</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A3_1_VOLTAGE">
        <function>3</function>
        <start_addr>243</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_FCU_01_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3D_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>136</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_REAL_ENERGY_L1L3">
        <function>3</function>
        <start_addr>466</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="ITSS_SERVER_ROOM_WATER_DETECTION_LEAK_04_ALARM">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETWORK_ROOM_1_DOOR_ALARM">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_1_SECONDARY_TEMPERATURE_T2A">
        <function>3</function>
        <start_addr>66</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3B_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>130</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A2_1_VOLTAGE">
        <function>3</function>
        <start_addr>238</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_TRIP">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_BTU_TOTAL_ENERGY">
        <function>3</function>
        <start_addr>474</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_UPS_B1_BATTERY_DISCHARGE">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRAH_3_GENERAL_AGGREGATED_ALARM">
        <function>3</function>
        <start_addr>193</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4A_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>140</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_05_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_1_VOLTAGE_3">
        <function>3</function>
        <start_addr>234</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3B_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>128</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_5_SUPPLY_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>46</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_L3N">
        <function>3</function>
        <start_addr>398</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DVR_SIGNAL_LOSS_07">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EXISTING_CRAH_2_STATUS">
        <function>3</function>
        <start_addr>196</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PRESSURE_2">
        <function>3</function>
        <start_addr>178</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_7_POWER_LOSS">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRACH_1_RETURN_DEW_POINT">
        <function>3</function>
        <start_addr>183</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1B_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>97</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B7_1_TEMPERATURE">
        <function>3</function>
        <start_addr>271</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_FCU_02_TRIP">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_L2L3">
        <function>3</function>
        <start_addr>444</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETWORK_ROOM_2_VESDA_ALERT_11">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_10_STATUS">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRACH_2_RETURN_DEW_POINT">
        <function>3</function>
        <start_addr>191</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4D_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>153</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_FM_200_09_ALARM_18_1ST_ALARM">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_1">
        <function>3</function>
        <start_addr>450</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FM200_10_ALARM_06_1ST_ALARM">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_REAL_POWER_SUM">
        <function>3</function>
        <start_addr>365</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_POWER_FACTOR_L1">
        <function>3</function>
        <start_addr>410</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1D_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>105</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B7_2_TEMPERATURE">
        <function>3</function>
        <start_addr>316</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DRY_COOLER_2_STATUS">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_FIRE_LIFT_DOOR_ALARM">
        <function>3</function>
        <start_addr>328</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_CURRENT_L1">
        <function>3</function>
        <start_addr>402</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_4_STATUS">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_CURRENT_SUM">
        <function>3</function>
        <start_addr>405</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_HARMONICS_THD_L3">
        <function>3</function>
        <start_addr>417</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_UPS_A2_BATTERY_DISCHARGE">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DVR_SIGNAL_LOSS_08">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FM_200_04_ALARM_07_FAULT">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_BTU_TOTAL_POWER">
        <function>3</function>
        <start_addr>475</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_TEMPERATURE_2">
        <function>3</function>
        <start_addr>177</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EXISTING_CRACH_2_GENERAL_AGGREGATED_ALARM">
        <function>3</function>
        <start_addr>197</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_L2L3">
        <function>3</function>
        <start_addr>422</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DOOR_1_ALARM">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1A_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>92</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B1_1_POWER">
        <function>3</function>
        <start_addr>265</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_CURRENT_L3">
        <function>3</function>
        <start_addr>360</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_4_CHILLED_WATER_VALVE">
        <function>3</function>
        <start_addr>41</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PRESSURE_1">
        <function>3</function>
        <start_addr>175</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_1_ACTIVE_POWER">
        <function>3</function>
        <start_addr>235</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_17_STATUS">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_REAL_POWER_2">
        <function>3</function>
        <start_addr>341</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_2_RETURN_AIR_TEMPERATURE_HIGH_ALARM">
        <function>3</function>
        <start_addr>23</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_16_MODE">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_A_VOLTAGE_2">
        <function>3</function>
        <start_addr>219</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRAH_2_GENERAL_AGGREGATED_ALARM">
        <function>3</function>
        <start_addr>189</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_VESDA_ALERT_12">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_TRIP_01">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_CURRENT_L1">
        <function>3</function>
        <start_addr>336</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DOOR_3_ALARM">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_FCU_18_OUTPUT">
        <function>3</function>
        <start_addr>328</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ITSS_SERVER_ROOM_VESDA_8_ALERT">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_HUMIDITY_2">
        <function>3</function>
        <start_addr>179</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B7_1_CURRENT">
        <function>3</function>
        <start_addr>274</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_VESDA_ALERT_02">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_VESDA_ALERT_03">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_15_MODE">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1D_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>104</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_1_RELATIVE_HUMIDITY_">
        <function>3</function>
        <start_addr>19</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_5_RELATIVE_HUMIDITY_">
        <function>3</function>
        <start_addr>47</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_10_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_VESDA_FAULT_01">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_FM200_09_ALARM_17_FAULT">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_TEMPERATURE_1">
        <function>3</function>
        <start_addr>174</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_2_STATUS">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EDFS_ALERT">
        <function>3</function>
        <start_addr>161</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_1_RETURN_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>17</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_A_A1_STATUS">
        <function>3</function>
        <start_addr>168</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_L3L1">
        <function>3</function>
        <start_addr>423</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_POWER_FACTOR_L2">
        <function>3</function>
        <start_addr>455</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2C_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>117</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_A_CURRENT_3">
        <function>3</function>
        <start_addr>217</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_UPS_B3_FAULT">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_HUMIDITY_1">
        <function>3</function>
        <start_addr>176</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_VESDA_FAULT_02">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NOC_FCU_1_STATUS">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="WATER_MIST_DETECTION_SYSTEM_FAULT">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_3_RETURN_AIR_TEMPERATURE_LOW_ALARM">
        <function>3</function>
        <start_addr>30</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_17_TRIP">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B1_2_HUMIDITY">
        <function>3</function>
        <start_addr>307</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_7_RELATIVE_HUMIDITY_">
        <function>3</function>
        <start_addr>61</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_UPS_A2_FAULT">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B10_2_TEMPERATURE">
        <function>3</function>
        <start_addr>321</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2C_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>116</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_L2L3">
        <function>3</function>
        <start_addr>334</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_A_VOLTAGE_3">
        <function>3</function>
        <start_addr>220</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B1_1_VOLTAGE">
        <function>3</function>
        <start_addr>263</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_L2N">
        <function>3</function>
        <start_addr>375</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_09_TRIP">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_L3L1">
        <function>3</function>
        <start_addr>401</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3B_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>129</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A3_1_HUMIDITY">
        <function>3</function>
        <start_addr>242</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DRY_COOLER_4_STATUS">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_WMCS_FLOW_SWITCH_ACTIVATED">
        <function>3</function>
        <start_addr>159</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MTG_FCU_1_STATUS">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_FREQUENCY">
        <function>3</function>
        <start_addr>369</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_SUM">
        <function>3</function>
        <start_addr>449</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_FCU_19_TRIP">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_HARMONICS_THD_L1">
        <function>3</function>
        <start_addr>437</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_WATER_DETECTION_LEAK_ALARM_02">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_6_RETURN_AIR_TEMPERATURE_LOW_ALARM">
        <function>3</function>
        <start_addr>51</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETWORK_ROOM_2_FM_200_08_ALARM_16_1ST_ALARM">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_B_A1_STATUS">
        <function>3</function>
        <start_addr>171</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRAH_1_STATUS">
        <function>3</function>
        <start_addr>180</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A8_2_VOLTAGE">
        <function>3</function>
        <start_addr>298</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B4_2_CURRENT">
        <function>3</function>
        <start_addr>314</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NOC_FCU_2_MODE">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_7_FAULT">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4D_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>154</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_1_CURRENT_2">
        <function>3</function>
        <start_addr>230</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A9_2_POWER">
        <function>3</function>
        <start_addr>305</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MIST_WATER_TANK_HIGH_LEVEL">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_6_RELATIVE_HUMIDITY_">
        <function>3</function>
        <start_addr>54</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETWORK_ROOM_1_FM_200_07_ALARM_13_FAULT">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_B_VOLTAGE_3">
        <function>3</function>
        <start_addr>227</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_6_CHILLED_WATER_VALVE">
        <function>3</function>
        <start_addr>55</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_MSB_B_TRIP">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B1_2_CURRENT">
        <function>3</function>
        <start_addr>309</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4C_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>148</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRACH_1_SUPPLY_AIR_TEMP">
        <function>3</function>
        <start_addr>182</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_FCU_19_STATUS">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_FM200_01_ALARM_01_FAULT">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_DB_LP_TRIP">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_L1">
        <function>3</function>
        <start_addr>446</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_FREQUENCY">
        <function>3</function>
        <start_addr>391</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_3_POWER_LOSS">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_B_CURRENT_1">
        <function>3</function>
        <start_addr>222</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_L3N">
        <function>3</function>
        <start_addr>332</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="PUE_">
        <function>3</function>
        <start_addr>329</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_HARMONICS_THD_L3">
        <function>3</function>
        <start_addr>461</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_CURRENT_L1">
        <function>3</function>
        <start_addr>380</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_5_FAULT">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_2_CHILLED_WATER_VALVE">
        <function>3</function>
        <start_addr>27</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_HARMONICS_THD_L1">
        <function>3</function>
        <start_addr>349</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_VESDA_ALARM_12">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EXISTING_CRAH_1_STATUS">
        <function>3</function>
        <start_addr>184</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_FCU_TEMPERATURE">
        <function>3</function>
        <start_addr>207</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_HARMONICS_THD_L2">
        <function>3</function>
        <start_addr>350</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_FCU_02_STATUS">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_REAL_POWER_3">
        <function>3</function>
        <start_addr>386</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="COMP_ROOM_VESDA_ALERT_09">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRAH_1_GENERAL_AGGREGATED_ALARM">
        <function>3</function>
        <start_addr>181</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EXISTING_CRACH_1_SUPPLY_AIR_TEMP">
        <function>3</function>
        <start_addr>186</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MTG_FCU_1_TRIP">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_L1L2">
        <function>3</function>
        <start_addr>443</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_1_PUMP_DIFFERENTIAL_PRESSURE">
        <function>3</function>
        <start_addr>72</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A9_1_HUMIDITY">
        <function>3</function>
        <start_addr>257</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MIST_WATER_PUMP_2_TRIP">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_REAL_POWER_1">
        <function>3</function>
        <start_addr>384</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_POWER_FACTOR_L3">
        <function>3</function>
        <start_addr>456</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_3">
        <function>3</function>
        <start_addr>452</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_2_POWER_LOSS">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A2_1_POWER">
        <function>3</function>
        <start_addr>240</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_HARMONICS_THD_L2">
        <function>3</function>
        <start_addr>394</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_WDS_SECOND_LEAK_ALARM">
        <function>3</function>
        <start_addr>203</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_UPS_B1_FAULT">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_CURRENT_L1">
        <function>3</function>
        <start_addr>358</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_5_AIR_FLOW">
        <function>3</function>
        <start_addr>49</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_2_RETURN_AIR_TEMPERATURE_LOW_ALARM">
        <function>3</function>
        <start_addr>23</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_L2N">
        <function>3</function>
        <start_addr>353</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A3_1_POWER">
        <function>3</function>
        <start_addr>245</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_A_A3_STATUS">
        <function>3</function>
        <start_addr>169</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ITSS_SERVER_ROOM_DOOR_1_ALARM">
        <function>3</function>
        <start_addr>9</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A9_2_HUMIDITY">
        <function>3</function>
        <start_addr>302</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A8_1_TEMPERATURE">
        <function>3</function>
        <start_addr>251</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_L3L1">
        <function>3</function>
        <start_addr>357</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_POWER_FACTOR_L3">
        <function>3</function>
        <start_addr>346</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_5_FAN_SPEED">
        <function>3</function>
        <start_addr>50</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_XDP_RUN_STATUS">
        <function>3</function>
        <start_addr>164</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_FCU_19_OUTPUT">
        <function>3</function>
        <start_addr>328</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_L3">
        <function>3</function>
        <start_addr>448</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_DOOR_1_ALARM">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B10_1_POWER">
        <function>3</function>
        <start_addr>280</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A8_1_CURRENT">
        <function>3</function>
        <start_addr>254</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_B_CURRENT_3">
        <function>3</function>
        <start_addr>224</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_BTU_RETURN_TEMPERATURE">
        <function>3</function>
        <start_addr>214</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="PRE_ACTION_SPRINKLER_FAULT">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_08_MODE">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MIST_CONTROL_PANEL_TRIP">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1C_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>102</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B10_2_POWER">
        <function>3</function>
        <start_addr>325</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_REAL_POWER_2">
        <function>3</function>
        <start_addr>363</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1B_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>96</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_1_SECONDARY_TEMPERATURE_T2B">
        <function>3</function>
        <start_addr>67</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_B_VOLTAGE_1">
        <function>3</function>
        <start_addr>225</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_POWER_FACTOR_L1">
        <function>3</function>
        <start_addr>432</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A7_1_CURRENT">
        <function>3</function>
        <start_addr>249</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_CURRENT_L3">
        <function>3</function>
        <start_addr>338</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_DOOR_ALARM">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_7_RETURN_AIR_TEMPERATURE_LOW_ALARM">
        <function>3</function>
        <start_addr>58</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DB_FOR_DRYCOOLER">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_05_STATUS">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1C_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>100</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_WMCS_SECOND_ALARM">
        <function>3</function>
        <start_addr>157</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A2_2_VOLTAGE">
        <function>3</function>
        <start_addr>283</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A9_2_TEMPERATURE">
        <function>3</function>
        <start_addr>301</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_5B_TRIP">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_1_VOLTAGE_2">
        <function>3</function>
        <start_addr>233</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETWORK_ROOM_1_FM_200_07_GAS_DISCHARGE_07">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_L1N">
        <function>3</function>
        <start_addr>330</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_HARMONICS_THD_L1">
        <function>3</function>
        <start_addr>371</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_10_TRIP">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_4_POWER_LOSS">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_3_FAN_SPEED">
        <function>3</function>
        <start_addr>36</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_15_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A8_2_POWER">
        <function>3</function>
        <start_addr>300</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_MSB_A_TRIP">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_TRIP">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_POWER_FACTOR_L1">
        <function>3</function>
        <start_addr>388</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_4_RELATIVE_HUMIDITY_">
        <function>3</function>
        <start_addr>40</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_A_CURRENT_1">
        <function>3</function>
        <start_addr>215</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A7_2_HUMIDITY">
        <function>3</function>
        <start_addr>292</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_15_TRIP">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_EMSB_TRIP">
        <function>3</function>
        <start_addr>326</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B7_2_CURRENT">
        <function>3</function>
        <start_addr>319</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_3">
        <function>3</function>
        <start_addr>430</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_04_TRIP">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_7_AIR_FLOW">
        <function>3</function>
        <start_addr>63</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_B_A3_TRIP">
        <function>3</function>
        <start_addr>173</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3C_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>133</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_POWER_FACTOR_L2">
        <function>3</function>
        <start_addr>367</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FCU_07_MODE">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_2_SUPPLY_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>25</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2A_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>109</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_VESDA_05_ALERT">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_POWER_FACTOR_L3">
        <function>3</function>
        <start_addr>390</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_1">
        <function>3</function>
        <start_addr>428</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_7_SUPPLY_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>60</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3A_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>124</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_L3L1">
        <function>3</function>
        <start_addr>379</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_1_AIR_FLOW">
        <function>3</function>
        <start_addr>21</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_EXHAUST_FAN_01_ALARM">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3C_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>132</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_WDS_FIRST_LEAK_LOCATION">
        <function>3</function>
        <start_addr>202</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_BTU_VOLUMN_FLOW">
        <function>3</function>
        <start_addr>211</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3C_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>132</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DRY_COOLER_1_STATUS">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3A_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>124</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1D_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>106</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3D_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>137</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_REAL_POWER_1">
        <function>3</function>
        <start_addr>406</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_FCU_19_MODE">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_3_PRIMARY_TEMPERATURE_T1">
        <function>3</function>
        <start_addr>83</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FM_200_04_ALARM_08_ALARM">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_REAL_ENERGY_L1L3">
        <function>3</function>
        <start_addr>462</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
	  
	  
	  
      <value_ref_id valid="ITSS_SERVER_ROOM_FM200_05_ALARM_10_11ST_ALARM">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B7_1_HUMIDITY">
        <function>3</function>
        <start_addr>272</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="BOA_FCU_1_MODE">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B4_1_POWER">
        <function>3</function>
        <start_addr>270</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_4_AIR_FLOW">
        <function>3</function>
        <start_addr>42</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_2_SECONDARY_TEMPERATURE">
        <function>3</function>
        <start_addr>77</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_SERVER_ROOM_DOOR_1_ALARM">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_15_STATUS">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_L1L2">
        <function>3</function>
        <start_addr>355</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_4_SUPPLY_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>39</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_WDS_SECOND_LEAK_LOCATION">
        <function>3</function>
        <start_addr>204</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_L1N">
        <function>3</function>
        <start_addr>396</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_3_RETURN_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>31</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2B_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>113</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A3_1_CURRENT">
        <function>3</function>
        <start_addr>244</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_3_FAULT">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_BTU_ACCUMULATED_VOLUME">
        <function>3</function>
        <start_addr>212</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_05_TRIP">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_UPS_A1_BATTERY_DISCHARGE">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MAIN_FIRE_ALARM">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_A_VOLTAGE_1">
        <function>3</function>
        <start_addr>218</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_2_PRIMARY_TEMPERATURE_T1">
        <function>3</function>
        <start_addr>74</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EDFS_FAULT">
        <function>3</function>
        <start_addr>160</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EXISTING_CRACH_2_RETURN_AIR_HUMIDITY">
        <function>3</function>
        <start_addr>199</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DVR_SIGNAL_LOSS_02">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_3_CHILLED_WATER_VALVE">
        <function>3</function>
        <start_addr>34</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_1_PRIMARY_FLOW_RATE">
        <function>3</function>
        <start_addr>73</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1A_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>92</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2B_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>112</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MTG_FCU_1_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B4_1_VOLTAGE">
        <function>3</function>
        <start_addr>268</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_5_RETURN_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>45</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2A_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>108</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_L1L2">
        <function>3</function>
        <start_addr>399</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_5_RETURN_AIR_TEMPERATURE_HIGH_ALARM">
        <function>3</function>
        <start_addr>44</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_FCU_TRIP">
        <function>3</function>
        <start_addr>206</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_L3L1">
        <function>3</function>
        <start_addr>335</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_3_AIR_FLOW">
        <function>3</function>
        <start_addr>35</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3A_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>125</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_2_ROOM_TEMPERATURE_T3">
        <function>3</function>
        <start_addr>78</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1B_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>96</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_UPS_A3_FAULT">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_FM_200_09_GAS_DISCHARGE_09">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_4_FAN_SPEED">
        <function>3</function>
        <start_addr>43</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="WATER_PUMP_1_STATUS">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A8_1_VOLTAGE">
        <function>3</function>
        <start_addr>253</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B7_1_VOLTAGE">
        <function>3</function>
        <start_addr>273</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_HYDROGEN_DETECTION">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4C_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>149</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_HARMONICS_THD_L2">
        <function>3</function>
        <start_addr>416</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NOC_FCU_2_TRIP">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_1_SUPPLY_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>18</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_BTU_ACCUMULATED_ENERGY">
        <function>3</function>
        <start_addr>210</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_HARMONICS_THD_L1">
        <function>3</function>
        <start_addr>459</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_L2L3">
        <function>3</function>
        <start_addr>400</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_3_RETURN_AIR_TEMPERATURE_HIGH_ALARM">
        <function>3</function>
        <start_addr>30</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3D_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>136</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_5_POWER_LOSS">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="CHILLED_WATER_FLOW_ALARM">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="PRE_ACTION_SPRINKLER_ALARM">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DVR_SIGNAL_LOSS_03">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B1_1_HUMIDITY">
        <function>3</function>
        <start_addr>262</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DB_STAGING_TRIP">
        <function>3</function>
        <start_addr>326</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="COMP_ROOM_DOOR_ALARM">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_7_RETURN_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>59</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3A_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>126</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A9_1_POWER">
        <function>3</function>
        <start_addr>260</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_L3N">
        <function>3</function>
        <start_addr>376</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="WATER_PUMP_2_STATUS">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_1_FAN_SPEED">
        <function>3</function>
        <start_addr>22</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DEHUMIDIFIER_ALARM">
        <function>3</function>
        <start_addr>326</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B10_1_HUMIDITY">
        <function>3</function>
        <start_addr>277</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_REAL_POWER_1">
        <function>3</function>
        <start_addr>340</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EDFS_ACTION">
        <function>3</function>
        <start_addr>162</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_2_SECONDARY_TEMPERATURE_T2A">
        <function>3</function>
        <start_addr>75</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_L1L2">
        <function>3</function>
        <start_addr>377</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_2_POWER_LOSS">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_3_FAULT">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_POWER_FACTOR_L2">
        <function>3</function>
        <start_addr>411</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_POWER_FACTOR_L1">
        <function>3</function>
        <start_addr>344</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_08_TRIP">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A9_1_TEMPERATURE">
        <function>3</function>
        <start_addr>256</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_VESDA_07_ALARM">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MIST_WATER_PUMP_1_TRIP">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_L1">
        <function>3</function>
        <start_addr>424</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_HARMONICS_THD_L3">
        <function>3</function>
        <start_addr>373</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_1_POWER_LOSS">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_EXHAUST_FAN_01_STATUS">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_POWER_FACTOR_L2">
        <function>3</function>
        <start_addr>433</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="WATER_PUMP_TRIP">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_2_SECONDARY_TEMPERATURE_T2B">
        <function>3</function>
        <start_addr>76</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B4_2_POWER">
        <function>3</function>
        <start_addr>315</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_L2N">
        <function>3</function>
        <start_addr>397</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A3_2_VOLTAGE">
        <function>3</function>
        <start_addr>288</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A3_2_TEMPERATURE">
        <function>3</function>
        <start_addr>286</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_16_STATUS">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_2">
        <function>3</function>
        <start_addr>429</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_04_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_FCU_STATUS">
        <function>3</function>
        <start_addr>205</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EXISTING_CRACH_1_RETURN_AIR_HUMIDITY">
        <function>3</function>
        <start_addr>187</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_A_A3_TRIP">
        <function>3</function>
        <start_addr>170</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_4_FAULT">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="COMP_ROOM_FM_200_06_GAS_DISCHARGE_06">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_POWER_2">
        <function>3</function>
        <start_addr>451</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_CURRENT_L2">
        <function>3</function>
        <start_addr>337</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A2_1_TEMPERATURE">
        <function>3</function>
        <start_addr>236</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FCU_06_STATUS">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NOC_FCU_1_TRIP">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DVR_SIGNAL_LOSS_04">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_SUM">
        <function>3</function>
        <start_addr>427</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_L3N">
        <function>3</function>
        <start_addr>442</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_VESDA_07_ALERT">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4B_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>146</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_UPS_B2_BATTERY_DISCHARGE">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FCU_07_TRIP">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_04_MODE">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_L3L1">
        <function>3</function>
        <start_addr>445</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A3_1_TEMPERATURE">
        <function>3</function>
        <start_addr>241</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DEHUMIDIFIER_TRIP">
        <function>3</function>
        <start_addr>326</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A8_2_HUMIDITY">
        <function>3</function>
        <start_addr>297</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_VESDA_FAULT_03">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3C_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>134</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A2_2_POWER">
        <function>3</function>
        <start_addr>285</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="COMP_ROOM_VESDA_ALARM_09">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DVR_SIGNAL_LOSS_01">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_UPS_A3_BATTERY_DISCHARGE">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_B_A3_STATUS">
        <function>3</function>
        <start_addr>172</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B10_1_CURRENT">
        <function>3</function>
        <start_addr>279</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EXISTING_CRACH_2_SUPPLY_AIR_TEMP">
        <function>3</function>
        <start_addr>198</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A7_2_CURRENT">
        <function>3</function>
        <start_addr>294</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_L3N">
        <function>3</function>
        <start_addr>420</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_L1L2">
        <function>3</function>
        <start_addr>421</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B10_2_HUMIDITY">
        <function>3</function>
        <start_addr>322</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_2_PRIMARY_FLOW_RATE">
        <function>3</function>
        <start_addr>82</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A7_1_TEMPERATURE">
        <function>3</function>
        <start_addr>246</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_FCU_01_TRIP">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_REAL_ENERGY_L1L3">
        <function>3</function>
        <start_addr>464</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_2_RELATIVE_HUMIDITY_">
        <function>3</function>
        <start_addr>26</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_7_FAN_SPEED">
        <function>3</function>
        <start_addr>64</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_REAL_POWER_3">
        <function>3</function>
        <start_addr>408</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_1_CHILLED_WATER_VALVE">
        <function>3</function>
        <start_addr>20</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_REAL_POWER_1">
        <function>3</function>
        <start_addr>362</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B7_2_POWER">
        <function>3</function>
        <start_addr>320</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DC_AC_2_TRIP">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B10_2_CURRENT">
        <function>3</function>
        <start_addr>324</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_17_MODE">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_6_RETURN_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>52</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_WDS_FIRST_LEAK_ALARM">
        <function>3</function>
        <start_addr>201</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B1_2_VOLTAGE">
        <function>3</function>
        <start_addr>308</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_VESDA_ALERT_01">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FM200_10_ALARM_05_FAULT">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A9_1_CURRENT">
        <function>3</function>
        <start_addr>259</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_FCU_18_STATUS">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_05_MODE">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_POWER_FACTOR_L3">
        <function>3</function>
        <start_addr>434</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B7_2_HUMIDITY">
        <function>3</function>
        <start_addr>317</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FM_200_04_GAS_DISCHARGE_04">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_CURRENT_L2">
        <function>3</function>
        <start_addr>381</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_L1N">
        <function>3</function>
        <start_addr>418</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_TRIP">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4A_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>140</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2C_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>116</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_08_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETOWRK_ROOM_2_DOOR_ALARM">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2D_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>122</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_3_PRIMARY_FLOW_RATE">
        <function>3</function>
        <start_addr>91</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3D_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>138</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_HARMONICS_THD_L3">
        <function>3</function>
        <start_addr>351</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETWORK_ROOM_2_FM_200_8_ALARM_15_FAULT">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_L3N">
        <function>3</function>
        <start_addr>354</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_3_ROOM_TEMPERATURE_T3">
        <function>3</function>
        <start_addr>87</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1D_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>104</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_HARMONICS_THD_L3">
        <function>3</function>
        <start_addr>439</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_08_STATUS">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_DOOR_ALARM">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_HARMONICS_THD_L1">
        <function>3</function>
        <start_addr>393</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_04_STATUS">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_DOOR_ALARM">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_4_RETURN_AIR_TEMPERATURE_LOW_ALARM">
        <function>3</function>
        <start_addr>37</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1C_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>101</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B4_2_VOLTAGE">
        <function>3</function>
        <start_addr>313</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A9_2_CURRENT">
        <function>3</function>
        <start_addr>304</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FRESH_AIR_FAN_01_STATUS">
        <function>3</function>
        <start_addr>7</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_REAL_ENERGY_L1L3">
        <function>3</function>
        <start_addr>468</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_L2L3">
        <function>3</function>
        <start_addr>378</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_REAL_POWER_SUM">
        <function>3</function>
        <start_addr>387</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B4_2_TEMPERATURE">
        <function>3</function>
        <start_addr>311</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_WMCS_FIRST_ALARM">
        <function>3</function>
        <start_addr>156</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B10_1_TEMPERATURE">
        <function>3</function>
        <start_addr>276</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_1_SECONDARY_TEMPERATURE">
        <function>3</function>
        <start_addr>68</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A3_2_POWER">
        <function>3</function>
        <start_addr>290</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_FCU_01_MODE">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="BOA_FCU_1_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRACH_3_SUPPLY_AIR_TEMP">
        <function>3</function>
        <start_addr>194</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_HARMONICS_THD_L1">
        <function>3</function>
        <start_addr>415</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_2_FAULT">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4B_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>145</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A7_2_POWER">
        <function>3</function>
        <start_addr>295</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A2_1_CURRENT">
        <function>3</function>
        <start_addr>239</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_CURRENT_SUM">
        <function>3</function>
        <start_addr>383</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B4_1_TEMPERATURE">
        <function>3</function>
        <start_addr>266</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A7_1_VOLTAGE">
        <function>3</function>
        <start_addr>248</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_1_POWER_LOSS">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A8_2_TEMPERATURE">
        <function>3</function>
        <start_addr>296</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2D_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>120</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_6_POWER_LOSS">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2D_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>120</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_WATER_DETECTION_LEAK_ALARM_03">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_POWER_FACTOR_L3">
        <function>3</function>
        <start_addr>412</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DRY_COOLER_3_STATUS">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_1_PRIMARY_TEMPERATURE_T1">
        <function>3</function>
        <start_addr>65</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_2_DEW_POINT">
        <function>3</function>
        <start_addr>80</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A7_2_TEMPERATURE">
        <function>3</function>
        <start_addr>291</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B1_2_POWER">
        <function>3</function>
        <start_addr>310</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A3_2_CURRENT">
        <function>3</function>
        <start_addr>289</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_1_DEW_POINT">
        <function>3</function>
        <start_addr>71</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_6_AIR_FLOW">
        <function>3</function>
        <start_addr>56</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="FCU_17_OUTPUT">
        <function>3</function>
        <start_addr>328</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRAH_3_STATUS">
        <function>3</function>
        <start_addr>192</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_DOOR_3_ALARM">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A2_1_HUMIDITY">
        <function>3</function>
        <start_addr>237</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_L2N">
        <function>3</function>
        <start_addr>441</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETWORK_ROOM_1_VESDA_ALERT_10">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_WMCS_FAULT">
        <function>3</function>
        <start_addr>158</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_3B_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>128</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_REAL_POWER_2">
        <function>3</function>
        <start_addr>407</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_03_TRIP">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_03_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_5_RETURN_AIR_TEMPERATURE_LOW_ALARM">
        <function>3</function>
        <start_addr>44</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_REAL_POWER_SUM">
        <function>3</function>
        <start_addr>343</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FM_200_02_ALARM_03_FAULT">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETWORK_ROOM_2_FM_200_08_GAS_DISCHARGE_08">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2A_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>110</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MTG_FCU_1_MODE">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1A_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>94</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_POWER_FACTOR_L2">
        <function>3</function>
        <start_addr>389</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_FREQUENCY">
        <function>3</function>
        <start_addr>435</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_3_SECONDARY_TEMPERATURE">
        <function>3</function>
        <start_addr>86</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_WATER_DETECTION_LEAK_ALARM_01">
        <function>3</function>
        <start_addr>2</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A2_2_HUMIDITY">
        <function>3</function>
        <start_addr>282</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A8_2_CURRENT">
        <function>3</function>
        <start_addr>299</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_1_ROOM_TEMPERATURE_T3">
        <function>3</function>
        <start_addr>69</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_FREQUENCY">
        <function>3</function>
        <start_addr>413</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_FCU_02_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_1_CURRENT_1">
        <function>3</function>
        <start_addr>229</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DOOR_ALARM">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NOC_FCU_1_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_DOOR_2_ALARM">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A7_2_VOLTAGE">
        <function>3</function>
        <start_addr>293</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_POWER_FACTOR_L1">
        <function>3</function>
        <start_addr>454</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_POWER_FACTOR_L3">
        <function>3</function>
        <start_addr>368</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_10_MODE">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_REAL_POWER_SUM">
        <function>3</function>
        <start_addr>431</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_2_FAULT">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DVR_SIGNAL_LOSS_05">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_L2N">
        <function>3</function>
        <start_addr>419</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_FREQUENCY">
        <function>3</function>
        <start_addr>457</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_CURRENT_L3">
        <function>3</function>
        <start_addr>382</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_VESDA_04_ALERT">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_FCU_03_STATUS">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2C_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>118</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRACH_3_RETURN_DEW_POINT">
        <function>3</function>
        <start_addr>195</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A3_2_HUMIDITY">
        <function>3</function>
        <start_addr>287</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_BTU_CHWS_TEMP">
        <function>3</function>
        <start_addr>477</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_7_RETURN_AIR_TEMPERATURE_HIGH_ALARM">
        <function>3</function>
        <start_addr>58</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETWORK_ROOM_2_VESDA_ALARM_11">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_4_RETURN_AIR_TEMPERATURE_HIGH_ALARM">
        <function>3</function>
        <start_addr>37</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ITSS_SERVER_ROOM_DOOR_2_ALARM">
        <function>3</function>
        <start_addr>9</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ITSS_SERVER_ROOM_WATER_DETECTION_LEAK_05_ALARM">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_FM200_GAS_DISCHARGE_01">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DC_AC_TRIP">
        <function>3</function>
        <start_addr>5</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_HARMONICS_THD_L2">
        <function>3</function>
        <start_addr>372</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B7_1_POWER">
        <function>3</function>
        <start_addr>275</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B1_1_CURRENT">
        <function>3</function>
        <start_addr>264</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_CURRENT_L2">
        <function>3</function>
        <start_addr>447</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="MIST_CONTROL_PANEL_JOCKEY_PUMP_TRIP">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_CDU_3_PUMP_DIFFERENTIAL_PRESSURE">
        <function>3</function>
        <start_addr>90</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_L1N">
        <function>3</function>
        <start_addr>374</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_2_RETURN_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>24</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A8_1_POWER">
        <function>3</function>
        <start_addr>255</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_5A_TRIP">
        <function>3</function>
        <start_addr>0</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_REAL_POWER_SUM">
        <function>3</function>
        <start_addr>409</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FCU_07_STATUS">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4B_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>144</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_2_FAN_SPEED">
        <function>3</function>
        <start_addr>29</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_EXISTING_CRAH_1_GENERAL_AGGREGATED_ALARM">
        <function>3</function>
        <start_addr>185</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_B_VOLTAGE_2">
        <function>3</function>
        <start_addr>226</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_REAL_ENERGY_L1L3">
        <function>3</function>
        <start_addr>472</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="WATER_MIST_DETECTION_SYSTEM_ALARM_01">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_POWER_FACTOR_L1">
        <function>3</function>
        <start_addr>366</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_B_CURRENT_2">
        <function>3</function>
        <start_addr>223</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B4_2_HUMIDITY">
        <function>3</function>
        <start_addr>312</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B1_2_TEMPERATURE">
        <function>3</function>
        <start_addr>306</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="BOA_FCU_1_STATUS">
        <function>3</function>
        <start_addr>13</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2B_PROBE_2_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>114</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5B_CURRENT_L3">
        <function>3</function>
        <start_addr>404</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_09_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_4_RETURN_AIR_TEMPERATURE">
        <function>3</function>
        <start_addr>38</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FM200_10_GAS_DISCHARGE_03">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NOC_FCU_1_MODE">
        <function>3</function>
        <start_addr>12</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_NEW_CRACH_2_SUPPLY_AIR_TEMP">
        <function>3</function>
        <start_addr>190</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_REAL_POWER_2">
        <function>3</function>
        <start_addr>385</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_FCU_01_STATUS">
        <function>3</function>
        <start_addr>4</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_1_VOLTAGE_1">
        <function>3</function>
        <start_addr>232</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="GENERATOR_TRIP_03">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B7_2_VOLTAGE">
        <function>3</function>
        <start_addr>318</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_L1N">
        <function>3</function>
        <start_addr>352</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="TAPE_ROOM_FCU_18_MODE">
        <function>3</function>
        <start_addr>15</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_B_REACTIVE_POWER">
        <function>3</function>
        <start_addr>228</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_1_STATUS">
        <function>3</function>
        <start_addr>1</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FCU_06_MODE">
        <function>3</function>
        <start_addr>6</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_1_CURRENT_3">
        <function>3</function>
        <start_addr>231</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_B4_1_HUMIDITY">
        <function>3</function>
        <start_addr>267</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_L2L3">
        <function>3</function>
        <start_addr>356</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="WATER_MIST_DETECTION_SYSTEM_ALARM_02">
        <function>3</function>
        <start_addr>3</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_1_FCU_09_STATUS">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_CURRENT_L2">
        <function>3</function>
        <start_addr>359</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4B_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>144</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A7_1_POWER">
        <function>3</function>
        <start_addr>250</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_PDU_1_A1_STATUS">
        <function>3</function>
        <start_addr>167</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ITSS_SERVER_ROOM_FM_200_05_GAS_DISCHARGE_05">
        <function>3</function>
        <start_addr>10</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_1_RETURN_AIR_TEMPERATURE_LOW_ALARM">
        <function>3</function>
        <start_addr>16</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_UPS_PDU_5A_HARMONICS_THD_L3">
        <function>3</function>
        <start_addr>395</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2B_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>112</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_XDP_ALARM">
        <function>3</function>
        <start_addr>165</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_REAL_ENERGY_L1L3">
        <function>3</function>
        <start_addr>470</start_addr>
        <quantity>2</quantity>
        <type>uint_32</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_2D_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>121</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_POWER_FACTOR_L2">
        <function>3</function>
        <start_addr>345</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_REAL_POWER_3">
        <function>3</function>
        <start_addr>364</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_SERVER_ROOM_DOOR_2_ALARM">
        <function>3</function>
        <start_addr>8</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_BTU_FLOW_RATE">
        <function>3</function>
        <start_addr>476</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4D_PROBE_1_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>152</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1B_CURRENT_SUM">
        <function>3</function>
        <start_addr>361</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DVR_SIGNAL_LOSS_06">
        <function>3</function>
        <start_addr>14</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_RACK_A2_2_CURRENT">
        <function>3</function>
        <start_addr>284</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PDU_1A_FREQUENCY">
        <function>3</function>
        <start_addr>347</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_5_CHILLED_WATER_VALVE">
        <function>3</function>
        <start_addr>48</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_4D_PROBE_2_HIGH_TEMPERATURE_ALARM">
        <function>3</function>
        <start_addr>152</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_NEW_POWER_RM_3_MSB_C_CURRENT_L2">
        <function>3</function>
        <start_addr>425</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_PCU_1_RETURN_AIR_TEMPERATURE_HIGH_ALARM">
        <function>3</function>
        <start_addr>16</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="DEHUMIDIFIER_MODE">
        <function>3</function>
        <start_addr>326</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_POWER_RM_2_DB_AC_HARMONICS_THD_L2">
        <function>3</function>
        <start_addr>460</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="ACRC_AND_NSCC_BATTERY_RM_FCU_07_OUTPUT">
        <function>3</function>
        <start_addr>327</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NSCC_DC_1A_PROBE_1_TEMPERATURE_READING">
        <function>3</function>
        <start_addr>93</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
      <value_ref_id valid="NETWORK_ROOM_1_VESDA_ALARM_10">
        <function>3</function>
        <start_addr>11</start_addr>
        <quantity>1</quantity>
        <type>uint_16</type>
      </value_ref_id>
    </modbus>
  </protocol>
</APC_DDF>
