<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="apc_ddf_1_6.xsl"?>
<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="schneider_electric_gutor_pxp_pxc"
	ddfname="Schneider Electric Gutor PXP/PXC"
	ddfversion="1"
	canremove="yes">
	<schemaVersion>1.6</schemaVersion>
    <device deviceid="schneider_electric_gutor_pxp_pxc_header">
		<setProductData ruleid="typedata" field="type">UPS</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
        <setProductData ruleid="vendordata" field="vendor">Schneider Electric</setProductData>
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
    </device>
	<device deviceid="schneider_electric_gutor_pxp_pxc_1p">
		
		<setProductData ruleid="modeldata" field="model">Gutor PXP/PXC 1P</setProductData>

        <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<alarmFlags ruleid="output-breaker-open">
			<value><getOid>OUTPUT_BREAKER_OPEN</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Output Breaker Open</activeText>
					<inactiveText>Output Breaker Open Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Output Breaker Open condition exists.</activeText>
					<inactiveText>Output Breaker Open condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="output-transformer-overtemperature">
			<value><getOid>OUTPUT_TRANSFORMER_OVERTEMPERATURE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Output Transformer Overtemperature</activeText>
					<inactiveText>Output Transformer Overtemperature Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Output Transformer Overtemperature condition exists.</activeText>
					<inactiveText>Output Transformer Overtemperature condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="output-transformer-temperature-sensor-fault">
			<value><getOid>OUTPUT_TRANSFORMER_TEMPERATURE_SENSOR_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Output Transformer Temperature Sensor Fault</activeText>
					<inactiveText>Output Transformer Temperature Sensor Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Output Transformer Temperature Sensor Fault condition exists.</activeText>
					<inactiveText>Output Transformer Temperature Sensor Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="general-output-fault">
			<value><getOid>GENERAL_OUTPUT_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>General Output Fault</activeText>
					<inactiveText>General Output Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A General Output Fault condition exists.</activeText>
					<inactiveText>General Output Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="output-rms-fault">
			<value><getOid>OUTPUT_RMS_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Output RMS Fault</activeText>
					<inactiveText>Output RMS Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Output RMS Fault condition exists.</activeText>
					<inactiveText>Output RMS Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="inverter-output-rms-fault">
			<value><getOid>INVERTER_OUTPUT_RMS_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Inverter Output RMS Fault</activeText>
					<inactiveText>Inverter Output RMS Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Inverter Output RMS Fault condition exists.</activeText>
					<inactiveText>Inverter Output RMS Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="output-overloaded">
			<value><getOid>OUTPUT_OVERLOADED</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Output Overloaded</activeText>
					<inactiveText>Output Overloaded Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Output Overloaded condition exists.</activeText>
					<inactiveText>Output Overloaded condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<numSensor ruleid="output-load">
			<type>pctofcapacity</type>
			<sensorId>OUTPUT_LOAD</sensorId>
			<value>
				<mult>
				<op><getOid>OUTPUT_LOAD</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Output Load</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		<numSensor ruleid="output-frequency">
			<type>frequency</type>
			<sensorId>OUTPUT_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>OUTPUT_FREQUENCY</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Output Frequency</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		<numSensor ruleid="output-voltage-phase-1-n">
			<type>voltage</type>
			<sensorId>OUTPUT_VOLTAGE_PHASE_1-N</sensorId>
			<value>
				<mult>
				<op><getOid>OUTPUT_VOLTAGE_PHASE_1-N</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Output Voltage Phase 1-N</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		<numSensor ruleid="output-current-phase-1">
			<type>amperage</type>
			<sensorId>OUTPUT_CURRENT_PHASE_1</sensorId>
			<value>
				<mult>
				<op><getOid>OUTPUT_CURRENT_PHASE_1</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Output Current Phase 1</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		<alarmFlags ruleid="battery-breaker-open">
			<value><getOid>BATTERY_BREAKER_OPEN</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Breaker Open</activeText>
					<inactiveText>Battery Breaker Open Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Breaker Open condition exists.</activeText>
					<inactiveText>Battery Breaker Open condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-temperature-warning">
			<value><getOid>BATTERY_TEMPERATURE_WARNING</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Temperature Warning</activeText>
					<inactiveText>Battery Temperature Warning Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Temperature Warning condition exists.</activeText>
					<inactiveText>Battery Temperature Warning condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-temperature-shutdown">
			<value><getOid>BATTERY_TEMPERATURE_SHUTDOWN</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Temperature Shutdown</activeText>
					<inactiveText>Battery Temperature Shutdown Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Temperature Shutdown condition exists.</activeText>
					<inactiveText>Battery Temperature Shutdown condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-warning-or-error">
			<value><getOid>BATTERY_WARNING_OR_ERROR</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Warning or Error</activeText>
					<inactiveText>Battery Warning or Error Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Warning or Error condition exists.</activeText>
					<inactiveText>Battery Warning or Error condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-earth-fault">
			<value><getOid>BATTERY_EARTH_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Earth Fault</activeText>
					<inactiveText>Battery Earth Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Earth Fault condition exists.</activeText>
					<inactiveText>Battery Earth Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-voltage-high-shutdown-(high-dc-shutdown)">
			<value><getOid>BATTERY_VOLTAGE_HIGH_SHUTDOWN_(HIGH_DC_SHUTDOWN)</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Voltage High Shutdown (High DC Shutdown)</activeText>
					<inactiveText>Battery Voltage High Shutdown (High DC Shutdown) Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Voltage High Shutdown (High DC Shutdown) condition exists.</activeText>
					<inactiveText>Battery Voltage High Shutdown (High DC Shutdown) condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-voltage-high-warning-(high-dc-warning)">
			<value><getOid>BATTERY_VOLTAGE_HIGH_WARNING_(HIGH_DC_WARNING)</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Voltage High Warning (High DC Warning)</activeText>
					<inactiveText>Battery Voltage High Warning (High DC Warning) Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Voltage High Warning (High DC Warning) condition exists.</activeText>
					<inactiveText>Battery Voltage High Warning (High DC Warning) condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-voltage-low-warning">
			<value><getOid>BATTERY_VOLTAGE_LOW_WARNING</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Voltage Low Warning</activeText>
					<inactiveText>Battery Voltage Low Warning Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Voltage Low Warning condition exists.</activeText>
					<inactiveText>Battery Voltage Low Warning condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-warning-low-shutdown">
			<value><getOid>BATTERY_WARNING_LOW_SHUTDOWN</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Warning Low Shutdown</activeText>
					<inactiveText>Battery Warning Low Shutdown Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Warning Low Shutdown condition exists.</activeText>
					<inactiveText>Battery Warning Low Shutdown condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-earth-fault-positive-pole">
			<value><getOid>BATTERY_EARTH_FAULT_POSITIVE_POLE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Earth Fault Positive Pole</activeText>
					<inactiveText>Battery Earth Fault Positive Pole Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Earth Fault Positive Pole condition exists.</activeText>
					<inactiveText>Battery Earth Fault Positive Pole condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-earth-fault-negative-pole">
			<value><getOid>BATTERY_EARTH_FAULT_NEGATIVE_POLE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Earth Fault Negative Pole</activeText>
					<inactiveText>Battery Earth Fault Negative Pole Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Earth Fault Negative Pole condition exists.</activeText>
					<inactiveText>Battery Earth Fault Negative Pole condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<numSensor ruleid="battery-current">
			<type>amperage</type>
			<sensorId>BATTERY_CURRENT</sensorId>
			<value>
				<mult>
				<op><getOid>BATTERY_CURRENT</getOid></op>
				<op>1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Battery Current</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		<numSensor ruleid="battery-voltage">
			<type>voltage</type>
			<sensorId>BATTERY_VOLTAGE</sensorId>
			<value>
				<mult>
				<op><getOid>BATTERY_VOLTAGE</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Battery Voltage</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		<numSensor ruleid="battery-temperature">
			<type>temp</type>
			<sensorId>BATTERY_TEMPERATURE</sensorId>
			<value>
				<getOid>BATTERY_TEMPERATURE</getOid>
			</value>
			<valueInc>1</valueInc>
			<label>Battery Temperature</label>
			<sensorSet>Battery</sensorSet>
		</numSensor>
		<alarmFlags ruleid="mains-breaker-open">
			<value><getOid>MAINS_BREAKER_OPEN</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Mains Breaker Open</activeText>
					<inactiveText>Mains Breaker Open Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Mains Breaker Open condition exists.</activeText>
					<inactiveText>Mains Breaker Open condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="mains-transformer-overtemperature">
			<value><getOid>MAINS_TRANSFORMER_OVERTEMPERATURE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Mains Transformer Overtemperature</activeText>
					<inactiveText>Mains Transformer Overtemperature Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Mains Transformer Overtemperature condition exists.</activeText>
					<inactiveText>Mains Transformer Overtemperature condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="mains-transformer-temperature-sensor-fault">
			<value><getOid>MAINS_TRANSFORMER_TEMPERATURE_SENSOR_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Mains Transformer Temperature Sensor Fault</activeText>
					<inactiveText>Mains Transformer Temperature Sensor Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Mains Transformer Temperature Sensor Fault condition exists.</activeText>
					<inactiveText>Mains Transformer Temperature Sensor Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="general-mains-fault">
			<value><getOid>GENERAL_MAINS_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>General Mains Fault</activeText>
					<inactiveText>General Mains Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A General Mains Fault condition exists.</activeText>
					<inactiveText>General Mains Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="mains-rms-fault">
			<value><getOid>MAINS_RMS_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Mains RMS Fault</activeText>
					<inactiveText>Mains RMS Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Mains RMS Fault condition exists.</activeText>
					<inactiveText>Mains RMS Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="mains-input-rms-fault">
			<value><getOid>MAINS_INPUT_RMS_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Mains Input RMS Fault</activeText>
					<inactiveText>Mains Input RMS Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Mains Input RMS Fault condition exists.</activeText>
					<inactiveText>Mains Input RMS Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<numSensor ruleid="mains-frequency">
			<type>frequency</type>
			<sensorId>MAINS_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>MAINS_FREQUENCY</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Mains Frequency</label>
			<sensorSet>Mains</sensorSet>
		</numSensor>
		<numSensor ruleid="mains-voltage-phase-1">
			<type>voltage</type>
			<sensorId>MAINS_VOLTAGE_PHASE_1</sensorId>
			<value>
				<mult>
				<op><getOid>MAINS_VOLTAGE_PHASE_1</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Mains Voltage Phase 1</label>
			<sensorSet>Mains</sensorSet>
		</numSensor>
		<numSensor ruleid="mains-voltage-phase-2">
			<type>voltage</type>
			<sensorId>MAINS_VOLTAGE_PHASE_2</sensorId>
			<value>
				<mult>
				<op><getOid>MAINS_VOLTAGE_PHASE_2</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Mains Voltage Phase 2</label>
			<sensorSet>Mains</sensorSet>
		</numSensor>
		<numSensor ruleid="mains-voltage-phase-3">
			<type>voltage</type>
			<sensorId>MAINS_VOLTAGE_PHASE_3</sensorId>
			<value>
				<mult>
				<op><getOid>MAINS_VOLTAGE_PHASE_3</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Mains Voltage Phase 3</label>
			<sensorSet>Mains</sensorSet>
		</numSensor>
		<numSensor ruleid="input-current-phase-1">
			<type>amperage</type>
			<sensorId>INPUT_CURRENT_PHASE_1</sensorId>
			<value>
				<mult>
				<op><getOid>INPUT_CURRENT_PHASE_1</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Input Current Phase 1</label>
			<sensorSet>Mains</sensorSet>
		</numSensor>
		<numSensor ruleid="input-current-phase-2">
			<type>amperage</type>
			<sensorId>INPUT_CURRENT_PHASE_2</sensorId>
			<value>
				<mult>
				<op><getOid>INPUT_CURRENT_PHASE_2</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Input Current Phase 2</label>
			<sensorSet>Mains</sensorSet>
		</numSensor>
		<numSensor ruleid="input-current-phase-3">
			<type>amperage</type>
			<sensorId>INPUT_CURRENT_PHASE_3</sensorId>
			<value>
				<mult>
				<op><getOid>INPUT_CURRENT_PHASE_3</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Input Current Phase 3</label>
			<sensorSet>Mains</sensorSet>
		</numSensor>
		<alarmFlags ruleid="bypass-breaker-open">
			<value><getOid>BYPASS_BREAKER_OPEN</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Bypass Breaker Open</activeText>
					<inactiveText>Bypass Breaker Open Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Bypass Breaker Open condition exists.</activeText>
					<inactiveText>Bypass Breaker Open condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="bypass-transformer-overtemperature">
			<value><getOid>BYPASS_TRANSFORMER_OVERTEMPERATURE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Bypass Transformer Overtemperature</activeText>
					<inactiveText>Bypass Transformer Overtemperature Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Bypass Transformer Overtemperature condition exists.</activeText>
					<inactiveText>Bypass Transformer Overtemperature condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="bypass-transformer-temperature-sensor-fault">
			<value><getOid>BYPASS_TRANSFORMER_TEMPERATURE_SENSOR_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Bypass Transformer Temperature Sensor Fault</activeText>
					<inactiveText>Bypass Transformer Temperature Sensor Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Bypass Transformer Temperature Sensor Fault condition exists.</activeText>
					<inactiveText>Bypass Transformer Temperature Sensor Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="general-bypass-fault">
			<value><getOid>GENERAL_BYPASS_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>General Bypass Fault</activeText>
					<inactiveText>General Bypass Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A General Bypass Fault condition exists.</activeText>
					<inactiveText>General Bypass Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="bypass-rms-fault">
			<value><getOid>BYPASS_RMS_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Bypass RMS Fault</activeText>
					<inactiveText>Bypass RMS Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Bypass RMS Fault condition exists.</activeText>
					<inactiveText>Bypass RMS Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="bypass-input-rms-fault">
			<value><getOid>BYPASS_INPUT_RMS_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Bypass Input RMS Fault</activeText>
					<inactiveText>Bypass Input RMS Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Bypass Input RMS Fault condition exists.</activeText>
					<inactiveText>Bypass Input RMS Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<numSensor ruleid="bypass-frequency">
			<type>frequency</type>
			<sensorId>BYPASS_FREQUENCY</sensorId>
			<value>
				<mult>
				<op><getOid>BYPASS_FREQUENCY</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Bypass Frequency</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>
		<numSensor ruleid="bypass-voltage-phase-1-n">
			<type>voltage</type>
			<sensorId>BYPASS_VOLTAGE_PHASE_1-N</sensorId>
			<value>
				<mult>
				<op><getOid>BYPASS_VOLTAGE_PHASE_1-N</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Bypass Voltage Phase 1-N</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>
		<alarmFlags ruleid="system-switched-on">
			<value><getOid>SYSTEM_SWITCHED_ON</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>System Switched On</activeText>
					<inactiveText>System Switched On Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A System Switched On condition exists.</activeText>
					<inactiveText>System Switched On condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="standby">
			<value><getOid>STANDBY</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Standby</activeText>
					<inactiveText>Standby Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Standby condition exists.</activeText>
					<inactiveText>Standby condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="normal-operation">
			<value><getOid>NORMAL_OPERATION</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Normal Operation</activeText>
					<inactiveText>Normal Operation Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Normal Operation condition exists.</activeText>
					<inactiveText>Normal Operation condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="battery-operation">
			<value><getOid>BATTERY_OPERATION</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Battery Operation</activeText>
					<inactiveText>Battery Operation Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Battery Operation condition exists.</activeText>
					<inactiveText>Battery Operation condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="bypass-operation">
			<value><getOid>BYPASS_OPERATION</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Bypass Operation</activeText>
					<inactiveText>Bypass Operation Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Bypass Operation condition exists.</activeText>
					<inactiveText>Bypass Operation condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="initial-charge">
			<value><getOid>INITIAL_CHARGE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Initial Charge</activeText>
					<inactiveText>Initial Charge Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Initial Charge condition exists.</activeText>
					<inactiveText>Initial Charge condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="float-charge">
			<value><getOid>FLOAT_CHARGE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Float Charge</activeText>
					<inactiveText>Float Charge Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Float Charge condition exists.</activeText>
					<inactiveText>Float Charge condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="boost-charge">
			<value><getOid>BOOST_CHARGE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Boost Charge</activeText>
					<inactiveText>Boost Charge Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Boost Charge condition exists.</activeText>
					<inactiveText>Boost Charge condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="cyclic-charge">
			<value><getOid>CYCLIC_CHARGE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Cyclic Charge</activeText>
					<inactiveText>Cyclic Charge Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Cyclic Charge condition exists.</activeText>
					<inactiveText>Cyclic Charge condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="temporary-static-bypass">
			<value><getOid>TEMPORARY_STATIC_BYPASS</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Temporary Static Bypass</activeText>
					<inactiveText>Temporary Static Bypass Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Temporary Static Bypass condition exists.</activeText>
					<inactiveText>Temporary Static Bypass condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="requested-static-bypass">
			<value><getOid>REQUESTED_STATIC_BYPASS</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Requested Static Bypass</activeText>
					<inactiveText>Requested Static Bypass Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Requested Static Bypass condition exists.</activeText>
					<inactiveText>Requested Static Bypass condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="sbs-error">
			<value><getOid>SBS_ERROR</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>SBS Error</activeText>
					<inactiveText>SBS Error Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A SBS Error condition exists.</activeText>
					<inactiveText>SBS Error condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="manual-bypass-switch-in-position-test">
			<value><getOid>MANUAL_BYPASS_SWITCH_IN_POSITION_TEST</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Manual Bypass Switch in Position TEST</activeText>
					<inactiveText>Manual Bypass Switch in Position TEST Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Manual Bypass Switch in Position TEST condition exists.</activeText>
					<inactiveText>Manual Bypass Switch in Position TEST condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="manual-bypass-switch-in-position-bypass">
			<value><getOid>MANUAL_BYPASS_SWITCH_IN_POSITION_BYPASS</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Manual Bypass Switch in Position BYPASS</activeText>
					<inactiveText>Manual Bypass Switch in Position BYPASS Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Manual Bypass Switch in Position BYPASS condition exists.</activeText>
					<inactiveText>Manual Bypass Switch in Position BYPASS condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="manual-bypass-switch-in-position-auto">
			<value><getOid>MANUAL_BYPASS_SWITCH_IN_POSITION_AUTO</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Manual Bypass Switch in Position AUTO</activeText>
					<inactiveText>Manual Bypass Switch in Position AUTO Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Manual Bypass Switch in Position AUTO condition exists.</activeText>
					<inactiveText>Manual Bypass Switch in Position AUTO condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="overtemperature-in-pm-or-transformers">
			<value><getOid>OVERTEMPERATURE_IN_PM_OR_TRANSFORMERS</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Overtemperature in PM or Transformers</activeText>
					<inactiveText>Overtemperature in PM or Transformers Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Overtemperature in PM or Transformers condition exists.</activeText>
					<inactiveText>Overtemperature in PM or Transformers condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="fan-failure">
			<value><getOid>FAN_FAILURE</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Fan Failure</activeText>
					<inactiveText>Fan Failure Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Fan Failure condition exists.</activeText>
					<inactiveText>Fan Failure condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="emergency-power-off-epo">
			<value><getOid>EMERGENCY_POWER_OFF_EPO</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Emergency Power Off (EPO)</activeText>
					<inactiveText>Emergency Power Off (EPO) Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Emergency Power Off (EPO) condition exists.</activeText>
					<inactiveText>Emergency Power Off (EPO) condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="psu-fault">
			<value><getOid>PSU_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>PSU Fault</activeText>
					<inactiveText>PSU Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A PSU Fault condition exists.</activeText>
					<inactiveText>PSU Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="rectifier-fault">
			<value><getOid>RECTIFIER_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Rectifier Fault</activeText>
					<inactiveText>Rectifier Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>A Rectifier Fault condition exists.</activeText>
					<inactiveText>Rectifier Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="inverter-fault">
			<value><getOid>INVERTER_FAULT</getOid></value>
			<alarmFlagsTest mask="1" match="1">
				<name>
					<activeText>Inverter Fault</activeText>
					<inactiveText>Inverter Fault Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>System</category>
				<description>
					<activeText>An Inverter Fault condition exists.</activeText>
					<inactiveText>Inverter Fault condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<numSensor ruleid="system-load-percent-of-va">
			<type>pctofcapacity</type>
			<sensorId>SYSTEM_LOAD_PERCENT_OF_VA</sensorId>
			<value>
				<mult>
				<op><getOid>SYSTEM_LOAD_PERCENT_OF_VA</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>System Load (% of VA)</label>
			<sensorSet>System</sensorSet>
		</numSensor>
		<numSensor ruleid="system-load-percent-of-watts">
			<type>pctofcapacity</type>
			<sensorId>SYSTEM_LOAD_PERCENT_OF_WATTS</sensorId>
			<value>
				<mult>
				<op><getOid>SYSTEM_LOAD_PERCENT_OF_WATTS</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>System Load (% of W)</label>
			<sensorSet>System</sensorSet>
		</numSensor>
		<numSensor ruleid="apparent-system-load">
			<type>pctofcapacity</type>
			<sensorId>APPARENT_SYSTEM_LOAD</sensorId>
			<value>
				<mult>
				<op><getOid>APPARENT_SYSTEM_LOAD</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Apparent System Load</label>
			<sensorSet>System</sensorSet>
		</numSensor>
		<numSensor ruleid="real-system-load">
			<type>pctofcapacity</type>
			<sensorId>REAL_SYSTEM_LOAD</sensorId>
			<value>
				<mult>
				<op><getOid>REAL_SYSTEM_LOAD</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Real System Load</label>
			<sensorSet>System</sensorSet>
		</numSensor>
		<stateSensor ruleid="common-alarm">
			<type>num</type>
			<sensorId>COMMON_ALARM</sensorId>
			<value>
                <mapValue mapid="common-alarm-vm">
                    <formatNumber>
                        <bitwise_and>
                            <op>
                                <right_shift>
                                    <op><getOid>COMMON_ALARM</getOid></op>
                                    <op>11</op>
                                </right_shift>
                            </op>
                            <op>1</op>
                        </bitwise_and>
                    </formatNumber>
                </mapValue>
			</value>
			<valueInc>1</valueInc>
			<label>Common Alarm</label>
            <enum>common-alarm-em</enum>
			<sensorSet>System</sensorSet>
		</stateSensor>

        <valueMap ruleid="common-alarm-vm">
            <valueIn>1</valueIn><valueOut>1</valueOut>
            <valueIn>*</valueIn><valueOut>0</valueOut>
        </valueMap>

        <enumMap ruleid="common-alarm-em">
            <label>Inactive</label>
            <label>Active</label>
        </enumMap>
	</device>

    <device deviceid="schneider_electric_gutor_pxp_pxc_3p">
        <oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
        <oidMustExist ruleid="isThreePhase" oid="OUTPUT_VOLTAGE_PHASE_3-N"/>

        <suppressRule ruleid="stomp1PModelName" suppressid="schneider_electric_gutor_pxp_pxc/schneider_electric_gutor_pxp_pxc_1p/modeldata"/>
        <setProductData ruleid="modeldata" field="model">Gutor PXP/PXC 3P</setProductData>

        <numSensor ruleid="output-voltage-phase-2-n">
			<type>voltage</type>
			<sensorId>OUTPUT_VOLTAGE_PHASE_2-N</sensorId>
			<value>
				<mult>
				<op><getOid>OUTPUT_VOLTAGE_PHASE_2-N</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Output Voltage Phase 2-N</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
        <numSensor ruleid="output-voltage-phase-3-n">
			<type>voltage</type>
			<sensorId>OUTPUT_VOLTAGE_PHASE_3-N</sensorId>
			<value>
				<mult>
				<op><getOid>OUTPUT_VOLTAGE_PHASE_3-N</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Output Voltage Phase 3-N</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		<numSensor ruleid="output-current-phase-2">
			<type>amperage</type>
			<sensorId>OUTPUT_CURRENT_PHASE_2</sensorId>
			<value>
				<mult>
				<op><getOid>OUTPUT_CURRENT_PHASE_2</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Output Current Phase 2</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		<numSensor ruleid="output-current-phase-3">
			<type>amperage</type>
			<sensorId>OUTPUT_CURRENT_PHASE_3</sensorId>
			<value>
				<mult>
				<op><getOid>OUTPUT_CURRENT_PHASE_3</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Output Current Phase 3</label>
			<sensorSet>Output</sensorSet>
		</numSensor>
		<numSensor ruleid="bypass-voltage-phase-2-n">
			<type>voltage</type>
			<sensorId>BYPASS_VOLTAGE_PHASE_2-N</sensorId>
			<value>
				<mult>
				<op><getOid>BYPASS_VOLTAGE_PHASE_2-N</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Bypass Voltage Phase 2-N</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>
		<numSensor ruleid="bypass-voltage-phase-3-n">
			<type>voltage</type>
			<sensorId>BYPASS_VOLTAGE_PHASE_3-N</sensorId>
			<value>
				<mult>
				<op><getOid>BYPASS_VOLTAGE_PHASE_3-N</getOid></op>
				<op>0.1</op>
				</mult>
			</value>
			<valueInc>1</valueInc>
			<label>Bypass Voltage Phase 3-N</label>
			<sensorSet>Bypass</sensorSet>
		</numSensor>
    </device>
	<protocol>
		<modbus>
			<value_ref_id valid="OUTPUT_BREAKER_OPEN">
				<function>1</function>
				<start_addr>59</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_TRANSFORMER_OVERTEMPERATURE">
				<function>1</function>
				<start_addr>71</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_TRANSFORMER_TEMPERATURE_SENSOR_FAULT">
				<function>1</function>
				<start_addr>79</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="GENERAL_OUTPUT_FAULT">
				<function>1</function>
				<start_addr>107</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_RMS_FAULT">
				<function>1</function>
				<start_addr>108</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_OUTPUT_RMS_FAULT">
				<function>1</function>
				<start_addr>109</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_OVERLOADED">
				<function>1</function>
				<start_addr>115</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_LOAD">
				<function>3</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_FREQUENCY">
				<function>3</function>
				<start_addr>18</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_VOLTAGE_PHASE_1-N">
				<function>3</function>
				<start_addr>19</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_VOLTAGE_PHASE_2-N">
				<function>3</function>
				<start_addr>20</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_VOLTAGE_PHASE_3-N">
				<function>3</function>
				<start_addr>21</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_CURRENT_PHASE_1">
				<function>3</function>
				<start_addr>22</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_CURRENT_PHASE_2">
				<function>3</function>
				<start_addr>23</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="OUTPUT_CURRENT_PHASE_3">
				<function>3</function>
				<start_addr>24</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_BREAKER_OPEN">
				<function>1</function>
				<start_addr>55</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_TEMPERATURE_WARNING">
				<function>1</function>
				<start_addr>73</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_TEMPERATURE_SHUTDOWN">
				<function>1</function>
				<start_addr>74</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_WARNING_OR_ERROR">
				<function>1</function>
				<start_addr>120</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_EARTH_FAULT">
				<function>1</function>
				<start_addr>121</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_VOLTAGE_HIGH_SHUTDOWN_(HIGH_DC_SHUTDOWN)">
				<function>1</function>
				<start_addr>122</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_VOLTAGE_HIGH_WARNING_(HIGH_DC_WARNING)">
				<function>1</function>
				<start_addr>123</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_VOLTAGE_LOW_WARNING">
				<function>1</function>
				<start_addr>124</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_WARNING_LOW_SHUTDOWN">
				<function>1</function>
				<start_addr>125</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_EARTH_FAULT_POSITIVE_POLE">
				<function>1</function>
				<start_addr>126</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_EARTH_FAULT_NEGATIVE_POLE">
				<function>1</function>
				<start_addr>127</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_CURRENT">
				<function>3</function>
				<start_addr>70</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_VOLTAGE">
				<function>3</function>
				<start_addr>71</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_TEMPERATURE">
				<function>3</function>
				<start_addr>89</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MAINS_BREAKER_OPEN">
				<function>1</function>
				<start_addr>53</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="MAINS_TRANSFORMER_OVERTEMPERATURE">
				<function>1</function>
				<start_addr>70</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="MAINS_TRANSFORMER_TEMPERATURE_SENSOR_FAULT">
				<function>1</function>
				<start_addr>78</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="GENERAL_MAINS_FAULT">
				<function>1</function>
				<start_addr>91</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="MAINS_RMS_FAULT">
				<function>1</function>
				<start_addr>92</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="MAINS_INPUT_RMS_FAULT">
				<function>1</function>
				<start_addr>93</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="MAINS_FREQUENCY">
				<function>3</function>
				<start_addr>34</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MAINS_VOLTAGE_PHASE_1">
				<function>3</function>
				<start_addr>35</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MAINS_VOLTAGE_PHASE_2">
				<function>3</function>
				<start_addr>36</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="MAINS_VOLTAGE_PHASE_3">
				<function>3</function>
				<start_addr>37</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_CURRENT_PHASE_1">
				<function>3</function>
				<start_addr>44</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_CURRENT_PHASE_2">
				<function>3</function>
				<start_addr>45</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="INPUT_CURRENT_PHASE_3">
				<function>3</function>
				<start_addr>46</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_BREAKER_OPEN">
				<function>1</function>
				<start_addr>56</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_TRANSFORMER_OVERTEMPERATURE">
				<function>1</function>
				<start_addr>67</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_TRANSFORMER_TEMPERATURE_SENSOR_FAULT">
				<function>1</function>
				<start_addr>80</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="GENERAL_BYPASS_FAULT">
				<function>1</function>
				<start_addr>100</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_RMS_FAULT">
				<function>1</function>
				<start_addr>101</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_INPUT_RMS_FAULT">
				<function>1</function>
				<start_addr>102</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_FREQUENCY">
				<function>3</function>
				<start_addr>56</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_VOLTAGE_PHASE_1-N">
				<function>3</function>
				<start_addr>67</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_VOLTAGE_PHASE_2-N">
				<function>3</function>
				<start_addr>68</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_VOLTAGE_PHASE_3-N">
				<function>3</function>
				<start_addr>69</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_SWITCHED_ON">
				<function>1</function>
				<start_addr>22</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="STANDBY">
				<function>1</function>
				<start_addr>23</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="NORMAL_OPERATION">
				<function>1</function>
				<start_addr>24</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BATTERY_OPERATION">
				<function>1</function>
				<start_addr>25</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BYPASS_OPERATION">
				<function>1</function>
				<start_addr>26</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="INITIAL_CHARGE">
				<function>1</function>
				<start_addr>27</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="FLOAT_CHARGE">
				<function>1</function>
				<start_addr>28</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="BOOST_CHARGE">
				<function>1</function>
				<start_addr>29</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="CYCLIC_CHARGE">
				<function>1</function>
				<start_addr>30</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="TEMPORARY_STATIC_BYPASS">
				<function>1</function>
				<start_addr>38</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="REQUESTED_STATIC_BYPASS">
				<function>1</function>
				<start_addr>39</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="SBS_ERROR">
				<function>1</function>
				<start_addr>40</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="MANUAL_BYPASS_SWITCH_IN_POSITION_TEST">
				<function>1</function>
				<start_addr>64</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="MANUAL_BYPASS_SWITCH_IN_POSITION_BYPASS">
				<function>1</function>
				<start_addr>65</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="MANUAL_BYPASS_SWITCH_IN_POSITION_AUTO">
				<function>1</function>
				<start_addr>66</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="OVERTEMPERATURE_IN_PM_OR_TRANSFORMERS">
				<function>1</function>
				<start_addr>67</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="FAN_FAILURE">
				<function>1</function>
				<start_addr>81</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="EMERGENCY_POWER_OFF_EPO">
				<function>1</function>
				<start_addr>88</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="PSU_FAULT">
				<function>1</function>
				<start_addr>90</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="RECTIFIER_FAULT">
				<function>1</function>
				<start_addr>139</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="INVERTER_FAULT">
				<function>1</function>
				<start_addr>140</start_addr>
				<quantity>1</quantity>
				<type>bit</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_LOAD_PERCENT_OF_VA">
				<function>3</function>
				<start_addr>0</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="SYSTEM_LOAD_PERCENT_OF_WATTS">
				<function>3</function>
				<start_addr>1</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="APPARENT_SYSTEM_LOAD">
				<function>3</function>
				<start_addr>2</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="REAL_SYSTEM_LOAD">
				<function>3</function>
				<start_addr>3</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
			<value_ref_id valid="COMMON_ALARM">
				<function>3</function>
				<start_addr>255</start_addr>
				<quantity>1</quantity>
				<type>uint_16</type>
			</value_ref_id>
		</modbus>
	</protocol>
</APC_DDF>
