<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="galaxy_pw_ups"
	ddfname="Galaxy PW UPS"
	ddfversion="1"
	canremove="yes">
		 
	<schemaVersion>1.6</schemaVersion>
	<device deviceid="galaxy_pw_ups">

		<setProductData ruleid="vendordata" field="vendor">Galaxy</setProductData>
		<setProductData ruleid="modeldata" field="model">PW UPS</setProductData>
		<setProductData ruleid="typedata" field="type">UPS</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel>
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>
		

		<numSensor ruleid="I1_(I_PHASE_1)_MAINS_1_SENSOR">
            <type>amperage</type>
            <sensorId>i1_(i_phase_1)_mains_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i1iphase1mains1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I1 (I phase 1) Mains 1</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I2_(I_PHASE_2)_MAINS_1_SENSOR">
            <type>amperage</type>
            <sensorId>i2_(i_phase_2)_mains_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i2iphase2mains1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I2 (I phase 2) Mains 1</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I3_(I_PHASE_3)_MAINS_1_SENSOR">
            <type>amperage</type>
            <sensorId>i3_(i_phase_3)_mains_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i3iphase3mains1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I3 (I phase 3) Mains 1</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I1_(I_PHASE_1)_INVERTER_SENSOR">
            <type>amperage</type>
            <sensorId>i1_(i_phase_1)_inverter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i1iphase1inverter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I1 (I phase 1) Inverter</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I2_(I_PHASE_2)_INVERTER_SENSOR">
            <type>amperage</type>
            <sensorId>i2_(i_phase_2)_inverter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i2iphase2inverter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I2 (I phase 2) Inverter</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I3_(I_PHASE_3)_INVERTER_SENSOR">
            <type>amperage</type>
            <sensorId>i3_(i_phase_3)_inverter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i3iphase3inverter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I3 (I phase 3) Inverter</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I1_(I_PHASE_1)_MAINS_2_SENSOR">
            <type>amperage</type>
            <sensorId>i1_(i_phase_1)_mains_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i1iphase1mains2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I1 (I phase 1) Mains 2</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I2_(I_PHASE_2)_MAINS_2_SENSOR">
            <type>amperage</type>
            <sensorId>i2_(i_phase_2)_mains_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i2iphase2mains2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I2 (I phase 2) Mains 2</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I3_(I_PHASE_3)_MAINS_2_SENSOR">
            <type>amperage</type>
            <sensorId>i3_(i_phase_3)_mains_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i3iphase3mains2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I3 (I phase 3) Mains 2</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I1_(I_PHASE_1)_OUTPUT_SENSOR">
            <type>amperage</type>
            <sensorId>i1_(i_phase_1)_output</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i1iphase1output</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I1 (I phase 1) Output</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I2_(I_PHASE_2)_OUTPUT_SENSOR">
            <type>amperage</type>
            <sensorId>i2_(i_phase_2)_output</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i2iphase2output</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I2 (I phase 2) Output</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I3_(I_PHASE_3)_OUTPUT_SENSOR">
            <type>amperage</type>
            <sensorId>i3_(i_phase_3)_output</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>i3iphase3output</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I3 (I phase 3) Output</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="I_BATTERY_SENSOR">
            <type>amperage</type>
            <sensorId>i_battery</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>ibattery</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>I Battery</label>
            <sensorSet>Current</sensorSet>
        </numSensor>
        <numSensor ruleid="U12_MAINS_1_SENSOR">
            <type>voltage</type>
            <sensorId>u12_mains_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u12mains1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U12 Mains 1</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U23_MAINS_1_SENSOR">
            <type>voltage</type>
            <sensorId>u23_mains_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u23mains1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U23 Mains 1</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U31_MAINS_1_SENSOR">
            <type>voltage</type>
            <sensorId>u31_mains_1</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u31mains1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U31 Mains 1</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U1N_INVERTER_SENSOR">
            <type>voltage</type>
            <sensorId>u1n_inverter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u1ninverter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U1N Inverter</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U2N_INVERTER_SENSOR">
            <type>voltage</type>
            <sensorId>u2n_inverter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u2ninverter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U2N Inverter</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U3N_INVERTER_SENSOR">
            <type>voltage</type>
            <sensorId>u3n_inverter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u3ninverter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U3N Inverter</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U12_INVERTER_SENSOR">
            <type>voltage</type>
            <sensorId>u12_inverter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u12inverter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U12 Inverter</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U21_INVERTER_SENSOR">
            <type>voltage</type>
            <sensorId>u21_inverter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u21inverter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U21 Inverter</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U31_INVERTER_SENSOR">
            <type>voltage</type>
            <sensorId>u31_inverter</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u31inverter</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U31 Inverter</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U1N_MAINS_2_SENSOR">
            <type>voltage</type>
            <sensorId>u1n_mains_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u1nmains2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U1N Mains 2</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U2N_MAINS_2_SENSOR">
            <type>voltage</type>
            <sensorId>u2n_mains_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u2nmains2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U2N Mains 2</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U3N_MAINS_2_SENSOR">
            <type>voltage</type>
            <sensorId>u3n_mains_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u3nmains2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U3N Mains 2</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U12_MAINS_2_SENSOR">
            <type>voltage</type>
            <sensorId>u12_mains_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u12mains2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U12 Mains 2</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U23_MAINS_2_SENSOR">
            <type>voltage</type>
            <sensorId>u23_mains_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u23mains2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U23 Mains 2</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U31_MAINS_2_SENSOR">
            <type>voltage</type>
            <sensorId>u31_mains_2</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u31mains2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U31 Mains 2</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U1N_OUTPUT_SENSOR">
            <type>voltage</type>
            <sensorId>u1n_output</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u1noutput</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U1N Output</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U2N_OUTPUT_SENSOR">
            <type>voltage</type>
            <sensorId>u2n_output</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u2noutput</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U2N Output</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U3N_OUTPUT_SENSOR">
            <type>voltage</type>
            <sensorId>u3n_output</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u3noutput</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U3N Output</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U12_OUTPUT_SENSOR">
            <type>voltage</type>
            <sensorId>u12_output</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u12output</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U12 Output</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U23_OUTPUT_SENSOR">
            <type>voltage</type>
            <sensorId>u23_output</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u23output</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U23 Output</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U31_OUTPUT_SENSOR">
            <type>voltage</type>
            <sensorId>u31_output</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>u31output</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U31 Output</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="U_BATTERY_SENSOR">
            <type>voltage</type>
            <sensorId>u_battery</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>ubattery</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>U Battery</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="BATTERY_VOLTAGE_END_OF_BACKUP_THRESHOLD_SENSOR">
            <type>voltage</type>
            <sensorId>battery_voltage_end_of_backup_threshold</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>batteryvoltageendofbackupthreshold</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Battery Voltage End of Backup Threshold</label>
            <sensorSet>Voltage</sensorSet>
        </numSensor>
        <numSensor ruleid="DEVICE_NOMINAL_ACTIVE_POWER_SENSOR">
            <type>num/powerKW</type>
            <sensorId>device_nominal_active_power</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>devicenominalactivepower</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Device Nominal Active Power</label>
            <sensorSet>Power</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_ACTIVE_POWER_(PHASE_1)_SENSOR">
            <type>num/powerKW</type>
            <sensorId>output_active_power_(phase_1)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputactivepowerphase1</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Active Power (Phase 1)</label>
            <sensorSet>Power</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_ACTIVE_POWER_(PHASE_2)_SENSOR">
            <type>num/powerKW</type>
            <sensorId>output_active_power_(phase_2)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputactivepowerphase2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Active Power (Phase 2)</label>
            <sensorSet>Power</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_ACTIVE_POWER_(PHASE_3)_SENSOR">
            <type>num/powerKW</type>
            <sensorId>output_active_power_(phase_3)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputactivepowerphase3</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Active Power (Phase 3)</label>
            <sensorSet>Power</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_APPARENT_POWER_(PHASE_2)_SENSOR">
            <type>num/powerKW</type>
            <sensorId>output_apparent_power_(phase_2)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputapparentpowerphase2</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Apparent Power (Phase 2)</label>
            <sensorSet>Power</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_APPARENT_POWER_(PHASE_3)_SENSOR">
            <type>num/powerKW</type>
            <sensorId>output_apparent_power_(phase_3)</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputapparentpowerphase3</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Apparent Power (Phase 3)</label>
            <sensorSet>Power</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_TOTAL_ACTIVE_POWER_SENSOR">
            <type>num/powerKW</type>
            <sensorId>output_total_active_power</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputtotalactivepower</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Total Active Power</label>
            <sensorSet>Power</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_TOTAL_APPARENT_POWER_SENSOR">
            <type>num/powerKW</type>
            <sensorId>output_total_apparent_power</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputtotalapparentpower</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Total Apparent Power</label>
            <sensorSet>Power</sensorSet>
        </numSensor>
        <numSensor ruleid="PERCENT_OUTPUT_LOAD_LEVEL_SENSOR">
            <type>num</type>
			<units>percent</units>
            <sensorId>percent_output_load_level</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>percentoutputloadlevel</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Percent Output Load Level</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="PEAK_FACTOR_PHASE_1_X_100_SENSOR">
            <type>num</type>
            <sensorId>peak_factor_phase_1_x_100</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>peakfactorphase1x100</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Peak Factor Phase 1 x 100</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="PEAK_FACTOR_PHASE_2_X_100_SENSOR">
            <type>num</type>
            <sensorId>peak_factor_phase_2_x_100</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>peakfactorphase2x100</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Peak Factor Phase 2 x 100</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="PEAK_FACTOR_PHASE_3_X_100_SENSOR">
            <type>num</type>
            <sensorId>peak_factor_phase_3_x_100</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>peakfactorphase3x100</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Peak Factor Phase 3 x 100</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="POWER_FACTOR_X_100_SENSOR">
            <type>num</type>
            <sensorId>power_factor_x_100</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>powerfactorx100</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Power Factor x 100</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="MAINS_1_FREQUENCY_SENSOR">
            <type>frequency</type>
            <sensorId>mains_1_frequency</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>mains1frequency</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Mains 1 Frequency</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="INVERTER_FREQUENCY_SENSOR">
            <type>frequency</type>
            <sensorId>inverter_frequency</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>inverterfrequency</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Inverter Frequency</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="MAINS_2_FREQUENCY_SENSOR">
            <type>frequency</type>
            <sensorId>mains_2_frequency</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>mains2frequency</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Mains 2 Frequency</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="OUTPUT_FREQUENCY_SENSOR">
            <type>frequency</type>
            <sensorId>output_frequency</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>outputfrequency</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Output Frequency</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="NOMINAL_BACKUP_TIME_SENSOR">
            <type>timeinmin</type>
            <sensorId>nominal_backup_time</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>nominalbackuptime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Nominal Backup Time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="BATTERY_BACKUP_TIME_SENSOR">
            <type>timeinmin</type>
            <sensorId>battery_backup_time</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>batterybackuptime</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Battery Backup Time</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="BATTERY_ROOM_TEMPERATURE_SENSOR">
            <type>temp</type>
            <sensorId>battery_room_temperature</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>batteryroomtemperature</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Battery Room Temperature</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="BATTERY_CHARGING_LEVEL_SENSOR">
            <type>num</type>
			<units>percent</units>
            <sensorId>battery_charging_level</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>batterycharginglevel</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Battery Charging Level</label>
            <sensorSet>General</sensorSet>
        </numSensor>
        <numSensor ruleid="BATTERY_RECHARGE_DURATION_SENSOR">
            <type>timeinmin</type>
            <sensorId>battery_recharge_duration</sensorId>
            <value>
                <mult>
                    <op>
                        <getOid>batteryrechargeduration</getOid>
                    </op>
                    <op>1.0</op>
                </mult>
            </value>
            <label>Battery Recharge Duration</label>
            <sensorSet>General</sensorSet>
        </numSensor>


		<enumMap ruleid="online_offline_em">
			<label>On Line</label>
			<label>Off Line</label>
			<label>Unkown</label>
		</enumMap>

<!-- The next 20 sensors or so have improper ID's and ruleid's. I did this to make it easier on myself. Should have no bearing on customer -->

        <stateSensor ruleid="COMMUNICATION_STATUS_SENSOR">
            <type>state</type>
            <sensorId>communication_status</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Communication Status</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="COMMON_ALARM_SENSOR">
            <type>state</type>
            <sensorId>common_alarm</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Load Protected</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="GENSET_RUNNING_SENSOR">
            <type>state</type>
            <sensorId>genset_running</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>UPS Coupled</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="LOW_BATTERY_VOLTAGE_SENSOR">
            <type>state</type>
            <sensorId>low_battery_voltage</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Unit General Alarm</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="FAIL_TO_START_SENSOR">
            <type>state</type>
            <sensorId>fail_to_start</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>System Downgraded Operation</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="LOW_COOLANT_TEMPERATURE_SENSOR">
            <type>state</type>
            <sensorId>low_coolant_temperature</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>UPS In Backup</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="PRE_HIGH_ENGINE_TEMPERATURE_SENSOR">
            <type>state</type>
            <sensorId>pre_high_engine_temperature</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Battery Low Warning</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="HIGH_ENGINE_TEMPERATURE_SENSOR">
            <type>state</type>
            <sensorId>high_engine_temperature</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>End of Backup Time</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="PRE_LOW_OIL_PRESSURE_SENSOR">
            <type>state</type>
            <sensorId>pre_low_oil_pressure</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Operation on Static Switch</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="LOW_OIL_PRESSURE_SENSOR">
            <type>state</type>
            <sensorId>low_oil_pressure</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Emergency Stop</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="OVERSPEED_SENSOR">
            <type>state</type>
            <sensorId>overspeed</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Device Ventilation Fault</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="LOW_COOLANT_LEVEL_SENSOR">
            <type>state</type>
            <sensorId>low_coolant_level</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Protected Shutdown on External Contact</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="DESCRIPTION_SENSOR">
            <type>state</type>
            <sensorId>description</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>UPS in On-line Mode</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="HIGH_AC_VOLTAGE_SENSOR">
            <type>state</type>
            <sensorId>high_ac_voltage</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>UPS in Eco Mode</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


       <stateSensor ruleid="LOW_AC_VOLTAGE_SENSOR">
            <type>state</type>
            <sensorId>low_ac_voltage</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Unitary/Parallel-Connected UPS</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="UNDER_FREQUENCY_SENSOR">
            <type>state</type>
            <sensorId>under_frequency</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Status UPS Ready for Coupling</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="OVERLOAD_SENSOR">
            <type>state</type>
            <sensorId>overload</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Manual Bypass Switch (Q3BP)</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


       <stateSensor ruleid="OVERCURRENT_SENSOR">
            <type>state</type>
            <sensorId>overcurrent</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Battery End of Life</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="REVERSE_KW_SENSOR">
            <type>state</type>
            <sensorId>reverse_kw</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Battery Test Result</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="REVERSE_KVAR_SENSOR">
            <type>state</type>
            <sensorId>reverse_kvar</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Battery Manual Test in Progress</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


       <stateSensor ruleid="FAIL_TO_SYNC_SENSOR">
            <type>state</type>
            <sensorId>fail_to_sync</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Battery Compensation in Progress</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


       <stateSensor ruleid="FAIL_TO_CLOSE_SENSOR">
            <type>state</type>
            <sensorId>fail_to_close</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Battery Automatic Test in Progress</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


       <stateSensor ruleid="EMERGENCY_STOP_SENSOR">
            <type>state</type>
            <sensorId>emergency_stop</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Battery Temperature Out of Tolerance</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

<!-- Proper ID's here on out -->

        <stateSensor ruleid="BATTERY_VENTILATION_FAULT_SENSOR">
            <type>state</type>
            <sensorId>battery_ventilation_fault</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Battery Ventilation Fault</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="BATTERY_CIRCUIT_BREAKER_QF1_SENSOR">
            <type>state</type>
            <sensorId>battery_circuit_breaker_qf1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Battery Circuit-Breaker (QF1)</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="RECITFIER_NORMAL_ON_OFF_SENSOR">
            <type>state</type>
            <sensorId>rectifier_normal_on_off</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Rectifier Normal On/Off</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="MAINS_1_INPUT_SWITCH_Q1_SENSOR">
            <type>state</type>
            <sensorId>mains_1_input_switch_q1</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Mains 1 Input Switch (Q1)</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="MAINS_1_VOLTAGE_OUT_OF_TOLERANCE_SENSOR">
            <type>state</type>
            <sensorId>mains_1_voltage_out_of_tolerance</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Mains 1 Voltage Out of Tolerance</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


        <stateSensor ruleid="MAINS_1_FREQUENCY_OUT_OF_TOLERANCE_SENSOR">
            <type>state</type>
            <sensorId>mains_1_frequency_out_of_tolerance</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Mains 1 Frequency Out of Tolerance</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="MAJOR_COUPLING_FAULT_SENSOR">
            <type>state</type>
            <sensorId>major_coupling_fault</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Major Coupling Fault</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="MAINTENANCE_POSITION_SENSOR">
            <type>state</type>
            <sensorId>maintenance_position</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Maintenance Position</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

        <stateSensor ruleid="MAINS_2_OVERLOAD_SENSOR">
            <type>state</type>
            <sensorId>mains_2_overload</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister2</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Mains 2 Overload</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="MAINS_2_THERMAL_OVERLOAD_SENSOR">
            <type>state</type>
            <sensorId>mains_2_thermal_overload</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Mains 2 Thermal Overload</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="MAINS_2_FREQUENCY_OUT_OF_TOLERANCE_SENSOR">
            <type>state</type>
            <sensorId>mains_2_frequency_out_of_tolerance</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Mains 2 Frequency Out of Tolerance</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="MAINS_2_VOLTAGE_OUT_OF_TOLERANCE_SENSOR">
            <type>state</type>
            <sensorId>mains_2_voltage_out_of_tolerance</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>2</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Mains 2 Voltage Out of Tolerance</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="MAINS_2_PHASE_OUT_OF_TOLERANCE_SENSOR">
            <type>state</type>
            <sensorId>mains_2_phase_out_of_tolerance</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>3</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Mains 2 Phase Out of Tolerance</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="MAINS_2_INPUT_SWITCH_Q4S_SENSOR">
            <type>state</type>
            <sensorId>mains_2_input_switch_q4s</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>4</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Mains 2 Input Switch (Q4S)</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>


       <stateSensor ruleid="UPS_IN_FREE_FREQUENCY_SENSOR">
            <type>state</type>
            <sensorId>ups_in_free_frequency</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>5</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>UPS in Free Frequency</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="OUTPUT_SWITCH_Q5N_SENSOR">
            <type>state</type>
            <sensorId>output_switch_q5n</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>6</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Output Switch (Q5N)</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="FORCED_SHUTDOWN_ON_EXTERNAL_CONTACT_SENSOR">
            <type>state</type>
            <sensorId>forced_shutdown_on_external_contact</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>7</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Forced Shutdown on External Contact</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="NUMBER_OF_UPS_READY_SUFFICIENT_FOR_COUPLING_SENSOR">
            <type>state</type>
            <sensorId>number_of_ups_ready_sufficient_for_coupling</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>8</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Number of UPS Ready Sufficient for Coupling</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="CHARGER_GENERAL_FAULT_SENSOR">
            <type>state</type>
            <sensorId>charger_general_fault</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>9</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Charger General Fault</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="BATTERY_CHARGED_STATE_SENSOR">
            <type>state</type>
            <sensorId>battery_charged_state</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>10</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Battery Charged State</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="MAJOR_INVERTER_FAULT_SENSOR">
            <type>state</type>
            <sensorId>major_inverter_fault</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>11</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Major Inverter Fault</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="INVERTER_OVERLOAD_SENSOR">
            <type>state</type>
            <sensorId>inverter_overload</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>12</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Inverter Overload</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="INVERTER_THERMAL_OVERLOAD_SENSOR">
            <type>state</type>
            <sensorId>inverter_thermal_overload</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>13</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Inverter Thermal Overload</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="INVERTER_LIMITATION_SENSOR">
            <type>state</type>
            <sensorId>inverter_limitation</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>14</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Inverter Limitation</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

		<stateSensor ruleid="INVERTER_FUSE_FAULT_SENSOR">
            <type>state</type>
            <sensorId>inverter_fuse_fault</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister3</getOid></op>
								<op>15</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Inverter Fuse Fault</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="OUTPUT_THERMAL_OVERLOAD_SENSOR">
            <type>state</type>
            <sensorId>output_thermal_overload</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>0</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Output Thermal Overload</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>

       <stateSensor ruleid="OUTPUT_OVERLOAD_SENSOR">
            <type>state</type>
            <sensorId>output_overload</sensorId>
              <value>
					<bitwise_and>
						<op>
							<right_shift>
								<op><getOid>statusregister4</getOid></op>
								<op>1</op>
							</right_shift>
						</op>
						<op>1</op>
					</bitwise_and>
            </value>
            <label>Output Overload</label>
			<enum>online_offline_em</enum>
            <sensorSet>Status</sensorSet>
        </stateSensor>




    </device>
    <protocol>
        <modbus>

            <value_ref_id valid="i1iphase1mains1">
                <function>3</function>
                <start_addr>0</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="i2iphase2mains1">
                <function>3</function>
                <start_addr>2</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="i3iphase3mains1">
                <function>3</function>
                <start_addr>4</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="i1iphase1inverter">
                <function>3</function>
                <start_addr>6</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="i2iphase2inverter">
                <function>3</function>
                <start_addr>8</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="i3iphase3inverter">
                <function>3</function>
                <start_addr>10</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="i1iphase1mains2">
                <function>3</function>
                <start_addr>12</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="i2iphase2mains2">
                <function>3</function>
                <start_addr>14</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="i3iphase3mains2">
                <function>3</function>
                <start_addr>16</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="i1iphase1output">
                <function>3</function>
                <start_addr>18</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="i2iphase2output">
                <function>3</function>
                <start_addr>20</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="i3iphase3output">
                <function>3</function>
                <start_addr>22</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="ibattery">
                <function>3</function>
                <start_addr>24</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u12mains1">
                <function>3</function>
                <start_addr>28</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u23mains1">
                <function>3</function>
                <start_addr>30</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u31mains1">
                <function>3</function>
                <start_addr>32</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u1ninverter">
                <function>3</function>
                <start_addr>34</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u2ninverter">
                <function>3</function>
                <start_addr>36</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u3ninverter">
                <function>3</function>
                <start_addr>38</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u12inverter">
                <function>3</function>
                <start_addr>40</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u21inverter">
                <function>3</function>
                <start_addr>42</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u31inverter">
                <function>3</function>
                <start_addr>44</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u1nmains2">
                <function>3</function>
                <start_addr>46</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u2nmains2">
                <function>3</function>
                <start_addr>48</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u3nmains2">
                <function>3</function>
                <start_addr>50</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u12mains2">
                <function>3</function>
                <start_addr>52</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u23mains2">
                <function>3</function>
                <start_addr>54</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u31mains2">
                <function>3</function>
                <start_addr>56</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u1noutput">
                <function>3</function>
                <start_addr>58</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u2noutput">
                <function>3</function>
                <start_addr>60</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u3noutput">
                <function>3</function>
                <start_addr>62</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u12output">
                <function>3</function>
                <start_addr>64</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u23output">
                <function>3</function>
                <start_addr>66</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="u31output">
                <function>3</function>
                <start_addr>68</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="ubattery">
                <function>3</function>
                <start_addr>70</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="batteryvoltageendofbackupthreshold">
                <function>3</function>
                <start_addr>72</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="devicenominalactivepower">
                <function>3</function>
                <start_addr>26</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="outputactivepowerphase1">
                <function>3</function>
                <start_addr>74</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="outputactivepowerphase2">
                <function>3</function>
                <start_addr>76</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="outputactivepowerphase3">
                <function>3</function>
                <start_addr>78</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="outputapparentpowerphase2">
                <function>3</function>
                <start_addr>82</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="outputapparentpowerphase3">
                <function>3</function>
                <start_addr>84</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="outputtotalactivepower">
                <function>3</function>
                <start_addr>86</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="outputtotalapparentpower">
                <function>3</function>
                <start_addr>88</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="percentoutputloadlevel">
                <function>3</function>
                <start_addr>90</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="peakfactorphase1x100">
                <function>3</function>
                <start_addr>92</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="peakfactorphase2x100">
                <function>3</function>
                <start_addr>94</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="peakfactorphase3x100">
                <function>3</function>
                <start_addr>96</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="powerfactorx100">
                <function>3</function>
                <start_addr>98</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="mains1frequency">
                <function>3</function>
                <start_addr>100</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="inverterfrequency">
                <function>3</function>
                <start_addr>102</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="mains2frequency">
                <function>3</function>
                <start_addr>104</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="outputfrequency">
                <function>3</function>
                <start_addr>106</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="nominalbackuptime">
                <function>3</function>
                <start_addr>108</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="batterybackuptime">
                <function>3</function>
                <start_addr>110</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="batteryroomtemperature">
                <function>3</function>
                <start_addr>112</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="batterycharginglevel">
                <function>3</function>
                <start_addr>114</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>
            <value_ref_id valid="batteryrechargeduration">
                <function>3</function>
                <start_addr>116</start_addr>
                <quantity>2</quantity>
                <type>float</type>
            </value_ref_id>

			<value_ref_id valid="statusregister">
                <function>3</function>
                <start_addr>1000</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

			<value_ref_id valid="statusregister2">
                <function>3</function>
                <start_addr>1001</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

			<value_ref_id valid="statusregister3">
                <function>3</function>
                <start_addr>1002</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

			<value_ref_id valid="statusregister4">
                <function>3</function>
                <start_addr>1003</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

		</modbus>
	</protocol>
</APC_DDF>