<?xml version="1.0"?>
<APC_DDF
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://localhost/ddf_schema/apc_ddf_1_6.xsd"
	ddfid="qualitrol_118_itm"
	ddfname="QualiTROL 118 ITM"
	ddfversion="1"
	canremove="yes">
	<schemaVersion>1.6</schemaVersion>
	<!--
		SOURCE
		/modbus/register_maps/qualitrol/IST-102-1 118ITM Instruction Manual Rev-30314.pdf
		QualiTROL 118 | 13 April 2020
	-->
	<device deviceid="qualitrol_itm">
		<oidMustExist ruleid="modbusdevicetest" oid="MODBUS_OID_MUST_EXIST"/>

		<setProductData ruleid="vendordata" field="vendor">QualiTROL</setProductData>
		<setProductData ruleid="modeldata" field="model">118 ITM</setProductData>
		<setProductData ruleid="typedata" field="type">Branch Circuit Monitor</setProductData>
		<setDefaultLabel ruleid="labeldata"><sysHostname/> - Slave <commSetting field="slaveaddress"/></setDefaultLabel> 
		
		<numSensor ruleid="temperatureLeftPhase">
            <type>temp</type>
            <sensorId>TEMP_LEFT_PHASE</sensorId>
            <value>
                <getOid>TEMP_LEFT_PHASE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>Temperature Left Phase</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		<numSensor ruleid="temperatureCenterPhase">
            <type>temp</type>
            <sensorId>TEMP_CENTER_PHASE</sensorId>
            <value>
                <getOid>TEMP_CENTER_PHASE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>Temperature Center Phase</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		<numSensor ruleid="temperatureRightPhase">
            <type>temp</type>
            <sensorId>TEMP_RIGHT_PHASE</sensorId>
            <value>
                <getOid>TEMP_RIGHT_PHASE</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>Temperature Right Phase</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="itmStatus_fanState">
            <type>state</type>
            <sensorId>ITM_STATUS_FAN_STATE</sensorId>
            <value>
                <mapValue mapid="itmStatus-vm">
				  <formatNumber>
					<!-- Determined by bit 1 -->
					<bitwise_and>
					  <op>
						<right_shift>
						  <op><getOid>ITM_STATUS</getOid></op>
						  <op>1</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				  </formatNumber>
				</mapValue>
            </value>
            <label>ITM Status - Fan State</label>
            <enum>itmStatus-em</enum>
            <sensorSet>ITM Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="itmStatus_alarmState">
            <type>state</type>
            <sensorId>ITM_STATUS_ALARM_STATE</sensorId>
            <value>
                <mapValue mapid="itmStatus-vm">
				  <formatNumber>
					<!-- Determined by bit 2 -->
					<bitwise_and>
					  <op>
						<right_shift>
						  <op><getOid>ITM_STATUS</getOid></op>
						  <op>2</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				  </formatNumber>
				</mapValue>
            </value>
            <label>ITM Status - Alarm State</label>
            <enum>itmStatus-em</enum>
            <sensorSet>ITM Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="itmStatus_tripState">
            <type>state</type>
            <sensorId>ITM_STATUS_TRIP_STATE</sensorId>
            <value>
                <mapValue mapid="itmStatus-vm">
				  <formatNumber>
					<!-- Determined by bit 3 -->
					<bitwise_and>
					  <op>
						<right_shift>
						  <op><getOid>ITM_STATUS</getOid></op>
						  <op>3</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				  </formatNumber>
				</mapValue>
            </value>
            <label>ITM Status - Trip State</label>
            <enum>itmStatus-em</enum>
            <sensorSet>ITM Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="itmStatus_buzzerState">
            <type>state</type>
            <sensorId>ITM_STATUS_BUZZER_STATE</sensorId>
            <value>
                <mapValue mapid="itmStatus-vm">
				  <formatNumber>
					<!-- Determined by bit 4 -->
					<bitwise_and>
					  <op>
						<right_shift>
						  <op><getOid>ITM_STATUS</getOid></op>
						  <op>4</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				  </formatNumber>
				</mapValue>
            </value>
            <label>ITM Status - Buzzer State</label>
            <enum>itmStatus-em</enum>
            <sensorSet>ITM Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="itmStatus_manFanState">
            <type>state</type>
            <sensorId>ITM_STATUS_MAN_FAN_STATE</sensorId>
            <value>
                <mapValue mapid="itmStatus-vm">
				  <formatNumber>
					<!-- Determined by bit 5 -->
					<bitwise_and>
					  <op>
						<right_shift>
						  <op><getOid>ITM_STATUS</getOid></op>
						  <op>5</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				  </formatNumber>
				</mapValue>
            </value>
            <label>ITM Status - Manual Fan State</label>
            <enum>itmStatus-em</enum>
            <sensorSet>ITM Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="itmStatus_auxRelay4State">
            <type>state</type>
            <sensorId>ITM_STATUS_AUX_RELAY_4_STATE</sensorId>
            <value>
                <mapValue mapid="itmStatus-vm">
				  <formatNumber>
					<!-- Determined by bit 6 -->
					<bitwise_and>
					  <op>
						<right_shift>
						  <op><getOid>ITM_STATUS</getOid></op>
						  <op>6</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				  </formatNumber>
				</mapValue>
            </value>
            <label>ITM Status - Aux Relay 4 State</label>
            <enum>itmStatus-em</enum>
            <sensorSet>ITM Status</sensorSet>
        </stateSensor>
		<stateSensor ruleid="itmStatus_auxRelay5State">
            <type>state</type>
            <sensorId>ITM_STATUS_AUX_RELAY_5_STATE</sensorId>
            <value>
                <mapValue mapid="itmStatus-vm">
				  <formatNumber>
					<!-- Determined by bit 7 -->
					<bitwise_and>
					  <op>
						<right_shift>
						  <op><getOid>ITM_STATUS</getOid></op>
						  <op>7</op>
						</right_shift>
					  </op>
					  <op>1</op>
					</bitwise_and>
				  </formatNumber>
				</mapValue>
            </value>
            <label>ITM Status - Aux Relay 5 State</label>
            <enum>itmStatus-em</enum>
            <sensorSet>ITM Status</sensorSet>
        </stateSensor>
		
		<valueMap ruleid="itmStatus-vm">
			<valueIn>0</valueIn><valueOut>0</valueOut>
			<valueIn>1</valueIn><valueOut>1</valueOut>
			<valueIn>*</valueIn><valueOut>0</valueOut>
		</valueMap>

		<enumMap ruleid="itmStatus-em">
			<label>Off</label>
			<label>On</label>
		</enumMap>
		
		<numSensor ruleid="maximumStoredTemperature">
            <type>temp</type>
            <sensorId>MAX_STORED_TEMP</sensorId>
            <value>
                <getOid>MAX_STORED_TEMP</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>Maximum Stored Temperature</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		
		<stateSensor ruleid="phaseWithMaxTemp">
            <type>state</type>
            <sensorId>PHASE_MAX_TEMP</sensorId>
            <value>
                <mapValue mapid="phaseWithMaxTemp-vm">
					<getOid>PHASE_MAX_TEMP</getOid>
				</mapValue>
            </value>
            <label>Phase with Maximum Stored Temperature</label>
            <enum>phaseWithMaxTemp-em</enum>
            <sensorSet>Temperature</sensorSet>
        </stateSensor>
		
		<valueMap ruleid="phaseWithMaxTemp-vm">
			<valueIn>*</valueIn><valueOut>0</valueOut>
			<valueIn>3</valueIn><valueOut>1</valueOut>
			<valueIn>5</valueIn><valueOut>2</valueOut>
			<valueIn>9</valueIn><valueOut>3</valueOut>
		</valueMap>

		<enumMap ruleid="phaseWithMaxTemp-em">
			<label>Unknown</label>
			<label>Left</label>
			<label>Center</label>
			<label>Right</label>
		</enumMap>
		
		<numSensor ruleid="temperatureAtTerminalBlock">
            <type>temp</type>
            <sensorId>TEMP_AT_TERMINAL_BLOCK</sensorId>
            <value>
                <getOid>TEMP_AT_TERMINAL_BLOCK</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>Temperature at Terminal Block</label>
            <sensorSet>Temperature</sensorSet>
        </numSensor>
		
		<alarmFlags ruleid="diagnosticStatus">
			<value><getOid>DIAGNOSTIC_STATUS</getOid></value>
			<alarmFlagsTest mask="2" match="2">
				<name>
					<activeText>Failed A/D Converter Alarm</activeText>
					<inactiveText>Failed A/D Converter Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Fault</category>
				<description>
					<activeText>A failed A/D converter alarm condition exists.</activeText>
					<inactiveText>A failed A/D converter alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4">
				<name>
					<activeText>Failed Terminal Block Temperature Sensor Alarm</activeText>
					<inactiveText>Failed Terminal Block Temperature Sensor Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Fault</category>
				<description>
					<activeText>A failed terminal block temperature sensor alarm condition exists.</activeText>
					<inactiveText>A failed terminal block temperature sensor alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8">
				<name>
					<activeText>Failed EEROM Alarm</activeText>
					<inactiveText>Failed EEROM Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Fault</category>
				<description>
					<activeText>A failed EEROM alarm condition exists.</activeText>
					<inactiveText>A failed EEROM alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10">
				<name>
					<activeText>Failed Display Driver Alarm</activeText>
					<inactiveText>Failed Display Driver Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Fault</category>
				<description>
					<activeText>A failed display driver alarm condition exists.</activeText>
					<inactiveText>A failed display driver alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		<alarmFlags ruleid="phaseStatus">
			<value><getOid>PHASE_STATUS</getOid></value>
			<alarmFlagsTest mask="2" match="2">
				<name>
					<activeText>Left Phase Disabled Alarm</activeText>
					<inactiveText>Left Phase Disabled Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Fault</category>
				<description>
					<activeText>Left phase has been disabled.</activeText>
					<inactiveText>Left phase has been enabled.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="4" match="4">
				<name>
					<activeText>Center Phase Disabled Alarm</activeText>
					<inactiveText>Center Phase Disabled Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Fault</category>
				<description>
					<activeText>Center phase has been disabled.</activeText>
					<inactiveText>Center phase has been enabled.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="8" match="8">
				<name>
					<activeText>Right Phase Disabled Alarm</activeText>
					<inactiveText>Right Phase Disabled Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Fault</category>
				<description>
					<activeText>Right phase has been disabled.</activeText>
					<inactiveText>Right phase has been enabled.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="10" match="10">
				<name>
					<activeText>Left Phase Failed Sensor Alarm</activeText>
					<inactiveText>Left Phase Failed Sensor Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Fault</category>
				<description>
					<activeText>Left phase has a failed sensor.</activeText>
					<inactiveText>A left phase failed sensor alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="20" match="20">
				<name>
					<activeText>Center Phase Failed Sensor Alarm</activeText>
					<inactiveText>Center Phase Failed Sensor Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Fault</category>
				<description>
					<activeText>Center phase has a failed sensor.</activeText>
					<inactiveText>A center phase failed sensor alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="40" match="40">
				<name>
					<activeText>Right Phase Failed Sensor Alarm</activeText>
					<inactiveText>Right Phase Failed Sensor Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Fault</category>
				<description>
					<activeText>Right phase has a failed sensor.</activeText>
					<inactiveText>A right phase failed sensor alarm condition no longer exists.</inactiveText>
				</description>
			</alarmFlagsTest>
			<alarmFlagsTest mask="80" match="80">
				<name>
					<activeText>Fan Exerciser Disabled Alarm</activeText>
					<inactiveText>Fan Exerciser Disabled Alarm Cleared</inactiveText>
				</name>
				<severity>warning</severity>
				<category>Fault</category>
				<description>
					<activeText>Fan exerciser is disabled.</activeText>
					<inactiveText>Fan exerciser has been enabled.</inactiveText>
				</description>
			</alarmFlagsTest>
		</alarmFlags>
		
		<numSensor ruleid="fanExerciserRunTime">
            <type>timeinmin</type>
            <sensorId>FAN_EXERCISER_RUN_TIME</sensorId>
            <value>
                <getOid>FAN_EXERCISER_RUN_TIME</getOid>
            </value>
			<valueInc>1</valueInc>
            <label>Fan Exerciser Run Time</label>
            <sensorSet>Fan</sensorSet>
        </numSensor>
		
	</device>
	<protocol>
		<modbus>
			<value_ref_id valid="TEMP_LEFT_PHASE">
                <function>3</function>
                <start_addr>0</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
			<value_ref_id valid="TEMP_CENTER_PHASE">
                <function>3</function>
                <start_addr>1</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
			<value_ref_id valid="TEMP_RIGHT_PHASE">
                <function>3</function>
                <start_addr>2</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
			<value_ref_id valid="ITM_STATUS">
                <function>3</function>
                <start_addr>3</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
			<value_ref_id valid="MAX_STORED_TEMP">
                <function>3</function>
                <start_addr>4</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
			<value_ref_id valid="PHASE_MAX_TEMP">
                <function>3</function>
                <start_addr>5</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
			<value_ref_id valid="TEMP_AT_TERMINAL_BLOCK">
                <function>3</function>
                <start_addr>6</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
			<value_ref_id valid="DIAGNOSTIC_STATUS">
                <function>3</function>
                <start_addr>7</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>
			<value_ref_id valid="FAN_EXERCISER_RUN_TIME">
                <function>3</function>
                <start_addr>16</start_addr>
                <quantity>1</quantity>
                <type>uint_16</type>
            </value_ref_id>

		</modbus>
	</protocol>
</APC_DDF>